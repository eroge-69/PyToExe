import math
import sys

def oblicz_pole_kola(promien):
    """
    Oblicza pole ko≈Ça dla podanego promienia.
    
    Args:
        promien (float): Promie≈Ñ ko≈Ça
        
    Returns:
        float: Pole ko≈Ça
    """
    if promien < 0:
        raise ValueError("Promie≈Ñ nie mo≈ºe byƒá ujemny!")
    
    return math.pi * promien ** 2

def main():
    print("=" * 50)
    print("    KALKULATOR POLA KO≈ÅA")
    print("=" * 50)
    
    while True:
        try:
            print("\nOpcje:")
            print("1. Oblicz pole ko≈Ça")
            print("2. Wyj≈õcie")
            
            wybor = input("\nWybierz opcjƒô (1-2): ").strip()
            
            if wybor == "1":
                promien_str = input("Podaj promie≈Ñ ko≈Ça: ").strip()
                
                # Zamiana przecinka na kropkƒô dla polskich u≈ºytkownik√≥w
                promien_str = promien_str.replace(",", ".")
                
                promien = float(promien_str)
                pole = oblicz_pole_kola(promien)
                
                print(f"\nüìä WYNIKI:")
                print(f"   Promie≈Ñ: {promien}")
                print(f"   Pole ko≈Ça: {pole:.6f}")
                print(f"   Pole ko≈Ça (zaokrƒÖglone): {pole:.2f}")
                
                # Dodatkowe informacje
                obwod = 2 * math.pi * promien
                print(f"   Obw√≥d ko≈Ça: {obwod:.2f}")
                
            elif wybor == "2":
                print("\nDo widzenia!")
                sys.exit(0)
                
            else:
                print("‚ùå Nieprawid≈Çowy wyb√≥r! Wybierz 1 lub 2.")
                
        except ValueError as e:
            if "could not convert" in str(e):
                print("‚ùå B≈ÇƒÖd: Podaj prawid≈ÇowƒÖ liczbƒô!")
            else:
                print(f"‚ùå B≈ÇƒÖd: {e}")
        except KeyboardInterrupt:
            print("\n\nProgram przerwany przez u≈ºytkownika.")
            sys.exit(0)
        except Exception as e:
            print(f"‚ùå Nieoczekiwany b≈ÇƒÖd: {e}")

if __name__ == "__main__":
    main()
