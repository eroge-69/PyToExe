{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "e25a841b-b39c-41b9-a0af-e01e8a171616",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import filedialog\n",
    "import pandas as pd\n",
    "from sklearn.metrics import cohen_kappa_score\n",
    "\n",
    "def select_file():\n",
    "    file_path = filedialog.askopenfilename(filetypes=[(\"Excel files\", \"*.xlsx *.xls\"), (\"CSV files\", \"*.csv\")])\n",
    "    if file_path:\n",
    "        file_entry.delete(0, tk.END)\n",
    "        file_entry.insert(0, file_path)\n",
    "\n",
    "def run_kappa():\n",
    "    file_path = file_entry.get()\n",
    "    if not file_path:\n",
    "        result_label.config(text=\"Please insert your file!\")\n",
    "        return\n",
    "\n",
    "    try:\n",
    "        if file_path.endswith('.csv'):\n",
    "            df = pd.read_csv(file_path)\n",
    "        else:\n",
    "            df = pd.read_excel(file_path)\n",
    "    except Exception as e:\n",
    "        result_label.config(text=f\"Wrong to calculate!:\\n{e}\")\n",
    "        return\n",
    "\n",
    "    numeric_cols = df.select_dtypes(include=['number']).columns.tolist()\n",
    "    if len(numeric_cols) < 2:\n",
    "        result_label.config(text=\"You need two numberic columes\")\n",
    "        return\n",
    "\n",
    "    col1, col2 = df[numeric_cols[0]].tolist(), df[numeric_cols[1]].tolist()\n",
    "    try:\n",
    "        kappa = cohen_kappa_score(col1, col2)\n",
    "        result_label.config(text=f\"Sucssesfull! \\n Your Kappa result between {numeric_cols[0]} index and {numeric_cols[1]} index: {kappa:.3f}\")\n",
    "    except Exception as e:\n",
    "        result_label.config(text=f\"Wrong in calculate!:\\n{e}\")\n",
    "\n",
    "# پنجره اصلی\n",
    "root = tk.Tk()\n",
    "root.title(\"Kappa Calculator \")\n",
    "root.geometry(\"400x250\")\n",
    "\n",
    "# متن بالای کادر فایل\n",
    "tk.Label(root, text=\"Please insert your file :\", font=(\"Arial\", 8)).pack(pady=5)\n",
    "\n",
    "# کادر ورود فایل و دکمه انتخاب\n",
    "file_frame = tk.Frame(root)\n",
    "file_frame.pack(pady=5)\n",
    "file_entry = tk.Entry(file_frame, width=50)\n",
    "file_entry.pack(side=tk.LEFT, padx=5)\n",
    "tk.Button(file_frame, text=\"Insert file\", command=select_file).pack(side=tk.LEFT)\n",
    "\n",
    "# دکمه اجرا\n",
    "tk.Button(root, text=\"Calculate Kappa\", command=run_kappa, width=20).pack(pady=10)\n",
    "\n",
    "# نمایش نتیجه\n",
    "result_label = tk.Label(root, text=\" To show result, press calculate. \", font=(\"Arial\", 10), fg=\"blue\")\n",
    "result_label.pack(pady=10)\n",
    "\n",
    "# متن پایین صفحه\n",
    "tk.Label(root, text=\".هشدار: برای محاسبه ضریب کاپا دو ستون عددی نیاز است\", font=(\"B nazanin\", 10), fg=\"red\").pack(side=tk.BOTTOM, pady=5)\n",
    "\n",
    "root.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b52da061-3ecd-40db-bcf0-21346e7e6e44",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
