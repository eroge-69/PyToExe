import tkinter as tk
from tkinter import messagebox
import time
import datetime
import threading
import os
import sys
import subprocess

# --- –§—É–Ω–∫—Ü—ñ—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ---
def show_reminder():
    root = tk.Tk()
    root.withdraw()
    messagebox.showinfo(
        "–•–≤–∏–ª–∏–Ω–∞ –º–æ–≤—á–∞–Ω–Ω—è üïØÔ∏è",
        "–í—à–∞–Ω—É–π–º–æ –ø–∞–º'—è—Ç—å –∑–∞–≥–∏–±–ª–∏—Ö —Ö–≤–∏–ª–∏–Ω–æ—é –º–æ–≤—á–∞–Ω–Ω—è."
    )
    root.destroy()

# --- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è —É Task Scheduler ---
def create_task_scheduler():
    task_name = "MinuteOfSilence"
    script_path = os.path.abspath(sys.argv[0])

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —ñ—Å–Ω—É—î –∑–∞–≤–¥–∞–Ω–Ω—è
    try:
        check = subprocess.run(
            ["schtasks", "/Query", "/TN", task_name],
            capture_output=True, text=True
        )
        if "ERROR:" not in check.stdout:
            print(f"–ó–∞–≤–¥–∞–Ω–Ω—è '{task_name}' –≤–∂–µ —ñ—Å–Ω—É—î.")
            return
    except Exception as e:
        print("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è:", e)
        return

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è
    try:
        subprocess.run([
            "schtasks", "/Create",
            "/SC", "ONLOGON",          # –ø—Ä–∏ –≤—Ö–æ–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            "/RL", "HIGHEST",          # –∑–∞–ø—É—Å–∫ –∑ –≤–∏—Å–æ–∫–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏
            "/TN", task_name,          # —ñ–º'—è –∑–∞–≤–¥–∞–Ω–Ω—è
            "/TR", f'"{sys.executable}" "{script_path}"'  # –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫—É
        ], check=True)
        print(f"–ó–∞–≤–¥–∞–Ω–Ω—è '{task_name}' —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–µ ‚úÖ")
    except Exception as e:
        print("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è:", e)

# --- –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å ---
def schedule_reminder():
    while True:
        now = datetime.datetime.now()
        if now.hour == 9 and now.minute == 0:
            show_reminder()
            time.sleep(60)  # —á–µ–∫–∞—Ç–∏ —Ö–≤–∏–ª–∏–Ω—É, —â–æ–± –Ω–µ –¥—É–±–ª—é–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        time.sleep(20)

# --- –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è ---
def main():
    print("–ü—Ä–æ–≥—Ä–∞–º–∞ '–•–≤–∏–ª–∏–Ω–∞ –º–æ–≤—á–∞–Ω–Ω—è' –∑–∞–ø—É—â–µ–Ω–∞.")
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è —É Task Scheduler –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É
    create_task_scheduler()

    thread = threading.Thread(target=schedule_reminder, daemon=True)
    thread.start()

    while True:
        time.sleep(3600)

if __name__ == "__main__":
    main()
