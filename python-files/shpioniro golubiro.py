import os
import time
import subprocess
import psutil
import requests
import pyautogui
import telebot
from telebot import types
import win32gui
import win32process
import threading
import logging
import tempfile

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = "7979263447:AAEFLa50EUCA7Df_Wbx04Z2idci10kJ61Ps"  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
CHAT_ID = 1516697851  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot = telebot.TeleBot(TOKEN, threaded=True)
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏ ===
last_activity = time.time()
HIBERNATION_TIMEOUT = 300  # 5 –º–∏–Ω—É—Ç –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è
POLLING_TIMEOUT_NORMAL = 5  # –¢–∞–π–º–∞—É—Ç –æ–ø—Ä–æ—Å–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ (—Å–µ–∫)
POLLING_TIMEOUT_HIBERNATE = 15  # –¢–∞–π–º–∞—É—Ç –æ–ø—Ä–æ—Å–∞ –≤ —Ä–µ–∂–∏–º–µ –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏ (—Å–µ–∫)
current_polling_timeout = POLLING_TIMEOUT_NORMAL
polling_active = True

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===
def check_access(message):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø."""
    return message.chat.id == CHAT_ID

def get_foreground_app():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ–º –æ–∫–Ω–µ."""
    try:
        hwnd = win32gui.GetForegroundWindow()
        title = win32gui.GetWindowText(hwnd)
        _, pid = win32process.GetWindowThreadProcessId(hwnd)
        proc_name = psutil.Process(pid).name()
        return title, proc_name, pid
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ get_foreground_app: {e}")
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", 0

def kill_process(pid):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ PID."""
    try:
        psutil.Process(pid).kill()
        return True
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ {pid}: {e}")
        return False

def make_screenshot():
    """–î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–µ
        temp_dir = tempfile.gettempdir()
        file = os.path.join(temp_dir, f"screen_{int(time.time())}.png")
        pyautogui.screenshot().save(file)
        with open(file, "rb") as f:
            bot.send_photo(CHAT_ID, f)
        os.remove(file)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        bot.send_message(CHAT_ID, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")

def ensure_autorun():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–ø—Ç –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É Windows."""
    try:
        startup = os.path.join(os.getenv("APPDATA"), "Microsoft\\Windows\\Start Menu\\Programs\\Startup")
        shortcut = os.path.join(startup, "pc_bot.lnk")
        if not os.path.exists(shortcut):
            subprocess.run(
                f'powershell -Command "$s=(New-Object -COM WScript.Shell).CreateShortcut(\'{shortcut}\');'
                f'$s.TargetPath=\'{__file__}\';$s.Save()"',
                shell=True, check=True
            )
            logging.info("–°–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")

def wait_for_internet():
    """–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É, –ø—Ä–æ–≤–µ—Ä—è—è –Ω–µ—Å–∫–æ–ª—å–∫–æ URL."""
    urls = ["https://www.google.com", "https://www.cloudflare.com", "https://www.amazon.com"]
    max_attempts = 5
    attempt = 0

    while attempt < max_attempts:
        for url in urls:
            try:
                response = requests.get(url, timeout=5)
                if response.status_code == 200:
                    logging.info(f"–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {url}")
                    return True
            except requests.RequestException:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ {url}")
        attempt += 1
        logging.warning(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts}: –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 10 —Å–µ–∫")
        time.sleep(10)

    logging.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫")
    bot.send_message(CHAT_ID, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    return False

# === –ì–∏–±–µ—Ä–Ω–∞—Ü–∏—è ===
def update_activity():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."""
    global last_activity, current_polling_timeout, polling_active
    last_activity = time.time()
    if current_polling_timeout != POLLING_TIMEOUT_NORMAL:
        current_polling_timeout = POLLING_TIMEOUT_NORMAL
        polling_active = True
        logging.info("–ü–µ—Ä–µ—à–µ–ª –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")

def hibernation_check():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏."""
    global last_activity, current_polling_timeout, polling_active
    while True:
        if time.time() - last_activity > HIBERNATION_TIMEOUT and current_polling_timeout != POLLING_TIMEOUT_HIBERNATE:
            current_polling_timeout = POLLING_TIMEOUT_HIBERNATE
            polling_active = True
            logging.info("–ü–µ—Ä–µ—à–µ–ª –≤ —Ä–µ–∂–∏–º –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏")
        time.sleep(60)

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def main_menu():
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üîç –ê–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ", "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç")
    kb.add("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")
    return kb

# === –ö–æ–º–∞–Ω–¥—ã ===
@bot.message_handler(commands=["start"])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    if not check_access(message):
        return
    update_activity()
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–ö", reply_markup=main_menu())

@bot.message_handler(func=lambda m: m.text == "üîç –ê–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ")
def fg(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–ê–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ'."""
    if not check_access(message):
        return
    update_activity()
    title, proc_name, pid = get_foreground_app()
    if pid == 0:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–∫–Ω–µ")
        return
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data=f"kill_{pid}"))
    bot.send_message(
        message.chat.id,
        f"ü™ü –ê–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ:\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–ü—Ä–æ—Ü–µ—Å—Å: {proc_name}\nPID: {pid}",
        reply_markup=kb
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith("kill_"))
def cb_kill(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞."""
    if call.message.chat.id != CHAT_ID:
        return
    update_activity()
    pid = int(call.data.split("_")[1])
    if kill_process(pid):
        bot.answer_callback_query(call.id, f"‚úÖ –ó–∞–∫—Ä—ã–ª PID {pid}")
    else:
        bot.answer_callback_query(call.id, f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å {pid}")

@bot.message_handler(func=lambda m: m.text == "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç")
def scr(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–°–∫—Ä–∏–Ω—à–æ—Ç'."""
    if not check_access(message):
        return
    update_activity()
    make_screenshot()

@bot.message_handler(func=lambda m: m.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")
def upd(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–û–±–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏'."""
    if not check_access(message):
        return
    update_activity()
    bot.send_message(message.chat.id, "‚è≥ –û–±–Ω–æ–≤–ª—è—é –ø–∞–∫–µ—Ç—ã...")
    try:
        subprocess.run("pip install --upgrade pip telebot psutil pyautogui pywin32 requests", shell=True, check=True)
        bot.send_message(message.chat.id, "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫: {e}")
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    if wait_for_internet():
        ensure_autorun()
        threading.Thread(target=hibernation_check, daemon=True).start()
        while True:
            try:
                if polling_active:
                    bot.infinity_polling(timeout=current_polling_timeout)
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –≤ infinity_polling: {e}")
                time.sleep(10)