import random
from collections import defaultdict

def pairwise_selection(items):
    if not items:
        return None

    original_items = items.copy()
    elimination_order = []  # –í –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –≤—ã–±—ã–≤–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    current_round = 1
    stats = defaultdict(int)  # –î–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏)

    print(f"""–ü—Ä–∏–≤–µ—Ç! –ù–µ –º–æ–∂–µ—à—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —á–µ —Ç–µ–±–µ —Å–æ–∂—Ä–∞—Ç—å? –î–∞–≤–∞–π —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ. 
    –Ø –±—É–¥—É –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Ç–µ–±–µ 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –µ–¥—ã, –∞ —Ç—ã –≤–≤–æ–¥–∏ 1 –∏–ª–∏ 2 —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å - —á—Ç–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ. 
          
    –ò–≥—Ä–∞–π –ø–æ–∫–∞ –∏–≥—Ä–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –ª–∏–±–æ –ø–æ–∫–∞ —Ç—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏—à—å—Å—è, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å.""")

    while len(items) > 1:
        print(f"\n--- –†–∞—É–Ω–¥ {current_round} ---")
        print(f"–û—Å—Ç–∞–ª–æ—Å—å –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {len(items)}")
        
        pair = random.sample(items, 2)
        print(f"–ß—Ç–æ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?")
        print(f"1: {pair[0]}")
        print(f"2: {pair[1]}")
        
        while True:
            choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (1 –∏–ª–∏ 2): ").strip()
            if choice in ('1', '2'):
                break
            print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–π –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
        loser_index = 1 if choice == '1' else 0
        loser = pair[loser_index]
        elimination_order.append(loser)
        items.remove(loser)
        
        print(f"–£–¥–∞–ª—ë–Ω –≤–∞—Ä–∏–∞–Ω—Ç: {loser}")
        current_round += 1

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–ø-5 (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–±—ã–≤—à–∏–µ + –ø–æ–±–µ–¥–∏—Ç–µ–ª—å)
    winner = items[0]
    all_ranked = elimination_order + [winner]  # –ü–µ—Ä–≤—ã–π –≤—ã–±—ã–ª —Ä–∞–Ω—å—à–µ –≤—Å–µ—Ö, –ø–æ–±–µ–¥–∏—Ç–µ–ª—å - –ø–æ—Å–ª–µ–¥–Ω–∏–π
    top_5 = all_ranked[-5:]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 5)
    top_5.reverse()  # –ß—Ç–æ–±—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –±—ã–ª –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
    print("\n" + "="*50)
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: {', '.join(original_items)}")
    print("\nüèÜ –¢–û–ü-5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    for i, item in enumerate(top_5, 1):
        place = "1st" if i == 1 else "2nd" if i == 2 else "3rd" if i == 3 else f"{i}th"
        print(f"{place}: {item}{' (–ü–û–ë–ï–î–ò–¢–ï–õ–¨)' if i == 1 else ''}")
    
    print("\n–ü–æ–ª–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –≤—ã–±—ã–≤–∞–Ω–∏—è:")
    print(" ‚Üí ".join(elimination_order) + f" ‚Üí {winner}")
    print("="*50)
    
    return winner, top_5

if __name__ == "__main__":
    food_options = ["–ì—Ä–µ—á–∫–∞ —Å –º—è—Å–æ–º –∏ –≥—Ä–∏–±–∞–º–∏", "–ü–∏—Ü—Ü–∞", "–†–æ–ª–ª—ã", "–ì–æ—Ä—è—á–∏–µ —Ä–æ–ª–ª—ã", "–®–∞—É—Ä–º–∞", "–ú–∞—á–∫–∞", "KFC", "–ë—É—Ä–≥–µ—Ä –ö–∏–Ω–≥", "–°–∞–±–≤–µ–π", "–•–∞—á–∞–ø—É—Ä–∏", "–•–∏–Ω–∫–∞–ª–∏", "–û–ª–∏–≤—å–µ", "–û–∫—Ä–æ—à–∫–∞", "–û–±–æ–∂—Ä–∞—Ç—å—Å—è —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —Å–Ω–µ–∫–æ–≤ –∏–∑ –ª–∞–≤–∫–∏", "–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç", "–¢–æ–º –Ø–º", "–§–æ –ë–æ", "–§–∏—à —ç–Ω–¥ –ß–∏–ø—Å", "–°—É–ø –ì–∞—Å–ø–∞—á–æ", "–ë–æ—Ä—â", "–°–æ–ª—è–Ω–∫–∞", "–•–∞—Ä—á–æ", "–°–µ–ª—ë–¥–∫–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π", "–¢–µ—Ä–µ–º–æ–∫ –∏–ª–∏ –ú–∏—Å—Ç–µ—Ä –ë–ª–∏–Ω", "–ë–ª–∏–Ω—ã –¥–æ–º–∞—à–Ω–∏–µ —Å–æ –≤—Å—è–∫–∏–º", "–°—ã—Ä–Ω–∏–∫–∏", "–û–ª–∞–¥—å–∏", "–í–∞—Ä—ë–Ω—ã–µ —è–π—Ü–∞", "–¢–∞–∫–æ\–ë—É—Ä—Ä–∏—Ç–æ", "–®–∞–∫—à—É–∫–∞", "–ì–ª–∞–∑—É–Ω—å—è –∏–ª–∏ –û–º–ª–µ—Ç", "–°—ç–Ω–¥–≤–∏—á –¥–æ–º–∞—à–Ω–∏–π", "–°—ç–Ω–¥–≤–∏—á –∏–∑ –º–∞–≥–∞–∑–∞", "–ü–∞—Å—Ç–∞ –ë–æ–ª–æ–Ω—å–µ–∑–µ –∏–ª–∏ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞", "–î–æ–º–∞—à–Ω–∏–µ –º–∞–∫–∞—Ä–æ—Ö–∏ —Å–æ –≤—Å—è–∫–æ–π –µ—Ä—É–Ω–¥–æ–π", "–ì—Ä–µ—á–µ—Å–∫–∞—è –∫—É—Ö–Ω—è", "–í–∞—Ä—ë–Ω–∞—è –∫–∞—Ä—Ç–æ—Ö–∞ –∏ –º—è—Å–æ", "–î–æ–º–∞—à–Ω–∏–π –±—É—Ä–≥–µ—Ä", "–ü–æ–∫–µ", "–ü–æ–Ω—á–∏–∫–∏\–ü—ã—à–∫–∏", "–ß–∏–∑–∫–µ–π–∫", "–ñ–∞—Ä–µ–Ω—ã–µ –∫–æ–ª–±–∞—Å–∫–∏", "–®–∞—à–ª—ã–∫", "–ü–æ–≥—Ä—ã–∑—Ç—å —Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏", "–ñ–∞—Ä–µ–Ω–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞", "–ü–µ–ª—å–º–µ–Ω–∏", "–í–∞—Ä–µ–Ω–∏–∫–∏", "–ú–∞–∫-–Ω-—á–∏–∑", "–ì—ë–¥–∑–∞", "–†–∏—Å —Å —è–π—Ü–æ–º –∏ –≤—Å—è–∫–∏–º —Ö—Ä—é—á–µ–≤–æ–º", "–†–∏–∑–æ—Ç—Ç–æ", "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ –ø—é—Ä–µ"]
    winner, top_5 = pairwise_selection(food_options)