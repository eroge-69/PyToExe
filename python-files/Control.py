import speech_recognition as sr
import keyboard
import time
import sys
import os

def is_admin():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        return os.getuid() == 0
    except AttributeError:
        import ctypes
        return ctypes.windll.shell32.IsUserAnAdmin()

def setup_microphone():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        recognizer = sr.Recognizer()
        microphone = sr.Microphone()
        
        print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞...")
        with microphone as source:
            recognizer.adjust_for_ambient_noise(source, duration=1)
        print("–ú–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return recognizer, microphone
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –æ–Ω –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        return None, None

def listen_for_command(recognizer, microphone):
    """–°–ª—É—à–∞–µ—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç"""
    try:
        with microphone as source:
            print("üé§ –°–ª—É—à–∞—é...")
            audio = recognizer.listen(source, phrase_time_limit=4, timeout=5)
        
        text = recognizer.recognize_google(audio, language="ru-RU")
        print(f"üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")
        return text.lower()
    
    except sr.WaitTimeoutError:
        return ""
    except sr.UnknownValueError:
        return ""
    except sr.RequestError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
        return ""
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return ""

def next_track():
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫"""
    try:
        keyboard.send("next track")
        print("‚úÖ –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞: {e}")
        return False

def previous_track():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Ç—Ä–µ–∫—É"""
    try:
        keyboard.send("previous track")
        print("‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç—Ä–µ–∫–∞: {e}")
        return False

def play_pause():
    """–°—Ç–∞–≤–∏—Ç –Ω–∞ –ø–∞—É–∑—É –∏–ª–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
    try:
        keyboard.send("play/pause")
        print("‚úÖ –ü–∞—É–∑–∞/–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—É–∑—ã: {e}")
        return False

def process_command(command):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    command = command.lower().strip()
    
    # –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞ –≤–ø–µ—Ä–µ–¥
    if any(phrase in command for phrase in ["–ø–µ—Ä–µ–∫–ª—é—á–∏ —Ç—Ä–µ–∫", "—Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫"]):
        next_track()
    
    # –ö–æ–º–∞–Ω–¥–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Ç—Ä–µ–∫—É
    elif any(phrase in command for phrase in ["–≤–µ—Ä–Ω–∏ —Ç—Ä–µ–∫", "–ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫"]):
        previous_track()
    
    # –ö–æ–º–∞–Ω–¥–∞ –ø–∞—É–∑—ã/–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    elif any(phrase in command for phrase in ["–ø–∞—É–∑–∞", "–æ—Å—Ç–∞–Ω–æ–≤–∏"]):
        play_pause()
    
    # –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
    elif any(phrase in command for phrase in ["–ø–æ–º–æ—â—å", "–∫–æ–º–∞–Ω–¥—ã", "help"]):
        print_help()
    
    else:
        print("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –°–∫–∞–∂–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

def print_help():
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("  ‚Ä¢ '–ø–µ—Ä–µ–∫–ª—é—á–∏ —Ç—Ä–µ–∫' - —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫")
    print("  ‚Ä¢ '–≤–µ—Ä–Ω–∏ —Ç—Ä–µ–∫' - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫")
    print("  ‚Ä¢ '–ø–∞—É–∑–∞' - –ø–∞—É–∑–∞/–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
    print("  ‚Ä¢ '–ø–æ–º–æ—â—å' - —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n")

def main():
    print("üéµ –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–æ–π")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if not is_admin():
        print("‚ö†Ô∏è  –°–æ–≤–µ—Ç: –ï—Å–ª–∏ –º–µ–¥–∏–∞-–∫–ª–∞–≤–∏—à–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å VS Code –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
    recognizer, microphone = setup_microphone()
    if recognizer is None:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.")
        return
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print_help()
    print("üó£Ô∏è  –ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥")
    print("‚èπÔ∏è  –î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n")
    
    try:
        while True:
            command = listen_for_command(recognizer, microphone)
            
            if command:
                process_command(command)
            
            time.sleep(0.5)
            
    except KeyboardInterrupt:
        print("\nüëã –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()