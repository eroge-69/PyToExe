#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
telegram_clean_auto.py

1. –ó–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Telegram/AyuGram (–≤–∫–ª—é—á–∞—è –ø–æ—Ä—Ç–µ–π–±–ª).
2. –ò—â–µ—Ç –ø–∞–ø–∫–∏ Telegram –ø–æ log.txt –∏ —É–¥–∞–ª—è–µ—Ç –∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:
   - –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω "FROZEN_METHOD_INVALID" ‚Üí —É–¥–∞–ª–∏—Ç—å;
   - –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω "OpenGL: [TRUE]" –∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ –±–æ–ª—å—à–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∫ ‚Üí —É–¥–∞–ª–∏—Ç—å;
   - –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω "OpenGL: [TRUE]" –∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏,
       —Ç–æ —É–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ä–µ–¥–∏ –Ω–∏—Ö –µ—Å—Ç—å "FROZEN_METHOD_INVALID".
"""

import os
import shutil
import psutil
import win32gui
import win32process
import win32con
from pathlib import Path

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
ROOT = Path("C:\\")
TARGET_FILENAME = "log.txt"

KEYWORDS = ["telegram", "ayugram"]

EXCLUDE_FOLDERS = {
    "windows",
    "users",
    "program files",
    "program files (x86)",
    "perflogs",
    "$recycle.bin",
    "recovery",
    "system volume information"
}
# =================


# --- –ß–∞—Å—Ç—å 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ ---
def enum_windows():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ (hwnd, title, pid)"""
    results = []

    def callback(hwnd, extra):
        if win32gui.IsWindowVisible(hwnd):
            title = win32gui.GetWindowText(hwnd)
            if title:
                _, pid = win32process.GetWindowThreadProcessId(hwnd)
                results.append((hwnd, title, pid))
        return True

    win32gui.EnumWindows(callback, None)
    return results


def close_by_windows():
    windows = enum_windows()
    found = False

    for hwnd, title, pid in windows:
        if any(k in title.lower() for k in KEYWORDS):
            try:
                proc = psutil.Process(pid)
                print(f"–ó–∞–∫—Ä—ã–≤–∞—é PID={pid} | Title='{title}' | EXE={proc.name()}")
                win32gui.PostMessage(hwnd, win32con.WM_CLOSE, 0, 0)
                proc.wait(timeout=3)
            except Exception:
                try:
                    proc.kill()
                    print(f"üíÄ Kill PID={pid}")
                except Exception:
                    pass
            found = True

    if not found:
        print("‚ö†Ô∏è –û–∫–Ω–∞ Telegram/AyuGram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")


# --- –ß–∞—Å—Ç—å 2: –ê–Ω–∞–ª–∏–∑ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–æ–∫ ---
def analyze_log(text: str):
    if "FROZEN_METHOD_INVALID" in text:
        return "‚ùå –ó–∞–º–æ—Ä–æ–∂–µ–Ω", True

    idx = text.find("OpenGL: [TRUE]")
    if idx != -1:
        rest = text[idx:].strip()
        lines_after = rest.splitlines()[1:]
        if not lines_after:
            return "üßπ –ü—É—Å—Ç–æ–π (OpenGL, –∫–æ–Ω–µ—Ü –ª–æ–≥–∞)", True
        else:
            if "FROZEN_METHOD_INVALID" in "\n".join(lines_after):
                return "‚ùå –ó–∞–º–æ—Ä–æ–∂–µ–Ω –ø–æ—Å–ª–µ OpenGL", True
            else:
                return "‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ (–µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)", False

    return "‚ÑπÔ∏è –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω", False


def is_excluded(path: Path) -> bool:
    parts = [p.lower() for p in path.parts]
    return any(ex in parts for ex in EXCLUDE_FOLDERS)


def clean_telegram_folders():
    print("\nüöÄ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ C:\\ ...\n")

    for dirpath, dirnames, filenames in os.walk(ROOT):
        try:
            current = Path(dirpath)

            if is_excluded(current):
                dirnames[:] = []
                continue

            if TARGET_FILENAME not in filenames:
                continue

            log_path = current / TARGET_FILENAME

            try:
                text = log_path.read_text(encoding="utf-8", errors="ignore")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å {log_path}: {e}")
                continue

            status, should_delete = analyze_log(text)

            print(f"üìÑ –õ–æ–≥: {log_path}")
            print(f"   –°—Ç–∞—Ç—É—Å: {status}")

            try:
                files_here = [f.lower() for f in os.listdir(dirpath)]
            except PermissionError:
                print("   ‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –ø–∞–ø–∫–µ.")
                continue

            if "telegram.exe" in files_here:
                telegram_folder = current
            else:
                telegram_folder = current.parent

            print(f"üìÇ –ü–∞–ø–∫–∞ Telegram: {telegram_folder}")

            if should_delete:
                try:
                    shutil.rmtree(telegram_folder)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ: {telegram_folder}\n")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {telegram_folder}: {e}\n")
            else:
                print("‚è© –ù–µ —Ç—Ä–µ–±—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è.\n")

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {dirpath}: {e}")

    print("\n‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


if __name__ == "__main__":
    print("=== –≠—Ç–∞–ø 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Telegram/AyuGram ===")
    close_by_windows()

    print("\n=== –≠—Ç–∞–ø 2: –û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–æ–∫ Telegram ===")
    clean_telegram_folders()
