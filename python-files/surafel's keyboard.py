import tkinter as tk
from tkinter import messagebox

# --------------------------
# Amharic families (33 main letters)
# --------------------------
AMHARIC_FAMILIES = {
    "·àÄ": ["·àÄ","·àÅ","·àÇ","·àÉ","·àÑ","·àÖ","·àÜ","·äã"],
    "·àà": ["·àà","·àâ","·àä","·àã","·àå","·àç","·àé","·àè"],
    "·àê": ["·àê","·àë","·àí","·àì","·àî","·àï","·àñ","·àó"],
    "·àò": ["·àò","·àô","·àö","·àõ","·àú","·àù","·àû","·àü"],
    "·à†": ["·à†","·à°","·à¢","·à£","·à§","·à•","·à¶","·àß"],
    "·à®": ["·à®","·à©","·à™","·à´","·à¨","·à≠","·àÆ","·àØ"],
    "·à∞": ["·à∞","·à±","·à≤","·à≥","·à¥","·àµ","·à∂","·à∑"],
    "·à∏": ["·à∏","·àπ","·à∫","·àª","·àº","·àΩ","·àæ","·àø"],
    "·âÄ": ["·âÄ","·âÅ","·âÇ","·âÉ","·âÑ","·âÖ","·âÜ","·âà"],
    "·â†": ["·â†","·â°","·â¢","·â£","·â§","·â•","·â¶","·âß"],
    "·â∞": ["·â∞","·â±","·â≤","·â≥","·â¥","·âµ","·â∂","·â∑"],
    "·â∏": ["·â∏","·âπ","·â∫","·âª","·âº","·âΩ","·âæ","·âø"],
    "·äÄ": ["·äÄ","·äÅ","·äÇ","·äÉ","·äÑ","·äÖ","·äÜ","·äá"],
    "·äê": ["·äê","·äë","·äí","·äì","·äî","·äï","·äñ","·äó"],
    "·äò": ["·äò","·äô","·äö","·äõ","·äú","·äù","·äû","·äü"],
    "·ä†": ["·ä†","·ä°","·ä¢","·ä£","·ä§","·ä•","·ä¶","·äß"],
    "·ä®": ["·ä®","·ä©","·ä™","·ä´","·ä¨","·ä≠","·äÆ","·äØ"],
    "·ä∏": ["·ä∏","·äπ","·ä∫","·äª","·äº","·äΩ","·äæ","·ãÄ"],
    "·ãà": ["·ãà","·ãâ","·ãä","·ãã","·ãå","·ãç","·ãé","·ãè"],
    "·ãê": ["·ãê","·ãë","·ãí","·ãì","·ãî","·ãï","·ãñ","·ãó"],
    "·ãò": ["·ãò","·ãô","·ãö","·ãõ","·ãú","·ãù","·ãû","·ãü"],
    "·ã†": ["·ã†","·ã°","·ã¢","·ã£","·ã§","·ã•","·ã¶","·ãß"],
    "·ã®": ["·ã®","·ã©","·ã™","·ã´","·ã¨","·ã≠","·ãÆ","·ãØ"],
    "·ã∞": ["·ã∞","·ã±","·ã≤","·ã≥","·ã¥","·ãµ","·ã∂","·ã∑"],
    "·ã∏": ["·ã∏","·ãπ","·ã∫","·ãª","·ãº","·ãΩ","·ãæ","·ãø"],
    "·åÄ": ["·åÄ","·åÅ","·åÇ","·åÉ","·åÑ","·åÖ","·åÜ","·åá"],
    "·åà": ["·åà","·åâ","·åä","·åã","·åå","·åç","·åé","·åè"],
    "·åò": ["·åò","·åô","·åö","·åõ","·åú","·åù","·åû","·åü"],
    "·å†": ["·å†","·å°","·å¢","·å£","·å§","·å•","·å¶","·åß"],
    "·å®": ["·å®","·å©","·å™","·å´","·å¨","·å≠","·åÆ","·åØ"],
    "·å∞": ["·å∞","·å±","·å≤","·å≥","·å¥","·åµ","·å∂","·å∑"],
    "·å∏": ["·å∏","·åπ","·å∫","·åª","·åº","·åΩ","·åæ","·åø"],
}

PUNCTUATION = ["·ç°", "·ç¢", "·ç£", "·ç§", "·ç•", "·ç¶", "·çß", "·ç®"]
ENGLISH = [chr(i) for i in range(65, 91)]
NUMBERS_SYMBOLS = ["1","2","3","4","5","6","7","8","9","0","!","@","#","$","%","&","*","(",")"]

# --------------------------
class AmharicKeyboard:
    def __init__(self, root, btn_width=6, btn_height=2):
        self.root = root
        self.root.title("Surafel Wolde's Keyboard")
        self.root.geometry("1000x400")
        self.root.resizable(True, True)
        self.btn_width = btn_width
        self.btn_height = btn_height

        self.textbox = tk.Text(root, height=5, font=("Noto Sans Ethiopic", 16), bg="#1e1e1e", fg="white")
        self.textbox.pack(fill="x", padx=5, pady=5)

        # Top bar
        top_frame = tk.Frame(root, bg="#1e1e1e")
        top_frame.pack(fill="x")

        self.send_btn = tk.Button(top_frame, text="Send ‚Üí Paste", command=self.send_to_clipboard,
                                  width=12, height=2, bg="#555", fg="white")
        self.send_btn.pack(side="left", padx=2, pady=2)

        self.copy_btn = tk.Button(top_frame, text="üìã Copy", command=self.copy_to_clipboard,
                                  width=8, height=2, bg="#008CBA", fg="white")
        self.copy_btn.pack(side="left", padx=2, pady=2)

        self.layout_var = tk.StringVar(value="AMHARIC")
        tk.OptionMenu(top_frame, self.layout_var, "AMHARIC", "ENGLISH", "NUMBERS", command=self.switch_layout).pack(side="left", padx=5)

        self.keyboard_frame = tk.Frame(root, bg="#1e1e1e")
        self.keyboard_frame.pack(expand=True, fill="both")

        self.load_main_keys()

    # --------------------------
    def load_main_keys(self):
        self.clear_keys()
        keys = list(AMHARIC_FAMILIES.keys())
        # Arrange main keys in grid
        rows = []
        temp_row = []
        for i, key in enumerate(keys, 1):
            temp_row.append(key)
            if i % 8 == 0:  # 8 keys per row
                rows.append(temp_row)
                temp_row = []
        if temp_row:
            rows.append(temp_row)

        for row_keys in rows:
            frame = tk.Frame(self.keyboard_frame, bg="#1e1e1e")
            frame.pack(pady=2)
            for key in row_keys:
                btn = tk.Button(frame, text=key, width=self.btn_width, height=self.btn_height,
                                command=lambda val=key: self.show_family(val),
                                bg="#333", fg="white", relief="flat")
                btn.pack(side="left", padx=2)
        self.create_bottom_row(PUNCTUATION)

    def show_family(self, family_key):
        self.clear_bottom_row()
        family = AMHARIC_FAMILIES.get(family_key, [])
        self.create_bottom_row(family)

    def reset_to_punctuation(self, event=None):
        self.clear_bottom_row()
        self.create_bottom_row(PUNCTUATION)

    def create_bottom_row(self, keys):
        self.bottom_frame = tk.Frame(self.keyboard_frame, bg="#1e1e1e")
        self.bottom_frame.pack(side="top", pady=5)
        for key in keys:
            btn = tk.Button(self.bottom_frame, text=key, width=self.btn_width, height=self.btn_height,
                            command=lambda val=key: self.textbox.insert("end", val),
                            bg="#444", fg="white", relief="flat")
            btn.pack(side="left", padx=2)

        space_btn = tk.Button(self.bottom_frame, text="Space", width=self.btn_width*2, height=self.btn_height,
                              command=lambda: [self.textbox.insert("end", " "), self.reset_to_punctuation()],
                              bg="#666", fg="white")
        space_btn.pack(side="left", padx=2)

        clear_btn = tk.Button(self.bottom_frame, text="Clear", width=self.btn_width*2, height=self.btn_height,
                              command=lambda: self.textbox.delete("1.0", "end"),
                              bg="#a00", fg="white")
        clear_btn.pack(side="left", padx=2)

    def clear_keys(self):
        for widget in self.keyboard_frame.winfo_children():
            widget.destroy()

    def clear_bottom_row(self):
        if hasattr(self, "bottom_frame") and self.bottom_frame.winfo_exists():
            self.bottom_frame.destroy()

    def send_to_clipboard(self):
        text = self.textbox.get("1.0", "end-1c")
        self.root.clipboard_clear()
        self.root.clipboard_append(text)
        messagebox.showinfo("Copied", "Text copied! Now press Ctrl+V in Word/Excel/PowerPoint.")

    def copy_to_clipboard(self):
        text = self.textbox.get("1.0", "end-1c")
        self.root.clipboard_clear()
        self.root.clipboard_append(text)
        self.root.update()
        messagebox.showinfo("Copied", "Copied to clipboard!")

    def switch_layout(self, choice):
        self.clear_keys()
        if choice == "AMHARIC":
            self.load_main_keys()
        elif choice == "ENGLISH":
            # arrange in multiple rows
            row_size = 10
            for i in range(0, len(ENGLISH), row_size):
                frame = tk.Frame(self.keyboard_frame, bg="#1e1e1e")
                frame.pack(pady=2)
                for key in ENGLISH[i:i+row_size]:
                    btn = tk.Button(frame, text=key, width=self.btn_width, height=self.btn_height,
                                    command=lambda val=key: self.textbox.insert("end", val),
                                    bg="#333", fg="white", relief="flat")
                    btn.pack(side="left", padx=2)
            self.create_bottom_row([".",",","?","!"])
        elif choice == "NUMBERS":
            frame = tk.Frame(self.keyboard_frame, bg="#1e1e1e")
            frame.pack(pady=2)
            for key in NUMBERS_SYMBOLS:
                btn = tk.Button(frame, text=key, width=self.btn_width, height=self.btn_height,
                                command=lambda val=key: self.textbox.insert("end", val),
                                bg="#333", fg="white", relief="flat")
                btn.pack(side="left", padx=2)
            self.create_bottom_row(["+", "-", "/", "*", "="])

# -----------------------
if __name__ == "__main__":
    root = tk.Tk()
    app = AmharicKeyboard(root, btn_width=6, btn_height=2)
    root.mainloop()
