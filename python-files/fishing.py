import random
import time
import threading
import telebot

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É @BotFather)
API_TOKEN = '7914309453:AAFcI3cztaF-omY_Ek3WUDrvLpBT1X4yqBo'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# –°–ø–∏—Å–æ–∫ —Ä—ã–± —Å –∏—Ö –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º–∏
FISH_LIST = [
    {"name": "–ö–∞—Ä–∞—Å—å", "min_size": 50, "medium_size": 750, "max_size": 3000},
    {"name": "–©—É–∫–∞", "min_size": 300, "medium_size": 2000, "max_size": 7000},
    {"name": "–°–æ–º", "min_size": 500, "medium_size": 5000, "max_size": 15000},
    {"name": "–û–∫—É–Ω—å", "min_size": 20, "medium_size": 1000, "max_size": 4000},
    {"name": "–ó–æ–ª–æ—Ç–∞—è —Ä—ã–±–∫–∞", "min_size": 7, "medium_size": 777, "max_size": 7777}
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    print(f"/start by: {message}")


    welcome_message = "üêü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†—ã–±–∞–ª–∫–∞ –ë–æ—Ç! üé£ \n–í–æ—Ç —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å: \n‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fish, —á—Ç–æ–±—ã –∑–∞–∫–∏–Ω—É—Ç—å —É–¥–æ—á–∫—É. \n‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–±—Ä–æ—Å. \n‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É —Å–Ω–æ–≤–∞. \n\nüìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ä—ã–±—ã:\n‚Ä¢ –ö–∞—Ä–∞—Å—å\n‚Ä¢ –©—É–∫–∞ \n‚Ä¢ –°–æ–º \n‚Ä¢ –û–∫—É–Ω—å\n‚Ä¢ –ó–æ–ª–æ—Ç–∞—è —Ä—ã–±–∫–∞ \n\nüí° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä—ã–±–∞–ª–∫–∏:\n‚Ä¢ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç 3 –¥–æ 10 —Å–µ–∫—É–Ω–¥.\n‚Ä¢ –†–∞–∑–º–µ—Ä –ø–æ–π–º–∞–Ω–Ω–æ–π —Ä—ã–±—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –µ—ë –≤–∏–¥–∞ –∏ –≤–∞—à–µ–π —É–¥–∞—á–∏!\n‚Ä¢ –†—ã–±–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –∏–ª–∏ —Ç—Ä–æ—Ñ–µ–π–Ω–æ–π ‚Äî –≤—Å—ë —Ä–µ—à–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å. –†—ã–±–∞ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–ø–∞–¥–∞–µ—Ç—Å—è –≤ –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å. –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–æ–π–º–∞—Ç—å —Ä—ã–±—É –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞! \n\n–õ–æ–≤–∏—Ç–µ —Ä—ã–±—É –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏ –∏ —Å–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å –ø–æ —Ä–∞–∑–º–µ—Ä—É —Ä—ã–±! - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ —Ç–æ–≤–∞—Ä–∏—â–µ–π, –ø–æ–¥–µ–ª–∏–≤—à–∏—Å—å —Å—Å–ª—ã–∫–æ–π: https://t.me/omegafisher_bot (–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ)\n\n–£–¥–∞—á–∏ –≤ —Ä—ã–±–∞–ª–∫–µ! üçÄ\n\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞: @disccsz"




    bot.send_photo(
        message.chat.id,
        photo=open("C://Users/artem/Desktop/start.png", "rb"),
        caption=welcome_message, reply_to_message_id=message.message_id
            )

# –ö–æ–º–∞–Ω–¥–∞ /fish - –∑–∞–∫–∏–Ω—É—Ç—å —É–¥–æ—á–∫—É
@bot.message_handler(commands=['fish'])
def start_fishing(message):
    user_id = message.from_user.id
    print(f"/fish by: {user_id}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ª–æ–≤–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Ä—ã–±—É
    if user_id in user_states and user_states[user_id].get("fishing", False):
        bot.reply_to(message, "–í—ã —É–∂–µ –ª–æ–≤–∏—Ç–µ —Ä—ã–±—É! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞–±—Ä–æ—Å –∫–æ–º–∞–Ω–¥–æ–π /cancel.")
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ª–æ–≤–∏—Ç —Ä—ã–±—É"
    user_states[user_id] = {"fishing": True, "cancel": False}

    bot.send_photo(
        message.chat.id,
        photo=open("C://Users/artem/Desktop/fish.png", "rb"),
        caption="–í—ã –∑–∞–∫–∏–Ω—É–ª–∏ —É–¥–æ—á–∫—É... –ñ–¥–∏—Ç–µ –ø–æ–∫–ª—ë–≤–∫—É!" ,
        reply_to_message_id=message.message_id
            )

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ª–æ–≤–ª–∏ —Ä—ã–±—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=fishing_process, args=(message,), daemon=True).start()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ª–æ–≤–ª–∏ —Ä—ã–±—ã
def fishing_process(message):
    user_id = message.from_user.id

    # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (–æ—Ç 3 –¥–æ 10 —Å–µ–∫—É–Ω–¥)
    wait_time = random.randint(3, 10)
    print(wait_time)

    # –†–∞–∑–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–º–µ–Ω—ã
    for _ in range(wait_time):
        if user_id not in user_states or user_states[user_id].get("cancel", False):
            bot.send_message(user_id, "–ó–∞–±—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω!")
            return
        time.sleep(1)  # –ñ–¥—ë–º –ø–æ 1 —Å–µ–∫—É–Ω–¥–µ

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â—ë —Ä–∞–∑ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è
    if user_id not in user_states or user_states[user_id].get("cancel", False):
        bot.send_message(user_id, "–ó–∞–±—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω!")
        return

    # –õ–æ–≤–∏–º —Å–ª—É—á–∞–π–Ω—É—é —Ä—ã–±—É
    fish = random.choice(FISH_LIST)
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[user_id]["fishing"] = False

    fish_name = fish["name"]
    x = random.randint(1, 10)
    if x < 8: 
        fish_size = random.randint(fish["min_size"], fish["medium_size"])
    else:
        fish_size = random.randint(fish["medium_size"], fish["max_size"])
    
    if int(fish_size) < 1000:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        bot.send_message(user_id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–π–º–∞–ª–∏ {fish_name} –≤–µ—Å–æ–º {fish_size} –≥—Ä!")
    else:
        kgs = fish_size // 10**3
        grms = fish_size % 10**3
        bot.send_message(user_id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–π–º–∞–ª–∏ {fish_name} –≤–µ—Å–æ–º {kgs} –∫–≥ {grms} –≥—Ä!")
    print(f"Fished: {user_id}")

# –ö–æ–º–∞–Ω–¥–∞ /cancel - –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–±—Ä–æ—Å
@bot.message_handler(commands=['cancel'])
def cancel_fishing(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ª–æ–≤–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä—ã–±—É
    if user_id in user_states and user_states[user_id].get("fishing", False):
        user_states[user_id] = {"fishing": False, "cancel": True}
        bot.reply_to(message, "–ó–∞–±—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω!")
    else:
        bot.reply_to(message, "–í—ã —Å–µ–π—á–∞—Å –Ω–µ –ª–æ–≤–∏—Ç–µ —Ä—ã–±—É.")

    print(f"/—Åancel by: {user_id}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.polling(none_stop=True)