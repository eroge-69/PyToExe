import speech_recognition as sr
import pyttsx3
import datetime
import subprocess
import webbrowser
import os
import time
import threading
from pycaw.pycaw import AudioUtilities
from comtypes import CLSCTX_ALL
from ctypes import cast, POINTER
from comtypes.client import CreateObject
import pyautogui
import psutil

engine = pyttsx3.init()
recognizer = sr.Recognizer()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ–ª–æ—Å–∞
voices = engine.getProperty('voices')
if len(voices) > 0:
    engine.setProperty('voice', voices[0].id)  
else:
    engine.setProperty('voice', 'default')  
engine.setProperty('rate', 180)  

opera_path = r"C:\Users\marik\AppData\Local\Programs\Opera GX\opera.exe"
webbrowser.register('opera', None, webbrowser.BackgroundBrowser(opera_path))


def speak(text):
    """–û–∑–≤—É—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –¥–µ–ª–∞–µ—Ç –ø–∞—É–∑—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏"""
    print(f"–î–∂–∞—Ä–≤–∏—Å: {text}")
    engine.say(text)
    engine.runAndWait()
    time.sleep(0.3)

def listen(timeout=5, phrase_time_limit=5):
    """–°–ª—É—à–∞–µ—Ç –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –æ–¥–Ω—É —Ñ—Ä–∞–∑—É"""
    with sr.Microphone() as source:
        print("üéôÔ∏è –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø–∏—Å–∏...")
        recognizer.adjust_for_ambient_noise(source, duration=0.5)
        try:
            audio = recognizer.listen(source, timeout=timeout, phrase_time_limit=phrase_time_limit)
            text = recognizer.recognize_google(audio, language="ru-RU")
            print(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")
            return text.lower()
        except sr.WaitTimeoutError:
            print("–¢–∞–π–º–∞—É—Ç: –Ω–∏—á–µ–≥–æ –Ω–µ —Å–∫–∞–∑–∞–Ω–æ.")
            return ""
        except sr.UnknownValueError:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
            return ""
        except sr.RequestError as e:
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
            speak("–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.")
            return ""
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è: {e}")
            return ""

def set_volume(level):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å (0.0 ‚Äî 1.0)"""
    try:
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = cast(interface, POINTER(IAudioEndpointVolume))
        volume.SetMasterVolumeLevelScalar(level, None)
        speak(f"–ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {int(level * 100)}%.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç—å—é:", e)
        speak("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å.")

def toggle_mute():
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∑–≤—É–∫"""
    try:
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = cast(interface, POINTER(IAudioEndpointVolume))
        is_muted = volume.GetMute()
        if is_muted:
            volume.SetMute(0, None)
            speak("–ó–≤—É–∫ –≤–∫–ª—é—á—ë–Ω.")
        else:
            volume.SetMute(1, None)
            speak("–ó–≤—É–∫ –≤—ã–∫–ª—é—á–µ–Ω.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∑–≤—É–∫–∞:", e)
        speak("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫.")

def open_url(url):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç URL –≤ Opera GX –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        thread = threading.Thread(target=webbrowser.get('opera').open, args=(url,), daemon=True)
        thread.start()
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:", e)
        try:
            os.startfile(opera_path)
            time.sleep(1)
            os.system(f'start "" "{url}"')
        except:
            speak("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä.")

def open_steam():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Steam, –µ—Å–ª–∏ –ø—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    steam_path = r"D:\steam\steam.exe"
    if os.path.exists(steam_path):
        speak("–ó–∞–ø—É—Å–∫–∞—é Steam...")
        os.startfile(steam_path)
    else:
        speak("Steam –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å.")
        print("–ü—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω:", steam_path)

def close_application_by_name(process_name):
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, steam.exe)"""
    try:
        found = False
        for proc in psutil.process_iter(['pid', 'name']):
            if process_name.lower() in proc.info['name'].lower():
                os.system(f'taskkill /f /im "{proc.info["name"]}"')
                speak(f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {proc.info['name']} –∑–∞–∫—Ä—ã—Ç–æ.")
                found = True
        if not found:
            speak(f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {process_name} –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", e)
        speak("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")

def execute_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    if not command.strip():
        speak("–Ø –Ω–∏—á–µ–≥–æ –Ω–µ —É—Å–ª—ã—à–∞–ª.")
        return

    try:
        if "–ø—Ä–∏–≤–µ—Ç" in command:
            speak("–ü—Ä–∏–≤–µ—Ç, —Å—ç—Ä. –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

        elif "–≤—Ä–µ–º—è" in command:
            now = datetime.datetime.now().strftime("%H:%M")
            speak(f"–°–µ–π—á–∞—Å {now}")

        elif "–¥–∞—Ç–∞" in command:
            today = datetime.datetime.now().strftime("%d %B %Y")
            speak(f"–°–µ–≥–æ–¥–Ω—è {today}")

        elif "–æ—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä" in command:
            speak("–û—Ç–∫—Ä—ã–≤–∞—é Opera GX")
            open_url("https://google.com")

        elif "–æ—Ç–∫—Ä–æ–π youtube" in command:
            speak("–û—Ç–∫—Ä—ã–≤–∞—é YouTube")
            open_url("https://youtube.com")

        elif "–ø–æ–∏—Å–∫" in command:
            query = command.replace("–ø–æ–∏—Å–∫", "").strip()
            if query:
                speak(f"–ò—â—É {query}")
                url = f"https://www.google.com/search?q={query}"
                open_url(url)
            else:
                speak("–ß—Ç–æ –∏—Å–∫–∞—Ç—å?")

        elif "–æ—Ç–∫—Ä–æ–π –±–ª–æ–∫–Ω–æ—Ç" in command:
            speak("–û—Ç–∫—Ä—ã–≤–∞—é –ë–ª–æ–∫–Ω–æ—Ç")
            try:
                subprocess.Popen([r"C:\Windows\System32\notepad.exe"])
            except Exception as e:
                speak("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ë–ª–æ–∫–Ω–æ—Ç")
                print("–û—à–∏–±–∫–∞:", e)

        elif "–æ—Ç–∫—Ä–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä" in command:
            speak("–û—Ç–∫—Ä—ã–≤–∞—é –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
            try:
                subprocess.Popen("start calc", shell=True)
            except Exception as e:
                speak("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
                print("–û—à–∏–±–∫–∞:", e)

        elif "–≥—Ä–æ–º–∫–æ—Å—Ç—å –≤–≤–µ—Ä—Ö" in command or "—É–≤–µ–ª–∏—á—å –≥—Ä–æ–º–∫–æ—Å—Ç—å" in command:
            set_volume(0.8)

        elif "–≥—Ä–æ–º–∫–æ—Å—Ç—å –≤–Ω–∏–∑" in command or "—É–º–µ–Ω—å—à–∏ –≥—Ä–æ–º–∫–æ—Å—Ç—å" in command:
            set_volume(0.3)

        elif "–≤—ã–∫–ª—é—á–∏ –∑–≤—É–∫" in command or "–æ—Ç–∫–ª—é—á–∏ –∑–≤—É–∫" in command or "–∑–≤—É–∫ –≤—ã–∫–ª—é—á–∏" in command:
            toggle_mute()

        elif "–≤–∫–ª—é—á–∏ –∑–≤—É–∫" in command or "–∑–≤—É–∫ –≤–∫–ª—é—á–∏" in command:
            set_volume(0.5)
            speak("–ó–≤—É–∫ –≤–∫–ª—é—á—ë–Ω.")

        elif "–∑–∞–∫—Ä–æ–π –æ–∫–Ω–æ" in command:
            speak("–ó–∞–∫—Ä—ã–≤–∞—é —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ")
            pyautogui.hotkey('alt', 'f4')

        elif "–æ—Ç–∫—Ä–æ–π steam" in command or "–∑–∞–ø—É—Å—Ç–∏ —Å—Ç–∏–º" in command:
            open_steam()

        elif "–∑–∞–∫—Ä–æ–π steam" in command or "–≤—ã–∫–ª—é—á–∏ —Å—Ç–∏–º" in command:
            close_application_by_name("steam.exe")

        elif "–∑–∞–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä" in command:
            close_application_by_name("opera.exe")

        elif "–≤—ã–∫–ª—é—á–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä" in command:
            speak("–í—ã–∫–ª—é—á–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
            os.system("shutdown /s /t 10")

        elif "–æ—Ç–º–µ–Ω–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ" in command:
            speak("–û—Ç–º–µ–Ω—è—é –≤—ã–∫–ª—é—á–µ–Ω–∏–µ")
            os.system("shutdown /a")

        elif any(word in command for word in ["–ø–æ–∫–∞", "—Ö–≤–∞—Ç–∏—Ç", "–≤—ã—Ö–æ–¥", "—Å—Ç–æ–ø", "—Å–ø–∞—Ç—å"]):
            speak("–í—ã—Ö–æ–∂—É –∏–∑ —Ä–µ–∂–∏–º–∞. –î–æ –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥.")
            return "exit_mode"

        else:
            speak("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

    except Exception as e:
        speak("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
        print("–û—à–∏–±–∫–∞ –≤ execute_command:", e)

    return "continue"

if __name__ == "__main__":
    print("üéß –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã:")
    for i, name in enumerate(sr.Microphone.list_microphone_names()):
        print(f"  {i}: {name}")
    print("\n" + "="*50)
    speak("–î–∂–∞—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –°–∫–∞–∂–∏—Ç–µ '–î–∂–∞—Ä–≤–∏—Å', —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å.")
    print("–ì–æ–≤–æ—Ä–∏—Ç–µ '–î–∂–∞—Ä–≤–∏—Å' –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")

    while True:
        try:
            print("\n[–û–∂–∏–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...]")
            command = listen(timeout=10, phrase_time_limit=3)

            if command and "–¥–∂–∞—Ä–≤–∏—Å" in command:
                speak("–†–µ–∂–∏–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏. –ì–æ—Ç–æ–≤ –∫ –∫–æ–º–∞–Ω–¥–∞–º.")
                print("[–†–µ–∂–∏–º –∫–æ–º–∞–Ω–¥: –∂–¥—É –∫–æ–º–∞–Ω–¥—ã...]")

                while True:
                    command = listen(timeout=5, phrase_time_limit=5)

                    if not command:
                        speak("–ù–µ—Ç –∫–æ–º–∞–Ω–¥—ã. –í—ã—Ö–æ–∂—É –∏–∑ —Ä–µ–∂–∏–º–∞.")
                        break

                    result = execute_command(command)
                    if result == "exit_mode":
                        break

                    time.sleep(0.5)

        except KeyboardInterrupt:
            speak("–°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
            break

        except Exception as e:
            print("‚ùó –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", e)
            speak("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å–∏—Å—Ç–µ–º—É...")
            time.sleep(2)
            continue
