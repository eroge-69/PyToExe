import telebot
import pyautogui
import os
import time
from telebot import types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ - –ø–æ–ª—É—á–∏—Ç–µ —É @BotFather
BOT_TOKEN = "8244082306:AAH5CxodklCzECwFU4pHiUs18Fq1CnZNOpc"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω!
bot = telebot.TeleBot(BOT_TOKEN)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
CURSOR_SPEED = 50
SCROLL_SPEED = 100
admin_id = None  # ID –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º

def is_admin(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id == admin_id

@bot.message_handler(commands=['start'])
def send_welcome(message):
    global admin_id
    if admin_id is None:
        admin_id = message.from_user.id
        bot.send_message(message.chat.id, "üîê –í—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")
    
    if not is_admin(message.from_user.id):
        bot.send_message(message.chat.id, "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton('üñ± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º')
    btn2 = types.KeyboardButton('‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞')
    btn3 = types.KeyboardButton('üìä –°–∏—Å—Ç–µ–º–∞')
    btn4 = types.KeyboardButton('‚ùì –ü–æ–º–æ—â—å')
    markup.add(btn1, btn2, btn3, btn4)
    
    welcome_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º

üñ± - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º –∏ –º—ã—à—å—é
‚å®Ô∏è - –≠–º—É–ª—è—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
üìä - –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
‚ùì - –°–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–º–æ—â—å

‚ö†Ô∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Ü–µ–ª–µ–≤–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ
    """
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

@bot.message_handler(commands=['help'])
def send_help(message):
    if not is_admin(message.from_user.id):
        return
    
    help_text = """
ü§ñ **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
/cursor - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º
/keyboard - –≠–º—É–ª—è—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
/system - –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

üñ± **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º:**
‚¨ÜÔ∏è‚¨áÔ∏è‚¨ÖÔ∏è‚û°Ô∏è - –î–≤–∏–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
üñ± –õ–ö–ú - –õ–µ–≤—ã–π –∫–ª–∏–∫ –º—ã—à–∏
üñ± –ü–ö–ú - –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –º—ã—à–∏
üì∏ - –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç
üîÑ - –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫
üñ± –°–∫—Ä–æ–ª–ª - –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–æ–ª–µ—Å–∏–∫–æ–º

‚å®Ô∏è **–≠–º—É–ª—è—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:**
‚èé Enter - –ö–ª–∞–≤–∏—à–∞ Enter
‚éã Esc - –ö–ª–∞–≤–∏—à–∞ Escape
‚ê£ Space - –ü—Ä–æ–±–µ–ª
‚å®Ô∏è Tab - –ö–ª–∞–≤–∏—à–∞ Tab
üìã –í—Å—Ç–∞–≤–∏—Ç—å - Ctrl+V
‚úÇÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å - Ctrl+C
üîç –ü–æ–∏—Å–∫ - Ctrl+F

üìä **–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä
üîÖ –Ø—Ä–∫–æ—Å—Ç—å - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç—å—é
üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤—É–∫–æ–º
    """
    bot.send_message(message.chat.id, help_text, parse_mode='Markdown')

@bot.message_handler(commands=['cursor'])
def show_cursor_command(message):
    if not is_admin(message.from_user.id):
        return
    show_cursor_controls(message.chat.id)

@bot.message_handler(commands=['keyboard'])
def keyboard_command(message):
    if not is_admin(message.from_user.id):
        return
    show_keyboard_controls(message.chat.id)

@bot.message_handler(commands=['system'])
def system_command(message):
    if not is_admin(message.from_user.id):
        return
    show_system_controls(message.chat.id)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if not is_admin(message.from_user.id):
        return
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    if message.text == 'üñ± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º':
        show_cursor_controls(message.chat.id)
    elif message.text == '‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞':
        show_keyboard_controls(message.chat.id)
    elif message.text == 'üìä –°–∏—Å—Ç–µ–º–∞':
        show_system_controls(message.chat.id)
    elif message.text == '‚ùì –ü–æ–º–æ—â—å':
        send_help(message)
    
    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º
    elif message.text in ['‚¨ÜÔ∏è', '‚¨áÔ∏è', '‚¨ÖÔ∏è', '‚û°Ô∏è']:
        handle_cursor_movement(message.chat.id, message.text)
    elif message.text == 'üñ± –õ–ö–ú':
        pyautogui.click()
        bot.send_message(message.chat.id, "‚úÖ –õ–µ–≤—ã–π –∫–ª–∏–∫ –º—ã—à–∏")
    elif message.text == 'üñ± –ü–ö–ú':
        pyautogui.rightClick()
        bot.send_message(message.chat.id, "‚úÖ –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –º—ã—à–∏")
    elif message.text == 'üîÑ –î–≤–æ–π–Ω–æ–π':
        pyautogui.doubleClick()
        bot.send_message(message.chat.id, "‚úÖ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫")
    elif message.text == 'üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç':
        take_screenshot(message.chat.id)
    elif message.text == 'üñ± –°–∫—Ä–æ–ª–ª ‚ñ≤':
        pyautogui.scroll(SCROLL_SPEED)
        bot.send_message(message.chat.id, "‚¨ÜÔ∏è –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö")
    elif message.text == 'üñ± –°–∫—Ä–æ–ª–ª ‚ñº':
        pyautogui.scroll(-SCROLL_SPEED)
        bot.send_message(message.chat.id, "‚¨áÔ∏è –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑")
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    elif message.text == '‚èé Enter':
        pyautogui.press('enter')
        bot.send_message(message.chat.id, "‚úÖ –ù–∞–∂–∞—Ç Enter")
    elif message.text == '‚éã Esc':
        pyautogui.press('escape')
        bot.send_message(message.chat.id, "‚úÖ –ù–∞–∂–∞—Ç Escape")
    elif message.text == '‚ê£ Space':
        pyautogui.press('space')
        bot.send_message(message.chat.id, "‚úÖ –ù–∞–∂–∞—Ç –ü—Ä–æ–±–µ–ª")
    elif message.text == '‚å®Ô∏è Tab':
        pyautogui.press('tab')
        bot.send_message(message.chat.id, "‚úÖ –ù–∞–∂–∞—Ç Tab")
    elif message.text == 'üìã –í—Å—Ç–∞–≤–∏—Ç—å':
        pyautogui.hotkey('ctrl', 'v')
        bot.send_message(message.chat.id, "‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–æ –∏–∑ –±—É—Ñ–µ—Ä–∞")
    elif message.text == '‚úÇÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å':
        pyautogui.hotkey('ctrl', 'c')
        bot.send_message(message.chat.id, "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä")
    elif message.text == 'üîç –ü–æ–∏—Å–∫':
        pyautogui.hotkey('ctrl', 'f')
        bot.send_message(message.chat.id, "‚úÖ –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    elif message.text == 'üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞':
        os.system("rundll32.exe user32.dll,LockWorkStation")
        bot.send_message(message.chat.id, "üîí –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    elif message.text == 'üîÖ –Ø—Ä–∫–æ—Å—Ç—å +':
        bot.send_message(message.chat.id, "üîÖ –Ø—Ä–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞")
    elif message.text == 'üîÖ –Ø—Ä–∫–æ—Å—Ç—å -':
        bot.send_message(message.chat.id, "üîÖ –Ø—Ä–∫–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∞")
    elif message.text == 'üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å +':
        pyautogui.press('volumeup')
        bot.send_message(message.chat.id, "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞")
    elif message.text == 'üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å -':
        pyautogui.press('volumedown')
        bot.send_message(message.chat.id, "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∞")
    elif message.text == 'üîá Mute':
        pyautogui.press('volumemute')
        bot.send_message(message.chat.id, "üîá –ó–≤—É–∫ –æ—Ç–∫–ª—é—á–µ–Ω")
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        send_welcome(message)

def show_cursor_controls(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    
    btn_up = types.KeyboardButton('‚¨ÜÔ∏è')
    btn_down = types.KeyboardButton('‚¨áÔ∏è')
    btn_left = types.KeyboardButton('‚¨ÖÔ∏è')
    btn_right = types.KeyboardButton('‚û°Ô∏è')
    
    btn_left_click = types.KeyboardButton('üñ± –õ–ö–ú')
    btn_right_click = types.KeyboardButton('üñ± –ü–ö–ú')
    btn_double_click = types.KeyboardButton('üîÑ –î–≤–æ–π–Ω–æ–π')
    
    btn_screenshot = types.KeyboardButton('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç')
    btn_scroll_up = types.KeyboardButton('üñ± –°–∫—Ä–æ–ª–ª ‚ñ≤')
    btn_scroll_down = types.KeyboardButton('üñ± –°–∫—Ä–æ–ª–ª ‚ñº')
    
    btn_back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
    
    markup.add(btn_up, btn_left_click, btn_screenshot)
    markup.add(btn_left, btn_down, btn_right)
    markup.add(btn_right_click, btn_double_click, btn_scroll_up)
    markup.add(btn_scroll_down, btn_back)
    
    bot.send_message(chat_id, 
                    "üñ± **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º:**\n\n"
                    "‚¨ÜÔ∏è‚¨áÔ∏è‚¨ÖÔ∏è‚û°Ô∏è - –î–≤–∏–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞\n"
                    "üñ± –õ–ö–ú - –õ–µ–≤—ã–π –∫–ª–∏–∫\n"
                    "üñ± –ü–ö–ú - –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫\n"
                    "üîÑ - –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫\n"
                    "üì∏ - –°–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞\n"
                    "üñ± –°–∫—Ä–æ–ª–ª - –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–æ–ª–µ—Å–∏–∫–æ–º\n"
                    "üîô - –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
                    reply_markup=markup,
                    parse_mode='Markdown')

def show_keyboard_controls(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    
    btn_enter = types.KeyboardButton('‚èé Enter')
    btn_escape = types.KeyboardButton('‚éã Esc')
    btn_space = types.KeyboardButton('‚ê£ Space')
    btn_tab = types.KeyboardButton('‚å®Ô∏è Tab')
    
    btn_paste = types.KeyboardButton('üìã –í—Å—Ç–∞–≤–∏—Ç—å')
    btn_copy = types.KeyboardButton('‚úÇÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å')
    btn_search = types.KeyboardButton('üîç –ü–æ–∏—Å–∫')
    
    btn_back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
    
    markup.add(btn_enter, btn_escape, btn_space)
    markup.add(btn_tab, btn_paste, btn_copy)
    markup.add(btn_search, btn_back)
    
    bot.send_message(chat_id,
                    "‚å®Ô∏è **–≠–º—É–ª—è—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:**\n\n"
                    "‚èé Enter - –ö–ª–∞–≤–∏—à–∞ Enter\n"
                    "‚éã Esc - –ö–ª–∞–≤–∏—à–∞ Escape\n"
                    "‚ê£ Space - –ö–ª–∞–≤–∏—à–∞ –ü—Ä–æ–±–µ–ª\n"
                    "‚å®Ô∏è Tab - –ö–ª–∞–≤–∏—à–∞ Tab\n"
                    "üìã - –í—Å—Ç–∞–≤–∏—Ç—å (Ctrl+V)\n"
                    "‚úÇÔ∏è - –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å (Ctrl+C)\n"
                    "üîç - –ü–æ–∏—Å–∫ (Ctrl+F)\n"
                    "üîô - –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                    reply_markup=markup,
                    parse_mode='Markdown')

def show_system_controls(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    
    btn_lock = types.KeyboardButton('üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞')
    btn_brightness_up = types.KeyboardButton('üîÖ –Ø—Ä–∫–æ—Å—Ç—å +')
    btn_brightness_down = types.KeyboardButton('üîÖ –Ø—Ä–∫–æ—Å—Ç—å -')
    
    btn_volume_up = types.KeyboardButton('üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å +')
    btn_volume_down = types.KeyboardButton('üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å -')
    btn_mute = types.KeyboardButton('üîá Mute')
    
    btn_back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
    
    markup.add(btn_lock, btn_brightness_up, btn_brightness_down)
    markup.add(btn_volume_up, btn_volume_down, btn_mute)
    markup.add(btn_back)
    
    bot.send_message(chat_id,
                    "üìä **–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n"
                    "üîí - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä\n"
                    "üîÖ - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç—å—é\n"
                    "üîä - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é\n"
                    "üîá - –û—Ç–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫\n"
                    "üîô - –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                    reply_markup=markup,
                    parse_mode='Markdown')

def handle_cursor_movement(chat_id, direction):
    try:
        if direction == '‚¨ÜÔ∏è':
            pyautogui.move(0, -CURSOR_SPEED)
        elif direction == '‚¨áÔ∏è':
            pyautogui.move(0, CURSOR_SPEED)
        elif direction == '‚¨ÖÔ∏è':
            pyautogui.move(-CURSOR_SPEED, 0)
        elif direction == '‚û°Ô∏è':
            pyautogui.move(CURSOR_SPEED, 0)
        
        x, y = pyautogui.position()
        bot.send_message(chat_id, f"‚úÖ –ö—É—Ä—Å–æ—Ä –ø–µ—Ä–µ–º–µ—â–µ–Ω {direction}\nüìç –ü–æ–∑–∏—Ü–∏—è: X={x}, Y={y}")
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è: {str(e)}")

def take_screenshot(chat_id):
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –µ—Å–ª–∏ –Ω–µ—Ç
        if not os.path.exists('screenshots'):
            os.makedirs('screenshots')
        
        screenshot = pyautogui.screenshot()
        screenshot_path = f"screenshots/screenshot_{int(time.time())}.png"
        screenshot.save(screenshot_path)
        
        with open(screenshot_path, 'rb') as photo:
            bot.send_photo(chat_id, photo, caption="üì∏ –¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω")
        
        bot.send_message(chat_id, f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {str(e)}")

if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print("üìç –¢–æ–∫–µ–Ω –±–æ—Ç–∞:", BOT_TOKEN)
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–æ–º –º—ã—à–∏")
    print("   - –ö–ª–∏–∫–∏ –∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥")
    print("   - –≠–º—É–ª—è—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
    print("   - –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
    print("   - –°–∫—Ä–∏–Ω—à–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞")
    print("\n‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("üìû –ò—â–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    
    try:
        bot.polling(none_stop=True, interval=0, timeout=60)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
