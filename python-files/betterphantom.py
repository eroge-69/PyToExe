import asyncio
import json
import os
from telethon import TelegramClient
from telethon.tl.types import User

# üîë –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
api_id = 29887802        # ‚Üê –∑–∞–º–µ–Ω–∏
api_hash = '266162f6d82817bbe4bd08f61065d120'
session_name = 'my_session'

# üßæ –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –ú–æ–∂–Ω–æ username –∏–ª–∏ ID –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
watched_users = ['ria_ssss', 'linaki_ss', 'vienny1', 'yo0o0ohohoh', 'saaskek', 'Natouto_real']  # –º–æ–∂–Ω–æ —Å–º–µ—à–∏–≤–∞—Ç—å

# üìÅ –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ-ID
DATA_FILE = 'profile_photos.json'

# üì® –ö–æ–º—É —Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ 'me' –∏–ª–∏ username)
notify_recipient = 'FuckTheCensorship'
message_template = "üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} —Å–º–µ–Ω–∏–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–æ—Ñ–∏–ª—è!"


def load_saved_photos():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as f:
            return json.load(f)
    return {}


def save_photos(photo_data):
    with open(DATA_FILE, 'w') as f:
        json.dump(photo_data, f)


async def get_photo_id(user: User):
    return getattr(user.photo, 'photo_id', None)


async def monitor_profiles():
    client = TelegramClient(session_name, api_id, api_hash)
    await client.start()

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
    saved_photos = load_saved_photos()
    updated = False

    # –ü–æ–ª—É—á–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    recipient = await client.get_entity(notify_recipient)

    print("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ñ–∏–ª–µ–π –∑–∞–ø—É—â–µ–Ω...")

    while True:
        for username in watched_users:
            try:
                user = await client.get_entity(username)
                user_id = str(user.id)
                new_photo_id = await get_photo_id(user)

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–º–µ–Ω—É
                old_photo_id = saved_photos.get(user_id)

                if new_photo_id != old_photo_id:
                    if old_photo_id is not None:
                        # –§–æ—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å!
                        msg = message_template.format(name=user.username or user.first_name)
                        await client.send_message(recipient, msg)
                        print(f"üì∏ {user.username or user.id} —Å–º–µ–Ω–∏–ª —Ñ–æ—Ç–æ ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                    else:
                        print(f"üÜï –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username or user.id} –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ.")

                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ
                    saved_photos[user_id] = new_photo_id
                    updated = True
                else:
                    print(f"‚úÖ {user.username or user.id}: —Ñ–æ—Ç–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {username}: {e}")

        # –û–±–Ω–æ–≤–∏–º —Ñ–∞–π–ª, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–º–µ–Ω—è–ª–æ—Å—å
        if updated:
            save_photos(saved_photos)
            updated = False

        await asyncio.sleep(30)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥


if __name__ == '__main__':
    asyncio.run(monitor_profiles())