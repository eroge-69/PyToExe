import sys
import threading
import time
import webbrowser
from PySide6.QtWidgets import (QApplication, QMainWindow, QWidget, QVBoxLayout,
                               QHBoxLayout, QPushButton, QTextEdit, QLabel,
                               QMessageBox, QFrame, QProgressBar)
from PySide6.QtCore import Qt, QThread, Signal, QTimer
from PySide6.QtGui import QFont, QTextCursor, QPalette, QColor
from main import app  # –í–∞—à Flask app


class FlaskServerThread(QThread):
    """–ü–æ—Ç–æ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask —Å–µ—Ä–≤–µ—Ä–∞"""
    log_signal = Signal(str)
    status_signal = Signal(bool)

    def __init__(self):
        super().__init__()
        self.is_running = True

    def run(self):
        """–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            self.log_signal.emit("–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞...")
            app.run(debug=False, host='0.0.0.0', port=5000, use_reloader=False)
        except Exception as e:
            self.log_signal.emit(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}")
        finally:
            self.is_running = False
            self.status_signal.emit(False)

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.is_running:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É Flask
            self.is_running = False
            self.terminate()
            self.wait()


class ModernFlaskController(QMainWindow):
    def __init__(self):
        super().__init__()
        self.server_thread = None
        self.is_running = False
        self.setup_ui()
        self.setup_styles()

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("Flask Application Controller - Modern")
        self.setGeometry(100, 100, 1000, 700)
        self.setMinimumSize(900, 600)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        layout = QVBoxLayout(central_widget)
        layout.setSpacing(10)
        layout.setContentsMargins(15, 15, 15, 15)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("Flask Application Controller")
        title_label.setAlignment(Qt.AlignCenter)
        title_label.setStyleSheet("""
            QLabel {
                font-size: 24px;
                font-weight: bold;
                color: #2c3e50;
                padding: 15px;
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #3498db, stop:1 #2c3e50);
                border-radius: 8px;
                color: white;
            }
        """)
        layout.addWidget(title_label)

        # –ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞
        self.setup_status_panel(layout)

        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.setup_control_panel(layout)

        # –ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π
        self.setup_log_panel(layout)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)
        layout.addWidget(self.progress_bar)

    def setup_status_panel(self, layout):
        """–ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞"""
        status_frame = QFrame()
        status_frame.setStyleSheet("""
            QFrame {
                background-color: #ecf0f1;
                border: 2px solid #bdc3c7;
                border-radius: 8px;
                padding: 10px;
            }
        """)
        status_layout = QHBoxLayout(status_frame)

        # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
        status_label = QLabel("–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:")
        status_label.setStyleSheet("font-weight: bold; font-size: 14px;")

        self.status_indicator = QLabel("‚óè")
        self.status_indicator.setStyleSheet("""
            QLabel {
                font-size: 20px;
                font-weight: bold;
                color: #e74c3c;
            }
        """)

        self.status_text = QLabel("–í—ã–∫–ª—é—á–µ–Ω–æ")
        self.status_text.setStyleSheet("font-size: 14px; color: #e74c3c; font-weight: bold;")

        status_layout.addWidget(status_label)
        status_layout.addWidget(self.status_indicator)
        status_layout.addWidget(self.status_text)
        status_layout.addStretch()

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
        info_label = QLabel("http://127.0.0.1:5000")
        info_label.setStyleSheet("""
            QLabel {
                background-color: #34495e;
                color: white;
                padding: 5px 10px;
                border-radius: 4px;
                font-family: monospace;
            }
        """)
        status_layout.addWidget(info_label)

        layout.addWidget(status_frame)

    def setup_control_panel(self, layout):
        """–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        control_frame = QFrame()
        control_frame.setStyleSheet("""
            QFrame {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                border-radius: 8px;
                padding: 15px;
            }
        """)
        control_layout = QHBoxLayout(control_frame)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.start_btn = self.create_button("‚ñ∂ –ó–∞–ø—É—Å–∫", "#27ae60", self.start_server)
        self.stop_btn = self.create_button("‚èπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞", "#e74c3c", self.stop_server, False)
        self.restart_btn = self.create_button("‚Üª –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", "#f39c12", self.restart_server, False)
        self.browser_btn = self.create_button("üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", "#3498db", self.open_browser)

        control_layout.addWidget(self.start_btn)
        control_layout.addWidget(self.stop_btn)
        control_layout.addWidget(self.restart_btn)
        control_layout.addWidget(self.browser_btn)
        control_layout.addStretch()

        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
        self.clear_btn = self.create_button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∂—É—Ä–Ω–∞–ª", "#95a5a6", self.clear_logs)
        control_layout.addWidget(self.clear_btn)

        layout.addWidget(control_frame)

    def setup_log_panel(self, layout):
        """–ü–∞–Ω–µ–ª—å –∂—É—Ä–Ω–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π"""
        log_frame = QFrame()
        log_frame.setStyleSheet("""
            QFrame {
                background-color: #2c3e50;
                border: 2px solid #34495e;
                border-radius: 8px;
                padding: 10px;
            }
        """)
        log_layout = QVBoxLayout(log_frame)

        log_label = QLabel("–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π:")
        log_label.setStyleSheet("color: #ecf0f1; font-weight: bold; font-size: 14px;")
        log_layout.addWidget(log_label)

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –ª–æ–≥–æ–≤
        self.log_text = QTextEdit()
        self.log_text.setReadOnly(True)
        self.log_text.setStyleSheet("""
            QTextEdit {
                background-color: #1a1a1a;
                color: #00ff00;
                font-family: 'Courier New', monospace;
                font-size: 12px;
                border: 1px solid #34495e;
                border-radius: 4px;
                padding: 8px;
            }
        """)
        log_layout.addWidget(self.log_text)

        layout.addWidget(log_frame)

    def create_button(self, text, color, callback, enabled=True):
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É"""
        button = QPushButton(text)
        button.setEnabled(enabled)
        button.clicked.connect(callback)
        button.setStyleSheet(f"""
            QPushButton {{
                background-color: {color};
                color: white;
                border: none;
                padding: 10px 15px;
                font-weight: bold;
                border-radius: 5px;
                min-width: 120px;
            }}
            QPushButton:hover {{
                background-color: {self.darken_color(color)};
            }}
            QPushButton:disabled {{
                background-color: #bdc3c7;
                color: #7f8c8d;
            }}
            QPushButton:pressed {{
                background-color: {self.darken_color(color, 40)};
            }}
        """)
        return button

    def darken_color(self, color, percent=20):
        """–ó–∞—Ç–µ–º–Ω—è–µ—Ç —Ü–≤–µ—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç"""
        color = QColor(color)
        return color.darker(100 + percent).name()

    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QMainWindow {
                background-color: #ecf0f1;
            }
        """)

    def log(self, message):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∂—É—Ä–Ω–∞–ª"""
        timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
        log_entry = f"[{timestamp}] {message}"

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∂—É—Ä–Ω–∞–ª
        self.log_text.append(log_entry)

        # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        cursor = self.log_text.textCursor()
        cursor.movePosition(QTextCursor.End)
        self.log_text.setTextCursor(cursor)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        QApplication.processEvents()

    def start_server(self):
        """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
        if not self.is_running:
            self.show_progress(True)
            self.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")

            # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            self.server_thread = FlaskServerThread()
            self.server_thread.log_signal.connect(self.log)
            self.server_thread.status_signal.connect(self.server_status_changed)
            self.server_thread.start()

            # –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            QTimer.singleShot(1000, self.check_server_status)

    def stop_server(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.is_running and self.server_thread:
            self.log("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
            self.show_progress(True)
            self.server_thread.stop()
            self.is_running = False
            self.update_ui_state()

    def restart_server(self):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        self.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏...")
        self.stop_server()
        QTimer.singleShot(2000, self.delayed_restart)

    def delayed_restart(self):
        """–ó–∞–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"""
        self.start_server()

    def open_browser(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
        if self.is_running:
            try:
                webbrowser.open('http://127.0.0.1:5000')
                self.log("–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç: http://127.0.0.1:5000")
            except Exception as e:
                self.log(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: {str(e)}")
        else:
            self.show_warning("–°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω", "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
            self.log("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ")

    def server_status_changed(self, status):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        self.is_running = status
        self.show_progress(False)
        self.update_ui_state()

        if status:
            self.log("–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:5000")
            # –ê–≤—Ç–æ-–æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
            QTimer.singleShot(1000, self.auto_open_browser)
        else:
            self.log("–°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def check_server_status(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
        if self.server_thread and self.server_thread.isRunning():
            self.is_running = True
            self.update_ui_state()
            self.show_progress(False)

    def update_ui_state(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        if self.is_running:
            self.start_btn.setEnabled(False)
            self.stop_btn.setEnabled(True)
            self.restart_btn.setEnabled(True)
            self.status_indicator.setStyleSheet("color: #2ecc71; font-size: 20px; font-weight: bold;")
            self.status_text.setText("–ó–∞–ø—É—â–µ–Ω")
            self.status_text.setStyleSheet("color: #2ecc71; font-weight: bold; font-size: 14px;")
        else:
            self.start_btn.setEnabled(True)
            self.stop_btn.setEnabled(False)
            self.restart_btn.setEnabled(False)
            self.status_indicator.setStyleSheet("color: #e74c3c; font-size: 20px; font-weight: bold;")
            self.status_text.setText("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            self.status_text.setStyleSheet("color: #e74c3c; font-weight: bold; font-size: 14px;")

    def show_progress(self, show):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç/—Å–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        self.progress_bar.setVisible(show)
        if show:
            self.progress_bar.setRange(0, 0)  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å

    def auto_open_browser(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞"""
        if self.is_running:
            self.open_browser()

    def clear_logs(self):
        """–û—á–∏—Å—Ç–∫–∞ –∂—É—Ä–Ω–∞–ª–∞"""
        self.log_text.clear()
        self.log("–ñ—É—Ä–Ω–∞–ª –æ—á–∏—â–µ–Ω")

    def show_warning(self, title, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        QMessageBox.warning(self, title, message)

    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        if self.is_running:
            reply = QMessageBox.question(
                self,
                "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è",
                "–°–µ—Ä–≤–µ—Ä –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?",
                QMessageBox.Yes | QMessageBox.No,
                QMessageBox.No
            )

            if reply == QMessageBox.Yes:
                if self.server_thread:
                    self.server_thread.stop()
                event.accept()
            else:
                event.ignore()
        else:
            event.accept()


def main():
    app = QApplication(sys.argv)

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.setStyle('Fusion')

    window = ModernFlaskController()
    window.show()

    # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∂—É—Ä–Ω–∞–ª
    window.log("–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Flask –∑–∞–ø—É—â–µ–Ω–∞")
    window.log("–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ '–ó–∞–ø—É—Å–∫'")

    sys.exit(app.exec())


if __name__ == '__main__':
    main()