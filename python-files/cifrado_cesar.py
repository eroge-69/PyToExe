# -*- coding: utf-8 -*-
"""Cifrado_Cesar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/136QNjCa7PajqGf5aZ9JDdGhVCHHVr5MH
"""

import string

# Alfabeto con todos los caracteres imprimibles, incluyendo espacio
ALFABETO = string.printable  # letras, números, símbolos, espacios, etc.
LONGITUD = len(ALFABETO)

def cifrado_cesar(texto, desplazamiento, modo):
    resultado = ""
    for caracter in texto:
        if caracter in ALFABETO:
            indice = ALFABETO.index(caracter)
            if modo == "cifrar":
                nuevo_indice = (indice + desplazamiento) % LONGITUD
            elif modo == "descifrar":
                nuevo_indice = (indice - desplazamiento) % LONGITUD
            resultado += ALFABETO[nuevo_indice]
        else:
            resultado += caracter  # Si no está en ALFABETO, lo dejamos igual
    return resultado

def menu():
    print("\033[1;36m" + "="*30)
    print("    CIFRADO CÉSAR MEJORADO")
    print("="*30 + "\033[0m")
    while True:
        opcion = input("¿Deseas cifrar o descifrar el texto? (cifrar/descifrar): ").strip().lower()
        if opcion not in ["cifrar", "descifrar"]:
            print("\033[1;31mOpción no válida. Intenta de nuevo.\033[0m")
            continue

        texto_usuario = input("Introduce el texto: ")
        desplazamiento = 10  # Fijo según tu requerimiento
        resultado = cifrado_cesar(texto_usuario, desplazamiento, opcion)

        print(f"\033[1;32mTexto {opcion}ado: {resultado}\033[0m")

        repetir = input("¿Quieres procesar otro texto? (s/n): ").strip().lower()
        if repetir != "s":
            print("\033[1;34m¡Hasta luego!\033[0m")
            break

# Ejecutar programa
if __name__ == "__main__":
    menu()