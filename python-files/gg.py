import hid
import time
import re

# VID/PID UT61B+
VID = 0x1a86
PID = 0xe429

# –ü–∞–∫–µ—Ç—ã ‚Äî 64 –±–∞–π—Ç–∞ –ø–æ–ª–µ–∑–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
KEEP_ALIVE_DATA = [
    0x06, 0xab, 0xcd, 0x03, 0x5e, 0x01, 0xd9
] + [0x00] * 57  # –í—Å–µ–≥–æ 64 –±–∞–π—Ç–∞

ACTIVATE_S_DATA = [0xA0, 0x00, 0x20] + [0x00] * 5  # 64 –±–∞–π—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏: [Report ID] + –¥–∞–Ω–Ω—ã–µ ‚Üí –≤—Å–µ–≥–æ 65 –±–∞–π—Ç
def send_report(device, data, report_id=0):
    packet = [report_id] + list(data)
    if len(packet) < 65:
        packet += [0] * (65 - len(packet))
    device.write(packet)


def parse_data(data):
    try:
        raw = bytes(data)

        # –ò—â–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—É b'0  ' ‚Äî —ç—Ç–æ –Ω–∞—á–∞–ª–æ —á–∏—Å–ª–∞
        start_marker = b'\x30\x20\x20'  # "0  "
        start_idx = raw.find(start_marker)
        if start_idx == -1:
            return None

        # –ß–∏—Å–ª–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ "0  "
        value_start = start_idx + 3
        # –ë–µ—Ä—ë–º 7 –±–∞–π—Ç: –Ω–∞–ø—Ä–∏–º–µ—Ä, "3.71600"
        candidate = raw[value_start:value_start + 7]

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ "X.XXX" ‚Äî –ø–µ—Ä–≤—ã–µ 5 —Å–∏–º–≤–æ–ª–æ–≤
        number_str = candidate[:5].decode('ascii', errors='ignore')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç: —Ü–∏—Ñ—Ä–∞, —Ç–æ—á–∫–∞, —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã
        if re.match(r'\d\.\d{3}', number_str):
            # –ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è ‚Äî –∏—â–µ–º –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
            unit = '?'
            if b'V=' in raw or b'V~' in raw:
                unit = 'V'
            elif b'A=' in raw or b'A~' in raw:
                unit = 'A'
            elif b'OHM' in raw or b'\xa9' in raw:  # \xa9 = Œ© –≤ CP866
                unit = 'Œ©'
            elif b'F' in raw:
                unit = 'F'

            return f"üìä {number_str} {unit}"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ OL (–ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞)
        if b'OL' in raw:
            unit = 'V' if b'V' in raw else 'A' if b'A' in raw else 'Œ©' if b'\xa9' in raw else '?'
            return f"‚ö†Ô∏è OL {unit}"

        return None

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        return None


def main():
    print("üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ UT61B+...")
    try:
        h = hid.device()
        h.open(VID, PID)
        h.set_nonblocking(True)
        print("‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç–æ.")

        print("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º keep-alive –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—é —Å Report ID = 0
        send_report(h, KEEP_ALIVE_DATA)
        time.sleep(0.1)

        send_report(h, KEEP_ALIVE_DATA)
        time.sleep(0.1)

        send_report(h, ACTIVATE_S_DATA)
        time.sleep(0.5)

        send_report(h, KEEP_ALIVE_DATA)
        time.sleep(0.1)

        print("üì° –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö... (–¥–æ–ª–∂–µ–Ω –≥–æ—Ä–µ—Ç—å 'S')")
        print("-" * 60)

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ —á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        for _ in range(500):  # ~1 –º–∏–Ω—É—Ç–∞
            send_report(h, KEEP_ALIVE_DATA)  # Keep-alive –∫–∞–∂–¥—ã–µ 110 –º—Å
            data = h.read(64, timeout_ms=300)  # –ß–∏—Ç–∞–µ–º 64 –±–∞–π—Ç–∞
            if data:
                result = parse_data(data)
                if result and "üì°" not in result:
                    print(result)
                elif result:
                    print(".", end="", flush=True)  # –í–∏–∑—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
            time.sleep(0.11)  # –û–±—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª ~110 –º—Å

    except Exception as ex:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {ex}")
    finally:
        if 'h' in locals():
            h.close()
            print("\nüîå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    main()
