import tkinter as tk
from tkinter import PhotoImage
import pygame
import threading
import numpy as np
import time

def play_train_horn():
    """–°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –≥—Ä–æ–º–∫–∏–π –≥—É–¥–æ–∫ –ø–∞—Ä–æ–≤–æ–∑–∞"""
    try:
        pygame.mixer.init(frequency=44100, size=-16, channels=2, buffer=1024)
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≥—Ä–æ–º–∫–æ–≥–æ –≥—É–¥–∫–∞
        duration = 3.0  # 3 —Å–µ–∫—É–Ω–¥—ã
        sample_rate = 44100
        t = np.linspace(0, duration, int(sample_rate * duration), False)
        
        # –°–æ–∑–¥–∞–µ–º –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –≥—É–¥–æ–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ —á–∞—Å—Ç–æ—Ç–∞–º–∏
        freq1 = 180  # –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∏–∑–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞
        freq2 = 220  # –í—Ç–æ—Ä–∞—è –≥–∞—Ä–º–æ–Ω–∏–∫–∞
        freq3 = 280  # –¢—Ä–µ—Ç—å—è –≥–∞—Ä–º–æ–Ω–∏–∫–∞
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–Ω—ã
        tone1 = 0.7 * np.sin(2 * np.pi * freq1 * t)
        tone2 = 0.5 * np.sin(2 * np.pi * freq2 * t)
        tone3 = 0.3 * np.sin(2 * np.pi * freq3 * t)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–±—Ä–∞—Ü–∏—é –∏ –º–æ–¥—É–ª—è—Ü–∏—é
        vibrato = 0.2 * np.sin(2 * np.pi * 6 * t)  # –í–∏–±—Ä–∞—Ü–∏—è 6 Hz
        envelope = np.minimum(t / 0.5, 1.0) * np.minimum((duration - t) / 0.8, 1.0)  # –û–≥–∏–±–∞—é—â–∞—è
        
        # –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        audio_signal = (tone1 + tone2 + tone3 + vibrato) * envelope
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
        audio_signal = audio_signal * 0.8
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç–µ—Ä–µ–æ
        stereo_signal = np.column_stack([audio_signal, audio_signal])
        audio_data = np.int16(stereo_signal * 32767)
        
        # –°–æ–∑–¥–∞–µ–º –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
        sound = pygame.sndarray.make_sound(audio_data)
        sound.set_volume(1.0)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å
        sound.play()
        
        # –ñ–¥–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–≤—É–∫–∞
        time.sleep(duration)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞: {e}")
        # –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —á–µ—Ä–µ–∑ winsound
        try:
            import winsound
            for _ in range(2):
                winsound.Beep(200, 800)
                time.sleep(0.2)
        except:
            print("üöÇ –¢–£-–¢–£–£–£! –ì–£–î–û–ö! üöÇ")

def create_train_image():
    """–°–æ–∑–¥–∞–µ—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞—Ä–æ–≤–æ–∑–∞"""
    root = tk.Tk()
    root.title("–ü–∞—Ä–æ–≤–æ–∑!")
    
    # –î–µ–ª–∞–µ–º –æ–∫–Ω–æ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω
    root.attributes('-topmost', True)
    root.overrideredirect(True)  # –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É –æ–∫–Ω–∞
    
    # –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–≤–æ–∑–∞
    canvas = tk.Canvas(root, width=600, height=400, bg='lightblue', highlightthickness=0)
    canvas.pack()
    
    # –†–∏—Å—É–µ–º –Ω–µ–±–æ
    canvas.create_rectangle(0, 0, 600, 250, fill='skyblue', outline='')
    
    # –†–∏—Å—É–µ–º –∑–µ–º–ª—é
    canvas.create_rectangle(0, 250, 600, 400, fill='green', outline='')
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ—Ä–ø—É—Å –ø–∞—Ä–æ–≤–æ–∑–∞
    canvas.create_rectangle(80, 180, 450, 230, fill='darkred', outline='black', width=3)
    
    # –ö–æ—Ç–µ–ª
    canvas.create_oval(100, 140, 250, 230, fill='black', outline='gray', width=2)
    
    # –ë–æ–ª—å—à–∞—è —Ç—Ä—É–±–∞
    canvas.create_rectangle(160, 80, 190, 140, fill='black')
    canvas.create_rectangle(155, 70, 195, 80, fill='gray')
    
    # –ö–∞–±–∏–Ω–∞ –º–∞—à–∏–Ω–∏—Å—Ç–∞
    canvas.create_rectangle(350, 130, 440, 230, fill='brown', outline='black', width=2)
    canvas.create_rectangle(370, 150, 420, 190, fill='lightblue')  # –û–∫–Ω–æ
    
    # –ö–æ–ª–µ—Å–∞ —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
    wheel_positions = [(150, 220), (250, 220), (350, 220), (400, 220)]
    for x, y in wheel_positions:
        canvas.create_oval(x-30, y-30, x+30, y+30, fill='black', outline='silver', width=3)
        canvas.create_oval(x-20, y-20, x+20, y+20, fill='', outline='gray', width=2)
        canvas.create_line(x-30, y, x+30, y, fill='darkgray', width=2)
        canvas.create_line(x, y-30, x, y+30, fill='darkgray', width=2)
    
    # –î—ã–º –∏–∑ —Ç—Ä—É–±—ã
    smoke_colors = ['#666666', '#888888', '#AAAAAA', '#CCCCCC']
    smoke_sizes = [40, 50, 60, 45]
    smoke_y_positions = [40, 20, 10, 30]
    
    for i in range(4):
        canvas.create_oval(150 + i*10, smoke_y_positions[i], 
                          150 + i*10 + smoke_sizes[i], smoke_y_positions[i] + smoke_sizes[i],
                          fill=smoke_colors[i], outline='')
    
    # –ü–∞—Ä –∏–∑-–ø–æ–¥ –∫–æ–ª–µ—Å
    for x in [120, 220, 320, 370]:
        canvas.create_oval(x-15, 260, x+15, 280, fill='white', outline='')
        canvas.create_oval(x-10, 270, x+10, 290, fill='white', outline='')
    
    # –ù–∞–¥–ø–∏—Å—å
    canvas.create_text(300, 50, text="üöÇ –ü–ê–†–û–í–û–ó! –¢–£-–¢–£–£–£! üöÇ", 
                      font=('Arial', 18, 'bold'), 
                      fill='darkblue')
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    canvas.create_text(300, 350, text="–ó–∞–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥", 
                      font=('Arial', 10), 
                      fill='darkgreen')
    
    # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    root.update_idletasks()
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    window_width = root.winfo_width()
    window_height = root.winfo_height()
    
    x = (screen_width - window_width) // 2
    y = (screen_height - window_height) // 2
    
    root.geometry(f"+{x}+{y}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–≤—É–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    sound_thread = threading.Thread(target=play_train_horn)
    sound_thread.daemon = True
    sound_thread.start()
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    root.after(5000, root.destroy)
    
    root.mainloop()

if __name__ == "__main__":
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º pygame
    try:
        pygame.init()
    except:
        pass
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä–æ–≤–æ–∑
    create_train_image()