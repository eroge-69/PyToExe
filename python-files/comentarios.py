# -*- coding: utf-8 -*-
"""COMENTARIOS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16M8v-tEgDlV9cg7gk2u1BV-YHfB7-wzb
"""

# @title LISTA COMENTARIOS

import pandas as pd
import numpy as np
import glob

# @markdown ### Cuidado con los espacis
revisar_segura="der p 23,Reference,IgE , HOMA,insulin,t3,t4, ANAs,calpro,genetic,magnesio, Zn , C3,C4,Citrulina,TEST DE AYUNO, pru p,NMO ,PCC,Can f, GH,inflixi,adalim,anti-ccp,NGS,cistatina,anti-Musk,Der p23" # @param {type:"string"}
revisar_segura=list(revisar_segura.split(','))
descartar_contiene="serologia,ultima regla,Hbc,HBs,ERRADICACION,1CFV1,FECHA DE LA INTERVENCIÓN,PCR de ETS,PCR ITS,PARA REALIZAR AL MENOS,pre hd,post hd,Errores de importación TURRIANO"# @param {type:"string"}
descartar_contiene=list(descartar_contiene.split(','))
descarta_coincide="*Control,*EGB,*artritis reumatoide,*control,*TASPE,PCR ETS,*artritis,*ITU,*Elevación de PSA,*pcr de citomegalovirus,*Descartar ITS.,*CONTROL,*STUI,*control tras tto,*Ca próstata,*STUI,*control PSA,*Perfil nutricional,*Control.,*postHD,*urea postHD"# @param {type:"string"}
descarta_coincide=list(descarta_coincide.split(','))

df_coment = pd.read_csv(glob.glob('/content/*.csv')[0],encoding='latin-1',sep=';')
# Quita los ultimos 6 comentarios que son pagina y mierda
df_coment = df_coment.iloc[:-6]

# Create a copy to avoid modifying the original DataFrame
df_coment = df_coment.dropna(subset='Número')
df_coment['Comentario'] = np.nan

# Cambia numero a numerico y si falla, lo pasa a comentario
for index, value in df_coment['Número'].items():
    try:
        df_coment.loc[index, 'Número'] = pd.to_numeric(value)
    except (ValueError, TypeError):
        # If conversion fails, move the value to the 'comentario' column
        df_coment.loc[index, 'Comentario'] = value
        df_coment.loc[index, 'Número'] = np.nan # or some other default value

# Mueve los comentarios uno para arriba
df_coment['Comentario']=df_coment['Comentario'].shift(-1)
df_coment=df_coment.dropna(how='all')

# hace un bucle en el que si hay algun comentario sin numero, se lo añade al anterior
while ~(df_coment['Número'].isna().value_counts()[False]==len(df_coment['Número'])):
  elim=[]
  for ind, value in enumerate(df_coment['Número']):
    if ~(value>0):
      if df_coment.iloc[ind-1,0]>0:
        df_coment.iloc[ind-1,5]=df_coment.iloc[ind-1,5]+' '+df_coment.iloc[ind,5]
        df_coment=df_coment.drop(df_coment.index[ind], axis=0)

# Indices recoge todas las filas que se han ido recogiendo en cada una de las lsitas, para excluirlas de la lista final para revisar
indices=[]

# Lista de descartar_contiene
Descartar_contiene=pd.DataFrame()
for i in descartar_contiene:
  contiene=df_coment[df_coment['Comentario'].str.contains(i, na=False, case=False)][['Número','Comentario']]
  indices.append(contiene.index)
  contiene.index=[i for x in range(len(contiene))]
  Descartar_contiene = pd.concat([Descartar_contiene, contiene], axis=0)
Descartar_contiene

# Lista de descartar_coincide
Descartar_coincide=pd.DataFrame()
for i in descarta_coincide:
  coincide=df_coment[df_coment['Comentario']==i][['Número','Comentario']]
  indices.append(coincide.index)
  coincide.index=[i for x in range(len(coincide))]
  Descartar_coincide = pd.concat([Descartar_coincide, coincide], axis=0)
Descartar_coincide

# Combina coincide y contiene en DESCARTA
Descartar= pd.concat([Descartar_coincide, Descartar_contiene], axis=0)
Descartar=Descartar.drop_duplicates(subset=['Número'])
Descartar.to_csv('DESCARTAR.txt',sep='\t', index=True)
Descartar

# Lista de muestras a revisar
Revisar_seguro=pd.DataFrame()
for i in revisar_segura:
  coinc=df_coment[df_coment['Comentario'].str.contains(i, na=False, case=False)][['Número','Comentario']]
  indices.append(coinc.index)
  coinc.index=[i for x in range(len(coinc))]
  Revisar_seguro = pd.concat([Revisar_seguro, coinc], axis=0).sort_index()
Revisar_seguro=Revisar_seguro.drop_duplicates(subset=['Número'])
Revisar_seguro['Número'].to_csv('REVISAR SEGURO.txt', sep='\t', index=False)


# Lista revisar
indices=[item for sublist in indices for item in sublist]
Revisar=df_coment.drop(indices, axis=0)
Revisar[['Número','Comentario']].to_csv('REVISAR.txt', sep='\t', index=False)

Revisar_seguro