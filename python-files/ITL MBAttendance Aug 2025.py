{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b190c008-16d6-407f-b3bb-10ee50acc059",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Excel file 'attendance.xlsx' already exists. No changes made.\n",
      "Semester 1 Attendance Records:\n",
      "Roll No\tName\tAttendance\t10-09-2025 (FN)\n",
      "1\tANSHUL CHOUDHARY\tPresent\t0.5\n",
      "2\tARNAB PANDIT\t\t0\n",
      "3\tARPIT VISHWAKARMA\t\t0.5\n",
      "4\tARUNDHUTI BOSE\t\t0\n",
      "5\tARYAJEET\t\t0\n",
      "6\tASHISH RANJAN SINGH\t\t0.5\n",
      "7\tBHASKAR CHATTERJEE\t\t0.5\n",
      "8\tBHUMIREDDY GOPALA KRISHNA REDDY\t\t0.5\n",
      "9\tDEWANSHU DHOTE\t\t0.5\n",
      "10\tDWARAPUREDDY CHALAPATHI\t\t0\n",
      "11\tE R AMARNATH\t\t0\n",
      "12\tHARSHVARDHAN SHARMA\t\t0.5\n",
      "13\tJ ASHISH VAISHNAV\t\t0.5\n",
      "14\tMD BASSHAR MASOOD\t\t0.5\n",
      "15\tMUKILAN V\t\t0.5\n",
      "16\tNISHIT DEEP\t\t0.5\n",
      "17\tPRAMIT ADHIKARY\t\t0\n",
      "18\tPRIYANSHU CHOWDHURY\t\t0.5\n",
      "19\tPURNIMA SAHOO\t\t0.5\n",
      "20\tRAMAN KUMAR\t\t0\n",
      "21\tRIZUL JAWLA\t\t0\n",
      "22\tSAI MIHIR\t\t0.5\n",
      "23\tKAASHYAP YEDITHA\t\t0.5\n",
      "24\tSHIVAM KUMAR GIRI\t\t0.5\n",
      "25\tSHUBHAM KUMAR GAURAV\t\t0.5\n",
      "26\tSONAI MANDAL\t\t0.5\n",
      "27\tSOUBHAB NASKAR\t\t0.5\n",
      "28\tSOUMI MANDAL\t\t0\n",
      "29\tSOUMITA GHOSAL\t\t0.5\n",
      "30\tVAIBHAB PANDEY\t\t0.5\n",
      "\n",
      "Semester 1 Attendance Percentage:\n",
      "ANSHUL CHOUDHARY: 33.33% ***\n",
      "ARNAB PANDIT: 0.00% ***\n",
      "ARPIT VISHWAKARMA: 33.33% ***\n",
      "ARUNDHUTI BOSE: 0.00% ***\n",
      "ARYAJEET: 0.00% ***\n",
      "ASHISH RANJAN SINGH: 33.33% ***\n",
      "BHASKAR CHATTERJEE: 33.33% ***\n",
      "BHUMIREDDY GOPALA KRISHNA REDDY: 33.33% ***\n",
      "DEWANSHU DHOTE: 33.33% ***\n",
      "DWARAPUREDDY CHALAPATHI: 0.00% ***\n",
      "E R AMARNATH: 0.00% ***\n",
      "HARSHVARDHAN SHARMA: 33.33% ***\n",
      "J ASHISH VAISHNAV: 33.33% ***\n",
      "MD BASSHAR MASOOD: 33.33% ***\n",
      "MUKILAN V: 33.33% ***\n",
      "NISHIT DEEP: 33.33% ***\n",
      "PRAMIT ADHIKARY: 0.00% ***\n",
      "PRIYANSHU CHOWDHURY: 33.33% ***\n",
      "PURNIMA SAHOO: 33.33% ***\n",
      "RAMAN KUMAR: 0.00% ***\n",
      "RIZUL JAWLA: 0.00% ***\n",
      "SAI MIHIR: 33.33% ***\n",
      "KAASHYAP YEDITHA: 33.33% ***\n",
      "SHIVAM KUMAR GIRI: 33.33% ***\n",
      "SHUBHAM KUMAR GAURAV: 33.33% ***\n",
      "SONAI MANDAL: 33.33% ***\n",
      "SOUBHAB NASKAR: 33.33% ***\n",
      "SOUMI MANDAL: 0.00% ***\n",
      "SOUMITA GHOSAL: 33.33% ***\n",
      "VAIBHAB PANDEY: 33.33% ***\n",
      "\n",
      "Marking Legend:\n",
      "***: Attendance < 75%\n",
      "**: Attendance >= 75% but < 80%\n",
      "*: Attendance >= 80% but < 85%\n",
      "Semester 3 Attendance Records:\n",
      "Roll No\tName\tAttendance\n",
      "1\tAashim Sultan\t\n",
      "2\tAddyashasha Mishra\t\n",
      "3\tAjay A\t\n",
      "4\tAmal Eugine\t\n",
      "5\tAnjali Kumari\t\n",
      "6\tAshish Negi\t\n",
      "7\tDevarshi Bharti\t\n",
      "8\tHarsh Raj\t\n",
      "9\tHemant Raj\t\n",
      "10\tJitendra Kumar\t\n",
      "11\tJyotiraditya Malviya\t\n",
      "12\tMriganka Nad\t\n",
      "13\tNeha Bhandari\tAbsent\n",
      "14\tNilesh Kumar\t\n",
      "15\tNisha Haldar\t\n",
      "16\tNistha Dixit\t\n",
      "17\tPrince Anand\t\n",
      "18\tPrince Kr. Verma\t\n",
      "19\tRanjan Kumar\t\n",
      "20\tRohit Kumar\t\n",
      "21\tSappa Durga Jyotsna Sree\t\n",
      "22\tShipla J S Kumar\t\n",
      "23\tSneha Khati\t\n",
      "24\tSumit Kumar\t\n",
      "25\tSwapnajit Biswal\t\n",
      "26\tSweta Singh\t\n",
      "27\tTanmay Kr. Nayak\t\n",
      "28\tVinay Patidar\t\n",
      "29\tVishal Kr. Singh\t\n",
      "30\tAnisha Banerjee\t\n",
      "31\tMd. Fahim Hasan\t\n",
      "\n",
      "Semester 3 Attendance Percentage:\n",
      "Aashim Sultan: 0.00% ***\n",
      "Addyashasha Mishra: 0.00% ***\n",
      "Ajay A: 0.00% ***\n",
      "Amal Eugine: 0.00% ***\n",
      "Anjali Kumari: 0.00% ***\n",
      "Ashish Negi: 0.00% ***\n",
      "Devarshi Bharti: 0.00% ***\n",
      "Harsh Raj: 0.00% ***\n",
      "Hemant Raj: 0.00% ***\n",
      "Jitendra Kumar: 0.00% ***\n",
      "Jyotiraditya Malviya: 0.00% ***\n",
      "Mriganka Nad: 0.00% ***\n",
      "Neha Bhandari: 0.00% ***\n",
      "Nilesh Kumar: 0.00% ***\n",
      "Nisha Haldar: 0.00% ***\n",
      "Nistha Dixit: 0.00% ***\n",
      "Prince Anand: 0.00% ***\n",
      "Prince Kr. Verma: 0.00% ***\n",
      "Ranjan Kumar: 0.00% ***\n",
      "Rohit Kumar: 0.00% ***\n",
      "Sappa Durga Jyotsna Sree: 0.00% ***\n",
      "Shipla J S Kumar: 0.00% ***\n",
      "Sneha Khati: 0.00% ***\n",
      "Sumit Kumar: 0.00% ***\n",
      "Swapnajit Biswal: 0.00% ***\n",
      "Sweta Singh: 0.00% ***\n",
      "Tanmay Kr. Nayak: 0.00% ***\n",
      "Vinay Patidar: 0.00% ***\n",
      "Vishal Kr. Singh: 0.00% ***\n",
      "Anisha Banerjee: 0.00% ***\n",
      "Md. Fahim Hasan: 0.00% ***\n",
      "\n",
      "Marking Legend:\n",
      "***: Attendance < 75%\n",
      "**: Attendance >= 75% but < 80%\n",
      "*: Attendance >= 80% but < 85%\n"
     ]
    }
   ],
   "source": [
    "import openpyxl\n",
    "from openpyxl import Workbook\n",
    "from datetime import datetime\n",
    "import tkinter as tk\n",
    "from tkinter import ttk, messagebox, filedialog\n",
    "import os\n",
    "import platform\n",
    "import subprocess\n",
    "\n",
    "\n",
    "# Function to initialize the Excel file\n",
    "def initialize_excel(file_name, semester_1_students, semester_3_students):\n",
    "    try:\n",
    "        if os.path.exists(file_name):\n",
    "            print(f\"Excel file '{file_name}' already exists. No changes made.\")\n",
    "            return\n",
    "        else:\n",
    "            workbook = Workbook()\n",
    "\n",
    "            # Remove the default \"Sheet\"\n",
    "            default_sheet = workbook.active\n",
    "            workbook.remove(default_sheet)\n",
    "\n",
    "            sheet_semester_1 = workbook.create_sheet(title=\"Semester 1\")\n",
    "            sheet_semester_3 = workbook.create_sheet(title=\"Semester 3\")\n",
    "\n",
    "            for row, student in enumerate(semester_1_students, start=2):\n",
    "                sheet_semester_1.cell(row=row, column=1, value=student)\n",
    "\n",
    "            for row, student in enumerate(semester_3_students, start=2):\n",
    "                sheet_semester_3.cell(row=row, column=1, value=student)\n",
    "\n",
    "            sheet_semester_1.cell(row=1, column=1, value=\"Student/Date\")\n",
    "            sheet_semester_3.cell(row=1, column=1, value=\"Student/Date\")\n",
    "\n",
    "            workbook.save(file_name)\n",
    "            print(f\"Excel file '{file_name}' initialized successfully.\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error initializing Excel file: {e}\")\n",
    "\n",
    "\n",
    "# Function to record attendance\n",
    "def record_attendance(file_name, semester_1_students, semester_3_students, semester_choice):\n",
    "    try:\n",
    "        workbook = openpyxl.load_workbook(file_name)\n",
    "        if semester_choice == \"Semester 1\":\n",
    "            sheet = workbook[\"Semester 1\"]\n",
    "            students = semester_1_students\n",
    "        elif semester_choice == \"Semester 3\":\n",
    "            sheet = workbook[\"Semester 3\"]\n",
    "            students = semester_3_students\n",
    "        else:\n",
    "            print(\"Invalid semester selected.\")\n",
    "            return\n",
    "\n",
    "        date = input(\"Enter the date for attendance (DD-MM-YYYY): \")\n",
    "        try:\n",
    "            datetime.strptime(date, \"%d-%m-%Y\")\n",
    "        except ValueError:\n",
    "            print(\"Invalid date format. Please use DD-MM-YYYY.\")\n",
    "            return\n",
    "\n",
    "        session = input(\"Is this attendance for Forenoon (F) or Afternoon (A)? \").strip().upper()\n",
    "        if session not in [\"F\", \"A\"]:\n",
    "            print(\"Invalid session choice. Please enter 'F' for Forenoon or 'A' for Afternoon.\")\n",
    "            return\n",
    "\n",
    "        session_label = \"FN\" if session == \"F\" else \"AN\"\n",
    "        existing_dates = [sheet.cell(row=1, column=col).value for col in range(2, sheet.max_column + 1)]\n",
    "        session_date_header = f\"{date} ({session_label})\"\n",
    "\n",
    "        if session_date_header in existing_dates:\n",
    "            print(f\"Attendance for {session_date_header} is already recorded.\")\n",
    "            return\n",
    "\n",
    "        col = sheet.max_column + 1\n",
    "        sheet.cell(row=1, column=col, value=session_date_header)\n",
    "\n",
    "        def get_valid_input():\n",
    "            while True:\n",
    "                try:\n",
    "                    value = float(input(\"Enter attendance (0 or 0.5): \"))\n",
    "                    if value in [0, 0.5]:\n",
    "                        return value\n",
    "                    else:\n",
    "                        print(\"Invalid input. Please enter either 0 or 0.5.\")\n",
    "                except ValueError:\n",
    "                    print(\"Invalid input. Please enter either 0 or 0.5.\")\n",
    "\n",
    "        for row, student in enumerate(students, start=2):\n",
    "            print(f\"Mark attendance for {student} on {date} ({session_label}):\")\n",
    "            attendance = get_valid_input()\n",
    "            sheet.cell(row=row, column=col, value=attendance)\n",
    "\n",
    "        workbook.save(file_name)\n",
    "        print(f\"Attendance for {session_date_header} recorded successfully in '{file_name}'.\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error recording attendance: {e}\")\n",
    "\n",
    "\n",
    "# Function to display attendance with percentages and markings\n",
    "def display_attendance(file_name, semester_1_students, semester_3_students, semester_choice):\n",
    "    try:\n",
    "        workbook = openpyxl.load_workbook(file_name)\n",
    "        if semester_choice == \"Semester 1\":\n",
    "            sheet = workbook[\"Semester 1\"]\n",
    "            students = semester_1_students\n",
    "        elif semester_choice == \"Semester 3\":\n",
    "            sheet = workbook[\"Semester 3\"]\n",
    "            students = semester_3_students\n",
    "        else:\n",
    "            print(\"Invalid semester selected.\")\n",
    "            return\n",
    "\n",
    "        attendance_data = []\n",
    "        attendance_data.append(f\"{sheet.title} Attendance Records:\")\n",
    "        for row in sheet.iter_rows(values_only=True):\n",
    "            attendance_data.append(\"\\t\".join(str(cell) if cell is not None else \"\" for cell in row))\n",
    "\n",
    "        attendance_data.append(f\"\\n{sheet.title} Attendance Percentage:\")\n",
    "        total_sessions = (sheet.max_column - 1)\n",
    "        max_attendance = total_sessions * 0.5\n",
    "\n",
    "        for row, student in enumerate(students, start=2):\n",
    "            total_attendance = 0\n",
    "            for col in range(2, sheet.max_column + 1):\n",
    "                value = sheet.cell(row=row, column=col).value\n",
    "                # Convert if string looks like a number\n",
    "                if isinstance(value, str):\n",
    "                    try:\n",
    "                        value = float(value)\n",
    "                    except ValueError:\n",
    "                        value = 0\n",
    "                if isinstance(value, (int, float)):\n",
    "                    total_attendance += value\n",
    "\n",
    "            percentage = (total_attendance / max_attendance) * 100 if max_attendance > 0 else 0\n",
    "\n",
    "            # Determine the marking\n",
    "            if percentage < 75:\n",
    "                mark = \"***\"\n",
    "            elif 75 <= percentage < 80:\n",
    "                mark = \"**\"\n",
    "            elif 80 <= percentage < 85:\n",
    "                mark = \"*\"\n",
    "            else:\n",
    "                mark = \"\"\n",
    "\n",
    "            attendance_data.append(f\"{student}: {percentage:.2f}% {mark}\")\n",
    "\n",
    "        # Legend\n",
    "        attendance_data.append(\"\\nMarking Legend:\")\n",
    "        attendance_data.append(\"***: Attendance < 75%\")\n",
    "        attendance_data.append(\"**: Attendance >= 75% but < 80%\")\n",
    "        attendance_data.append(\"*: Attendance >= 80% but < 85%\")\n",
    "\n",
    "        print(\"\\n\".join(attendance_data))\n",
    "\n",
    "        # Option to save and print\n",
    "        save_option = messagebox.askyesno(\"Save for Printing\", \"Do you want to save this data to a file for printing?\")\n",
    "        if save_option:\n",
    "            file_path = filedialog.asksaveasfilename(\n",
    "                defaultextension=\".txt\",\n",
    "                filetypes=[(\"Text Files\", \"*.txt\"), (\"All Files\", \"*.*\")]\n",
    "            )\n",
    "            if file_path:\n",
    "                with open(file_path, \"w\") as file:\n",
    "                    file.write(\"\\n\".join(attendance_data))\n",
    "                print(f\"Attendance data saved to {file_path}\")\n",
    "                print_option = messagebox.askyesno(\"Print\", \"Do you want to print this file?\")\n",
    "                if print_option:\n",
    "                    if platform.system() == \"Windows\":\n",
    "                        os.startfile(file_path, \"print\")\n",
    "                    elif platform.system() == \"Darwin\":  # macOS\n",
    "                        subprocess.run([\"lp\", file_path])\n",
    "                    elif platform.system() == \"Linux\":\n",
    "                        subprocess.run([\"lpr\", file_path])\n",
    "                    else:\n",
    "                        print(\"Printing is not supported on this platform.\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error displaying attendance: {e}\")\n",
    "\n",
    "\n",
    "# Function to handle the GUI interaction\n",
    "def on_menu_select(event, file_name, semester_1_students, semester_3_students, semester_choice):\n",
    "    choice = menu_var.get()\n",
    "    if choice == \"Record Attendance\":\n",
    "        record_attendance(file_name, semester_1_students, semester_3_students, semester_choice)\n",
    "    elif choice == \"Display Attendance\":\n",
    "        display_attendance(file_name, semester_1_students, semester_3_students, semester_choice)\n",
    "    elif choice == \"Exit\":\n",
    "        root.quit()\n",
    "\n",
    "\n",
    "# Function to prompt the user to select the semester\n",
    "def on_semester_select(event):\n",
    "    global semester_choice\n",
    "    semester_choice = semester_menu_var.get()\n",
    "\n",
    "\n",
    "# Main function\n",
    "def main():\n",
    "    global semester_choice\n",
    "    semester_choice = None  # Initialize\n",
    "\n",
    "    file_name = \"attendance.xlsx\"\n",
    "\n",
    "    semester_1_students = [\n",
    "        \"ANSHUL CHOUDHARY\", \"ARNAB PANDIT\", \"ARPIT VISHWAKARMA\", \"ARUNDHUTI BOSE\", \"ARYAJEET\",\n",
    "        \"ASHISH RANJAN SINGH\", \"BHASKAR CHATTERJEE\", \"BHUMIREDDY GOPALA KRISHNA REDDY\", \"DEWANSHU DHOTE\",\n",
    "        \"DWARAPUREDDY CHALAPATHI\", \"E R AMARNATH\", \"HARSHVARDHAN SHARMA\", \"J ASHISH VAISHNAV\",\n",
    "        \"MD BASSHAR MASOOD\", \"MUKILAN V\", \"NISHIT DEEP\", \"PRAMIT ADHIKARY\", \"PRIYANSHU CHOWDHURY\",\n",
    "        \"PURNIMA SAHOO\", \"RAMAN KUMAR\", \"RIZUL JAWLA\", \"SAI MIHIR\", \"KAASHYAP YEDITHA\", \"SHIVAM KUMAR GIRI\",\n",
    "        \"SHUBHAM KUMAR GAURAV\", \"SONAI MANDAL\", \"SOUBHAB NASKAR\", \"SOUMI MANDAL\", \"SOUMITA GHOSAL\",\n",
    "        \"VAIBHAB PANDEY\"\n",
    "    ]\n",
    "\n",
    "    semester_3_students = [\n",
    "        \"Aashim Sultan\", \"Addyashasha Mishra\", \"Ajay A\", \"Amal Eugine\", \"Anjali Kumari\",\n",
    "        \"Ashish Negi\", \"Devarshi Bharti\", \"Harsh Raj\", \"Hemant Raj\", \"Jitendra Kumar\",\n",
    "        \"Jyotiraditya Malviya\", \"Mriganka Nad\", \"Neha Bhandari\", \"Nilesh Kumar\", \"Nisha Haldar\",\n",
    "        \"Nistha Dixit\", \"Prince Anand\", \"Prince Kr. Verma\", \"Ranjan Kumar\", \"Rohit Kumar\",\n",
    "        \"Sappa Durga Jyotsna Sree\", \"Shipla J S Kumar\", \"Sneha Khati\", \"Sumit Kumar\",\n",
    "        \"Swapnajit Biswal\", \"Sweta Singh\", \"Tanmay Kr. Nayak\", \"Vinay Patidar\", \"Vishal Kr. Singh\",\n",
    "        \"Anisha Banerjee\", \"Md. Fahim Hasan\"\n",
    "    ]\n",
    "\n",
    "    initialize_excel(file_name, semester_1_students, semester_3_students)\n",
    "\n",
    "    global root\n",
    "    root = tk.Tk()\n",
    "    root.title(\"Attendance Management System\")\n",
    "\n",
    "    global semester_menu_var\n",
    "    semester_menu_var = tk.StringVar()\n",
    "    semester_menu = ttk.Combobox(\n",
    "        root, textvariable=semester_menu_var,\n",
    "        values=[\"Semester 1\", \"Semester 3\"], state=\"readonly\"\n",
    "    )\n",
    "    semester_menu.set(\"Select Semester\")\n",
    "    semester_menu.bind(\"<<ComboboxSelected>>\", on_semester_select)\n",
    "    semester_menu.pack(pady=10)\n",
    "\n",
    "    global menu_var\n",
    "    menu_var = tk.StringVar()\n",
    "    menu_var.set(\"Select Option\")\n",
    "    menu_menu = ttk.Combobox(\n",
    "        root, textvariable=menu_var,\n",
    "        values=[\"Record Attendance\", \"Display Attendance\", \"Exit\"], state=\"readonly\"\n",
    "    )\n",
    "    menu_menu.set(\"Select Option\")\n",
    "    menu_menu.bind(\n",
    "        \"<<ComboboxSelected>>\",\n",
    "        lambda event: on_menu_select(event, file_name, semester_1_students, semester_3_students, semester_choice)\n",
    "    )\n",
    "    menu_menu.pack(pady=10)\n",
    "\n",
    "    root.mainloop()\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a02a24c-5942-46bc-ab38-07449e48b665",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
