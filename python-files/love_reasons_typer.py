#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
love_reasons_typer.py
Консольное приложение для вывода "100 причин, почему я тебя люблю"
с эффектом "пишущей машинки". Совместимо с Python 3.10+.

Запуск:
    python love_reasons_typer.py
Параметры:
    --cps 25            # скорость печати, символов в секунду (по умолчанию 25)
    --pause 0.8         # пауза между причинами в секундах (по умолчанию 0.8)
    --title             # показать красивый заголовок перед выводом
    --numbered          # показывать нумерацию причин
    --shuffle           # перемешать порядок причин
    --loop              # показывать причины по кругу (Ctrl+C для выхода)
    --no-slow-punct     # не замедлять печать на знаках пунктуации
    --no-ask            # не спрашивать подтверждение перед стартом
"""

from __future__ import annotations
import sys
import time
import argparse
import random
import itertools
from typing import Iterable, List


def typeprint(text: str, cps: float = 25.0, slow_punct: bool = True) -> None:
    """
    Печатает строку посимвольно с эффектом печати.
    :param text: текст для печати
    :param cps: скорость (characters per second)
    :param slow_punct: делать дополнительные паузы на пунктуации
    """
    if cps <= 0:
        cps = 25.0
    base_delay = 1.0 / cps
    punct_extra = {
        ',': 0.015, '.': 0.050, '!': 0.060, '?': 0.060,
        ':': 0.030, ';': 0.030, '—': 0.035, '-': 0.015,
        ')': 0.010, '(': 0.010, '…': 0.080
    }
    for ch in text:
        sys.stdout.write(ch)
        sys.stdout.flush()
        delay = base_delay
        # небольшая случайная вариация "живого" набора
        delay *= random.uniform(0.85, 1.25)
        if slow_punct and ch in punct_extra:
            delay += punct_extra[ch]
        time.sleep(delay)
    sys.stdout.write('\n')
    sys.stdout.flush()


def banner() -> List[str]:
    return [
        "╔════════════════════════════════════════════════════╗",
        "║       100 причин, почему я тебя люблю, Тоня        ║",
        "╚════════════════════════════════════════════════════╝",
    ]


REASONS: List[str] = [
    "Ты – моя любимая причина просыпаться с улыбкой.",
    "Твой смех — лучший звук на свете.",
    "Рядом с тобой я становлюсь лучше.",
    "Ты умеешь поддержать меня в любой ситуации.",
    "Твои глаза сияют, когда ты счастлива.",
    "Ты веришь в меня, даже когда я сомневаюсь.",
    "Ты заботишься о близких с такой теплотой.",
    "С тобой даже молчание уютное.",
    "Ты вдохновляешь меня на большие цели.",
    "Твои объятия — мой самый спокойный дом.",
    "Ты умна и всегда стремишься к новому.",
    "Ты ценишь искренность и честность.",
    "Ты делаешь обыденные вещи особенными.",
    "Ты замечаешь мелочи, которые важны.",
    "С тобой я чувствую себя нужным.",
    "Ты умеешь слушать сердцем.",
    "Ты смеешься над моими шутками (даже странными).",
    "Твоя доброта делает мир лучше.",
    "Ты невероятно красива — внутри и снаружи.",
    "Ты разделяешь со мной мечты и планы.",
    "Ты вдохновляешь меня быть смелее.",
    "Твоё терпение учит меня мягкости.",
    "Ты не сдаёшься перед трудностями.",
    "Ты любишь жизнь и заражаешь этим меня.",
    "С тобой вкуснее и чай, и кофе, и тишина.",
    "Ты заботишься о нашем будущем.",
    "Ты уважаешь мои границы и желания.",
    "Ты принимаешь меня настоящего.",
    "Ты умеешь радоваться мелочам.",
    "Ты с любовью говоришь обо всём, что важно.",
    "Ты умеешь мечтать по‑крупному.",
    "Ты поддерживаешь мои идеи и начинания.",
    "С тобой хочется делиться всем.",
    "Ты даёшь мне чувство спокойствия.",
    "Ты делаешь меня сильнее своей верой.",
    "Ты умеешь красиво шутить и улыбаться глазами.",
    "Ты искренняя и светлая.",
    "Ты любишь животных и заботишься о них.",
    "Твои сообщения делают мой день лучше.",
    "Ты вдохновляешь меня на творчество.",
    "Твоё чувство вкуса безупречно.",
    "Ты умеешь признать ошибку и стать мудрее.",
    "Ты теплая — как плед в холодный вечер.",
    "Ты храбрая и нежная одновременно.",
    "Ты делаешь мир вокруг уютнее.",
    "Ты умеешь удивляться как ребёнок.",
    "Ты принимаешь мои странности.",
    "Ты любишь искренне и глубоко.",
    "С тобой я верю в чудеса.",
    "Ты умеешь находить свет в сложностях.",
    "С тобой легко быть собой.",
    "Ты из тех, с кем хочется строить дом.",
    "Твои поцелуи — магия.",
    "Ты умеешь говорить «пожалуйста» и «спасибо».",
    "Ты помнишь важные для меня даты и мелочи.",
    "Ты вдохновляешь меня заботиться о себе.",
    "Ты умеешь красиво мечтать о будущем.",
    "Ты — моё любимое «сейчас».",
    "Ты делаешь меня внимательнее к миру.",
    "Ты умеешь слушать и понимать без слов.",
    "Ты смешная, когда сердишься (немножко).",
    "Ты умеешь прощать.",
    "Ты делаешь меня счастливее каждый день.",
    "Твои планы — это всегда приключение.",
    "Ты умеешь нежно поддержать в нужный момент.",
    "Ты ценишь время, проведённое вместе.",
    "Ты способна на великое.",
    "Ты вдохновляешь меня идти вперёд.",
    "Ты красиво говоришь и пишешь.",
    "Ты обожаешь пробовать новое.",
    "Ты не боишься быть собой.",
    "Тебя хочется обнимать бесконечно.",
    "Ты — самый лучший человек которого я встречал.",
    "Ты заботишься о здоровье и благополучии.",
    "Твоя честность ясна и тёплая.",
    "Ты умеешь красиво смеяться над собой.",
    "Ты делаешь мир ярче просто своим присутствием.",
    "Ты умеешь слушать мечты других.",
    "Ты умеешь радоваться за меня и со мной.",
    "Ты — моё вдохновение и спокойствие.",
    "Ты удивительно чуткая.",
    "Твоё чувство юмора — золотое.",
    "Ты любишь традиции, которые мы создаём.",
    "Ты поддерживаешь мой рост и учишь меня терпению.",
    "Ты умеешь быть серьёзной и ребёнком одновременно.",
    "Ты видишь красоту там, где другие не замечают.",
    "Ты — моё самое любимое приключение.",
    "Ты не боишься говорить правду.",
    "Ты умеешь беречь себя и нас.",
    "Ты любишь искренне, без условий.",
    "Ты даришь свет и тепло.",
    "Ты ценишь семейные моменты.",
    "Ты — причина писать стихи и код.",
    "Ты умеешь делать большие дела маленькими шагами.",
    "Ты — мой «дом».",
    "Ты умеешь мечтать и действовать.",
    "Ты вдохновляешь меня быть благодарным.",
    "Ты поддерживаешь мою смелость и упрямство.",
    "С тобой всё становится на свои места.",
    "Ты делаешь каждый день особенным.",
    "Ты — чудо, которое случилось со мной.",
    "Ты — любовь всей моей жизни.",
    "Ты — ты. И этого уже достаточно.",
    "Я просто люблю тебя. Бесконечно.",
]


def confirm_start() -> bool:
    try:
        answer = input("Готова узнать 100 причин, почему я тебя люблю? (Enter — да / n — нет): ").strip().lower()
        return answer != 'n'
    except (EOFError, KeyboardInterrupt):
        return False


def main(argv: Iterable[str] | None = None) -> int:
    parser = argparse.ArgumentParser(description="Печатает 100 причин с эффектом печати.")
    parser.add_argument("--cps", type=float, default=25.0, help="скорость печати (символов в секунду)")
    parser.add_argument("--pause", type=float, default=0.8, help="пауза между причинами, сек")
    parser.add_argument("--title", action="store_true", default=True, help="показать заголовок (по умолчанию включено)")
    parser.add_argument("--numbered", action="store_true", default=True,
                        help="нумеровать причины (по умолчанию включено)")
    parser.add_argument("--shuffle", action="store_true", help="перемешать порядок причин")
    parser.add_argument("--loop", action="store_true", help="повторять по кругу (Ctrl+C для выхода)")
    parser.add_argument("--no-slow-punct", action="store_true", help="не замедлять печать на пунктуации")
    parser.add_argument("--no-ask", action="store_true", help="не спрашивать подтверждение перед стартом")
    args = parser.parse_args(list(argv) if argv is not None else None)

    if not args.no_ask and not confirm_start():
        print("Хорошо, в другой раз ❤️")
        return 0

    reasons = REASONS.copy()
    if args.shuffle:
        random.shuffle(reasons)

    sequences = itertools.repeat(reasons) if args.loop else [reasons]

    if args.title:
        for line in banner():
            typeprint(line, cps=max(args.cps * 1.5, 30), slow_punct=False)
        time.sleep(0.6)

    counter = 1
    try:
        for seq in sequences:
            for reason in seq:
                prefix = f"{counter:02d}. " if args.numbered else ""
                typeprint(prefix + reason, cps=args.cps, slow_punct=not args.no_slow_punct)
                counter += 1
                time.sleep(max(0.0, args.pause))
            # Если не loop — выходим после одного прохода
            if not args.loop:
                break
    except KeyboardInterrupt:
        typeprint("\nОкей, остановлюсь. Люблю тебя. ❤️", cps=args.cps)
    input("\nНажми Enter, чтобы закрыть программу ❤️ ")
    return 0


if __name__ == "__main__":
    raise SystemExit(main())
