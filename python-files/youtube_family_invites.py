#!/usr/bin/env python3
import sys, os, time, threading, gc, platform, socket, random, secrets, base64, hashlib
from datetime import datetime
from Crypto.Cipher import AES, ChaCha20, Salsa20
from Crypto.Protocol.KDF import scrypt

I_oO0oIOlI0oo0Olol1O = bytes.fromhex('94f8cd373c696c26e50f6e341963b547eaff4dfbdb6fb56a96dcd031fecb0c295037356ea21e5e6db61a948c54c5142b18ef0e8e76d5c4136151dbecc320d8c7')
l_0l0oOoO0loO0l_Io0O = 0
IOl0oOI0olOo0OlI0oll = [secrets.randbits(64) for _ in range(12)]
oO0oII0oll_Il0O_lI0o = {'last_check': time.time(), 'violations': 0, 'session_start': time.time()}
IoO0llOoOIl0OOoIO0oI = [threading.Event() for _ in range(3)]

def Il0oOlIl0O0l_OoO0lIO():
    global IOl0oOI0olOo0OlI0oll, oO0oII0oll_Il0O_lI0o
    if hasattr(sys, 'gettrace') and sys.gettrace() is not None:
        IOl0oOI0olOo0OlI0oll[0] ^= 0xDEADBEEF
        os._exit(random.randint(1, 255))
    try:
        frame = sys._getframe()
        if frame.f_trace is not None or frame.f_back.f_trace is not None:
            os._exit(random.randint(1, 255))
    except:
        pass
    measurements = []
    for _ in range(5):
        start = time.perf_counter_ns()
        dummy = sum(i * random.randint(1, 100) for i in range(3000))
        elapsed = time.perf_counter_ns() - start
        measurements.append(elapsed)
    avg_time = sum(measurements) / len(measurements)
    if avg_time > 150_000_000 or max(measurements) > 300_000_000:
        os._exit(random.randint(1, 255))
    obj_count = len(gc.get_objects())
    if obj_count > 500000 or obj_count < 500:
        os._exit(random.randint(1, 255))
    suspicious_env = ['PYTHONDEBUG', 'PYTHONINSPECT', 'PYTHONHOME', '_DEBUG']
    if any(var in os.environ for var in suspicious_env):
        os._exit(random.randint(1, 255))
    try:
        import psutil
        current_proc = psutil.Process()
        if current_proc.memory_info().rss > 2 * 1024 * 1024 * 1024:
            os._exit(random.randint(1, 255))
        parent = current_proc.parent()
        if parent and any(debugger in parent.name().lower() 
                         for debugger in ['ida', 'olly', 'x64dbg', 'ghidra', 'radare', 'gdb']):
            os._exit(random.randint(1, 255))
        dangerous_processes = [
            'ida', 'ida64', 'ollydbg', 'x32dbg', 'x64dbg', 'windbg', 'ghidra',
            'radare2', 'r2', 'gdb', 'lldb', 'wireshark', 'processhacker',
            'cheatengine', 'artmoney', 'debugview', 'procmon', 'regmon',
            'filemon', 'apimonitor', 'detours', 'apihook', 'hookapi'
        ]
        for proc in psutil.process_iter(['name']):
            proc_name = proc.info['name'].lower()
            if any(tool in proc_name for tool in dangerous_processes):
                os._exit(random.randint(1, 255))
    except ImportError:
        pass
    except:
        pass
    oO0oII0oll_Il0O_lI0o['last_check'] = time.time()
    IOl0oOI0olOo0OlI0oll[random.randint(0, len(IOl0oOI0olOo0OlI0oll)-1)] ^= random.randint(1, 0xFFFF)

def ol0O_oIl0OI0oIl0O0OI():
    vm_signatures = [
        'vmware', 'virtualbox', 'vbox', 'qemu', 'xen', 'parallels',
        'hyperv', 'hyper-v', 'kvm', 'bochs', 'wine', 'docker', 
        'kubernetes', 'sandboxie', 'cuckoo', 'anubis', 'joebox',
        'threatexpert', 'cwsandbox', 'comodo', 'sunbelt', 'gfi'
    ]
    system_info = (platform.system() + platform.machine() + 
                  platform.processor() + platform.platform()).lower()
    if any(sig in system_info for sig in vm_signatures):
        os._exit(random.randint(1, 255))
    try:
        hostname = socket.gethostname().lower()
        suspicious_hostnames = vm_signatures + [
            'sandbox', 'malware', 'analysis', 'test', 'victim', 'sample',
            'honeypot', 'research', 'analyst', 'reverse', 'debug'
        ]
        if any(name in hostname for name in suspicious_hostnames):
            os._exit(random.randint(1, 255))
    except:
        pass
    try:
        start = time.perf_counter()
        for _ in range(200000):
            _ = random.random() ** 0.5
        cpu_time = time.perf_counter() - start
        if cpu_time > 1.0:
            os._exit(random.randint(1, 255))
        start = time.perf_counter()
        data = [random.randint(0, 1000000) for _ in range(50000)]
        data.sort()
        memory_time = time.perf_counter() - start
        if memory_time > 0.5:
            os._exit(random.randint(1, 255))
    except:
        pass
    vm_files = [
        '/proc/vz', '/proc/bc', '/.dockerenv', '/.dockerinit',
        '/usr/bin/VBoxControl', '/usr/bin/VBoxService',
        'C:\\windows\\system32\\drivers\\VBoxMouse.sys',
        'C:\\windows\\system32\\drivers\\vmhgfs.sys'
    ]
    for vm_file in vm_files:
        if os.path.exists(vm_file):
            os._exit(random.randint(1, 255))

def OI1lOo0I0olo0OlOoO0l(purpose: str, length: int) -> bytes:
    global I_oO0oIOlI0oo0Olol1O
    salt = hashlib.sha256(purpose.encode()).digest()
    key_material = I_oO0oIOlI0oo0Olol1O
    return scrypt(key_material, salt, length, N=2**16, r=8, p=1)

def lllI0oOlI0ol0oOI_O0I(data: bytes) -> bytes:
    try:
        aes_key = OI1lOo0I0olo0OlOoO0l("AES_LAYER", 32)
        chacha_key = OI1lOo0I0olo0OlOoO0l("CHACHA_LAYER", 32)
        salsa_key = OI1lOo0I0olo0OlOoO0l("SALSA_LAYER", 32)
        xor_key = OI1lOo0I0olo0OlOoO0l("XOR_LAYER", 256)
        salsa_nonce = data[:8]
        encrypted_data = data[8:]
        xor_decrypted = bytes(a ^ b for a, b in zip(encrypted_data,
                            (xor_key * (len(encrypted_data) // len(xor_key) + 1))[:len(encrypted_data)]))
        salsa_cipher = Salsa20.new(key=salsa_key, nonce=salsa_nonce)
        chacha_data = salsa_cipher.decrypt(xor_decrypted)
        chacha_nonce = chacha_data[:12]
        chacha_encrypted = chacha_data[12:]
        chacha_cipher = ChaCha20.new(key=chacha_key, nonce=chacha_nonce)
        aes_data = chacha_cipher.decrypt(chacha_encrypted)
        aes_nonce = aes_data[:16]
        aes_tag = aes_data[16:32]
        aes_encrypted = aes_data[32:]
        aes_cipher = AES.new(aes_key, AES.MODE_GCM, nonce=aes_nonce)
        return aes_cipher.decrypt_and_verify(aes_encrypted, aes_tag)
    except Exception:
        os._exit(random.randint(1, 255))

def OoIlI1lOOIl0o0Ol_lOl():
    global l_0l0oOoO0loO0l_Io0O, IOl0oOI0olOo0OlI0oll, oO0oII0oll_Il0O_lI0o
    expected_violations = oO0oII0oll_Il0O_lI0o.get('violations', 0)
    current_violations = sum(1 for canary in IOl0oOI0olOo0OlI0oll if canary & 0xFFFF == 0)
    if abs(current_violations - expected_violations) > 5:
        os._exit(random.randint(1, 255))
    pass
    l_0l0oOoO0loO0l_Io0O += 1
    pass
    session_duration = time.time() - oO0oII0oll_Il0O_lI0o.get('session_start', time.time())
    if session_duration > 172800:
        os._exit(random.randint(1, 255))


def lOOoII0oloO0l__I_lOI():
    while True:
        sleep_time = random.uniform(1.5, 4.0)
        time.sleep(sleep_time)
        try:
            Il0oOlIl0O0l_OoO0lIO()
            ol0O_oIl0OI0oIl0O0OI()
            OoIlI1lOOIl0o0Ol_lOl()
            for _ in range(random.randint(1, 3)):
                idx = random.randint(0, len(IOl0oOI0olOo0OlI0oll) - 1)
                IOl0oOI0olOo0OlI0oll[idx] ^= random.randint(1, 0xFFFFFFFF)
        except:
            os._exit(random.randint(1, 255))

def OIIl0OO0oIII1lOloO0l():
    try:
        Il0oOlIl0O0l_OoO0lIO()
        ol0O_oIl0OI0oIl0O0OI()
        OoIlI1lOOIl0o0Ol_lOl()
        IoO0llOoOIl0OOoIO0oI[0].set()
        oIIo0Ol0I00_IOO0oIOo = base64.b64decode('')
        O_I0I1lOOOIl0_o0OllI = lllI0oOlI0ol0oOI_O0I(oIIo0Ol0I00_IOO0oIOo)
        exec(O_I0I1lOOOIl0_o0OllI.decode(), {'__name__': '__main__', '__file__': __file__})
    except Exception:
        os._exit(random.randint(1, 255))

def lO_OO0oIo0I_I1lOlI0o():
    fake_key = secrets.token_bytes(32)
    fake_data = base64.b64encode(secrets.token_bytes(2048)).decode()
    time.sleep(random.uniform(0.005, 0.025))
    return hashlib.sha512(fake_data.encode() + fake_key).hexdigest()

def lIl0Olo0OloII0Oo_lI0():
    operations = random.randint(100, 500)
    for i in range(operations):
        _ = secrets.randbits(64) ^ secrets.randbits(64)
        _ = random.randint(0, 2**32) * random.randint(0, 2**16)
    return secrets.token_hex(32)

def l__oIIlII00l0oOoO0lO():
    fake_metrics = {
        'entropy': random.uniform(7.8, 8.0),
        'compression_ratio': random.uniform(0.25, 0.75),
        'pattern_count': random.randint(50, 200),
        'signature_matches': [secrets.token_hex(16) for _ in range(random.randint(3, 12))],
        'complexity_score': random.uniform(0.85, 0.99)
    }
    time.sleep(random.uniform(0.01, 0.05))
    return fake_metrics

def OOOI0IolI0ol1OoI0olo():
    fake_vm_checks = [
        'vmware_detection_passed',
        'virtualbox_detection_passed', 
        'qemu_detection_passed',
        'sandbox_detection_passed'
    ]
    return all(check for check in fake_vm_checks)

if __name__ == "__main__":
    monitor_thread = threading.Thread(target=lOOoII0oloO0l__I_lOI, daemon=True)
    monitor_thread.start()
    time.sleep(random.uniform(0.005, 0.1))
    decoy_functions = [lO_OO0oIo0I_I1lOlI0o, lIl0Olo0OloII0Oo_lI0, l__oIIlII00l0oOoO0lO, OOOI0IolI0ol1OoI0olo]
    random.shuffle(decoy_functions)
    execution_pattern = random.randint(1, 4)
    if execution_pattern == 1:
        decoy_functions[0]()
        time.sleep(random.uniform(0.001, 0.01))
        OIIl0OO0oIII1lOloO0l()
        decoy_functions[1]()
    elif execution_pattern == 2:
        decoy_functions[1]()
        decoy_functions[2]()
        time.sleep(random.uniform(0.001, 0.01))
        OIIl0OO0oIII1lOloO0l()
    elif execution_pattern == 3:
        decoy_functions[2]()
        time.sleep(random.uniform(0.001, 0.01))
        OIIl0OO0oIII1lOloO0l()
        decoy_functions[3]()
        decoy_functions[0]()
    else:
        decoy_functions[3]()
        decoy_functions[0]()
        time.sleep(random.uniform(0.001, 0.01))
        OIIl0OO0oIII1lOloO0l()
        decoy_functions[1]()
