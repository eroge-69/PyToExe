import os
import asyncio
from telethon import TelegramClient
from telethon.tl.types import User, Chat, Channel

# üîê –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç my.telegram.org
api_id = 123456  # <-- —Å—é–¥–∞ –≤–∞—à API ID
api_hash = 'your_api_hash_here'  # <-- —Å—é–¥–∞ –≤–∞—à API HASH

# üìÇ –ü–∞–ø–∫–∞ —Å–æ —Å–µ—Å—Å–∏—è–º–∏ (—Ç–µ–∫—É—â–∞—è)
session_folder = '.'

# üìÑ –§–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
output_file = 'unread_chats.txt'

async def check_sessions():
    session_files = [f for f in os.listdir(session_folder) if f.endswith('.session')]
    result_lines = []

    for session in session_files:
        session_name = os.path.splitext(session)[0]
        print(f"üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏: {session_name}")

        client = TelegramClient(session_name, api_id, api_hash)
        try:
            await client.start()
            me = await client.get_me()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: {me.first_name} ({me.phone})")

            dialogs = await client.get_dialogs()

            for dialog in dialogs:
                if dialog.unread_count > 0:
                    entity = dialog.entity
                    name = entity.title if hasattr(entity, 'title') else (entity.first_name or '')
                    if isinstance(entity, User):
                        phone = entity.phone or '–Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'
                        result_lines.append(f"[{session_name}] –õ–∏—á–∫–∞: {name} | –¢–µ–ª: {phone}")
                    elif isinstance(entity, Chat):
                        result_lines.append(f"[{session_name}] –ì—Ä—É–ø–ø–∞: {name}")
                    elif isinstance(entity, Channel):
                        result_lines.append(f"[{session_name}] –ö–∞–Ω–∞–ª: {name}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {session_name}: {e}")
        finally:
            await client.disconnect()

    with open(output_file, 'w', encoding='utf-8') as f:
        f.write('\n'.join(result_lines))

    print(f"\nüìÑ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ {output_file}")

if __name__ == '__main__':
    asyncio.run(check_sessions())
