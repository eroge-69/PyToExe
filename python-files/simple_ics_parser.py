import os
import sys

def simple_ics_parser(filename):
    """–ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä ICS —Ñ–∞–π–ª–æ–≤"""
    if not os.path.exists(filename):
        return None, f"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    events = []
    current_event = {}
    in_event = False
    
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                
                if line == 'BEGIN:VEVENT':
                    in_event = True
                    current_event = {}
                elif line == 'END:VEVENT':
                    if in_event and current_event:
                        events.append(current_event)
                    in_event = False
                elif in_event and ':' in line:
                    try:
                        key, value = line.split(':', 1)
                        key = key.split(';')[0]
                        if key in ['SUMMARY', 'DTSTART', 'DTEND', 'ORGANIZER', 'DESCRIPTION']:
                            current_event[key] = value.replace('\\n', ' ')
                    except:
                        continue
                        
    except Exception as e:
        return None, f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}"
    
    return events, None

def format_date(date_str):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã"""
    if not date_str or len(date_str) < 8:
        return date_str
    
    try:
        if 'T' in date_str:
            date_part = date_str[:8]
            time_part = date_str[9:13]
            return f"{date_part[6:8]}.{date_part[4:6]}.{date_part[:4]} {time_part[:2]}:{time_part[2:4]}"
        else:
            return f"{date_str[6:8]}.{date_str[4:6]}.{date_str[:4]}"
    except:
        return date_str

def save_to_csv(events, output_file):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ CSV –±–µ–∑ pandas"""
    try:
        with open(output_file, 'w', encoding='utf-8-sig') as f:
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            f.write("–ù–∞–∑–≤–∞–Ω–∏–µ;–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞;–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è;–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä;–û–ø–∏—Å–∞–Ω–∏–µ\n")
            
            # –î–∞–Ω–Ω—ã–µ
            for event in events:
                title = event.get('SUMMARY', '').replace(';', ',').replace('\n', ' ')
                start = format_date(event.get('DTSTART', ''))
                end = format_date(event.get('DTEND', ''))
                organizer = event.get('ORGANIZER', '').replace('mailto:', '').split(';')[0]
                description = event.get('DESCRIPTION', '')[:100].replace(';', ',').replace('\n', ' ')
                
                f.write(f"{title};{start};{end};{organizer};{description}\n")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∫–æ–Ω—Å–æ–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    print("=" * 50)
    print("   üìÖ ICS Calendar Parser (Console)")
    print("=" * 50)
    
    if len(sys.argv) > 1:
        # –§–∞–π–ª –ø–µ—Ä–µ–¥–∞–Ω –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
        input_file = sys.argv[1]
    else:
        # –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        input_file = input("\n–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ ICS —Ñ–∞–π–ª—É (–∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª): ").strip('"')
    
    if not input_file:
        input_file = 'calendar.ics'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    print(f"\nüîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {input_file}")
    
    # –ü–∞—Ä—Å–∏–Ω–≥
    events, error = simple_ics_parser(input_file)
    
    if error:
        print(f"‚ùå {error}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å–æ–±—ã—Ç–∏–π
    print(f"\nüìã –ü–µ—Ä–≤—ã–µ —Å–æ–±—ã—Ç–∏—è:")
    print("-" * 50)
    
    for i, event in enumerate(events[:5], 1):
        title = event.get('SUMMARY', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')[:50]
        date = format_date(event.get('DTSTART', ''))
        organizer = event.get('ORGANIZER', '').replace('mailto:', '').split('@')[0]
        
        print(f"{i}. {title}")
        print(f"   üìÖ {date}")
        if organizer:
            print(f"   üë§ {organizer}")
        print()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ CSV
    output_file = input_file.replace('.ics', '_parsed.csv')
    
    if save_to_csv(events, output_file):
        print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞")
    
    print(f"\n‚ú® –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()