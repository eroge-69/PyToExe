#!/usr/bin/env python3 """ generate_tryhard_interactive_credentials.py Generates unique tryhard Fortnite usernames with symbols, strong passwords, unique email variations, prints them in Python, and writes them to a timestamped .txt on Desktop. User is prompted for number of credentials each run. """ import secrets import string from pathlib import Path from datetime import datetime # Fortnite-style username parts prefixes = ["xX", "Sniper", "Pro", "Elite", "Dark", "Shadow", "Viper", "Ninja", "Ghost", "Fatal", "Deadly", "King", "Lord", "Rogue", "Iron"] middles = ["Slayer", "Killer", "Destroyer", "Assault", "Storm", "Blade", "Frost", "Rage", "Clutch", "Strike", "Phantom", "Venom", "Reaper", "Hunter"] suffixes = ["1337", "360", "YT", "HD", "God", "PvP", "YT123", "X", "OG", "FTW", "BR", "Pro", "Elite", "Master"] symbols = ["_", "-", ".", "|", "~"] def make_password(length=12): alphabet = string.ascii_letters + string.digits + "!@#$%^&*()-_" while True: pwd = ''.join(secrets.choice(alphabet) for _ in range(length)) if (any(c.islower() for c in pwd) and any(c.isupper() for c in pwd) and any(c.isdigit() for c in pwd) and any(c in "!@#$%^&*()-_" for c in pwd)): return pwd def make_unique_tryhard_username(used_usernames): while True: username = f"{secrets.choice(prefixes)}{secrets.choice(middles)}{secrets.choice(suffixes)}" for _ in range(secrets.choice([0, 1, 2])): symbol = secrets.choice(symbols) pos = secrets.choice(range(len(username))) username = username[:pos] + symbol + username[pos:] username += f"{secrets.randbelow(100):02d}" if username not in used_usernames: used_usernames.add(username) return username def make_unique_email(base_email, used_emails): local, domain = base_email.split("@") while True: new_local = list(local) num_dots = secrets.choice(range(1, min(5, len(local)))) for _ in range(num_dots): pos = secrets.choice(range(1, len(new_local))) new_local.insert(pos, ".") new_email = "".join(new_local) + "@" + domain if new_email not in used_emails: used_emails.add(new_email) return new_email def generate_credentials(count, base_email): used_emails = set() used_usernames = set() creds = [] for _ in range(count): username = make_unique_tryhard_username(used_usernames) password = make_password() email = make_unique_email(base_email, used_emails) creds.append({"username": username, "password": password, "email": email}) return creds def save_to_txt(credentials): desktop = Path.home() / "Desktop" timestamp = datetime.now().strftime("%Y%m%d_%H%M%S") filename = f"fortnite_credentials_{timestamp}.txt" output_file = desktop / filename with open(output_file, "w", encoding="utf-8") as f: for c in credentials: line = f"Username: {c['username']}, Password: {c['password']}, Email: {c['email']}\n" f.write(line) print(f"\nAll credentials saved to: {output_file}") if __name__ == "__main__": try: count = int(input("How many Fortnite credentials do you want to generate? ")) if count <= 0: raise ValueError except ValueError: print("Invalid number. Using default of 30 credentials.") count = 30 base_email = "henri19122009@icloud.com" credentials = generate_credentials(count, base_email) # Print credentials in Python for c in credentials: print(f"Username: {c['username']}, Password: {c['password']}, Email: {c['email']}") # Save credentials to Desktop .txt file with timestamp save_to_txt(credentials)