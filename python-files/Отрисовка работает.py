from pythoncom import connect, VT_EMPTY
from win32com.client import gencache, VARIANT
import os
import time

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ API
con0 = gencache.EnsureModule('{75C9F5D0-B5B8-4526-8681-9903C567D2ED}', 0, 1, 0).constants  # kompas6_constants
con3 = gencache.EnsureModule('{2CAF168C-7961-4B90-9DA2-701419BEEFE3}', 0, 1, 0).constants  # kompas6_constants_3d
API5 = gencache.EnsureModule('{0422828C-F174-495E-AC5D-D31014DBBE87}', 0, 1, 0)  # kompas6_api5_module
API7 = gencache.EnsureModule('{69AC2981-37C0-4379-84FD-5DD2F3C0A520}', 0, 1, 0)  # kompas_api7_module

class Kompas3DHelper:
    def __init__(self):
        self.kompas = None
        self.application = None
        self.connect_to_kompas()

    def connect_to_kompas(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ö–æ–º–ø–∞—Å-3D"""
        try:
            self.kompas = API5.KompasObject(connect('Kompas.Application.5'))
            self.application = self.kompas.ksGetApplication7()
            print("‚úì –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ö–æ–º–ø–∞—Å-3D")
            return True
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ö–æ–º–ø–∞—Å-3D: {e}")
            return False

    def get_active_document_path(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –ø—É—Ç—å –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—É"""
        try:
            active_doc = self.application.ActiveDocument
            if active_doc:
                return active_doc.PathName
            return None
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
            return None

    def get_active_document_directory(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        try:
            active_doc_path = self.get_active_document_path()
            if active_doc_path and os.path.exists(active_doc_path):
                return os.path.dirname(active_doc_path)
            return None
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
            return None

    def edit_accuracy_model_displaying(self, file_path, accuracy_level=10):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫
        """
        if not os.path.exists(file_path):
            print(f"‚úó –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            return False

        try:
            documents = self.application.Documents
            was_opened = False
            kompas_doc = None

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç –ª–∏ —É–∂–µ –¥–æ–∫—É–º–µ–Ω—Ç
            for i in range(documents.Count):
                try:
                    doc = documents.Item(i)
                    if doc and hasattr(doc, 'PathName') and doc.PathName:
                        if doc.PathName.lower() == file_path.lower():
                            kompas_doc = doc
                            was_opened = True
                            break
                except:
                    continue

            # –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –Ω–µ –æ—Ç–∫—Ä—ã—Ç, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
            if not kompas_doc:
                try:
                    kompas_doc = documents.Open(file_path, True, False)
                    was_opened = False
                    time.sleep(1)
                    print(f"‚úì –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç: {os.path.basename(file_path)}")
                except Exception as e:
                    print(f"‚úó –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞ {os.path.basename(file_path)}: {e}")
                    return False

            if not kompas_doc:
                print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç: {os.path.basename(file_path)}")
                return False

            # –ü–æ–ª—É—á–∞–µ–º –∏ –∏–∑–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            try:
                doc_settings = kompas_doc.DocumentSettings
                doc_3d_settings = API7.IDocument3DSettings(doc_settings)

                # –¢–µ–∫—É—â–µ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏
                current_accuracy = doc_3d_settings.AccuracyModelDisplaying
                doc_3d_settings.AccuracyModelDisplaying = accuracy_level
                new_accuracy = doc_3d_settings.AccuracyModelDisplaying

                print(f"  –¢–æ—á–Ω–æ—Å—Ç—å: {current_accuracy} ‚Üí {new_accuracy}")

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                kompas_doc.Save()
                print("  ‚úì –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

                # –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ
                if not was_opened:
                    kompas_doc.Close(1)
                    time.sleep(0.3)
                    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏ —Å—Ä–∞–∑—É –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
                    reopened_doc = documents.Open(file_path, False, False)
                    time.sleep(0.3)
                    reopened_doc.Save()
                    reopened_doc.Close(1)
                else:
                    # –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –±—ã–ª –æ—Ç–∫—Ä—ã—Ç, –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
                    kompas_doc.Save()

                print("  ‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
                return True

            except Exception as e:
                print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏: {e}")
                return False

        except Exception as e:
            print(f"‚úó –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False

    def process_multiple_files(self, folder_path, file_extensions=(".m3d", ".a3d"), accuracy_level=10, recursive=False):
        """
        –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
        """
        if not os.path.exists(folder_path):
            print(f"‚úó –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {folder_path}")
            return False

        processed_count = 0
        error_count = 0

        print(f"üìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–ø–∫–∏: {folder_path}")
        print(f"üìÑ –†–∞—Å—à–∏—Ä–µ–Ω–∏—è: {', '.join(file_extensions)}")
        print(f"üéØ –¢–æ—á–Ω–æ—Å—Ç—å: {accuracy_level}")
        print("-" * 60)

        file_list = []

        # –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if recursive:
            for root, dirs, files in os.walk(folder_path):
                for file_name in files:
                    if any(file_name.lower().endswith(ext.lower()) for ext in file_extensions):
                        file_path = os.path.join(root, file_name)
                        file_list.append(file_path)
        else:
            for file_name in os.listdir(folder_path):
                if any(file_name.lower().endswith(ext.lower()) for ext in file_extensions):
                    file_path = os.path.join(folder_path, file_name)
                    if os.path.isfile(file_path):
                        file_list.append(file_path)

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        file_list.sort()

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
        for file_path in file_list:
            print(f"üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {os.path.basename(file_path)}")

            if self.edit_accuracy_model_displaying(file_path, accuracy_level):
                processed_count += 1
            else:
                error_count += 1

            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ñ–∞–π–ª–∞–º–∏
            time.sleep(0.3)
            print()

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("=" * 60)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ë–†–ê–ë–û–¢–ö–ò:")
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {processed_count} —Ñ–∞–π–ª–æ–≤")
        print(f"   ‚ùå –û—à–∏–±–∫–∏: {error_count} —Ñ–∞–π–ª–æ–≤")
        print(f"   üìã –í—Å–µ–≥–æ: {len(file_list)} —Ñ–∞–π–ª–æ–≤")

        if processed_count > 0:
            print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:")
            print("   - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ö–æ–º–ø–∞—Å-3D")
            print("   - –ò–ª–∏ –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã")

        return processed_count > 0

def main():
    print("=" * 60)
    print("üéØ –ö–û–ú–ü–ê–°-3D - –£–õ–£–ß–®–ï–ù–ò–ï –ì–†–ê–§–ò–ö–ò")
    print("=" * 60)

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–º–æ—â–Ω–∏–∫–∞
    kompas_helper = Kompas3DHelper()

    if not kompas_helper.application:
        print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ö–æ–º–ø–∞—Å-3D")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ö–æ–º–ø–∞—Å-3D –∑–∞–ø—É—â–µ–Ω")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    active_directory = kompas_helper.get_active_document_directory()

    if not active_directory:
        print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –ö–æ–º–ø–∞—Å-3D –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        return

    print(f"üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {active_directory}")
    print()

    # –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    success = kompas_helper.process_multiple_files(
        active_directory,
        file_extensions=(".m3d", ".a3d"),
        accuracy_level=10,
        recursive=True
    )

    if success:
        print("\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è  –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")

if __name__ == "__main__":
    main()