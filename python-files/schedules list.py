import logging
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = "7281550229:AAFAC6yaf-efQYjodElsLsHO9tZXYlSsnpU"

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
SELECT_PERSON, SELECT_DAY = range(2)

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç—Ä–µ—Ö —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
SCHEDULES = {
    "–ï–≥–æ—Ä": {
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": [
            "08:30-9:10 - –ü—Å–µ–≤–¥–æ –†–û–í",
            "09:20-10:00 - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
            "10:10-11:50 - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
            "11:00-11:40 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "12:00-12:40 - –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "13:00-13:40 - –ò—Å—Ç–æ—Ä–∏—è",
            "14:00-14:40 -  Ô∏è‚ùóÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è–§–ò–ó-–†–ê‚ùóÔ∏è"
        ],
        "–í—Ç–æ—Ä–Ω–∏–∫": [
            "08:30-9:10 - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
            "09:20-10:00 - –§–∏–∑–∏–∫–∞",
            "10:10-11:50 - –ì–µ–æ–≥—Ä–∞—Ñ–∏—è",
            "11:00-11:40 - –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ",
            "12:00-12:40 - –ò—Å—Ç–æ—Ä–∏—è",
            "13:00-13:40 - –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "14:00-14:40 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
        ],
        "–°—Ä–µ–¥–∞": [
            "08:30-9:10 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "09:20-10:00 - –ë–∏–æ–ª–æ–≥–∏—è",
            "10:10-11:50 - –†—É—Å—Å–∫–∏–π",
            "11:00-11:40 - –û–ë–ñ",
            "12:00-12:40 - –õ–∏—Ç-—Ä–∞",
            "13:00-13:40 - –ê–Ω–≥–ª",
            "14:00-14:40 - –§–∏–∑–∏–∫–∞"
        ],
        "–ß–µ—Ç–≤–µ—Ä–≥": [
            "08:30-9:10 - ‚ùï–ü—É—Å—Ç–æ‚ùï",
            "09:20-10:00 - –•–∏–º–∏—è",
            "10:10-11:50 - –õ–∏—Ç-—Ä–∞",
            "11:00-11:40 - Ô∏è‚ùóÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è–§–ò–ó-–†–ê‚ùóÔ∏è",
            "12:00-12:40 - –†—É—Å—Å–∫–∏–π",
            "13:00-13:40 - –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å",
            "14:00-14:40 - –ê–Ω–≥–ª"
        ],
        "–ü—è—Ç–Ω–∏—Ü–∞": [
            "08:30-9:10 - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
            "09:20-10:00 - –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
            "10:10-11:50 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "11:00-11:40 - Ô∏è–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ",
            "12:00-12:40 - –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ",
            "13:00-13:40 - –õ–∏—Ç-—Ä–∞",
            "14:00-14:40 - –ê–Ω–≥–ª",
            "17:00-18:00 - –†–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ —Ä—É—Å—Å–∫–æ–º—É"
        ],
        "–°—É–±–±–æ—Ç–∞": [
            "–Ω–µ—Ç –¥–µ–ª –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
        ],
        "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": [
            "–Ω–µ—Ç –¥–µ–ª –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
        ]
    },
    "–¢–∞–Ω—è": {
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": [
            "08:00-08:40 - –†–û–í",
            "08:50-09:30 - –ú–∞—Ç–µ–º–µ—Ç–∏–∫–∞",
            "09:50-10:30 - –†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
            "10:45-11:25 - –ò–ó–û",
            "11:40-12:20 - –ß—Ç–µ–Ω–∏–µ",
            "12:30-13:10 - –û–†–ö–°–≠",
            "14:00-15:20 - –®–∞–Ω—Å –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π(–®—É–±–∏–Ω–∞ –í–ì:–∫—É–ø–∞–ª—å–Ω–∏–∫, –≤–µ–ª–æ—Å–∏–ø–µ–¥–∫–∏, –±–µ–ª—ã–µ –Ω–æ—Å–∫–∏"
        ],
        "–í—Ç–æ—Ä–Ω–∏–∫": [
            "08:00-08:40 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "08:50-09:30 - –†—É—Å—Å–∫–∏–π",
            "09:50-10:30 - ‚ùóÔ∏è–§–ò–ó-–†–ê‚ùóÔ∏è",
            "10:45-11:25 - –û–∫—Ä.–º–∏—Ä",
            "11:40-12:20 - –¢—Ä—É–¥",
            "14:00-15:20 - –®–∞–Ω—Å –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π"
        ],
        "–°—Ä–µ–¥–∞": [
            "08:00-08:40 - –†—É—Å—Å–∫–∏–π",
            "08:50-09:30 - –ê–Ω–≥–ª.—è–∑",
            "09:50-10:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "10:45-11:25 - –ß—Ç–µ–Ω–∏–µ",
            "11:40-12:20 - –§—É–Ω–∫—Ü.–≥—Ä",
            "13:30-14:10 - –ê—Ä—Ç-–ø—Ä–æ–µ–∫—Ç",
            "??:?? - –í–æ–∫–∞–ª 17 –∫–∞–±."
        ],
        "–ß–µ—Ç–≤–µ—Ä–≥": [
            "08:00-08:40 - –†—É—Å—Å–∫–∏–π",
            "08:50-09:30 - Ô∏è‚ùóÔ∏è–§–ò–ó-–†–ê‚ùóÔ∏è",
            "09:50-10:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "10:45-11:25 - –ú—É–∑—ã–∫–∞",
            "11:40-12:20 - –û–∫—Ä.–º–∏—Ä"
        ],
        "–ü—è—Ç–Ω–∏—Ü–∞": [
            "08:00-08:40 - –ê–Ω–≥–ª.—è–∑",
            "08:50-09:30 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "09:50-10:30 - –†—É—Å—Å–∫–∏–π",
            "10:45-11:25 - –ß—Ç–µ–Ω–∏–µ",
            "11:40-12:20 - –û—Ä–ª—è—è—Ç–∞",
            "13:30-14:10 - –ê—Ä—Ç-–ø—Ä–æ–µ–∫—Ç",
            "16:00-18:00 - –î–∂–∞–∑-–º–æ–¥–µ—Ä–Ω"
        ],
        "–°—É–±–±–æ—Ç–∞": [
            "11:00-13:00 - –®–∞–Ω—Å —Ä–µ–ø–µ—Ç–∏—Ü–∏—è",
            "15:40-16:20 - –ê—Ä—Ç-–ø—Ä–æ–µ–∫—Ç, —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è",
            "16:20-17:00 - –ê—Ä—Ç-–ø—Ä–æ–µ–∫—Ç,–∞–∫—Ç.–º–∞—Å—Ç."
        ],
        "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": [
            "–Ω–µ—Ç –¥–µ–ª –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
        ]
    },
    "–°–∞—à–∞": {
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": [
            "13:15-13:55 - –†–û–í",
            "14:00-14:40 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "14:55-15:35 - –†—É—Å—Å–∫–∏–π",
            "15:50-16:30 - ‚ùóÔ∏è–§–ò–ó-–†–ê‚ùóÔ∏è",
            "16:40-17:20 - –ß—Ç–µ–Ω–∏–µ",
            "17:30-18:10 - –û—Ä–ª—è—Ç–∞"
        ],
        "–í—Ç–æ—Ä–Ω–∏–∫": [
            "09:00-10:30 - –†–æ–¥–Ω–∏—á–æ–∫",
            "10:30-12:00 - –í—è–∑–∞–Ω–∏–µ",
            "13:15-13:55 - ‚ùï–ü—É—Å—Ç–æ‚ùï",
            "14:00-14:40 - –†—É—Å—Å–∫–∏–π",
            "14:55-15:35 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "15:50-16:30 - –ò–Ω-—è–∑",
            "16:40-17:20 - –û–∫—Ä.–º–∏—Ä",
            "17:30-18:10 - –ß—Ç–µ–Ω–∏–µ"

        ],
        "–°—Ä–µ–¥–∞": [
            "09:00-10:30 - –ê–ø–µ–ª—å—Å–∏–Ω",
            "13:15-13:55 - –ß—Ç–µ–Ω–∏–µ",
            "14:00-14:40 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "14:55-15:35 - –†—É—Å—Å–∫–∏–π",
            "15:50-16:30 - –ò–ó–û",
            "16:40-17:20 - –§—É–Ω–∫—Ü.–≥—Ä"
        ],
        "–ß–µ—Ç–≤–µ—Ä–≥": [
            "08:00-09:30 - –†–∏—Å–æ–≤–∞–Ω–∏–µ",
            "10:30-12:00 - –í—è–∑–∞–Ω–∏–µ",
            "13:15-13:55 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "14:00-14:40 - –†—É—Å—Å–∫–∏–π",
            "14:55-15:35 - –û–∫—Ä.–º–∏—Ä",
            "15:50-16:30 - –ò–Ω-—è–∑",
            "16:40-17:20 - –ú—É–∑—ã–∫–∞"
        ],
        "–ü—è—Ç–Ω–∏—Ü–∞": [
            "09:00-10:30 - –ê–ø–µ–ª—å—Å–∏–Ω",
            "13:15-13:55 - –†—É—Å—Å–∫–∏–π",
            "14:00-14:40 - ‚ùóÔ∏è–§–ò–ó-–†–ê‚ùóÔ∏è",
            "14:55-15:35 - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "15:50-16:30 - –ß—Ç–µ–Ω–∏–µ",
            "16:40-17:20 - –¢—Ä—É–¥"
        ],
        "–°—É–±–±–æ—Ç–∞": [
            "11:00-12:30 - –†–æ–¥–Ω–∏—á–æ–∫"
        ],
        "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": [
            "–Ω–µ—Ç –¥–µ–ª –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
        ]
    }
}


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–µ–ª–æ–≤–µ–∫–∞
def get_person_keyboard():
    keyboard = [["–ï–≥–æ—Ä", "–¢–∞–Ω—è", "–°–∞—à–∞"]]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
def get_day_keyboard():
    keyboard = [
        ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞"],
        ["–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"],
        ["–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–°–µ–≥–æ–¥–Ω—è"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìÖ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏.\n"
        "–í—ã–±–µ—Ä–∏ —á–µ–ª–æ–≤–µ–∫–∞, —á—å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å:",
        reply_markup=get_person_keyboard()
    )
    return SELECT_PERSON


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —á–µ–ª–æ–≤–µ–∫–∞
async def select_person(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_choice = update.message.text

    if user_choice in SCHEDULES:
        context.user_data['selected_person'] = user_choice
        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –¥–ª—è {user_choice}:",
            reply_markup=get_day_keyboard()
        )
        return SELECT_DAY
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:",
            reply_markup=get_person_keyboard()
        )
        return SELECT_PERSON


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
async def select_day(update: Update, context: ContextTypes.DEFAULT_TYPE):
    day_choice = update.message.text
    person = context.user_data.get('selected_person')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω "–°–µ–≥–æ–¥–Ω—è"
    if day_choice == "–°–µ–≥–æ–¥–Ω—è":
        today = datetime.now().weekday()
        days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
        day_choice = days[today]

    if person and day_choice in SCHEDULES[person]:
        schedule = SCHEDULES[person][day_choice]
        schedule_text = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {person} –Ω–∞ {day_choice}:\n\n"

        for i, item in enumerate(schedule, 1):
            schedule_text += f"‚è∞ {item}\n"

        await update.message.reply_text(schedule_text)
        await update.message.reply_text(
            "–•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ? –í—ã–±–µ—Ä–∏ —á–µ–ª–æ–≤–µ–∫–∞:",
            reply_markup=get_person_keyboard()
        )
        return SELECT_PERSON
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –¥–µ–Ω—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:",
            reply_markup=get_day_keyboard()
        )
        return SELECT_DAY


# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
        "/cancel - –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n"
        "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
        "1. –í—ã–±–µ—Ä–∏ —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
        "2. –í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏\n"
        "3. –ü–æ–ª—É—á–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!\n"
        "–ú–æ–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ª—é–¥–µ–π!"
    )


# –ö–æ–º–∞–Ω–¥–∞ /cancel
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            SELECT_PERSON: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_person)],
            SELECT_DAY: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_day)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(conv_handler)
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("cancel", cancel))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()


if __name__ == '__main__':
    main()