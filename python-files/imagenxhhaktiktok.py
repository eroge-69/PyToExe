# -*- coding: utf-8 -*-
"""ImagenXHHAKtiktok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XIXqdPX58PON_dI2QfuHV5qJmKmtYllz

Demostraci√≥n de inferencia GFPGAN
### Link del modelo con el cuadernillo original https://github.com/TencentARC/GFPGAN (Opcional por si te quieres dar una vuelta)

# Modelo <font color='orange'>GFPGAN</font>

### **PASO 1**
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content
!rm -rf GFPGAN
!git clone https://github.com/TencentARC/GFPGAN.git
# %cd GFPGAN


!pip install basicsr
!pip install facexlib
!pip install -r requirements.txt
!python setup.py develop
!pip install realesrgan
!wget https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth -P experiments/pretrained_models

"""### **PASO 2**
- <font color='blue'>Selecciona tu foto</font>
"""

import os
from google.colab import files
import shutil

upload_folder = 'inputs/upload'

if os.path.isdir(upload_folder):
    shutil.rmtree(upload_folder)
os.mkdir(upload_folder)

uploaded = files.upload()
for filename in uploaded.keys():
  dst_path = os.path.join(upload_folder, filename)
  print(f'move {filename} to {dst_path}')
  shutil.move(filename, dst_path)

"""### **PASO 3**"""

!rm -rf results
!python inference_gfpgan.py -i inputs/upload -o results -v 1.3 -s 2 --bg_upsampler realesrgan

!ls results/cmp

"""### **PASO 4**
- <font color='blue'>Mira cuanto mejora la foto</font>
"""

import cv2
import matplotlib.pyplot as plt
def display(img1, img2):
  fig = plt.figure(figsize=(25, 10))
  ax1 = fig.add_subplot(1, 2, 1)
  plt.title('Input image', fontsize=16)
  ax1.axis('off')
  ax2 = fig.add_subplot(1, 2, 2)
  plt.title('GFPGAN output', fontsize=16)
  ax2.axis('off')
  ax1.imshow(img1)
  ax2.imshow(img2)
def imread(img_path):
  img = cv2.imread(img_path)
  img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
  return img

import os
import glob

input_folder = 'results/cropped_faces'
result_folder = 'results/restored_faces'
input_list = sorted(glob.glob(os.path.join(input_folder, '*')))
output_list = sorted(glob.glob(os.path.join(result_folder, '*')))
for input_path, output_path in zip(input_list, output_list):
  img_input = imread(input_path)
  img_output = imread(output_path)
  display(img_input, img_output)

"""### **PASO 5**
- <font color='blue'>Guarda el resultado</font>
"""

!ls results
print('Download results')
os.system('zip -r download.zip results')
files.download("download.zip")