import tkinter as tk
from tkinter import messagebox, simpledialog
import json
import os

FILE = "recipes.json"

def load_recipes():
    if os.path.exists(FILE):
        with open(FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

def save_recipes():
    with open(FILE, "w", encoding="utf-8") as f:
        json.dump(recipes, f, indent=4, ensure_ascii=False)

def add_recipe():
    name = simpledialog.askstring("–ù–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç", "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞:")
    if not name:
        return
    ingredients = {}
    while True:
        ing = simpledialog.askstring("–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):")
        if not ing:
            break
        grams = simpledialog.askfloat("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", f"–°–∫–æ–ª—å–∫–æ –≥—Ä–∞–º–º {ing}?")
        if grams:
            ingredients[ing] = grams
    if ingredients:
        recipes[name] = ingredients
        save_recipes()
        update_recipe_list()
        messagebox.showinfo("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", f"–†–µ—Ü–µ–ø—Ç '{name}' –¥–æ–±–∞–≤–ª–µ–Ω!")

def update_recipe_list():
    recipe_list.delete(0, tk.END)
    for name in recipes.keys():
        recipe_list.insert(tk.END, name)

def show_recipe(event=None):
    selection = recipe_list.curselection()
    if not selection:
        return
    name = recipe_list.get(selection[0])
    ingredients = recipes[name]
    text.delete(1.0, tk.END)
    text.insert(tk.END, f"üìñ {name}\n\n")
    for ing, g in ingredients.items():
        text.insert(tk.END, f" - {ing}: {g} –≥\n")

def scale_recipe():
    selection = recipe_list.curselection()
    if not selection:
        messagebox.showwarning("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç!")
        return
    name = recipe_list.get(selection[0])
    ingredients = recipes[name]

    base_ing = simpledialog.askstring("–í—ã–±–æ—Ä –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞", "–í–≤–µ–¥–∏—Ç–µ –≥–ª–∞–≤–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç:")
    if base_ing not in ingredients:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–¢–∞–∫–æ–≥–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ —Ä–µ—Ü–µ–ø—Ç–µ!")
        return

    have = simpledialog.askfloat("–°–∫–æ–ª—å–∫–æ –µ—Å—Ç—å", f"–°–∫–æ–ª—å–∫–æ —É –≤–∞—Å {base_ing} (–≥)?")
    if not have:
        return

    factor = have / ingredients[base_ing]

    text.delete(1.0, tk.END)
    text.insert(tk.END, f"üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç: {name}\n\n")
    for ing, g in ingredients.items():
        text.insert(tk.END, f" - {ing}: {round(g * factor, 2)} –≥\n")

# --- GUI ---
root = tk.Tk()
root.title("üìñ –ö–Ω–∏–≥–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤")
root.geometry("600x400")

# –°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤
frame_left = tk.Frame(root)
frame_left.pack(side="left", fill="y")

recipe_list = tk.Listbox(frame_left, width=25)
recipe_list.pack(fill="y", expand=True, padx=5, pady=5)
recipe_list.bind("<<ListboxSelect>>", show_recipe)

btn_add = tk.Button(frame_left, text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç", command=add_recipe)
btn_add.pack(fill="x", padx=5, pady=2)

btn_scale = tk.Button(frame_left, text="üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å", command=scale_recipe)
btn_scale.pack(fill="x", padx=5, pady=2)

# –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å–ø—Ä–∞–≤–∞
frame_right = tk.Frame(root)
frame_right.pack(side="right", fill="both", expand=True)

text = tk.Text(frame_right, wrap="word", font=("Arial", 12))
text.pack(fill="both", expand=True, padx=5, pady=5)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
recipes = load_recipes()
update_recipe_list()

root.mainloop()
