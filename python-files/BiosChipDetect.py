
import sys
import os
import base64
import hashlib
import marshal
import zlib
import traceback
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

def _anti_debug():
    if sys.gettrace() or (os.name == 'nt' and __import__('ctypes').windll.kernel32.IsDebuggerPresent()):
        sys.exit(1)
_anti_debug()

_KEY = b'\xb6\x13\xb9\x1d\x8e*fM\x02\xee\xfb\xddc\xd5(\x17t\xae\xe9O\xfa\xb9F?\x97\xa9?\xde\xb4\xba\xbf\xe0'
_IV = b'\xcbp\x90I\x9aUn\xa2\n\xb16`\xcbJ\x16\xdd'

def _decrypt_str(data):
    try:
        cipher = AES.new(_KEY, AES.MODE_CBC, _IV)
        return unpad(cipher.decrypt(data), 16).decode()
    except:
        return ""

def _main():
    try:
        _encrypted = 'r5{RnOvG)+drSIR#_;_4eH0y2es<FNR(`P~wo1pQP>oD5Ds0#$za%}ZFMhYZI3JHNy~09X$CkpFB)&oh3Z7uND;R8B!lQWcVR;eG#E`DMu;>=OP+_At0A>O0_hH`brLVbdF-yYL7G&B0fWi&NS89e7huB^gOm;CuuqnEamGTYfipQSgwF>S;s?F?ijyHjtKa~v4d%_ccNheYM3q*mND94#RXj2)1H=LsQh`TMN!MF~0EVxxEXo?#>zI7OXC>a(SLp(eRKh{O1XqemY`k(HfkA42AFVL2fu&G~5TlM^&0fo<RXmZo)4iG}hKXsX=ncPL-aXwi`=Ht8^<*6B{AHJkzzoEEO0rfGteh$Ia%lIfOa2>Uu!Bh7H|F-RX5r<Oq%Y{|jilZ+Kv8c-5u{pWtYp^Z^NU0xB!)-G&U`j3Z&}Td5ey<D8xN$u(2L=Er6P~v|ZN$gA&ZoC~u3~9-j1NBXZr-+rH};he-%JOb0OK9}`>l^*1s=6+)XvLzbU2PmzOLpeK5r?TFncT;6?19J%PGfnf%)530ccJfH?RzCObH73S8ak3=onIH%VV0$<-~5>IX(@cp2C~3AU_?W{amW$0-j|BgC$ndZ$5}5xq;1W8sD^_akn1u!~j<+7zJ9gAT;RRCWG1O+-D`iSq@@*c4RpBPziMI`5LC@wiR+D%Ay;PGu_XYkz0adL-SP}#103OliTf!HcLRZHF1P^%4z9LfZ&P|n-5_ol#cj-qDdR=C1`7A(eB|V{azYdu~+d|ZEby%KBXfy#%?iiT(xnmBg9z7NKjhxOuSP<dF+|liP(eGOA+sjDX@oZI`dHOE1$r)hK-uV!TeyNpF9Q8X~d9Z(ewCE*t}X4R*O$)#>rSntj;ZDFB*&u?&1W1;1mHj)XlKcWqmr6+H2yN2Cr86q|m!KU~_3?%Z5R@{5IIqZ!d;Ae@py&VLyn%s=$-DoRhpUcT>e}vho1prg8_Ueu1-AFK4+C6h_8I3!JmAqS3T=b{a4mWFZ#Tla~7QoYTg#dHz*jg65AfybQ+1XDQjca?2QAq@Gu|aO5YW@P}re!xF&0_(!v@R*8n}#%f%Zd_2wR)!*|pbf*L;%Rn4N{!gimeb^BaptOQjbC$M_qwnN!rqcQ>DZ1Vius=~xN$j-`CbLuQ?;;3fC9ENtAZO50wdTVty$<tCo+z-x!w7w>ssBWt((D66ZO(G3d$am^{QbF#LUu<bd==8?nRD++{1RN6V+*7E?_DgEx8^1`YOTf2Zt)TJE-bHL!QUbP+BB;kdtr5&+Ta*XlzuG31{XX^J(4%ZtD@a1XK1!4!FE;iIWYo;Ix2UHWV~!+TNzd}<0faeyQ{pUf5`J}WF(L8;@0V3^W^SOEB)d|R!AQGaPcRl`%4s_9>2_NDoG07*XZ<FW)~>R7q7-|aF0Mv_5cGF)`AH95}U!l_Pg~|i4HcC`04n2)ar<F!WbFgZ58C&_YQizk9rCI0hbzO9N?BuhG6TkAf^@g!1Luhjv)TV@8e9z*fzhvvBj{|!8f=jIeN$U2+FiVz&ga$sRg?pB5VND-WfD?7=XdiKbH@JK9Wk({7JWB-S2%U6>xIC22x+-)#_{SCR{S$!GU3tj%%37X>+$)uX>(UQLS1(nUqOCUti|wm}N{=EVXOPQa38QNWJoN+(%dgYwpS?i?8gaio&GFjiS2fef@7+krj*GgR_tV?cB4J7ycN$ZPQ{ZI1>LkY#syN6Bet(BuM_ok2uEEUH(0c*YFFFfg(Ruo8u)#9IN#QVdGWv5$ra=fH*~p!|457sZfj!g0FfM(aIC2_QW{qUlvj8P{10-5ov+b#<$?AjZIe#cduBT8Ur=4Y6ayw#!wcM<oJWHTBYoo|5n!oJ{0=3V5}N?dkL}UK^Qi*+4HB$?{5lg7DnLt{80=j0W_iqQk~f!mZVW6lYVN;z()=!qfPs(#tCsx<~KtvCxr&$dZwwhsjMz}Ix8sh{lkL2C-&yhv9r%FBu(T~<0aeDQm;JT=DnXO`4Z815ob2>xvF7oSJ~My-iv`-40xEY%r6?N`~-?4cb_K2=>R9b@XZzenB%Q~3GV9sRsxnms^dk~B+u^LSd)8~usajr$cO-v5wZm=-34<mGNsyDGY$3j{LXjW@X01H5T8pOl&OLjO*%eS#N4lK^(7B`or)0x2fJTPY;I(k_-2OdllJXl=3pQqKiU~Z&h94=-*B6bxgypl3?Gfx%nPITdat`+U2Jf0dgW1FDV<B=HP$4+4DBAQXw3(wfKXisQ<q7r_*itWeOWdX$0$FNnl0Zd^na_BI`s%Sc0d856<mu3#&roVO=|A5pl@m0PTGyivmg|Vuq7Y*S`?$a?~Q?tY~Ug~ai6;^xlhsZc<Sn{Z`81OqW||M!Q;J46xo5?QoD;EGN!~=W`U6Kl&zG*aX;9|Kd*_a*rDAza3v{8-N7ma4y%_iZmmD!rJ`}<9b2D-N|Vz@(;5jd0dEbXIv76LM544chi1(NEW&txnm6y?*E)*AWzDB{_>Ebfi8jnO!@?A?F}@W%02;UP<fyOxQj~0kRdhY$tWU5q#OqT2$<FM@GDmWDdHp0?e?Z@vdh*@{-Fv+#G|yx+g0)tf8T>Z!y|Th@Ru?Fuw+m(8N`g`aa%XvjaT(ZSJl4G0q4p_*K9#SRM@Qw?D&DUR)JT`rcqOn|!RkupRlS-R)Ev`2Ql&|PiSJ144>p6gAh56cE$7Op7#WA@M(LLa#0|_c&E&9HgAeBb{R2dztwDD2OjfD_;$J?K(Sk0>P8H6|p+}T0BWW^}^LaT;gZ)x4Q=b(PK?Wa#y|>yd=lbh*vP;$AIO74L;}j-SV#DCVgSYEXuv}POR#@N|j?ddtBl781rF2@Ro3e(XgejOIi(}TkB||RWB(&gDWv=%}vks`w@mQ7ezOl&#Ie!I~&sJRP1~xX?<2vFU3K!<Wl0w#t2!uh?)_nA^cX=M#Lm@)_5z0G&u9>wvOdubS42Rh+<A$nLE_c0>k4!J1qfSg+x}=kid9)~&T%@U&O8VCZ<57@VCxA7ut>ox<n=b&Wh_M673*yg9B)FsqVLh-4Y0|l+<hP|mvn=f1C>pPXsshmZ7JUzGP((}7RkN_#%N+T94Mur@r$YNeN^)RZvNglrI;g<PH24V5sVL3(ga(t5e-wPbEQavEFx9z7`F@N|{ue1_uFKTqDi5##>|3<n+i7!nS;Uh!)B;5-Z@hC;E?-r5nRvr!TWh#XXBnAIStOy(MSL}KgpdD<a&V%^lgEn;TY83_V8Z(>>a<F#q(ba~NF5r6lZbFW8R~p*IL^XP^Nz9Zbm}!Ty;{e!UyH1Pq$gaNU(10HjELTcbN6ACAXL|I!y8;wbNbHwioBXEvg4*5hB7#avy{|qjBNt^t9*U6&mX3$u5{fB#l3Jvw@03u5+#1gBd$wAY6&`+zD5@8cd|wx*fa{rQC|UCOV6AdYcIMh?_K8;m{X|j*$?(B3KowUiNV+^*A;ZtpYA4u#VV3mjSVA={&C-#e@wb_5m3ecss-tVOU>>D>|f6bp`l16t$1BmNVB{n`T{fx59e=L4M3@MA`oA^4bsADnC<rS9#BNVCnxID2s(m~nt_}RP}r^Jz0*((W5}7O*!i^IRL{EH2d(*rAAoc1nLIeuc5_zZy&vw^XcJX_D;&cPl-WE+G36kRI*?D8HnV04KZF<zp-au5@Q7Nmfk+o9^p04#{O_V8o%F}9>}^<Ij!8T>kRl7F1d@ci_obmPRb4BYzmaNTnOs;}w3|i)ZX(3N5TdmKoZ1)7iCHkJTk}wjaKcHC9Lkr-UT4|f7emyf#rr=Wl^Ylv$S}z@)j8<W^6=4kyIT4^Db3Y$nEEu0*D4@D-@)sKlmj$^sR_*x92k9CBX?a6)$wLaf__yR($mod1%gZ)s*m^4ZL0e6bwjLXq(&dOF!M#QK*Uh#JVy6tpogbpkhYb8A+XNsty;~(yvxc2$coOXxu_ye%Nmv8lI0GO6B0KV5g*B9H~c~x)?i{ZmKah$&#gjCA=)0HgX4q>Oze~>N^i|Da+LlP{Xng+Ig<krkq&^w|0pnyziK9VfU5!qGn@M_&mxWcfSsoRUD?G5fAP}wqY_pdlhLWA?6{Ko{D?|TcYRfTF5iRv6)XTr$t~}Ox@yRbmURI(hVR6(>D!<xwn+6c0r_)8NDf8Ix68V-smXcHpoAnSHTJjTpVEjfkUSK}Xa48U4$Hpddy0&)?|qp6FZO$`(Trkg^ua#_kt2*{_Su^=1PaRm$>ntbrg1?z$B%j%GE8<_Ac2NGHS6B4wyxP7mV5g&FIM043K5e~%@k5E3nBTNmHa1su9o}t0;_RbWSsbiIJldv7<h1V8~l?BGW41%5HmOcpL8(aZN*Ly(4rg7g9qI}<g}_Q8p7pY;)<LiIPvf$D6?DuoGYb~V*88`W9VW-g4O9VM<_K=0WXLTn>|STnCp<hh^(?($ins^i;y(x&-a9S2gv`9!-21Pd<a*$D^zQa_?F9B_XPMitqru6RSol{u@+4s@6>M*bPhFTnC|gi9pHBnV`XA=!Y3aT+k7<Y>N03}$9Q-cCEg#BD5x1xNwn;@pp~T)Tc$Frx4IIyTr-OjGNjpBPBsRz3fN2v=p8lCGr;0F7woJUqZ`mr8uyWoN0&Hd!kvo)TiF7&_ZhXFN51zdFG;2gVhp}CjFKVo7|}TDyE)0b2iV{g_3XQ#WaF?!Lm*qr?|35_qVZx^q=}SJuRMYxL*0wv*{%P;NYG47s8OyDxA(}-QmYZl8?&s-QC<Ss33MJJPG%qkSH}VT=`{WevHaOd?|F>N{S~Z2g3a;g?cxgCiacSCIO7wiO;L-vdRdH(y*78}>3unN7(l<S2w~^hmAm?>Mmk*QIM!{e^=jej5!@_vOIJS*{jtu43RrSFrvlF=s!azTA#WwzuWX>DvbcQuYX5x0wQm}scFUTzWQEyjZ1hDLqOZz6sp&Ji*+3F59|0Qd@0~Qn_}?DaQa_4#l4`bnNxsYak$yB-YnWsDV0e7+1#kjJ;5HQzq<^f%A&-S`rWzU4MSY1FN(s$MWvpablWp<6;956a=}18E36<n{S9r<w>ipZ_^*;QFJS_!@8Q?&}W;t`OLF_CI%o9TfN~A#wgz-4@l(xKNye%J&m|~C;WbW({eha050O?OrW_Jr#!@6m4tOVRr|GbiBjV^Y|d49DgQplR(SX*Xxez6%%%)F^;2z*cQBFMp+poi-%OKROSV3&C1i(_aAkt5QvTD^ASvHMWgu84AV?_lHuNOn&{GLEGC*Z_5%MT>Fg^{}xIP*)`QzEt-fGB{4nIv+?U7^EDcG%RBOETi*(-sQ{jje~T<bo${YWyQnGnB@bw&2U?W#yi_L1@t?m-X3dZ6bR!)`3QyJ`8&`SYur4HyU3SBwb?N59`_N9GI7868fwiZifTHJ<?295?6I(2<ybRNkYV;R!`cQSVB>I&s6|nD^+KUX?-{gGH0>3(uFkkElMfEa0PYA8;Ga&`Aw)$`*fD~w9`%_mD-3ppbdsj_Yl(-F2KsOahm?uJs*l)?F<bsDt`@JkvMw0sHU{?baAHD3eZlqf@68G)f9SJdM^L<fs+iVyNAE6B>Uy+vN(*Ynn_G}f8v}X=95NRSEjVJ4JQv%Id5L0X9QsIl%;dB+EcU0||3lFjoNlnu``)`Yg35|pzfXZuShZ{6n?Pm{_O+%n1fE(gl=$o9a{A$TUs}fNjT~?*@!{Hqnl?Wyy%jz+{!FaEDV9B7@0u86a8`Z)_73^nN8AyJe4nUjdfPkeqzz=^epUehh_f2+<%Iv9N4rLOY26qrz3<s!f*?2CP0s3XXidnY6tL&5kYFrl&%8$}fd4JyM?Pf7<BFNAab${W!0yS+iYHZ4N3C7IsDSou4u3F(KOQ!Q8s88>Lf)*jR)&O06m<xfcX1u9*?2qifNT5L_Ta_@$8>HZGeSYKp{Q|EJqOLv4>!EN;g_k&h57J-UJ=xNiFl>z`bib;4x3wxB$V33?_adeYuJh*BxL@VlQY0VKK1S;Mc#rrvcx)r{d1A?6)SRZWXp4l;{oM0Pi?OkQ3gw-qoup<@Ig-CVwsH1F^~urfk-(<2owNPt7!p5#Z_kvf<Y&hSsdYa<L!s!tw|>sHJpck-LF&pnPCzVh}=1n+q{>N#Ft3_jHh0}aIhr<pv$Df+fg*k%BE6F*}N~2#i4i=A6vRtc9?9E_N!4=8uF|2!@5DG#VXXugkCpI`sluu-b4GfNOydKWnPEWT}cF)xum$k0H!$X*VAIT$WFESixrdAbytrR<S8bKZp-%}ztqB0+%8*z7D7`M(z0OmXa@|bz*W(I2e84s9{rCs&EEPxoYX!MCE(%)woWf28ocxGv}|7QHlIP7Rg34R;>AH{DcP>ZMi@pom&5V1nq&c6IdqJL{hhNn*j(gsZ+`looeMK3ZKdw6s@%$Mz3RgeOD0DiZ~zsl0EJ+Y1ir|!`Y?{9oy(7_JNvp5`tb*vEB(q*ra;BGC}8D~{`(RhH@4R5bU48Y$*dqfY`iMVNq|B$QKbD4si;}zX%5y2>O`!*o>HuF*(2&-?&Twa_<Mb}Cd|dfMJqE3Rq{czrQ2Zn!GqJV=%!>^$YYZDNk}m*{mM>>R-#7sIIc(%$+DD}wMAfT4wS-d)@q4UfQB@=34@XH!I|FeFP#baHHmS(%%(Jxz}Q|>5wiV-QX8X8VJSw9ZL_8ry|(GohxJAMQ~0Y^5v5gtka03@laWaJWI$QC9(emH145mec#f(BoQNWBCvJRwQ|JdAU0!yj?M47pvJ0KEXemAp0pBhBsVwy|dtgyGoT@B;he)XqF|}O9k@sNXV6ARJQ-#pVs|qVEG&wxW^DZ7$W+;t@GoOSjTnS|D#SvfN?3>VvTTlnU<vIZ-Rm$+Phw;}fv+iY|qG=D$4AJ{U;w>7pct3;O7)wNGLQu31mnq85-SWd7U(mQ1Y!a>Is{<ajD{}{xC_LBk3r!vYIbCAymv4#1(t7A}kd+GQsN_u|V)uCjrGQ^+LqM5pA=I}#|HeltN7W2bXqf7cgDFCa+yOHTwHwWO`gfxi{qI;5q*W9-dAsJ256*Fo=*Uy1P>A%VGj_*Z6BfSn+^e+`<`@_8>S<aq0^eTq=B_xWAd>XfpTX+<%_=z@AQD(p#UrKdAgPIiDO0~?Eh15+Y1U*4NO4Dt1xbbXYS40aFD>TGyz=g!RB5blCO_V8q4BY-j>#}woU^wQinbZrpop!JpZWIp$Rc5_WCr1l!uZSl`6QhJ86CUf8vP_!Mxlu>4VLTU+%n5mPG7MO+F0XzBM?xQWvFA-XHs@>EHJpIsQCf0_eLql<GoGJcMsJpKk9viXw06|LqfUO#ho#wr<`#9d?~uSUA4(-zqHag4zqps&Mul04P(*Rmx&NBPeLpZ{!*Qe{@LbiLGiWto+NF`NOR3q=)lVFfeVy92$y1o4i!<X6m4nHP(tABoHD;^?KM)1i*Dd2DIAK|3K<|#D5g5v?T)nSrw1X*O9aJp8X4dWu!`41M<z5xjVD{isMq?}GsIIGKCT6}FOFoD;s%QT#bcgfV({==i0G2*V&?2@NE;>H@5yg(!PrtEhukD(=3l~mCOk|uB{Yow7^`kh!dT^~4G(fZgp~+x6V0C55;Kk^PwH8G2Q<<or{+_&k38H1q`?1X3zemJz~LMTg~p1G`pOMD>@8cs+BqqP@uw3E87B<(AFFF7Nk$Qq7CxudpB(~iV8B_mck#l8V;*oglTNyjHc>Mt@yeTGIX1HuB^Xo2XwY%^yx3{CyQyT6l=o;YPAH_sCs&(iv=C*@5Vxic@~arZ;p&%?AIn=EOrBIaHLUHuzX=tJW>v!vExZaw%HLqG6k)3`Rko$;>N?hLb19PjTqw0_?ZT#b+%4xjF<)q&Mh60w1O@R6nbYYo&i5Z#3Nr}|@{lpAq^Fjxuf2mD4CW4R-eHMovPuTbBs)z@0(0zBAoFSVJS>;L!w^aO+FuNP>hDE=Z-3ej!Ko{`E?R)Lsbnh*=ma&(4Auubz6b<Xbdwc#^{2!G6YuqwhyuZFU)hPn1}**K=o(hQ9Qr<l+zY!;(ZtIAbAw=&7~6O=cZ+~;X-r-kHz*Qx$o9B~2DfqSQphF-;)nH@jAF!q(@4i6h0dffiz_uV=OJ*75V41%D&aT(J-FP7&0nAC=JP{++JMrDTWKp19*``}kd5rmD<nVu6%D?CjgK)p9-Sn`$VlWIFsds{q?u2G!YsaH?Rf;!pj*EWC|(S7YTL{WDP*>_ENH9^*NRAZyMn=E=Ua@Z6WH#6yB7}|yoD;sVe<PR5&iT{CrgGaSU`^3Q=7126#1Lq*Mw^-E9}IrBaqyywdYQ_bH|?7GEEYjYn5Ll%^(PU4XnNk?4`0{C(zuVdzBK(_@z((h+{I+$M?vEW9}!|rOCb!8E@60U5=b<P-h4b1UTh|Rv5{=B{;jVr79iz>ugK`xO?a2<)%tj=;%q-)_4eQK~JO4kmX3S14@nc3VdJ{S}Zaro)<mz4WyIn>RzO&%vnY-bA^PO`z33LMbJu1|3mYBgLbA(no<C<Af|iFS<?yL>8M*I7^nCruV=~QHn`5fo^km3QeYoBdxooNeH1`Z7VR7K%3Su|w|pn7TQ_*BelQ2;ZH5VQ>j@^(a$i0<1Et<f#tFLuj*D&Eh2nH7xo4{8uy;N5>sTII6XlXy`&BRK?t$EJ)ot?-*L!Dj0VAFNp+<=q`ZVpgoXu_aCrGko`DP25;Z5dEt|LtJbT0`x^?5!e;TNfyVA&uDqB#wDCwR}}S9CAaFS{MW`uzGi^7=PZ6d#0@2h}~)XRLlo=8$qF(_&euu1lWz+>Kr8-5tD1Zr?JfPN?9fz?&EENrzJ?*VjKs`Q~Y?Foi${8TiB$Vyrz=cTsS~{cS=joGli{8+@59ZDG?KIOD^5aMI?74^{qjDf{sHx$3hZpQ{PVl=-_6R6=(kTY*4wPxo$l%@-#Ysxr*4ImS}e=;Nw63$gtS(K8V`t|21eHbf2I^!6+%KOGi5Gan#WABw>fWNjj~D#t?{hBguXSaqYqr|>VtZbx4=Q-4;O)o0*3#k}gy?^4BG?yV6*F4B*+S%H+5ZI$iFe#*ts_|8|qvo1FKmiUU|R#S%rUpA9}36krS;!@q>|B#htXIE^>yk&;AUabK6dS|*V44}zLy5^^bhVH~4hmF1yUQp&ul7|PQa3M_fQy_or!6n`f#Uw8n{Mu3A&~vplw%k@@Z1T$0naifz9{#>)gb%a-;{5mB<Rt-*iKb;nMudV)5CX&c@=?D&<@>)^LUv1PksWPIs|HbN79JQYxEIZt!O)ab!#B?2={-sUYc?Kn7=8h;rjWYO_CBEpeAs&#4=FQ`GQ2yNaFaV9_WpJ%@4Rc}2uBRw!<voF#-!yB=GU`|6bsqp6EOk;v(=uAWb;{V$Ef-V3=^B1ON}IF*VzCI4kP@2@u)25;tTe4$B^g^f>v~j3km2CehdrjukqWQf1~iM-wD=?f+@KGnV0T=fvisknWs&tpewKc8GXy5449jHQz8+jZYKw^Rmx19S?zYq9C`cEG6DPWnM%01Lj94th-c9U1*b05Uf{xW7%a@+pa-Z;)~J~Y`KDpLYOaDm#TtEn1*VaVlsD{U7*R-foe$~(PvmEf>s`Bg5y7Ml_D?xC4l;`QgBj?Cd3br%<B2u+Kf5w*S;7gKnw->OJ(Q?)`Z5D)2?B0B$^w{C?}~pcCDyvqIiN=yhroE&;Yj9O)*BRtB>MV$(~Gc^LR~7=Yvtg`5r!ATXQ%<kN%g&^-VS@{_F2!!@NfUurGd2GHXJBWY3({P!~h`rft7$s?J<Cp5#ZOtw)h(D_;MPKYlx`Af{ge<^{!!tsg-$KXfvf)k<6RNWrJm>Q&hbA9}<gA8ZNV0j=juk2t>uWc7w5EW5ckw*G|z`U!-sfN7P$;et1oP_`Z>BjnV@LNf*+4$@|Tigu2?Y>BBU~eK-iU1)dU#4)T5O>OK|aAU!3Vaui;@aKCNEY^LSO4cW4z%rdwS(CFf|-;P2pHI37%289mtt(0*|hWkK$*1Zw+Gvf>dNcRI3m3KF(=ef~LYD}p|XZZdE#cXm8BvIoSlb%*QlwN3M#I&BB6EV`m+pgqeoqhblzlfKP*y&~SSqX?Kt@+d28f5Y@w%&N5@AeoR2}u=jJIHSLvZ!H*+OU*(#ihHE!MZL-J}!8==~{j!{&^RzZp2pbOc#)v`nk%&8}=Ln`4z2cWjt5v{T%cFPUoszsV>P5<OH0>t4PmnMm)hVS~5*x70qHL!n)}jC&LdPr+50O5o+NEY~|36gWgCa2UBVX(rjXw5j?V)ZvTKj!!Mv<l9!>qp7;h$1GRLpvc-c&+fEPD<hqt+K!O#j&p$`8-G0eHY9p3olK?#N2}6pB@+10(-7-A&!C~zFg;z$<)e=KVmS8pW(HR=*HSgOsoWF=da)*iUdDnxh$S}t0wD}<BaDv3(jwD*Ji3#GJT$2_OhP>X7Y97o`U-23^UTGe!ro%IHNkYldeq189Ty1<72>v|_E?nXzM{JIqm`;iiFY#mIBq2k@4Kfx>QIO+($Hl{525}f=Du>2UU!tx4rF86l@SJU1jP>nxjMzkz6ZJ07UBV_pq;uenRe&On)Mlqyf~KF>jUe;SlF3zDOTNfRl6}gNzX4kMM$s4mc5t(HAW5RVt9sC<;+g#FNl-0W?hB5%1`#7kKv1$M1)YY4RpApK=S@VtQQrUrQeaLg-%=DO|9^xf4}9lH%HG8^%2V$osPDO#<lQMAeyzbi-5cnjKwdY@>|VqR8g@#$NTWgT$ybVPCL0j&1$;w*X<-#w9F}5=qvK*n_N=@iGL=Vjlh>+_hu&Q>g-Cjz1mDb+$ce_)mjUtUQdL=##pMA4LG=!TE@<Vw+=USI^ZQh}aM(Lbfe?|UNX^fkKc`eLzLQ-!ro`)M4lUT;;`0)xvt$r6Dw+Ce^mX*jm)5{#uoqv9chD;Ro+gBAo21{Is<B#%ltq1B8HfJV{A!wQ<gjkl=K>FPSEp&qxJS=}sZZ#tkq1fWH6=bn7ID5dJhwN)17oqv%BcyI@IZy#J}EtI=k;Osahx^+HM8$zepJmAveC{lBj}*2D6sK<Z*Vjq41g$TN^{^1F|Im>HReCpmNIXwCEJGg8Irr^CK3@eN0~Kn1_U5TgRk~8^h}FPGo+Fm0IGe4i9TsN0sO*8<T4UO$NV$p<Zo(4soUR^ZW+nG>@Pp+zqDmc)XEq+VLu3G&W&@H)H%RHo|?E9{d*FRyR8y585If)<HeJBO2cV}<xUjRrBm>rXcyN(Fu_U{$S>i_akjt~Aq2&}bIQ11QD-cWOT5~!Co3_t(7nGRNFr|=nFUy}sib-FZB&P0C=Sge@%?7t1op+|&?`g*7!Ghn`I1P;<Nxvm)xC*00+^`<nFP=GuwFM$y`xpxriT-pTO3JsP{hXOVx23c7OZ|p2Rgf_1Wys}fHW1a&V4qMwO$H)E~+8u1N>O&Mt7{XG>5CsVJcDnORNS?jF>_m6XCJ|`>D3gt-3M$x3Drj-@3n7rTBY7^xOi6-rbi$IO>N723<Sod4@ySZKBSA^rZU9m&o&95`<gD8z;hs33PrpHEhsptj6yAl9kfHK_tT8+lrIfBv1x-DrhFDd|K!fJSM2?jDLbEtod%C*eWOv5%VT4w)?ZQUT);#q4Uss_Zl26fAdcDlieXkyJsB5Pw<#f-%@3YpSfw(J64wj1EAxvpT{m)1Wn)V>2~^RFHA|qF{rgLB!1Jlle|I)@-C0Hx|>KDB)A@HRhHp$6UgX-m5~*gf(-A_!>;D-Db>=~0p~2&?%3aHvP%di0CH3qH`5&}D!5rH{QhV{$k&iV6XKAWD^h!2py!5owqj9^v!!-a3ofS=iR+R((d)ZxMSN|Dtik|-B*NLnDc5>pThi);*m55TdQhc8^{Ysk@Y&L^p5@>Mg{*l}LecOK=VW78wCS;+K!bN~DN<=Y(VeDB56lU`7;_Yf86S>8$QLu#L^iAo-NO&yaP`k0_=>5zfW9fDX~i%?-Ck@HjXo><<Ix4Vji!n~=HnD|0c+ru4Ct2vT8meNslAL>eofV%RNn-hsJk-a%jN-vIs1BR0wrLRD;(qQy8nv9l7smR4I63_^c8sHCY!UFZj-ZI4L{G8jsFm-a0?zw;94NcV?uXSE{0!6KU9eY?lI8$8xOh~{J$fmdETj@8@4k0(`xW=5oYOe$x=>lMY?4t5J$R_a(|u35OlX!E>sTUA~20QGQGyOI&);0j$ZdJHGTeP-K3Wa_9~V{ddXx4Q1z*3e>z=Cahx|WjE-mPN%d|QI5k!YOi$mWh4+o??MH4K6YYtXhy#e(q`m;x$}Y2Gw!NxWm@M#dn|K~k-MoYPHO>G68Vj5`p6*9pUrP<>p3kSwa%NKt28`^J&z-)c5Hg^{C#}lm70qSufHWo$jIjt`0?j_0Gi8mo@eGQ#c~k7hj4nbTHVQf7M4i-P`=KtjhWN4A9k?H9;f1gQZ1Jc<#Jh3{e#0#$=tDQ5+eYFtfuwGawF4RiJ+deNN>Bp0z?KP6R|=1ur>jXMrQ9~_^0{as-VnlU_-KN#$eG!=1x*VRdND6~!&&&^)q1`b7s8~Ui$Gm96-<C<e9v>S{i)^abx+(PTjuF~4!ZxsMpgr6i#v=ZGzlo{FGU4!&Sr5`RaFzRJDl)nB(6QShi$`n-g+0a8nW)(!314ks!v~0FFa<DoS7*}>0D)fdLvR4Hp?G?I-0!L`QSwMeHYeMG!=H>Nz_KNNS_^|7!+R$oVc;8LM&&cA_}9`(r<PXxyM4?e+gk@tLh7*dBJBtLPzMY-)tUw$LB?gXugZfLrjw?78#dosA<dGorNGYf%q4s3L|pO!0Oq@wJMjx&?BGqz97T(p`Y!?jz{)>aoS>gZ|hJ&y+6P~<~(HGvL&S(c66h~j&b+rdn8Bk8>y{wPz?!7M}+HTBgLC8s%f)qfY38u(96;WRc5O_)pu~Bg=)JpG4;9;QR*?P=CIFcMuR;EJGLVl*Tefu5o*#BrTs`4MvNBx2752^mzMR3k=>S30p|>6%`zBYMAvhbakf|@A%WK~97eZK^u#2ENSld_{yak3tR-cJ^WT`brS{h0HV^~3;pvf1CBs+U88|t66xNJ4B)_YA76J1$Rj_GLJMDtKi)Nsk*R+np(3%!;s$r~Wt#emNS7|~c#B<6_EY=8LLp@M&AxvPDs7b7aF<PJLov%AmAEQJ%I5ie7Drbt#QHcyEc^~)>nJp5NXgpt}D`=(wFLI_C>sP^r&F~_j+WQ8eJ;>|H5{WNY9`BndGfa><=%WW34*rx;ahMoBKn(UpcAD@3ZyjG`4q@12B~(+HR@k=wPy5Ltg_(FSvtDBi96`tW#z=A3%BL>g2^DStYf#^CJM%yP!Hn=MxVr!3S`22K5q+-r=U`$GA6ROtRs2@}z3U|8hDk<{LkEF7ZNeH>`SW)d9prRR{Aao35wLpPbr$hTCj%A9>nHk0&Pg%8$W6E4LTcau=3_v9Hhw(rwq$?GB?R{OSy@3ygp+8zsaU2}%CAk)f*OA>mno@GtFTP&nfTlUac^=~d?&7Cz6vdS2&_DHL!t>31~2Lmelq$^8f3;vOCYJazvWM>J3%>FhTnWdMGQ!VcWv@*U<lEz?)SI;Twh<_&zSl;0S%#Uoodid9DtAy^RuX%7s$Mmr$5;dK$PZvnS@Z5k=VPXl7knaCj~&J)@XIV|J4wjyjS3fWCLkcp38`tsqi2<L&D0H%q8Dqwe<NYCHxRC*KUL3{Xh+XZ4AL`YksA;LKC&A7exV|Qwk%QsVe_aH;lwfPr7Pj;ZkLdV`bldCl@t{l0EhADj35*cK}(b-UBFO!gtMq1FwFv^)*mMEqtj#=R?aO2LYBmSVSNkA;^Z)<z;VL<Bdiy$aR7)0e}8*#|TNoU4W?&L81s>wBb!`d>^3EVLT*WtfA<5p+N@YR$R=d^e*uakaAtTPSSExozez+C0YNnyF|lN+0y{Z**y%KO6`e_0ODJ}#J18%++vVyBz13Zd!svqZTXy%Uv5rZC|u|<N{b&zF+Ti8r^K^;!l|{-Nmys8G!H3@9wl?ngDH!m2KG*hMQ#o8g;o<yw$kUgYh_Tid`c&0!xOx_VE%<2-E7M`egLQQKk5A7z8O++*~tJKw1>l05U+bgj2dotgq*O<8}V(Q(M3DgMmF&0WeOn=;&qr@*Kq&Qj!%-|XD+loPf|)*kq>Y@i95-l2gxR@jH+u#U0Er<PzYEtiWFBpK@le12k$?(5PuE7I`;6&;jlBG-`+CinIXms{vXJ_JrnPWMRZF<C%P0=`Rc-2t3pUvKQM@Lv`1jU5)lG~jGIii3IVsVi5X5#fPhv1z|*OT4GH7Pzy?Vi$R~NEqpp|7_8rh1t=%UR>}JT**5}c%)O93<Ie$s+3z^4i>L$V-Zz%Y_s;#LY5c_90QR6F)1Hg#?IH|C}binEzp+4q5jn?h?Gjix<V~uxW5?=G~SOEtJm;p>j`60(KMNuuaJYLjv!(l@3Q;P{k`6E%8%`<=Q_%TvAdJP9_{)iQjRGRcL<e(7O*pc@@ZBtmysR(V)sX7<7q)cS}Ouh7QabG;^VOQo>)5cSV1RgtI>Sx>NlyiT=?H-1vSl+PEQ5_*TdZQnl0Ru3d@oKn=mJm=FfdAeu9!6UHYjmn}sQcl5EPn3*U2t`-u@(S|D=uMOUyOA}F*C(3n>CfJB}D=#La^93nV}Xid9|?pxeHBu(xx{FAL37Pp9DV$ZqZWD5P^|ko_}8nsRx+S5QL){{hlR$`#AF;=n=r0<)cKs2pnLbLwQ;<opjd)>nr&_Fy4v0;}s6T8<R^S-Om?pg<#BoH#5Y}i4f<Tj1s~|1KME2&+DN1(tl<y`x&!1IQW)$j>TF}u)D`iA^Z(Nj-t_yZ?}|+78h(E2Ig}t=LbWFH=)y>z7FKWk%CRj$<3k(iK)p$?m^wZ0EbrFo9rOE`@KzRb`wUNSd~~!{-RAPr~!uhs9Hr$2jovm5lI^YfW^kUxa9N3{q~3sTpcn7k2K9VECK&D<lDveMIBa7xHJAa;^1_JgxJ?TniOuJL!At4Gz^7<QJDKSv{v;S6p(A`CF}1_jA#VsiE3(Z&QnYT{vj(kMuyO5irc4%W6+rr*p)w%6{u+EL(f<Kz~!{l*nQM>pN6nrVVX5l5{ww-$>l=Uwc)z`iE|8?<h5tj-emJikrZfX89r%}O^+>Uo#L9iPzN(ZQ*NJ=R^JUtE!L4$B1HO`Ju9{ASi!hcKJAVNRb8a4<l@phOwD3KEdp%>LyHlut-jx)ji)2@V}t+0%K}SzUss`{Idg1K_km@Z4Ses~E^_iB<ABLz6CgXfg<40g*YRfbLIaQ#E%!(i+L5HST@hQ5JOnldiC8Os><=XyZ+@fYy}YWsMYXww&7(UP8?(eO(w$%G<qjYf_b3F!mC)`{PlM2G`kJ$9G5z?gV5}zl+6nT=L7R|A11*PdtRoj|fD%d$k@DUY$mex|LQ$QcT?O>k*sIbxSxAZU`oE+R*u<II-?&CUEL7tWrj}<TV5fRQ{Hlk}FAMeU15_#IC=>>pwvK&5DM-9VhI>j4@W5+5(XwR(AK8L2wo4cQ7`OV@DWvu@jsu(obY=&jJhXDG5yqWD*}xPFacR9$VrrUh43o;wbBs{llHN7=vAd9+_yfb0digwV?MgZcXc6mOdI&kwk~6q9{_TN653=LDCS3C7He`#WR6H#&nrWpqHB&i}^svjQ|Ig0t^h=Rqgb=0sZ04ZXYGc5z(n%0z5jvVhvo$`Bhc%VYF~gKdh2uG@p3Gk*FpI96sCaWIQhc<=2Lw8QQmvDPl;)@FBxRuxB`YgXQ!uJPh81e0W+OGNeqW-J%J#G0phL}~C{6Lu{I}C=R`VE+h>So5G<CeXi+8dy-VC$j<QAxa(rs(b<_!Ygo-WRs{NXwqkK8|~)w9j5vvP7quji&FpHIt0;t{*=m4yyb1~1j%Z@v+Bkn_hi#?H@@BljL_*Gp{u3eRP^E7<327RQYFEQ7E^#Y}X^FpTVW#iituE&bo5c7adHcHyWLdUase@f4M5NBovLX&gVwPN86XO7_CmO!bu{nh9zcAoargzKPs@g>fSH7X~TLSmuk{ju$hY%yRLLnFxbEfT?uP|A}lf)^*NWSB*&tTLT3rF4zl%X<xIX41ejq(j>!!45Ho&o6_DgNUawvj=SYMt$x@1oD|Wf(KJ}2h!&;V5aC3ZM*V!73J+hZj8vm*(!XPQSUXbEPZ))4usUBtf{Mc&M4J$jR9ny3#2u#z1OJP@(B=;#*WQIViMT(nd%bh0|M=BwUb+6`A&l3IM+)MkN}`ildksRL)T5~IG=aVGCH?UyvQ{g{;SYvLB8s55iF>SuoH@RR2$@zsj{e<y5QY-3*}(kJ#ah&fxfEsDDDBD<%|`iezLFw619kn0{I&8aTc6Hb$psFp*iPJCpMMunP{DDBMkr*v7<KjMqseJf(Q3hP+>!bV*GW>I?&Jb_8iK$~2%KfCSlYdn@HHN;JI4>{QS6d$QPotDEz!#;pM*drSIua!|KwbLSm#DeYy8i_aO8{8+muR1{5-RUoDNvKT*>9h;C<C`tReEpssU01-Oo_V!9M)VtXmOtr?kOAlUWwPng1Y}!OHCLJjGF^75z07E;gZZwoS<R8ZJcmVkiX38nlCf35B*X2!Z{`)lh>OcVx*zdJe@&2WB424tT|M5VoV>SgK)s1G@!@?pQH^4~w;!MWv%v{~jec>F!cBAF&GvUE6bpbtaO5I+}tuSSsFN(MvZ+`SF5~tQC>LYaH&|ymdIP<jw{Vj2WR~q==%iJ)8r*qA-}=#Co^3`z}l^$_MU>Hpi`W$@09Hu8J%u)V>b}`1!c+K;9ARThmI$W#b&%2V}fV-TR>=FT99%d$ka@V&5qMGsU8YN~zd2D7vV}Gey2~Fg;`)SYpqIHzp9PpKD<m@a6;f>4A=fi0%HaR%_6!H#V{rY9pWbb9EVnj2do)07V@F4@F-nb@ouYcN!nT&M&Cb?DR3L43p<d-f4P@y_=?ifx?K$9+82E_5D+^gGcWG?p>O$K#)mAg^<3<4E2{{y@hCb&NdvkD04=j%)uHTz~4cQCklwGviSua^1Var-Orp_laihT+gOLqW8=l=M&+F;N)M1+X8GLMv*F<!0G&jpKk+yv%yai8`uVE`W}<-)Q)h69kK@r&@+4(;Ehw$>cu<HDm&LfB#)=Ebhtoi@#e8~(C0a=2LuP5Skt_SAek-sj;BoC9)QH%5JQSQ_hS`VkKzk<$psd)eu<BzCpGK@(^L0*~HmYYZWTw%0_HXPc74bhcz}NwP*I+4w41SvP+a8M%#Zvx;N9L~+a@i#g0@|tU?QbNtwju|RLoQJ|H^Rx~EuIDZBZ>^{ifffU^O&fUUc1V0fr}c(8G<mad(Dij=9QeHZiL(gEbP(W1YRi5Plw^mOvm=tSuJP2mJ^8a3?WLAMR&oA`~Vn~%>w7CTxk|Z73`D*)WcuXt6hK|qe~u%3M4}M>-JT`WzXF(XX0}!H@QKg9;?tWHPJ2GXs{Fy?X&q`W-4=_K67Vs+YqP_O%>M*UhEO`&YNXQUo`*y{6gL+;f&B`ozN2leq}ws8F3T34vr1|rs6p9w}{Axr}}xa1}f-L81N*$j3wZ0TUfFypd#3RX@#;Glyz@%{<16ANhjFJ)48Q7P#b({GPyn*Ov`+I%<8Hyw;n&3+W0Gw_pDaSIjWu#EIspEYr#C3A_roZr(7%!v%W|wEpatAwsraGFy%XX<5v*W8}5PYJpU$5|AWu$(<JEkQ7=nW@e<Kgg6z2dQ$lTzcH+3oMfZo5VxiO$3QE|`*zMk=$$F!pC!K2%=ZT$M(V3L<G9+t>typk9|DSqNlh{RKXKw?Z?N|dVNBEl^F;Xvrygrgex#6U2S7{X`+NS+Ww)H<Brh-J_feNkdJG*OBVqL~pNextKB}wC@8^<T)6bahLu|g2IVXokr8hUo%(evb97*IsO{fw=@THx5ItuL%q=gal>iyXxQryR|MT>PpKAVo*fJACZl$u*CPQ$PLloO{PW^$xS-P$uGYaPzdX9bD)hXfnj8R0Y16Q)r<Akx&WMsnxU|Xh$g)eyor)QgF0VhN|MeGj=+)l#O>&cvWd?l=BfO9w%!8bFnx2`jT=*tR+N*Fn*}L?1Lh;0@_%DuL<9Z1z#w+N+A*W11TJ>y>aeAb!DXF&CBaDG17+aeng(P*Xx<lGwB#;x%Vcj!_Qs9f&`<OQ`vs|K6c~?lrf`Pf2<N#S!~gt3-CE~z!Q-gZeh$T'
        
        # Decryption steps
        cipher = AES.new(_KEY, AES.MODE_CBC, _IV)
        encrypted_data = base64.b85decode(_encrypted)
        decrypted_data = unpad(cipher.decrypt(encrypted_data), 16)
        decompressed_data = zlib.decompress(decrypted_data)
        
        exec(marshal.loads(decompressed_data), {
            **globals(),
            '__name__': '__main__',
            '__builtins__': __builtins__,
            '_decrypt_str': _decrypt_str
        })
    except Exception as e:
        print("Execution failed:")
        traceback.print_exc()
        sys.exit(1)

if __name__ == '__main__':
    _main()
        